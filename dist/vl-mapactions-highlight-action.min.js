import{Select}from"ol/src/ol/interaction";import{pointerMove}from"ol/src/ol/events/condition";import{MapAction}from"./vl-mapactions-mapaction";export class HighlightAction extends MapAction{constructor(t,e){const i=new Select({layers:[t],condition:pointerMove,style:e?e.style:null});super([i]),this.layer=t,this.highlightInteraction=i}deactivate(){this.dehighlightAllFeatures(),super.deactivate()}highlightFeatureWithId(t){if(t){const e=this.layer.getSource().getFeatureById(t)||this._getClusterByFeatureId(this.layer.getSource().getFeatures(),t);e&&-1===this.highlightInteraction.getFeatures().getArray().indexOf(e)&&this.highlightInteraction.getFeatures().push(e)}}_getClusterByFeatureId(t,e){for(let i=0;i<t.length;i++){const r=t[i].get("features");if(r&&this._getFeatureById(r,e))return t[i]}}_getFeatureById(t,e){for(let i=0;i<t.length;i++)if(t[i].getId()===e)return t[i]}isHighlighted(t){let e=!1;return this.highlightInteraction.getFeatures().forEach((function(i){i===t&&(e=!0)})),e}dehighlightAllFeatures(){this.highlightInteraction.getFeatures().clear()}}
