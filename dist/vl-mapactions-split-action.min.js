import Feature from"ol/src/ol/Feature";import{SelectAction}from"./vl-mapactions-select-action";import{MapAction}from"./vl-mapactions-mapaction";import{DrawAction}from"./vl-mapactions-draw-action";import*as jsts from"jsts";import{Point,LineString,LinearRing,Polygon,MultiPoint,MultiLineString,MultiPolygon}from"ol/src/ol/geom";export class SplitAction extends MapAction{constructor(t,i,e){const o=new jsts.io.OL3Parser;o.inject(Point,LineString,LinearRing,Polygon,MultiPoint,MultiLineString,MultiPolygon);const n=[],c=new SelectAction(t,t=>{t&&(this.selectAction.deactivate(),this.drawAction.activate())},e),a=new DrawAction(t,"LineString",t=>{const e=this.selectAction.selectedFeature,n=o.read(e.getGeometry().getPolygons()[0]),c=o.read(t.getGeometry()),a=n.getExteriorRing().union(c),s=new jsts.operation.polygonize.Polygonizer;s.add(a);const r=[];for(let t=s.getPolygons().iterator();t.hasNext();){const i=new MultiPolygon([]);i.appendPolygon(o.write(t.next())),r.push(new Feature({geometry:i}))}i&&i(e,r),this.selectAction.clearFeatures(),setTimeout(()=>{this.drawAction.deactivate(),this.selectAction.activate()})},e);super(n),this.interactions=n,this.selectAction=c,this.drawAction=a}activate(){this.map.addAction(this.selectAction),this.map.addAction(this.drawAction),this.selectAction.activate()}deactivate=function(){this.selectAction.deactivate(),this.drawAction.deactivate()}}
