{"version":3,"sources":["../node_modules/ol/src/util.js","../node_modules/ol/src/AssertionError.js","../node_modules/ol/src/asserts.js","../node_modules/ol/src/obj.js","../node_modules/ol/src/events.js","../node_modules/ol/src/events/EventType.js","../node_modules/ol/src/ObjectEventType.js","../node_modules/ol/src/Disposable.js","../node_modules/ol/src/array.js","../node_modules/ol/src/functions.js","../node_modules/ol/src/events/Event.js","../node_modules/ol/src/events/Target.js","../node_modules/ol/src/Observable.js","../node_modules/ol/src/Object.js","../node_modules/ol/src/Feature.js","../node_modules/ol/src/math.js","../node_modules/ol/src/geom/GeometryType.js","../node_modules/ol/src/sphere.js","../node_modules/ol/src/extent/Corner.js","../node_modules/ol/src/extent/Relationship.js","../node_modules/ol/src/extent.js","../node_modules/ol/src/proj/Units.js","../node_modules/ol/src/proj/Projection.js","../node_modules/ol/src/proj/epsg3857.js","../node_modules/ol/src/proj/epsg4326.js","../node_modules/ol/src/proj/transforms.js","../node_modules/ol/src/proj/projections.js","../node_modules/ol/src/proj.js","../node_modules/ol/src/format/Feature.js","../node_modules/ol/src/format/FormatType.js","../node_modules/ol/src/format/JSONFeature.js","../node_modules/ol/src/geom/flat/transform.js","../node_modules/ol/src/transform.js","../node_modules/ol/src/geom/Geometry.js","../node_modules/ol/src/geom/GeometryCollection.js","../node_modules/ol/src/geom/GeometryLayout.js","../node_modules/ol/src/geom/SimpleGeometry.js","../node_modules/ol/src/geom/flat/closest.js","../node_modules/ol/src/geom/flat/deflate.js","../node_modules/ol/src/geom/flat/inflate.js","../node_modules/ol/src/geom/flat/interpolate.js","../node_modules/ol/src/geom/flat/contains.js","../node_modules/ol/src/geom/flat/segments.js","../node_modules/ol/src/geom/flat/intersectsextent.js","../node_modules/ol/src/geom/flat/length.js","../node_modules/ol/src/geom/flat/simplify.js","../node_modules/ol/src/geom/LineString.js","../node_modules/ol/src/geom/MultiLineString.js","../node_modules/ol/src/geom/Point.js","../node_modules/ol/src/geom/MultiPoint.js","../node_modules/ol/src/geom/flat/area.js","../node_modules/ol/src/geom/LinearRing.js","../node_modules/ol/src/geom/flat/interiorpoint.js","../node_modules/ol/src/geom/flat/reverse.js","../node_modules/ol/src/geom/flat/orient.js","../node_modules/ol/src/geom/Polygon.js","../node_modules/ol/src/geom/flat/center.js","../node_modules/ol/src/geom/MultiPolygon.js","../node_modules/ol/src/format/GeoJSON.js","../node_modules/ol/src/tilegrid/common.js","../node_modules/ol/src/centerconstraint.js","../node_modules/ol/src/resolutionconstraint.js","../node_modules/ol/src/rotationconstraint.js","../node_modules/ol/src/ViewHint.js","../node_modules/ol/src/ViewProperty.js","../node_modules/ol/src/string.js","../node_modules/ol/src/coordinate.js","../node_modules/ol/src/easing.js","../node_modules/ol/src/View.js","../node_modules/ol/src/MapEventType.js","../node_modules/ol/src/OverlayPositioning.js","../node_modules/ol/src/css.js","../node_modules/ol/src/has.js","../node_modules/ol/src/dom.js","../node_modules/ol/src/Overlay.js","../node_modules/ol/src/CollectionEventType.js","../node_modules/ol/src/Collection.js","../node_modules/ol/src/control/Control.js","../node_modules/ol/src/layer/Property.js","../node_modules/ol/src/layer/Base.js","../node_modules/ol/src/render/EventType.js","../node_modules/ol/src/source/State.js","../node_modules/ol/src/layer/Layer.js","../node_modules/ol/src/control/Attribution.js","../node_modules/ol/src/control/Rotate.js","../node_modules/ol/src/control/Zoom.js","../node_modules/ol/src/control/FullScreen.js","../src/elm-pep.js","../node_modules/ol/src/pointer/EventType.js","../node_modules/ol/src/control/MousePosition.js","../node_modules/ol/src/MapEvent.js","../node_modules/ol/src/MapBrowserEvent.js","../node_modules/ol/src/MapBrowserEventType.js","../node_modules/ol/src/MapBrowserPointerEvent.js","../node_modules/ol/src/MapBrowserEventHandler.js","../node_modules/ol/src/MapProperty.js","../node_modules/ol/src/TileState.js","../node_modules/ol/src/structs/PriorityQueue.js","../node_modules/ol/src/TileQueue.js","../node_modules/ol/src/layer/Group.js","../node_modules/ol/src/size.js","../node_modules/ol/src/PluggableMap.js","../node_modules/ol/src/render/Event.js","../node_modules/ol/src/color.js","../node_modules/ol/src/style/IconImageCache.js","../node_modules/ol/src/colorlike.js","../node_modules/ol/src/render/VectorContext.js","../node_modules/ol/src/render/canvas.js","../node_modules/ol/src/render/canvas/Immediate.js","../node_modules/ol/src/ImageState.js","../node_modules/ol/src/render/canvas/BuilderType.js","../node_modules/ol/src/renderer/vector.js","../node_modules/ol/src/render.js","../node_modules/ol/src/renderer/Map.js","../node_modules/ol/src/renderer/Composite.js","../node_modules/ol/src/control/OverviewMap.js","../node_modules/ol/src/control/ScaleLine.js","../node_modules/ol/src/control/ZoomSlider.js","../node_modules/ol/src/control/ZoomToExtent.js","../node_modules/ol/src/control.js","../node_modules/ol/src/Kinetic.js","../node_modules/ol/src/interaction/Property.js","../node_modules/ol/src/interaction/Interaction.js","../node_modules/ol/src/interaction/DoubleClickZoom.js","../node_modules/ol/src/events/condition.js","../node_modules/ol/src/interaction/Pointer.js","../node_modules/ol/src/interaction/DragPan.js","../node_modules/ol/src/interaction/DragRotate.js","../node_modules/ol/src/render/Box.js","../node_modules/ol/src/interaction/DragBox.js","../node_modules/ol/src/interaction/DragZoom.js","../node_modules/ol/src/events/KeyCode.js","../node_modules/ol/src/interaction/KeyboardPan.js","../node_modules/ol/src/interaction/KeyboardZoom.js","../node_modules/ol/src/interaction/MouseWheelZoom.js","../node_modules/ol/src/interaction/PinchRotate.js","../node_modules/ol/src/interaction/PinchZoom.js","../node_modules/ol/src/interaction/DragAndDrop.js","../node_modules/ol/src/interaction/DragRotateAndZoom.js","../node_modules/ol/src/geom/Circle.js","../node_modules/ol/src/style/Image.js","../node_modules/ol/src/style/RegularShape.js","../node_modules/ol/src/style/Circle.js","../node_modules/ol/src/style/Fill.js","../node_modules/ol/src/style/Stroke.js","../node_modules/ol/src/style/Style.js","../node_modules/ol/src/layer/BaseVector.js","../node_modules/ol/src/render/canvas/Instruction.js","../node_modules/ol/src/render/canvas/Builder.js","../node_modules/ol/src/render/canvas/ImageBuilder.js","../node_modules/ol/src/render/canvas/LineStringBuilder.js","../node_modules/ol/src/render/canvas/PolygonBuilder.js","../node_modules/ol/src/geom/flat/straightchunk.js","../node_modules/ol/src/style/TextPlacement.js","../node_modules/ol/src/render/canvas/TextBuilder.js","../node_modules/ol/src/render/canvas/BuilderGroup.js","../node_modules/ol/src/geom/flat/textpath.js","../node_modules/ol/node_modules/rbush/rbush.js","../node_modules/ol/src/render/canvas/Executor.js","../node_modules/ol/src/render/canvas/ExecutorGroup.js","../node_modules/ol/src/renderer/Layer.js","../node_modules/ol/src/renderer/canvas/Layer.js","../node_modules/ol/src/style/IconAnchorUnits.js","../node_modules/ol/src/ImageBase.js","../node_modules/ol/src/Image.js","../node_modules/ol/src/style/IconImage.js","../node_modules/ol/src/style/IconOrigin.js","../node_modules/ol/src/style/Icon.js","../node_modules/ol/src/style/Text.js","../node_modules/ol/src/style.js","../node_modules/ol/src/render/canvas/hitdetect.js","../node_modules/ol/src/renderer/canvas/VectorLayer.js","../node_modules/ol/src/layer/Vector.js","../node_modules/ol/src/featureloader.js","../node_modules/ol/src/loadingstrategy.js","../node_modules/ol/src/source/Source.js","../node_modules/ol/src/source/VectorEventType.js","../node_modules/ol/src/structs/RBush.js","../node_modules/ol/src/source/Vector.js","../node_modules/ol/src/interaction/Draw.js","../node_modules/ol/src/interaction/Extent.js","../node_modules/ol/src/interaction/Modify.js","../node_modules/ol/src/interaction/Select.js","../node_modules/ol/src/interaction/Snap.js","../node_modules/ol/src/interaction/Translate.js","../node_modules/ol/src/interaction.js","../node_modules/ol/src/Map.js","vl-mapactions-map-with-actions.js","vl-mapactions-custom-map.js","vl-mapactions-mapaction.js","vl-mapactions-select-action.js","vl-mapactions-box-select-action.js","vl-mapactions-delete-action.js","../node_modules/ol/src/geom.js","vl-mapactions-snap-interaction.js","vl-mapactions-draw-action.js","vl-mapactions-draw-lijnstuk-action.js","vl-mapactions-draw-rectangle-action.js","vl-mapactions-highlight-action.js","vl-mapactions-measure-action.js","vl-mapactions-modify-action.js","vl-mapactions-modify-and-translate-action.js","vl-mapactions-select-actions.js","vl-mapactions-tooltips.js","vl-mapactions-show-info-action.js","vl-mapactions-show-info-select-action.js","../src/jsts.js","../src/org/locationtech/jts/util/NumberUtil.js","../src/java/lang/IllegalArgumentException.js","../src/java/lang/Long.js","../src/java/lang/Double.js","../src/java/lang/Comparable.js","../src/java/lang/Cloneable.js","../src/java/util/Comparator.js","../src/java/io/Serializable.js","../src/java/lang/RuntimeException.js","../src/org/locationtech/jts/util/AssertionFailedException.js","../src/org/locationtech/jts/util/Assert.js","../src/org/locationtech/jts/geom/Coordinate.js","../src/hasInterface.js","../src/java/util/Collection.js","../src/java/lang/IndexOutOfBoundsException.js","../src/java/util/List.js","../src/java/util/NoSuchElementException.js","../src/java/util/ArrayList.js","../src/org/locationtech/jts/geom/CoordinateList.js","../src/org/locationtech/jts/geom/Envelope.js","../src/java/lang/Exception.js","../src/org/locationtech/jts/algorithm/NotRepresentableException.js","../src/java/lang/StringBuffer.js","../src/java/lang/Integer.js","../src/java/lang/Character.js","../src/org/locationtech/jts/math/DD.js","../src/org/locationtech/jts/algorithm/CGAlgorithmsDD.js","../src/org/locationtech/jts/algorithm/Orientation.js","../src/java/lang/System.js","../src/org/locationtech/jts/algorithm/HCoordinate.js","../src/org/locationtech/jts/math/MathUtil.js","../src/org/locationtech/jts/algorithm/Distance.js","../src/org/locationtech/jts/geom/CoordinateSequence.js","../src/org/locationtech/jts/geom/CoordinateSequenceFactory.js","../src/org/locationtech/jts/geom/GeometryComponentFilter.js","../src/org/locationtech/jts/geom/Geometry.js","../src/org/locationtech/jts/geom/CoordinateFilter.js","../src/org/locationtech/jts/algorithm/BoundaryNodeRule.js","../src/org/locationtech/jts/geom/CoordinateArrays.js","../src/java/util/Map.js","../src/java/util/SortedMap.js","../src/java/lang/UnsupportedOperationException.js","../src/java/util/Set.js","../src/java/util/HashSet.js","../src/java/util/TreeMap.js","../src/org/locationtech/jts/geom/Lineal.js","../src/java/util/SortedSet.js","../src/java/util/TreeSet.js","../src/java/util/Arrays.js","../src/org/locationtech/jts/geom/Dimension.js","../src/org/locationtech/jts/geom/GeometryFilter.js","../src/org/locationtech/jts/geom/CoordinateSequenceFilter.js","../src/org/locationtech/jts/geom/GeometryCollection.js","../src/org/locationtech/jts/geom/MultiLineString.js","../src/org/locationtech/jts/operation/BoundaryOp.js","../src/org/locationtech/jts/algorithm/Length.js","../src/java/io/PrintStream.js","../src/java/io/StringReader.js","../src/java/io/ByteArrayOutputStream.js","../src/java/io/IOException.js","../src/java/io/LineNumberReader.js","../src/org/locationtech/jts/util/StringUtil.js","../src/java/lang/StringBuilder.js","../src/java/text/DecimalFormat.js","../src/org/locationtech/jts/geom/CoordinateSequences.js","../src/org/locationtech/jts/geom/LineString.js","../src/org/locationtech/jts/geom/Puntal.js","../src/org/locationtech/jts/geom/Point.js","../src/org/locationtech/jts/algorithm/Area.js","../src/org/locationtech/jts/geom/Polygonal.js","../src/org/locationtech/jts/geom/Polygon.js","../src/org/locationtech/jts/geom/MultiPoint.js","../src/org/locationtech/jts/geom/LinearRing.js","../src/org/locationtech/jts/geom/MultiPolygon.js","../src/org/locationtech/jts/geom/util/GeometryEditor.js","../src/org/locationtech/jts/geom/impl/CoordinateArraySequence.js","../src/org/locationtech/jts/geom/impl/CoordinateArraySequenceFactory.js","../src/java/util/HashMap.js","../src/org/locationtech/jts/geom/PrecisionModel.js","../src/org/locationtech/jts/geom/GeometryFactory.js","../src/org/locationtech/jts/io/WKTParser.js","../src/org/locationtech/jts/io/WKTWriter.js","../src/org/locationtech/jts/algorithm/LineIntersector.js","../src/org/locationtech/jts/algorithm/RobustLineIntersector.js","../src/org/locationtech/jts/geom/LineSegment.js","../src/org/locationtech/jts/geom/Location.js","../src/org/locationtech/jts/geom/IntersectionMatrix.js","../src/org/locationtech/jts/algorithm/Angle.js","../src/org/locationtech/jts/geom/Triangle.js","../src/org/locationtech/jts/geom/util/NoninvertibleTransformationException.js","../src/org/locationtech/jts/geom/util/AffineTransformation.js","../src/org/locationtech/jts/math/Matrix.js","../src/org/locationtech/jts/geom/util/AffineTransformationBuilder.js","../src/org/locationtech/jts/geom/util/AffineTransformationFactory.js","../src/org/locationtech/jts/geom/util/ComponentCoordinateExtracter.js","../src/org/locationtech/jts/geom/util/GeometryCollectionMapper.js","../src/org/locationtech/jts/geom/util/GeometryCombiner.js","../src/org/locationtech/jts/geom/util/GeometryExtracter.js","../src/org/locationtech/jts/geom/util/MapOp.js","../src/org/locationtech/jts/geom/util/GeometryMapper.js","../src/org/locationtech/jts/geom/util/GeometryTransformer.js","../src/org/locationtech/jts/geom/util/LineStringExtracter.js","../src/org/locationtech/jts/geom/util/LinearComponentExtracter.js","../src/java/util/Collections.js","../src/org/locationtech/jts/geom/util/PointExtracter.js","../src/org/locationtech/jts/geom/util/PolygonExtracter.js","../src/org/locationtech/jts/geom/util/ShortCircuitedGeometryVisitor.js","../src/org/locationtech/jts/util/GeometricShapeFactory.js","../src/org/locationtech/jts/geom/util/SineStarFactory.js","../src/org/locationtech/jts/algorithm/distance/PointPairDistance.js","../src/org/locationtech/jts/algorithm/distance/DistanceToPoint.js","../src/org/locationtech/jts/algorithm/distance/DiscreteHausdorffDistance.js","../src/org/locationtech/jts/index/ItemVisitor.js","../src/org/locationtech/jts/algorithm/locate/PointOnGeometryLocator.js","../src/org/locationtech/jts/index/intervalrtree/IntervalRTreeNode.js","../src/org/locationtech/jts/index/intervalrtree/IntervalRTreeLeafNode.js","../src/org/locationtech/jts/index/intervalrtree/IntervalRTreeBranchNode.js","../src/org/locationtech/jts/index/intervalrtree/SortedPackedIntervalRTree.js","../src/org/locationtech/jts/index/ArrayListVisitor.js","../src/org/locationtech/jts/algorithm/RayCrossingCounter.js","../src/org/locationtech/jts/algorithm/locate/IndexedPointInAreaLocator.js","../src/org/locationtech/jts/algorithm/PointLocation.js","../src/java/util/Iterator.js","../src/org/locationtech/jts/geom/GeometryCollectionIterator.js","../src/org/locationtech/jts/algorithm/locate/SimplePointInAreaLocator.js","../src/org/locationtech/jts/algorithm/match/SimilarityMeasure.js","../src/org/locationtech/jts/algorithm/match/AreaSimilarityMeasure.js","../src/org/locationtech/jts/algorithm/match/HausdorffSimilarityMeasure.js","../src/org/locationtech/jts/algorithm/match/SimilarityMeasureCombiner.js","../src/org/locationtech/jts/algorithm/Centroid.js","../src/java/util/EmptyStackException.js","../src/java/util/Stack.js","../src/org/locationtech/jts/util/UniqueCoordinateArrayFilter.js","../src/org/locationtech/jts/algorithm/ConvexHull.js","../src/org/locationtech/jts/algorithm/InteriorPointArea.js","../src/org/locationtech/jts/algorithm/InteriorPointLine.js","../src/org/locationtech/jts/algorithm/InteriorPointPoint.js","../src/org/locationtech/jts/algorithm/PointLocator.js","../src/org/locationtech/jts/algorithm/MinimumBoundingCircle.js","../src/org/locationtech/jts/algorithm/MinimumDiameter.js","../src/org/locationtech/jts/densify/Densifier.js","../src/org/locationtech/jts/geomgraph/Quadrant.js","../src/org/locationtech/jts/edgegraph/HalfEdge.js","../src/org/locationtech/jts/edgegraph/MarkHalfEdge.js","../src/org/locationtech/jts/edgegraph/EdgeGraph.js","../src/org/locationtech/jts/dissolve/DissolveHalfEdge.js","../src/org/locationtech/jts/dissolve/DissolveEdgeGraph.js","../src/org/locationtech/jts/dissolve/LineDissolver.js","../src/org/locationtech/jts/geomgraph/Position.js","../src/org/locationtech/jts/geomgraph/index/MonotoneChain.js","../src/org/locationtech/jts/geomgraph/index/SweepLineEvent.js","../src/org/locationtech/jts/geomgraph/index/EdgeSetIntersector.js","../src/org/locationtech/jts/geomgraph/index/SegmentIntersector.js","../src/org/locationtech/jts/geomgraph/index/SimpleMCSweepLineIntersector.js","../src/org/locationtech/jts/geomgraph/TopologyLocation.js","../src/org/locationtech/jts/geomgraph/Label.js","../src/org/locationtech/jts/geomgraph/EdgeIntersection.js","../src/org/locationtech/jts/geomgraph/EdgeIntersectionList.js","../src/org/locationtech/jts/geomgraph/index/MonotoneChainIndexer.js","../src/org/locationtech/jts/geomgraph/index/MonotoneChainEdge.js","../src/org/locationtech/jts/geomgraph/Depth.js","../src/org/locationtech/jts/geomgraph/GraphComponent.js","../src/org/locationtech/jts/geomgraph/Edge.js","../src/org/locationtech/jts/geomgraph/Node.js","../src/org/locationtech/jts/geomgraph/NodeMap.js","../src/org/locationtech/jts/geomgraph/EdgeEnd.js","../src/org/locationtech/jts/geom/TopologyException.js","../src/org/locationtech/jts/geomgraph/DirectedEdge.js","../src/org/locationtech/jts/geomgraph/NodeFactory.js","../src/org/locationtech/jts/geomgraph/PlanarGraph.js","../src/org/locationtech/jts/geomgraph/GeometryGraph.js","../src/org/locationtech/jts/index/kdtree/KdNodeVisitor.js","../src/org/locationtech/jts/index/kdtree/KdNode.js","../src/org/locationtech/jts/index/kdtree/KdTree.js","../src/org/locationtech/jts/index/quadtree/NodeBase.js","../src/org/locationtech/jts/index/quadtree/DoubleBits.js","../src/org/locationtech/jts/index/quadtree/Key.js","../src/org/locationtech/jts/index/quadtree/Node.js","../src/org/locationtech/jts/index/quadtree/IntervalSize.js","../src/org/locationtech/jts/index/quadtree/Root.js","../src/org/locationtech/jts/index/SpatialIndex.js","../src/org/locationtech/jts/index/quadtree/Quadtree.js","../src/org/locationtech/jts/index/strtree/Boundable.js","../src/org/locationtech/jts/index/strtree/ItemBoundable.js","../src/org/locationtech/jts/util/PriorityQueue.js","../src/org/locationtech/jts/index/strtree/AbstractNode.js","../src/org/locationtech/jts/index/strtree/BoundablePair.js","../src/org/locationtech/jts/index/strtree/AbstractSTRtree.js","../src/org/locationtech/jts/index/strtree/ItemDistance.js","../src/org/locationtech/jts/index/strtree/STRtree.js","../src/org/locationtech/jts/io/GeoJSONParser.js","../src/org/locationtech/jts/io/OL3Parser.js","../src/org/locationtech/jts/io/GeoJSONReader.js","../src/org/locationtech/jts/io/GeoJSONWriter.js","../src/org/locationtech/jts/io/WKTReader.js","../src/org/locationtech/jts/noding/SegmentPointComparator.js","../src/org/locationtech/jts/noding/SegmentNode.js","../src/org/locationtech/jts/noding/SegmentNodeList.js","../src/org/locationtech/jts/noding/Octant.js","../src/org/locationtech/jts/noding/SegmentString.js","../src/org/locationtech/jts/noding/NodableSegmentString.js","../src/org/locationtech/jts/noding/NodedSegmentString.js","../src/org/locationtech/jts/index/chain/MonotoneChainOverlapAction.js","../src/org/locationtech/jts/index/chain/MonotoneChain.js","../src/org/locationtech/jts/index/chain/MonotoneChainBuilder.js","../src/org/locationtech/jts/noding/Noder.js","../src/org/locationtech/jts/noding/SinglePassNoder.js","../src/org/locationtech/jts/noding/MCIndexNoder.js","../src/org/locationtech/jts/noding/ScaledNoder.js","../src/org/locationtech/jts/operation/IsSimpleOp.js","../src/org/locationtech/jts/operation/buffer/BufferParameters.js","../src/org/locationtech/jts/operation/buffer/RightmostEdgeFinder.js","../src/java/util/LinkedList.js","../src/org/locationtech/jts/operation/buffer/BufferSubgraph.js","../src/org/locationtech/jts/geomgraph/EdgeRing.js","../src/org/locationtech/jts/operation/overlay/MinimalEdgeRing.js","../src/org/locationtech/jts/operation/overlay/MaximalEdgeRing.js","../src/org/locationtech/jts/operation/overlay/PolygonBuilder.js","../src/org/locationtech/jts/operation/buffer/BufferInputLineSimplifier.js","../src/org/locationtech/jts/operation/buffer/OffsetSegmentString.js","../src/org/locationtech/jts/operation/buffer/OffsetSegmentGenerator.js","../src/org/locationtech/jts/operation/buffer/OffsetCurveBuilder.js","../src/org/locationtech/jts/operation/buffer/SubgraphDepthLocater.js","../src/org/locationtech/jts/operation/buffer/OffsetCurveSetBuilder.js","../src/org/locationtech/jts/geomgraph/EdgeEndStar.js","../src/org/locationtech/jts/geomgraph/DirectedEdgeStar.js","../src/org/locationtech/jts/operation/overlay/OverlayNodeFactory.js","../src/org/locationtech/jts/noding/OrientedCoordinateArray.js","../src/org/locationtech/jts/geomgraph/EdgeList.js","../src/org/locationtech/jts/noding/SegmentIntersector.js","../src/org/locationtech/jts/noding/IntersectionAdder.js","../src/org/locationtech/jts/operation/buffer/BufferBuilder.js","../src/org/locationtech/jts/noding/NodingValidator.js","../src/org/locationtech/jts/noding/snapround/HotPixel.js","../src/org/locationtech/jts/index/chain/MonotoneChainSelectAction.js","../src/org/locationtech/jts/noding/snapround/MCIndexPointSnapper.js","../src/org/locationtech/jts/noding/InteriorIntersectionFinderAdder.js","../src/org/locationtech/jts/noding/snapround/MCIndexSnapRounder.js","../src/org/locationtech/jts/operation/buffer/BufferOp.js","../src/org/locationtech/jts/operation/distance/GeometryLocation.js","../src/org/locationtech/jts/operation/distance/ConnectedElementLocationFilter.js","../src/org/locationtech/jts/operation/distance/DistanceOp.js","../src/org/locationtech/jts/operation/linemerge/EdgeString.js","../src/org/locationtech/jts/planargraph/GraphComponent.js","../src/org/locationtech/jts/planargraph/DirectedEdge.js","../src/org/locationtech/jts/operation/linemerge/LineMergeDirectedEdge.js","../src/org/locationtech/jts/planargraph/Edge.js","../src/org/locationtech/jts/planargraph/DirectedEdgeStar.js","../src/org/locationtech/jts/planargraph/Node.js","../src/org/locationtech/jts/operation/linemerge/LineMergeEdge.js","../src/org/locationtech/jts/planargraph/NodeMap.js","../src/org/locationtech/jts/planargraph/PlanarGraph.js","../src/org/locationtech/jts/operation/linemerge/LineMergeGraph.js","../src/org/locationtech/jts/operation/linemerge/LineMerger.js","../src/org/locationtech/jts/planargraph/Subgraph.js","../src/org/locationtech/jts/planargraph/algorithm/ConnectedSubgraphFinder.js","../src/org/locationtech/jts/operation/linemerge/LineSequencer.js","../src/org/locationtech/jts/operation/overlay/snap/LineStringSnapper.js","../src/org/locationtech/jts/operation/overlay/snap/GeometrySnapper.js","../src/org/locationtech/jts/noding/BasicSegmentString.js","../src/org/locationtech/jts/noding/InteriorIntersectionFinder.js","../src/org/locationtech/jts/noding/FastNodingValidator.js","../src/org/locationtech/jts/geomgraph/EdgeNodingValidator.js","../src/org/locationtech/jts/operation/overlay/LineBuilder.js","../src/org/locationtech/jts/operation/overlay/PointBuilder.js","../src/org/locationtech/jts/precision/CommonBits.js","../src/org/locationtech/jts/precision/CommonBitsRemover.js","../src/org/locationtech/jts/operation/overlay/snap/SnapOverlayOp.js","../src/org/locationtech/jts/operation/overlay/snap/SnapIfNeededOverlayOp.js","../src/org/locationtech/jts/operation/GeometryGraphOperation.js","../src/org/locationtech/jts/operation/overlay/OverlayOp.js","../src/org/locationtech/jts/operation/polygonize/PolygonizeDirectedEdge.js","../src/org/locationtech/jts/operation/polygonize/PolygonizeEdge.js","../src/org/locationtech/jts/operation/valid/ConnectedInteriorTester.js","../src/org/locationtech/jts/operation/relate/EdgeEndBuilder.js","../src/org/locationtech/jts/operation/relate/EdgeEndBundle.js","../src/org/locationtech/jts/operation/relate/EdgeEndBundleStar.js","../src/org/locationtech/jts/operation/relate/RelateNode.js","../src/org/locationtech/jts/operation/relate/RelateNodeFactory.js","../src/org/locationtech/jts/operation/relate/RelateNodeGraph.js","../src/org/locationtech/jts/operation/valid/ConsistentAreaTester.js","../src/org/locationtech/jts/operation/valid/IndexedNestedRingTester.js","../src/org/locationtech/jts/operation/valid/TopologyValidationError.js","../src/org/locationtech/jts/operation/valid/IsValidOp.js","../src/org/locationtech/jts/operation/polygonize/EdgeRing.js","../src/org/locationtech/jts/operation/polygonize/PolygonizeGraph.js","../src/org/locationtech/jts/operation/polygonize/Polygonizer.js","../src/org/locationtech/jts/operation/relate/RelateComputer.js","../src/org/locationtech/jts/operation/predicate/RectangleContains.js","../src/org/locationtech/jts/algorithm/RectangleLineIntersector.js","../src/org/locationtech/jts/operation/predicate/RectangleIntersects.js","../src/org/locationtech/jts/operation/relate/RelateOp.js","../src/org/locationtech/jts/operation/union/PointGeometryUnion.js","../src/org/locationtech/jts/operation/union/CascadedPolygonUnion.js","../src/org/locationtech/jts/operation/union/UnaryUnionOp.js","../src/org/locationtech/jts/precision/PrecisionReducerCoordinateOperation.js","../src/org/locationtech/jts/precision/GeometryPrecisionReducer.js","../src/org/locationtech/jts/simplify/DouglasPeuckerLineSimplifier.js","../src/org/locationtech/jts/simplify/DouglasPeuckerSimplifier.js","../src/org/locationtech/jts/simplify/TaggedLineSegment.js","../src/org/locationtech/jts/simplify/TaggedLineString.js","../src/org/locationtech/jts/simplify/LineSegmentIndex.js","../src/org/locationtech/jts/simplify/TaggedLineStringSimplifier.js","../src/org/locationtech/jts/simplify/TaggedLinesSimplifier.js","../src/org/locationtech/jts/simplify/TopologyPreservingSimplifier.js","../src/org/locationtech/jts/simplify/VWLineSimplifier.js","../src/org/locationtech/jts/simplify/VWSimplifier.js","../src/org/locationtech/jts/triangulate/SplitSegment.js","../src/org/locationtech/jts/triangulate/ConstraintSplitPointFinder.js","../src/org/locationtech/jts/triangulate/NonEncroachingSplitPointFinder.js","../src/org/locationtech/jts/triangulate/quadedge/TrianglePredicate.js","../src/org/locationtech/jts/triangulate/quadedge/Vertex.js","../src/org/locationtech/jts/triangulate/ConstraintVertex.js","../src/org/locationtech/jts/triangulate/quadedge/QuadEdge.js","../src/org/locationtech/jts/triangulate/IncrementalDelaunayTriangulator.js","../src/org/locationtech/jts/triangulate/quadedge/QuadEdgeLocator.js","../src/org/locationtech/jts/triangulate/quadedge/LastFoundQuadEdgeLocator.js","../src/org/locationtech/jts/triangulate/quadedge/LocateFailureException.js","../src/org/locationtech/jts/triangulate/quadedge/TriangleVisitor.js","../src/org/locationtech/jts/triangulate/quadedge/QuadEdgeSubdivision.js","../src/org/locationtech/jts/triangulate/Segment.js","../src/org/locationtech/jts/triangulate/ConformingDelaunayTriangulator.js","../src/org/locationtech/jts/triangulate/DelaunayTriangulationBuilder.js","../src/org/locationtech/jts/triangulate/ConformingDelaunayTriangulationBuilder.js","../src/org/locationtech/jts/triangulate/VoronoiDiagramBuilder.js","../src/org/locationtech/jts/linearref/LinearLocation.js","../src/org/locationtech/jts/linearref/LinearIterator.js","../src/org/locationtech/jts/linearref/LocationIndexOfPoint.js","../src/org/locationtech/jts/linearref/LocationIndexOfLine.js","../src/org/locationtech/jts/linearref/LinearGeometryBuilder.js","../src/org/locationtech/jts/linearref/ExtractLineByLocation.js","../src/org/locationtech/jts/linearref/LocationIndexedLine.js","../src/org/locationtech/jts/linearref/LengthIndexOfPoint.js","../src/org/locationtech/jts/linearref/LengthLocationMap.js","../src/org/locationtech/jts/linearref/LengthIndexedLine.js","../src/org/locationtech/jts/util/CollectionUtil.js","../src/org/locationtech/jts/util/CoordinateArrayFilter.js","../src/org/locationtech/jts/util/CoordinateCountFilter.js","../src/org/locationtech/jts/util/ObjectCounter.js","../src/org/locationtech/jts/operation/union/UnionOp.js","../src/org/locationtech/jts/monkey.js","vl-mapactions-split-action.js","vl-mapactions-translate-action.js","vl-mapactions-all.js"],"names":["abstract","Error","uidCounter_","getUid","obj","ol_uid","String","VERSION","AssertionError","constructor","code","path","message","split","name","assert","assertion","errorCode","assign","Object","target","var_sources","TypeError","output","i","ii","arguments","length","source","key","hasOwnProperty","clear","object","property","getValues","values","push","isEmpty","listen","type","listener","opt_this","opt_once","bind","originalListener","removeEventListener","apply","eventsKey","addEventListener","listenOnce","unlistenByKey","CHANGE","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","PROPERTYCHANGE","Disposable","disposed_","dispose","disposeInternal","binarySearch","haystack","needle","opt_comparator","mid","cmp","comparator","numberSafeCompareFunction","low","high","found","a","b","includes","arr","indexOf","linearFindNearest","direction","n","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","remove","splice","find","func","value","equals","arr1","arr2","len1","stableSort","compareFnc","index","sort","findIndex","every","el","idx","isSorted","opt_func","opt_strict","compare","currentVal","res","TRUE","FALSE","VOID","memoizeOne","fn","called","lastResult","lastArgs","lastThis","nextArgs","prototype","slice","call","BaseEvent","propagationStopped","preventDefault","stopPropagation","evt","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","listeners","dispatchEvent","event","Event","propagate","handleEvent","pendingRemovals","getListeners","hasListener","opt_type","keys","Observable","EventTarget","revision_","changed","EventType","getRevision","on","len","once","un","unByKey","BaseObject","ObjectEvent","oldValue","opt_values","values_","undefined","setProperties","get","getKeys","getProperties","notify","eventType","getChangeEventType","ObjectEventType","set","opt_silent","unset","changeEventTypeCache","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","createStyleFunction","setId","id","styles","getZIndex","clamp","min","max","Math","cosh","x","y","exp","squaredSegmentDistance","x1","y1","x2","y2","dx","dy","t","squaredDistance","solveLinearSystem","mat","maxRow","maxEl","abs","r","absValue","j","coef","k","l","m","toDegrees","angleInRadians","PI","toRadians","angleInDegrees","modulo","lerp","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","sin","cos","atan2","sqrt","getLengthInternal","coordinates","getLength","opt_options","options","projection","getType","GeometryType","transform","coords","jj","getCoordinates","geometries","getGeometries","getAreaInternal","area","getArea","offset","distance","bearing","lon1","dByR","lat","asin","lon","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","extent","createEmpty","extendCoordinate","_boundingExtentXYs","xs","ys","opt_extent","createOrUpdate","buffer","closestSquaredDistanceXY","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","Relationship","Infinity","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","stride","extendFlatCoordinates","createOrUpdateFromRings","rings","extendRings","approximatelyEquals","tolerance","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getWidth","getHeight","getCenter","getCorner","corner","Corner","getEnlargedArea","getForViewAndSize","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x3","y0","y3","getIntersectionArea","getIntersection","intersection","intersects","getMargin","getSize","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","opt_stops","width","height","wrapX","projectionExtent","getExtent","canWrapX","worldWidth","floor","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","EPSG3857Projection","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","halfSize","log","tan","toEPSG4326","atan","EPSG4326Projection","opt_axisOrientation","transforms","add","destination","sourceCode","destinationCode","cache","cloneTransform","identityTransform","addProjection","addProjections","projections","forEach","projectionLike","opt_units","pointResolution","getter","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","clearAllProjections","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","addCoordinateTransforms","forward","inverse","sourceProj","destProj","fromLonLat","opt_projection","toLonLat","lonLat","equivalent","equalUnits","transformFunc","sourceProjection","destinationProjection","getTransform","transformExtent","transformWithProjections","userProjection","setUserProjection","clearUserProjection","getUserProjection","useGeographic","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","FeatureFormat","dataProjection","defaultFeatureProjection","getReadOptions","readProjection","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","feature","writeFeatures","features","writeGeometry","transformGeometryWithOptions","write","transformed","decimals","power","pow","round","transformExtentWithOptions","ARRAY_BUFFER","JSON","TEXT","XML","JSONFeature","FormatType","readFeatureFromObject","getObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","parse","transform2D","opt_dest","dest","rotate","angle","anchor","anchorX","anchorY","scale","sx","sy","translate","tmp_","create","reset","multiply","transform1","transform2","a1","b1","d1","e1","f1","a2","b2","d2","e2","f2","c","d","e","f","setFromArray","makeScale","compose","dx1","dy1","dx2","dy2","composeCssTransform","toString","invert","makeInverse","det","determinant","join","Geometry","tmpTransform","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","opt_sy","opt_anchor","simplify","intersectsExtent","inCoordinates","outCoordinates","pixelExtent","projectedExtent","GeometryCollection","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","cloneGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","concat","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","clonedGeometries","XY","XYZ","XYM","XYZM","SimpleGeometry","layout","GeometryLayout","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","ends","multiArrayMaxSquaredDelta","endss","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","deflateMultiCoordinatesArray","coordinatesss","opt_endss","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","opt_coordinatesss","interpolatePoint","fraction","pointX","pointY","cumulativeLengths","o","lineStringCoordinateAtM","extrapolate","lo","hi","m0","m1","lineStringsCoordinateAtM","interpolate","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","point1","point2","ret","intersectsLineString","coordinatesExtent","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","lineStringLength","linearRingLength","perimeter","simplifyLineString","highQuality","opt_simplifiedFlatCoordinates","radialDistance","douglasPeucker","simplifiedOffset","markers","stack","last","pop","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","douglasPeuckerMultiArray","simplifiedEndss","snap","quantize","quantizeArray","quantizeMultiArray","LineString","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","appendCoordinate","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getFlatMidpoint","MultiLineString","ends_","lineStrings","lineString","appendLineString","opt_interpolate","getEnds","getLineString","getLineStrings","getFlatMidpoints","midpoints","midpoint","Point","MultiPoint","appendPoint","multiPoint","getPoint","getPoints","points","linearRing","twiceArea","linearRings","linearRingss","LinearRing","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","maxSegmentLength","segmentLength","isNaN","getInteriorPointsOfMultiArray","interiorPoints","linearRingIsClockwise","edge","linearRingsAreOriented","opt_right","right","isClockwise","linearRingssAreOriented","orientLinearRings","orientLinearRingsArray","Polygon","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","getOrientedFlatCoordinates","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","circular","opt_n","opt_sphereRadius","fromExtent","fromCircle","circle","opt_sides","opt_angle","sides","arrayLength","polygon","makeRegular","getRadius","startAngle","MultiPolygon","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","appendPolygon","newEndss","getEndss","getFlatInteriorPoints","getInteriorPoints","getPolygon","prevEnds","getPolygons","lastEnds","GeoJSON","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONObject","geoJSONFeatures","crs","objects","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","map","geoJSON","writePointGeometry","writeLineStringGeometry","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","rightHanded","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","opt_isMoving","viewWidth","viewHeight","ratio","none","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","result","createSnapToResolutions","resolutions","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","capped","z","createSnapToPower","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","newResolution","createMinMaxResolution","disable","createSnapToN","theta","createSnapToZero","opt_tolerance","ANIMATING","INTERACTING","CENTER","RESOLUTION","ROTATION","padNumber","number","opt_precision","numberString","toFixed","decimal","compareVersions","v1","v2","s1","s2","n1","parseInt","n2","delta","closestOnCircle","closestOnSegment","segment","along","createStringXY","opt_fractionDigits","toStringXY","degreesToStringHDMS","hemispheres","degrees","normalizedDegrees","dflPrecision","precision","deg","sec","charAt","format","template","replace","coordinate1","coordinate2","cosAngle","sinAngle","coord1","coord2","squaredDistanceToSegment","toStringHDMS","worldsAway","easeIn","easeOut","inAndOut","linear","upAndDown","View","DEFAULT_MIN_ZOOM","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","minZoom_","minZoom","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","options_","getUpdatedOptions_","newOptions","getResolution","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","state","animationCallback","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","targetRotation","isNoopAnimation","setHint","ViewHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","w","h","setViewportSize","opt_size","ViewProperty","getConstraints","getConstrainResolution","constrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","maxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","getState","nearest","baseLevel","fit","geometryOrExtent","fitInternal","padding","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRotX","centerRotY","centerX","getConstrainedCenter","centerOn","position","centerOnInternal","centerY","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","returnValue","setTimeout","smoothExtentConstraint","constrainOnlyCenter","multiWorld","centerNone","smoothResolutionConstraint","projExtent","defaultMaxResolution","defaultMinResolution","enableRotation","constrainRotation","rotationNone","POSTRENDER","MOVESTART","MOVEEND","BOTTOM_CENTER","CENTER_LEFT","CENTER_CENTER","CENTER_RIGHT","TOP_CENTER","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","PASSIVE_EVENT_LISTENERS","passive","defineProperty","window","error","createCanvasContext2D","opt_width","opt_height","opt_canvasPool","canvas","shift","document","createElement","getContext","outerWidth","element","offsetWidth","getComputedStyle","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","insertBefore","appendChild","Overlay","Property","ELEMENT","MAP","OFFSET","POSITION","POSITIONING","insertFirst","stopEvent","className","autoPan","autoPanAnimation","margin","autoPanMargin","rendered","transform_","visible","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","OverlayPositioning","setPosition","getElement","getMap","getOffset","getPosition","getPositioning","MapEventType","render","updatePixelPosition","container","getOverlayContainerStopEvent","getOverlayContainer","performAutoPan","setMap","panIntoView","panIntoViewOptions","getTargetElement","mapRect","getRect","overlayRect","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","getView","centerPx","getPixelFromCoordinateInternal","newCenterPx","panOptions","getCoordinateFromPixelInternal","box","getBoundingClientRect","offsetX","left","pageXOffset","offsetY","top","pageYOffset","setVisible","display","isRendered","pixel","getPixelFromCoordinate","mapSize","updateRenderedPosition","posX","posY","msTransform","getOptions","ADD","REMOVE","Collection","LENGTH","CollectionEvent","opt_element","opt_index","opt_array","unique_","unique","array_","assertUnique_","updateLength_","array","getArray","item","insertAt","elem","CollectionEventType","removeAt","prev","setAt","opt_except","Control","target_","map_","listenerKeys","render_","setTarget","mapEvent","getElementById","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","BaseLayer","LayerProperty","opacity","zIndex","className_","state_","getClassName","getLayerState","opt_managed","layer","managed","getOpacity","sourceState","getSourceState","getVisible","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setOpacity","setZIndex","zindex","PRERENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","UNDEFINED","LOADING","READY","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","handleSourcePropertyChange_","setSource","states","getSource","SourceState","handleSourceChange_","getFeatures","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","RenderEventType","renderEvent","layerStatesArray","layerState","some","arrayLayerState","createRenderer","hasRenderer","inView","viewState","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","button","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","view","contains","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","FullScreen","events","FullScreenEventType","ENTERFULLSCREEN","LEAVEFULLSCREEN","cssClassName_","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","isFullScreen","isFullScreenSupported","keys_","source_","handleFullScreen_","exitFullScreen","requestFullScreenWithKeys","requestFullScreen","handleFullScreenChange_","updateSize","fullscreen","activeClassName","inactiveClassName","nextClassName","body","webkitRequestFullscreen","msRequestFullscreen","msFullscreenEnabled","requestFullscreen","fullscreenEnabled","webkitIsFullScreen","msFullscreenElement","fullscreenElement","exitFullscreen","msExitFullscreen","webkitExitFullscreen","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MousePosition","PROJECTION","COORDINATE_FORMAT","handleProjectionChanged_","coordinateFormat","setCoordinateFormat","setProjection","undefinedHTML_","undefinedHTML","renderOnMouseOut_","renderedHTML_","mapProjection_","getCoordinateFormat","handleMouseMove","updateHTML_","getEventPixel","handleMouseOut","viewport","getViewport","html","MapEvent","opt_frameState","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","pixel_","coordinate_","dragging","getCoordinateFromPixel","SINGLECLICK","POINTERDRAG","MapBrowserPointerEvent","pointerEvent","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","element_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","newEvent","MapBrowserEventType","clearTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","defaultPrevented","clientX","clientY","LAYERGROUP","SIZE","TARGET","VIEW","IDLE","LOADED","EMPTY","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","hifi","TileState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","LayerGroup","LAYERS","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","num","hasArea","toSize","PluggableMap","optionsInternal","createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyboardEventTarget","keyHandlerKeys_","controls","interactions","overlays_","overlays","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","handleTileChange_","MapProperty","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","overlay","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","getOverlays","forEachFeatureAtPixel","hitTolerance","layerFilter","checkWrapped","forEachFeatureAtCoordinate","getFeaturesAtPixel","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","getEventCoordinateInternal","viewportPosition","eventPosition","changedTouches","getTarget","pixelToCoordinateTransform","getOverlayById","getLoading","loading","viewCoordinate","coordinateToPixelTransform","mapBrowserEvent","getRootNode","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","dispatchRenderEvent","postRenderFunctions","targetElement","handleViewPropertyChanged_","updateViewportSize_","layerGroup","renderSync","redrawText","layerStates","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterItems","layerIndex","usedTiles","setLayerGroup","setSize","setView","computedStyle","parseFloat","RenderEvent","opt_inversePixelTransform","opt_context","inversePixelTransform","context","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromNamed","rgb","fromString","MAX_CACHE_SIZE","cacheSize","s","fromStringInternal_","asArray","g","exec","hasAlpha","substr","normalize","Number","isStringColor","test","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","src","crossOrigin","maxCacheSize","shared","asColorLike","VectorContext","drawCustom","renderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","fillStyle","strokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","opt_declutterGroups","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","labelCache","console","warn","measureFont","measureContext","textHeights","registerFont","retries","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","div","heights","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","measureAndCacheTextWidth","measureTextWidths","lines","widths","numLines","currentWidth","rotateAtOffset","drawImageOrLabel","labelOrImage","originX","originY","save","globalAlpha","setTransform","contextInstructions","executeLabelInstructions","drawImage","restore","createTransformStringCanvas","createTransformString","CanvasImmediateRenderer","viewRotation","opt_squaredTolerance","opt_userTransform","context_","viewRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","alpha","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","beginPath","arc","fill","stroke","getFill","getStroke","getImage","getText","getGeometryFunction","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","lineCap","setLineDash","lineDash","lineDashOffset","lineJoin","lineWidth","miterLimit","textState","contextTextState","textAlign","textBaseline","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","imageAnchor","getAnchor","imageImage","imageOrigin","getOrigin","imageSize","getRotateWithView","getScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","DEFAULT","IMAGE","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","circleReplay","getBuilder","BuilderType","textReplay","addDeclutter","renderFeature","replayGroup","imageState","getImageState","ImageState","unlistenImageChange","listenImageChange","renderFeatureInternal","renderGeometry","geometryRenderer","lineStringReplay","polygonReplay","imageReplay","toContext","getVectorContext","userTransform","getRenderPixel","renderDeclutterItems","declutterTree","items","zIndexItems","renderDeclutter","MapRenderer","declutterTree_","calculateMatrices2D","thisArg","thisArg2","translatedCoordinate","offsets","numLayers","declutteredFeatures","all","entry","tmpCoord","getWrapX","hasFeature","scheduleExpireIconCache","iconImageCache","expireIconCache","CompositeMapRenderer","fontChangeListenerKey_","firstChild","children_","previousElement","getDataAtPixel","OverviewMap","MAX_RATIO","MIN_RATIO","ControlledMap","boundHandleRotationChanged_","handleRotationChanged_","rotateWithView_","rotateWithView","viewExtent_","ovmapDiv_","view_","ovmap_","ovmap","boxSizing","boxOverlay_","scope","overlayBox","move","mousePosition","endMoving","oldMap","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","newView","validateExtent_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","steps","LN2","updateBox_","ovresolution","setRotateWithView","getOverviewMap","ScaleLine","UNITS_PROP","IMPERIAL","NAUTICAL","METRIC","US","LEADING_DIGITS","bar","innerElement_","viewState_","minWidth_","minWidth","renderedWidth_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","scaleBarText_","pointResolutionUnits","ProjUnits","nominalCount","suffix","metersPerDegree","decimalCount","createScaleBar","mapScale","getScaleForResolution","toLocaleString","scaleSteps","stepWidth","backgroundColor","scaleBarText","createMarker","createStepText","isLast","lengthString","mpu","ZoomSlider","Direction","VERTICAL","HORIZONTAL","currentResolution_","direction_","heightLimit_","widthLimit_","startX_","startY_","thumbSize_","sliderInitialized_","thumbElement","containerElement","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","initSlider_","containerSize","thumb","firstElementChild","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","drag","setThumbPosition_","getPositionForResolution_","amount","ZoomToExtent","handleZoomToExtent","defaults","zoomOptions","rotateOptions","attribution","attributionOptions","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","lastIndex","firstIndex","getAngle","ACTIVE","Interaction","setActive","InteractionProperty","active","pan","zoomByDelta","DoubleClickZoom","delta_","shiftKey","altKeyOnly","altKey","metaKey","ctrlKey","altShiftKeysOnly","focus","activeElement","always","click","mouseActionButton","never","pointerMove","singleClick","doubleClick","noModifierKeys","platformModifierKeyOnly","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","pointerType","touchOnly","pointerEvt","penOnly","primaryAction","isPrimary","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","centroid","pointerEvents","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","defaultCondition","noKinetic_","conditionInternal_","pass","hasAttribute","centerpx","DragRotate","lastAngle_","RenderBox","geometry_","startPixel_","endPixel_","startPixel","endPixel","setPixels","createOrUpdateGeometry","DragBox","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","DragBoxEvent","box_","minArea_","minArea","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","DragZoom","out_","out","mapExtent","boxPixelExtent","factor","UP","DOWN","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","KeyCode","mapUnitsDelta","KeyboardZoom","charCode","charCodeAt","MouseWheelZoom","Mode","TRACKPAD","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","DragAndDrop","DragAndDropEventType","ADD_FEATURES","DragAndDropEvent","file","opt_features","formatConstructors_","formatConstructors","dropListenKeys_","handleResult_","tryReadFeatures_","addFeatures","registerListeners_","dropArea","handleDrop","handleStop","unregisterListeners_","files","dataTransfer","reader","FileReader","readAsText","dropEffect","DragRotateAndZoom","lastMagnitude_","magnitude","angleDelta","Circle","setCenterAndRadius","getRadiusSquared_","circleExtent","setRadius","ImageStyle","opacity_","scale_","displacement_","displacement","getDisplacement","getHitDetectionImage","getImageSize","getHitDetectionImageSize","setScale","RegularShape","canvas_","hitDetectionCanvas_","fill_","origin_","radius_","radius1","radius2_","radius2","stroke_","size_","imageSize_","hitDetectionImageSize_","getRadius2","strokeWidth","renderOptions","draw_","createHitDetectionCanvas_","angle0","radiusC","drawHitDetectionCanvas_","CircleStyle","Fill","color_","setColor","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometryFunction_","defaultGeometryFunction","image","zIndex_","setRenderer","setFill","setImage","setStroke","setText","toFunction","styleFunction","defaultStyles","createDefaultStyle","createEditingStyle","white","blue","BaseVectorLayer","RENDER_ORDER","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastXCoord","lastYCoord","nextCoord","skipped","lastRel","nextRel","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","CanvasInstruction","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageBuilder","declutterGroups_","hitDetectionImage_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","declutterGroups","hitDetectionImage","origin","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","maxAngle","chunkStart","acos","m12","m23","x12","y12","x23","y23","chunkEnd","chunkM","LINE","CanvasTextBuilder","TEXT_ALIGN","labels_","fillStates","strokeStates","textStates","textKey_","fillKey_","strokeKey_","geometryType","placement","TextPlacement","flatOffset","flatEnd","oo","range","declutterGroup","drawChars_","geometryWidths","saveTextStates_","backgroundFill","backgroundStroke","p","strokeKey","textKey","fillKey","baseline","getOverflow","getMaxAngle","getPlacement","getBackgroundFill","getBackgroundStroke","getPadding","BuilderGroup","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","tolerance_","maxExtent_","resolution_","buildersByZIndex_","group","builderInstructions","zKey","builders","builderKey","builderInstruction","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","numChars","previousAngle","segmentM","angleChanged","char","charLength","charM","segmentPos","Executor","tmpExtent","p1","p2","p3","p4","overlaps","alignFill_","coordinateCache_","renderedTransform_","widths_","createLabel","align","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","setStrokeStyle_","replayImageOrLabel_","imageOrLabel","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","repeatSize","groupCount","RBush","collides","insert","declutterData","currentAlpha","drawLabelWithPointPlacement_","execute_","featureCallback","opt_hitExtent","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotationFromTransform","batchSize","labelWithAnchor","widthIndex","declutterGroupIndex","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","cc","chars","part","execute","executeHitDetection","opt_featureCallback","ExecutorGroup","ORDER","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","clip","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","contextSize","hitExtent","clearRect","mask","getCircleArray","imageData","getImageData","zs","executor","opt_builderTypes","opt_declutterReplays","builderTypes","circleArrayCache","fillCircleArrayRowToMiddle","arraySize","replayDeclutter","declutterReplays","zz","executorData","currentExecutor","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","CanvasLayerRenderer","renderedResolution","tempTransform_","pixelTransform","containerReused","useContainer","layerClassName","HTMLCanvasElement","transformOrigin","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","clipUnrotated","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","err","Uint8Array","FRACTION","ImageBase","getPixelRatio","ImageWrapper","imageLoadFunction","src_","unlisten_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","listenImage","loadHandler","errorHandler","img","promise","listening","unlisten","then","catch","IconImage","imageState_","tainted_","isTainted_","dispatchChangeEvent_","replaceColor_","fillRect","getSrc","ctx","globalCompositeOperation","imgData","putImageData","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","IconOrigin","anchorXUnits_","anchorXUnits","IconAnchorUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","offset_","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","Text","DEFAULT_FILL_COLOR","font_","textAlign_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","padding_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","createHitDetectionImageData","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgContext","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","canvasTransform","vectorSource","clipped","layerExtent","world","Promise","resolve","reject","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","loadExtents","gutter","loadExtent","CanvasBuilderGroup","loadFeatures","dirty","userExtent","getFeaturesInExtent","replayGroupInstructions","executorGroup","getOverlaps","VectorLayer","withCredentials","loadFeaturesXhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","response","onerror","send","sourceOrTile","setWithCredentials","xhrWithCredentials","bbox","getZForResolution","getTileRangeForExtentAndZ","extents","getTileCoordExtent","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","refresh","setAttributions","setState","attributionLike","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","opt_maxEntries","rbush_","RBush_","items_","uid","getAll","getInExtent","search","forEach_","forEachInExtent","toJSON","rbush","VectorSource","VectorSourceEvent","opt_feature","loader_","format_","url_","loader","strategy_","strategy","allStrategy","useSpatialIndex","collection","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removed","setLoader","setUrl","Draw","DrawEventType","DRAWSTART","DRAWEND","DRAWABORT","DrawEvent","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","features_","snapTolerance_","snapTolerance","type_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","opt_geometry","squaredLength","mode","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","getDefaultStyleFunction","freehandCondition_","freehand","freehandCondition","updateState_","getOverlay","addToDrawing_","startDrawing_","circleMode","finishDrawing","atFinish_","abortDrawing","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","sketchLineGeom","ring","removeLastPoint","sketchFeature","abortDrawing_","appendCoordinates","ending","sketchFeatures","overlaySource","createRegularPolygon","createBox","boxCoordinates","Extent","ExtentEventType","EXTENTCHANGED","ExtentEvent","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","getDefaultExtentStyleFunction","vertexOverlay_","pointerStyle","getDefaultPointerStyleFunction","snapToVertex_","pixelCoordinate","sortByDistance","getExtentInternal","segments","getSegments","closestSegment","vertex","vertexPixel","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","getPointHandler","getEdgeHandler","fixedPoint","fixedP1","fixedP2","Modify","CIRCLE_CENTER_INDEX","CIRCLE_CIRCUMFERENCE_INDEX","tempExtent","tempSegment","ModifyEventType","MODIFYSTART","MODIFYEND","ModifyEvent","mapBrowserPointerEvent","boundHandleFeatureChange_","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","rBush_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","handleSourceAdd_","handleSourceRemove_","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","writer","handlePointerAtPixel_","willModifyFeatures_","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","nodeToRemove","segmentData","depth","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","removePoint","dragSegment","setGeometryCoordinates_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","compareIndexes","segmentDataMatch","closestVertex","closestOnSegmentData","insertVertex_","opt_coordinate","projectedDistanceToSegmentDataSquared","viewExtent","nodes","vertexSegments","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","dragSegments","segmentsByFeature","deleted","component","newIndex","pointCoordinates","distanceToCenterSquared","distanceToCircumference","Select","SelectEventType","SELECT","SelectEvent","selected","deselected","originalFeatureStyles","boundAddFeature_","boundRemoveFeature_","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","getHitTolerance","setHitTolerance","restorePreviousStyle_","applySelectedStyle_","selectInteractions","removeFeatureLayerAssociation_","Snap","getFeatureFromEvent","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","opt_listen","register","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","snapTo","snapped","updateFeature_","featuresToUpdate","opt_unlisten","unregister","currentMap","lowerLeft","upperRight","projectedCoordinate","closestSegmentData","isCircle","Translate","TranslateEventType","TRANSLATESTART","TRANSLATING","TRANSLATEEND","TranslateEvent","startCoordinate","lastCoordinate_","startCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","newCoordinate","geom","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","Map","MapWithActions","disableRotation","enableMouseWheelZoom","disableMouseWheelZoom","actions","action","addAction","activateDefaultAction","disableEscapeKey","activateFirstActionOnEscapeKey","currentAction","deactivate","activate","CLICK_COUNT_TIMEOUT","activateAction","CustomMap","customLayers","baseLayerGroup","overlayGroup","geoJSONFormat","custom","overviewMapLayers","createOverviewMapControl","baseLayers","maxZoomViewToExtent","toggleBaseLayer","baseLayer","getNextLayerAfterVisibleLayer","currentIndex","overviewMapControl","nextVisibleOverviewMapLayer","overlayMapLayer","boundingBox","zoomViewToExtent","geoJson","zoomToExtent","info","onclick","currentTarget","tooltip","MapAction","SelectAction","onSelect","cluster","hoverStyle","selectInteractionFilter","selectInteraction","hoverInteractionFilter","isSelected","hoverInteraction","markInteraction","cursor","selectedFeature","next","markFeatureWithId","clusters","_fixClusterBehaviorListener","_fixClusterBehavior","clearFeatures","getClusterWithFeatureId","marked","BoxSelectAction","dragBoxInteraction","boxExtent","DeleteAction","onDelete","defaultStyle","SnapInteraction","snapOptions","DrawAction","onDraw","drawOptions","drawInteraction","snapping","measure","tooltipElement","measurePointermoveHandler","_showMeasureTooltip","exception","_cleanUp","_removeTooltip","_getLengthOfLastSegment","_getCoordinatesOfLastSegment","DrawLijnstukAction","drawLijnstukOptions","DrawRectangleAction","drawRectangleOptions","HighlightAction","highlightInteraction","dehighlightAllFeatures","_getClusterByFeatureId","_getFeatureById","highlighted","highlightedFeature","MeasureAction","featureCounter","measureTooltips","measureFeature","showMeasureTooltip","removeTooltip","cleanUp","tooltipsToRemove","getTooltipFor","measureOptions","ModifyAction","onModify","modifyInteraction","currentGeometryBeingModified","ModifyAndTranslateAction","translateInteraction","SelectActions","layerConfiguraties","layerConfiguratie","_getLayer","_getLayerStyle","_getLayerHoverStyle","_layer","Tooltips","infoPromise","loadingMessage","doneLoading","tooltips","showTooltip","showInfoContent","content","resolveDelay","ShowInfoAction","tooltipOptions","ShowInfoSelectAction","NumberUtil","constructor_","this","getClass","interfaces_","IllegalArgumentException","Long","Double","Comparable","Clonable","Comparator","Serializable","RuntimeException","toBinaryString","isInfinite","isFinite","MAX_VALUE","Float64Array","Int32Array","f64buf","i32buf","doubleToLongBits","longBitsToDouble","bits","log2","MAX_REL_BITS_INTEGER","skip","sign","NEGATIVE_INFINITY","fract","BIAS","AssertionFailedException","Assert","[object Object]","shouldNeverReachHere","isTrue","expectedValue","actualValue","Coordinate","ordinateIndex","X","Y","Z","equals2D","other","equalsWithTolerance","CloneNotSupportedException","copy","dz","hashCode","Cloneable","trunc","DimensionalComparator","o1","o2","compX","compY","_dimensionsToTest","hasInterface","IndexOutOfBoundsException","List","NoSuchElementException","ArrayList","addAll","dimensionsToTest","NULL_ORDINATE","serialVersionUID","iterator","toArray","ensureCapacity","hasNext","oldElement","Iterator_","removeAll","arrayList","arrayList_","position_","CoordinateList","coll","allowRepeated","isChanged","super","toCoordinateArray","coordArrayType","isInteger","inc","closeRing","Envelope","otherEnvelope","isNull","_maxx","getMaxX","_maxy","getMaxY","_minx","getMinX","_miny","getMinY","env","intMinX","intMinY","covers","expandToInclude","minExtent","transX","transY","init","setToNull","expandBy","centre","q","q1","q2","minq","maxq","minp","maxp","Exception","NotRepresentableException","StringBuffer","str","Integer","Character","append","setCharAt","intValue","compareTo","isWhitespace","toUpperCase","DD","_hi","_lo","insertDecimalPoint","mag","TEN","divide","gt","lt","ONE","decimalPointPos","buf","numDigits","MAX_PRINT_DIGITS","digit","rebiasBy10","digitChar","subtract","valueOf","selfAdd","continueExtractingDigits","remMag","sqr","doubleValue","negate","isZero","selfSubtract","getSpecialNumberString","le","selfDivide","yhi","tc","ty","C","U","ylo","hc","hy","u","SPLIT","dump","createNaN","selfMultiply","reciprocal","fhi","flo","rint","setValue","ge","isNegative","ax","axdd","H","S","T","zhi","zlo","tx","hx","selfSqr","ex","toStandardNotation","toSciNotation","specialStr","sigDigits","extractSignificantDigits","stringOfChar","numZeroes","SCI_NOT_ZERO","digits","expStr","SCI_NOT_EXPONENT_CHAR","IllegalStateException","trailingDigits","substring","digitsWithDecimal","isPositive","signum","strlen","signCh","numBeforeDec","ch","isDigit","NumberFormatException","val2","numDecPlaces","xAbs","xLog10","xMag","TWO_PI","PI_2","E","EPS","CGAlgorithmsDD","orientationIndexFilter","denom1","denom2","denom","numx1","numx2","fracP","numy1","numy2","fracQ","pa","pb","pc","detsum","detleft","detright","errbound","DP_SAFE_EPSILON","Orientation","orientationIndex","nPts","hiPt","hiIndex","iPrev","iNext","disc","isCCW","System","CLOCKWISE","COUNTERCLOCKWISE","COLLINEAR","STRAIGHT","arraycopy","srcPos","destPos","getProperty","HCoordinate","getY","getX","getCoordinate","px","py","pw","qx","qy","qw","xInt","yInt","_x","_y","_w","MathUtil","ln","LOG_10","v3","v4","Distance","A","B","D","pointToSegment","noIntersection","r_num","len2","line","CoordinateSequence","getDimension","M","CoordinateSequenceFactory","GeometryComponentFilter","isGeometryCollection","getTypeCode","TYPECODE_GEOMETRYCOLLECTION","getFactory","_factory","isRectangle","equalsTopo","equalsExact","geometryChanged","geometryChangedFilter","geometryChangedAction","_envelope","norm","getNumGeometries","compareToSameClass","comp","getUserData","_userData","getSRID","_SRID","getEnvelope","toGeometry","getEnvelopeInternal","getPrecisionModel","computeEnvelopeInternal","SRID","userData","aElement","bElement","comparison","isGeometryCollectionOrDerived","TYPECODE_MULTIPOINT","TYPECODE_MULTILINESTRING","TYPECODE_MULTIPOLYGON","factory","TYPECODE_POINT","TYPECODE_LINESTRING","TYPECODE_LINEARRING","TYPECODE_POLYGON","TYPENAME_POINT","TYPENAME_MULTIPOINT","TYPENAME_LINESTRING","TYPENAME_LINEARRING","TYPENAME_MULTILINESTRING","TYPENAME_POLYGON","TYPENAME_MULTIPOLYGON","TYPENAME_GEOMETRYCOLLECTION","CoordinateFilter","BoundaryNodeRule","boundaryCount","Mod2BoundaryNodeRule","EndPointBoundaryNodeRule","MultiValentEndPointBoundaryNodeRule","MonoValentEndPointBoundaryNodeRule","MOD2_BOUNDARY_RULE","ENDPOINT_BOUNDARY_RULE","MULTIVALENT_ENDPOINT_BOUNDARY_RULE","MONOVALENT_ENDPOINT_BOUNDARY_RULE","OGC_SFS_BOUNDARY_RULE","CoordinateArrays","pts","testPts","testPt","firstCoordinate","newCoordinates","coordinateComparator","coordList","hasRepeatedPoints","nonNull","newCoord","srcStart","destStart","pts1","pts2","minCoord","npts","extractPts","iPts","ForwardComparator","BidirectionalComparator","forwardComp","isEqualReversed","dir1","increasingDirection","dir2","i1","i2","comparePt","SortedMap","UnsupportedOperationException","Set","HashSet","put","entrySet","hashSet","hashSet_","colorOf","parentOf","leftOf","rightOf","TreeMap","root_","getValue","fixAfterInsertion","rotateLeft","rotateRight","getFirstEntry","successor","containsKey","Lineal","SortedSet","TreeSet","treeSet","treeSet_","Arrays","asList","Dimension","dimensionValue","SYM_FALSE","SYM_TRUE","DONTCARE","SYM_DONTCARE","P","SYM_P","L","SYM_L","SYM_A","dimensionSymbol","GeometryFilter","CoordinateSequenceFilter","seq","isDone","isGeometryChanged","envelope","_geometries","getNumPoints","childCoordinates","isEquivalentClass","otherCollection","getBoundaryDimension","sum","numPoints","revGeoms","createGeometryCollection","theseElements","otherElements","gc","thisGeom","getGeometryN","otherGeom","holeComp","getBoundary","checkNotGeometryCollection","getGeometryType","hasNullElements","isClosed","nLines","revLines","createMultiLineString","BoundaryOp","mLine","_geom","getEmptyMultiPoint","bdyPts","computeBoundaryCoordinates","_geomFact","createPoint","createMultiPointFromCoords","boundaryLineString","boundaryMultiLineString","_bnRule","isInBoundary","getStartPoint","createMultiPoint","getEndPoint","_endpointMap","addEndpoint","getCoordinateN","it","valence","pt","counter","Counter","bnRule","Length","PrintStream","StringReader","ByteArrayOutputStream","IOException","LineNumberReader","StringUtil","os","ps","printStackTrace","stackTrace","lineNumberReader","getStackTrace","readLine","NEWLINE","separator","separatorlen","tokenList","tmpString","token","SIMPLE_ORDINATE_FORMAT","StringBuilder","CoordinateSequences","minDim","dim","setOrdinate","getOrdinate","cs1","cs2","cs1Size","fact","newseq","swap","copyCoord","cs","builder","createClosedRing","_points","expandEnvelope","isSimple","otherLineString","equal","getPointN","ofLine","createLineString","getCoordinateSequence","getCoordinateSequenceFactory","Puntal","_coordinates","Area","ofRingSigned","p0","Polygonal","_shell","shellCoordinates","_holes","ofRing","getNumInteriorRing","otherPolygon","thisShell","otherPolygonShell","clockwise","uniqueCoordinates","minCoordinate","scroll","poly","convexHull","getExteriorRing","otherShell","shellComp","nHole1","nHole2","thisHole","getInteriorRingN","otherHole","createLinearRing","shellCopy","holeCopies","shell","holes","hasNonEmptyElements","isValid","validateConstruction","MINIMUM_VALID_SIZE","GeometryFactory","createMultiPolygon","allRings","allRingsArray","GeometryEditor","isUserDataCopied","_isUserDataCopied","operation","editInternal","setUserData","editGeometryCollection","editPolygon","edit","getName","collectionForType","newPolygon","createPolygon","hole","GeometryEditorOperation","NoOpGeometryOperation","CoordinateOperation","CoordinateSequenceOperation","CoordinateArraySequence","_dimension","cloneCoordinates","strBuilder","coordSeq","getCoordinateCopy","CoordinateArraySequenceFactory","readResolve","instance","instanceObject","HashMap","MapInterface","entries","PrecisionModel","otherPrecisionModel","_modelType","_scale","getMaximumSignificantDigits","otherSigDigits","isFloating","FLOATING","FLOATING_SINGLE","description","FIXED","makePrecise","maxSigDigits","pm1","pm2","Type","nameToTypeMap","_name","modelType","pm","maximumPreciseValue","geomList","geomClass","isHeterogeneous","hasGeometryCollection","partClass","toGeometryArray","geom0","toPolygonArray","toLineStringArray","toPointArray","_coordinateSequenceFactory","CloneOp","_precisionModel","ptSeq","multiPolygons","multiPolygonArray","geometryArray","multiLineStrings","multiLineStringArray","lineStringArray","multiPoints","multiPointArray","linearRingArray","pointArray","polygonArray","exemplar","coordinateSequenceFactory","precisionModel","getDefaultCoordinateSequenceFactory","regExes","typeStr","emptyTypeStr","spaces","parenComma","doubleParenComma","trimParens","WKTParser","geometryFactory","wkt","matches","extractGeometry","extract","wktType","multipoint","linestring","linearring","multilinestring","multipolygon","geometrycollection","trim","components","wktArray","read","WKTWriter","parser","LineIntersector","segmentIndex","intIndex","computeIntLineIndex","_intLineIndex","getTopologySummary","catBuilder","isEndPoint","_isProper","isCollinear","_inputLines","_result","computeIntersect","getIntersectionNum","getEdgeDistance","isProper","hasIntersection","isInteriorIntersection","inputLineIndex","_intPt","NO_INTERSECTION","computeEdgeDistance","COLLINEAR_INTERSECTION","toLineString","ptIndex","pdx","pdy","_pa","_pb","DONT_INTERSECT","DO_INTERSECT","POINT_INTERSECTION","RobustLineIntersector","intPt","env0","env1","computeIntersection","n3","n4","normPt","smallestInAbsValue","nearestEndpoint","intersectionWithNormalization","isInSegmentEnvelopes","x4","xabs","intPtDD","isIn","println","normalizeToEnvCentre","safeHCoordinateIntersection","p1q1p2","p1q2p2","q1p1q2","q1p2q2","n00","n01","n10","n11","minX0","minY0","maxX0","maxY0","minX1","minY1","maxX1","maxY1","intMidX","intMidY","Pq1","Pq2","Qp1","Qp2","computeCollinearIntersection","nearestPt","minDist","LineSegment","seg","orient0","orient1","geomFactory","isVertical","li","project","projectionFactor","pf0","pf1","newp0","newp1","pointToLinePerpendicular","midPoint","closestPt","close00","close01","close10","close11","comp0","temp","segmentLengthFraction","offsetDistance","segx","segy","ux","uy","ls","inputPt","segFrac","isHorizontal","segmentToSegment","bits0","java","lang","hash0","bits1","Location","locationValue","EXTERIOR","BOUNDARY","INTERIOR","NONE","IntersectionMatrix","isIntersects","isDisjoint","isCovers","_matrix","isCoveredBy","dimensionSymbols","row","col","toDimensionValue","column","isContains","setAtLeast","minimumDimensionSymbols","minimumDimensionValue","isWithin","dimensionOfGeometryA","dimensionOfGeometryB","isTouches","ai","bi","toDimensionSymbol","transpose","requiredDimensionSymbols","im","actualDimensionValue","requiredDimensionSymbol","actualDimensionSymbols","setAll","Angle","radians","PI_TIMES_2","dx0","dy0","anglePrev","angleNext","tip1","tail","tip2","diff","ang1","ang2","delAngle","angleDegrees","crossproduct","angDel","PI_OVER_2","PI_OVER_4","Triangle","signedArea","interpolateZ","longestSideLength","isAcute","circumcentre","area3D","inCentre","m00","m01","m10","m11","v0","lenAB","lenBC","lenCA","maxLen","cx","cy","ay","bx","by","numx","numy","l1","l2","len0","frac","uz","vx","vy","vz","crossx","crossy","crossz","absSq","circum","inCentreX","inCentreY","NoninvertibleTransformationException","msg","AffineTransformation","c2s2","_m00","_m01","_m02","_m10","_m11","_m12","getInverse","getDeterminant","im00","im10","im01","im11","trans","mp00","mp01","mp02","mp10","mp11","mp12","xScale","yScale","isIdentity","scaleInstance","setToIdentity","setTransformation","m02","setToRotation","sinTheta","cosTheta","getMatrixEntries","rotationInstance","xShear","yShear","translationInstance","setToReflection","setToTranslation","shearInstance","g2","xp","yp","reflect","reflectionInstance","setToShear","setToScale","matrix","Matrix","maxElementRow","swapRows","rowFactor","solution","AffineTransformationBuilder","_src0","_src1","_src2","solve","compute","_dest0","_dest1","_dest2","row0","row1","getTransformation","src0","src1","src2","dest0","dest1","dest2","AffineTransformationFactory","rotPt","ang","angleBetweenOriented","srcDist","destDist","createFromControlVectors","ComponentCoordinateExtracter","_coords","GeometryCollectionMapper","mapped","_mapOp","op","mapOp","GeometryCombiner","elems","elemGeom","_skipEmpty","combine","_inputGeoms","extractElements","_geomFactory","buildGeometry","g0","g1","createList","geoms","obj0","obj1","list","obj2","extractFactory","GeometryExtracter","_geometryType","isOfType","_comps","Class","clz","toGeometryType","comps","MapOp","GeometryMapper","gr","GeometryTransformer","transformCoordinates","isAllValidLinearRings","transformLinearRing","getInputGeometry","_inputGeom","transGeomList","transformGeom","transformLineString","transformPoint","transformPolygon","_pruneEmptyGeometry","_preserveGeometryCollectionType","inputGeom","transformMultiPoint","transformMultiLineString","transformMultiPolygon","transformGeometryCollection","seqSize","_preserveType","_preserveCollections","LineStringExtracter","getLines","LinearComponentExtracter","_isForcedToLineString","_lines","isForcedToLineString","forceToLineString","Collections","reverseOrder","alen","singletonList","PointExtracter","_pts","PolygonExtracter","ShortCircuitedGeometryVisitor","_isDone","applyTo","visit","GeometricShapeFactory","recipPow","_dim","getMinSize","getCentre","r4","xyInt","nSegsInOct","_nPts","xInc","coordTrans","base","setBase","_rotationAngle","createEllipse","xRadius","yRadius","centreX","centreY","iPt","createSquircle","createSupercircle","setEnvelope","setCentre","startAng","angExtent","angSize","angInc","_precModel","createRectangle","ipt","nSide","XsegLen","YsegLen","createCircle","setHeight","Dimensions","getBase","geomFact","SineStarFactory","numArms","_numArms","armLengthRatio","_armLengthRatio","createSineStar","armRatio","armMaxLen","insideRadius","ptArcFrac","armAngFrac","armAng","curveRadius","PointPairDistance","_pt","setMinimum","ptDist","_isNull","initialize","_distance","setCoordinate","setMaximum","DistanceToPoint","computeDistance","DiscreteHausdorffDistance","_ptDist","densifyFrac","_densifyFrac","computeOrientedDistance","_g0","_g1","discreteGeom","distFilter","MaxPointDistanceFilter","getMaxPointDistance","fracFilter","MaxDensifiedByFractionDistanceFilter","orientedDistance","setDensifyFraction","_minPtDist","_maxPtDist","_euclideanDist","delx","_numSubSegs","dely","ItemVisitor","PointOnGeometryLocator","IntervalRTreeNode","getMin","_min","queryMin","queryMax","_max","getMax","NodeComparator","mid1","mid2","POSITIVE_INFINITY","IntervalRTreeLeafNode","visitor","visitItem","_item","IntervalRTreeBranchNode","_node1","query","_node2","buildExtent","SortedPackedIntervalRTree","buildTree","_leaves","buildLevel","_root","buildRoot","_level","ArrayListVisitor","_items","getItems","RayCrossingCounter","_p","_isPointOnSegment","minx","maxx","orient","_crossingCount","isPointInPolygon","getLocation","isOnSegment","countSegment","IndexedPointInAreaLocator","rcc","SegmentVisitor","_index","_counter","IntervalIndexedGeometry","addLine","PointLocation","lineIntersector","locatePointInRing","locateInRing","Iterator","GeometryCollectionIterator","_atStart","isAtomic","_parent","_subcollectionIterator","SimplePointInAreaLocator","locate","shellLoc","holeLoc","locatePointInPolygon","geomi","loc","locateInGeometry","SimilarityMeasure","AreaSimilarityMeasure","union","HausdorffSimilarityMeasure","DENSIFY_FRACTION","diagonalSize","hgt","SimilarityMeasureCombiner","measure1","measure2","Centroid","basePt","_areaBasePt","_ptCount","_ptCentSum","lineLen","segmentLen","midx","_lineCentSum","midy","_totalLength","addPoint","isPositiveArea","addTriangle","addLineSegments","getCentroid","cent","_areasum2","_cg3","setAreaBasePoint","centroid3","_triangleCent3","area2","addShell","addHole","EmptyStackException","Stack","peek","empty","UniqueCoordinateArrayFilter","ConvexHull","RadialComparator","inputPts","octPts","computeOctPts","cleanRing","original","cleanedRing","previousDistinctCoordinate","currentCoordinate","nextCoordinate","isBetween","cleanedRingCoordinates","c3","polyPts","computeOctRing","reducedSet","isInRing","reducedPts","padArray3","getConvexHull","_inputPts","reduce","sortedPts","preSort","cHS","grahamScan","cH","lineOrPolygon","pad","polarCompare","_origin","dxp","dyp","dxq","dyq","oq","extractCoordinates","filterCoordinates","InteriorPointArea","bisector","horizontalBisector","widestIntersection","widestGeometry","_interiorPoint","_maxWidth","bisectY","SafeBisectorFinder","getBisectorY","addPolygon","avg","_centreY","_loY","_hiY","process","_poly","updateInterval","InteriorPointLine","addEndpoints","addInterior","_centroid","_minDistance","InteriorPointPoint","PointLocator","_isIn","_numBoundaries","updateLocationInfo","locateOnPoint","locateOnLineString","locateInPolygon","ml","mpoly","computeLocation","isOnLine","locateInPolygonRing","_boundaryRule","boundaryRule","MinimumBoundingCircle","_radius","getDiameter","_extremalPts","_input","_centre","getExtremalPoints","computeCirclePoints","hullPts","copyDeep","lowestPoint","Q","pointWitMinAngleWithX","R","pointWithMinAngleWithSegment","isObtuse","computeCentre","getFarthestPoints","getCircle","centrePoint","minSin","minAngPt","minAng","angleBetween","MinimumDiameter","getWidthCoordinate","computeMinimumDiameter","_minWidthPt","getSupportingSegment","_minBaseSeg","convexGeom","_convexHullPts","_minWidth","computeConvexRingMinDiameter","currMaxIndex","findMaxPerpDistance","_isConvex","computeWidthConvex","nextPerpDistance","maxPerpDistance","distancePerpendicular","maxIndex","nextIndex","_minPtIndex","getMinimumRectangle","minPara","maxPara","minPerp","maxPerp","paraC","computeC","perpC","maxPerpLine","computeSegmentForLine","minPerpLine","maxParaLine","minParaLine","lineIntersection","isConvex","Densifier","getResultGeometry","DensifyTransformer","_distanceTolerance","distanceTolerance","precModel","densifiedSegCount","densifiedSegLen","segFract","pointAlong","densifier","setDistanceTolerance","roughGeom","createValidArea","newPts","densifyPoints","roughAreaGeom","Quadrant","quad","NE","NW","quad1","quad2","halfPlane","SE","SW","HalfEdge","oNext","_sym","_orig","_next","insertAfter","ecmp","ePrev","orig","setNext","sym","degree","quadrant","quadrant2","prevNode","compareAngularDirection","setSym","e0","MarkHalfEdge","mark","_isMarked","isMarked","setMark","EdgeGraph","eAdj","_vertexMap","eAdjDest","createEdge","isValidEdge","eSame","getVertexEdges","DissolveHalfEdge","setStart","_isStart","isStart","DissolveEdgeGraph","LineDissolver","_ringStartEdge","getResult","computeResult","eNode","stackEdges","buildLines","eStartRing","eNext","eStart","markBoth","updateRingStartEdge","buildRing","_nodeEdgeStack","_graph","buildLine","doneStart","addEdge","Position","ON","MonotoneChain","mc","si","mce","computeIntersectsForChain","chainIndex","SweepLineEvent","isDelete","_eventType","DELETE","deleteEventIndex","_deleteEventIndex","_obj","pe","_xValue","getInsertEvent","_insertEvent","isInsert","INSERT","ev","_label","getDeleteEventIndex","insertEvent","EdgeSetIntersector","SegmentIntersector","segIndex0","segIndex1","_li","isAdjacentSegments","maxSegIndex","getProperIntersectionPoint","_properIntersectionPoint","isDoneWhenProperInt","_isDoneWhenProperInt","hasProperInteriorIntersection","_hasProperInterior","bdyNodes","isIntersection","hasProperIntersection","_hasProper","_hasIntersection","isBoundaryPointInternal","bdyNodes0","bdyNodes1","_bdyNodes","numTests","p00","p01","p10","p11","_recordIsolated","setIsolated","_numIntersections","isTrivialIntersection","_includeProper","addIntersections","isBoundaryPoint","_isSelfIntersection","includeProper","recordIsolated","SimpleMCSweepLineIntersector","prepareEvents","setDeleteEventIndex","computeIntersections","nOverlaps","processOverlaps","edges0","edges1","addEdges","edges","edgeSet","getMonotoneChainEdge","getStartIndexes","ev0","mc0","ev1","mc1","isSameLabel","TopologyLocation","locValue","location","isLine","gl","newLoc","getLocations","flip","toLocationSymbol","posIndex","isArea","isAnyNull","setLocation","locIndex","setAllLocations","Label","getGeometryCount","elt","geomIndex","setAllLocationsIfNull","lbl","merge","side","isEqualOnSide","allPositionsEqual","lineLabel","onLoc","leftLoc","rightLoc","setLocations","EdgeIntersection","getSegmentIndex","print","maxSegmentIndex","EdgeIntersectionList","_nodeMap","edgeList","eiPrev","ei","newEdge","createSplitEdge","ei0","ei1","lastSegStartPt","useIntPt1","Edge","eiNew","MonotoneChainIndexer","startIndexList","findChainEnd","toIntArray","chainQuad","MonotoneChainEdge","chainIndex0","chainIndex1","start0","end0","start1","end1","mid0","mcb","getChainStartIndices","Depth","_depth","depthValue","NULL_VALUE","minDepth","newValue","depthAtLocation","GraphComponent","isVisited","_isVisited","isInResult","_isInResult","isCovered","_isCovered","isCoveredSet","_isCoveredSet","getLabel","computeIM","getDepth","getCollapsedEdge","toLineLabel","isIsolated","_isIsolated","isEqualForward","isEqualReverse","iRev","_depthDelta","updateIM","isCollapsed","getMaximumSegmentIndex","getDepthDelta","_mce","_env","normalizedSegmentIndex","nextSegIndex","nextPt","eiList","depthDelta","getEdgeIntersectionList","addIntersection","setAtLeastIfValid","Node","isIncidentEdgeInResult","getEdges","getEdge","_coord","label2","eltIndex","nLoc","setLabel","argIndex","onLocation","_edges","mergeLabel","computeMergedLocation","setNode","NodeMap","nodeMap","addNode","nodeFact","createNode","EdgeEnd","_dx","_dy","_quadrant","_p0","_p1","getDy","_node","lastDotPos","lastIndexOf","compareDirection","getDirectedCoordinate","getDx","_edge","getQuadrant","getNode","boundaryNodeRule","TopologyException","msgWithCoord","DirectedEdge","getNextMin","_nextMin","computeDirectedLabel","_isForward","getNext","depthVal","isInteriorAreaEdge","nextMin","minEdgeRing","_minEdgeRing","isLineEdge","isExteriorIfArea0","isExteriorIfArea1","edgeRing","_edgeRing","getMinEdgeRing","getSym","isForward","printReverse","de","setVisited","directionFactor","oppositePos","opposite","oppositeDepth","setDepth","getEdgeRing","currLocation","nextLocation","NodeFactory","PlanarGraph","_nodes","getNodeIterator","linkResultDirectedEdges","nodeit","linkAllDirectedEdges","ep0","ep1","getEdgeEnds","_edgeEndList","getEdgeIterator","eCoord","matchInSameDirection","ee","edgesToAdd","de1","de2","getNodes","GeometryGraph","determineBoundary","_boundaryNodeRule","computeSelfNodes","computeRingSelfNodes","isDoneIfProperInt","setIsDoneIfProperInt","esi","createEdgeSetIntersector","isRings","_parentGeom","computeAllSegments","addSelfIntersectionNodes","_argIndex","edgelist","addSplitEdges","setBoundaryNodes","getBoundaryNodes","getBoundaryNodeRule","hasTooFewPoints","_hasTooFewPoints","insertPoint","addPolygonRing","insertEdge","removeRepeatedPoints","_invalidPoint","_lineEdgeMap","insertBoundaryPoint","getInvalidPoint","getBoundaryPoints","_boundaryNodes","isBoundaryNode","_useBoundaryDeterminationRule","lr","cwLeft","cwRight","eLoc","eiIt","addSelfIntersectionNode","addLineString","addCollection","_areaPtLocator","_ptLocator","findEdge","parentGeom","KdNodeVisitor","KdNode","isRepeated","_count","getRight","_right","_left","getData","_data","getLeft","increment","KdTree","_tolerance","matchNode","findBestMatchNode","insertExact","queryEnv","queryNode","currentNode","odd","discriminant","searchRight","BestMatchVisitor","queryEnvelope","leafNode","isOddLevel","isLessThan","_numberOfNodes","setLeft","setRight","kdnodes","toCoordinates","includeRepeated","_matchNode","_matchDist","NodeBase","hasChildren","_subnode","isPrunable","hasItems","resultItems","addAllItems","getNodeCount","subSize","searchEnv","isSearchMatch","addAllItemsFromOverlapping","itemEnv","visitItems","maxSubDepth","sqd","centrex","centrey","subnodeIndex","DoubleBits","exponent","NumW","Qty","Sign","Expo","Mant","Bin","powerOf2","Key","getLevel","computeKey","computeQuadLevel","level","quadSize","dMax","getSubnodeIndex","_centrex","_centrey","createSubnode","getSubnode","miny","maxy","childNode","insertNode","addEnv","expandEnv","largerNode","IntervalSize","scaledInterval","MIN_BINARY_EXPONENT","Root","createExpanded","insertContained","tree","isZeroX","isZeroWidth","isZeroY","SpatialIndex","Quadtree","collectStats","insertEnv","ensureExtent","_minExtent","queryAll","foundItems","posEnv","delX","delY","Boundable","getBounds","ItemBoundable","getItem","_bounds","bounds","poll","minItem","_size","reorder","child","AbstractNode","_childBoundables","getChildBoundables","childBoundable","computeBounds","BoundablePair","priQ","isComp1","isComposite","_boundable1","isComp2","_boundable2","expand","isLeaves","nd","bndComposite","bndOther","bp","_itemDistance","boundable1","boundable2","itemDistance","AbstractSTRtree","queryInternal","searchBounds","childBoundables","getIntersectsOp","getNodeCapacity","_nodeCapacity","build","childToRemove","itemsTree","valuesTree","valuesTreeForNode","valuesTreeForChild","_built","_itemBoundables","boundablesAtLevel","boundables","boundable","createHigherLevels","getRoot","removeItem","childToPrune","boundablesOfALevel","parentBoundables","createParentBoundables","maxChildDepth","childDepth","newLevel","sortedChildBoundables","getComparator","lastNode","addChildBoundable","IntersectsOp","DEFAULT_NODE_CAPACITY","nodeCapacity","ItemDistance","item1","item2","STRtree","verticalSlices","createParentBoundablesFromVerticalSlice","STRtreeNode","intersectsOp","sliceCount","sliceCapacity","slices","boundablesAddedToSlice","yComparator","minLeafCount","xComparator","createParentBoundablesFromVerticalSlices","nearestNeighbour","itemDist","initBndPair","distanceLowerBound","minPair","bndPair","currentDistance","expandToQueue","getBoundable","bnd","maxDistance","kNearestNeighbors","compareDoubles","aBounds","bBounds","geometryTypes","GeoJSONParser","json","FeatureCollection","featureCollection","sub","shellGeoJson","holeGeoJson","p2c","olReference","ol","convertFromPoint","convertFromLineString","convertFromLinearRing","convertFromPolygon","convertFromMultiPoint","convertFromMultiLineString","convertFromMultiPolygon","convertFromCollection","multiLineString","multiPolygon","convertToPoint","convertToLineString","convertToLinearRing","convertToPolygon","convertToMultiPoint","convertToMultiLineString","convertToMultiPolygon","convertToCollection","SegmentPointComparator","octant","xSign","relativeSign","ySign","compareValue","compareSign0","compareSign1","SegmentNode","_segmentOctant","_isInterior","isInterior","_segString","segString","segmentOctant","SegmentNodeList","getSplitCoordinates","addEdgeCoordinates","addCollapsedNodes","collapsedVertexIndexes","findCollapsesFromInsertedNodes","findCollapsesFromExistingVertices","vertexIndex","collapsedVertexIndex","numVerticesBetween","findCollapseIndex","NodedSegmentString","getSegmentOctant","splitEdges","edgePts","pt0","splitnPts","ptn","Octant","adx","ady","SegmentString","NodableSegmentString","safeOctant","addIntersectionNode","getNodeList","_nodeList","segStrings","resultEdgelist","getNodedSubstrings","MonotoneChainOverlapAction","overlap","mc2","start2","getLineSegment","_overlapSeg1","_overlapSeg2","mcs","select","computeSelect","_end","_start","computeOverlaps","mco","_id","getEndIndex","getStartIndex","_context","MonotoneChainBuilder","safeStart","getChains","mcList","Noder","SinglePassNoder","segInt","_segInt","setSegmentIntersector","MCIndexNoder","getMonotoneChains","_monoChains","_nodedSegStrings","getIndex","segStr","_idCounter","inputSegStrings","intersectChains","overlapAction","SegmentOverlapAction","queryChain","testChain","_nOverlaps","ss1","ss2","_si","processIntersections","ScaledNoder","rescale","ss","_scaleFactor","_offsetX","_offsetY","nodedSegmentStrings","roundPts","isIntegerPrecision","splitSS","_noder","_isScaled","intSegStrings","computeNodes","noder","scaleFactor","IsSimpleOp","mp","_nonSimpleLocation","isSimpleLinearGeometry","graph","endPoints","eiInfo","getNonSimpleLocation","hasNonEndpointIntersection","_isClosedEndpointsInInterior","hasClosedEndpointIntersection","EndpointInfo","isSimpleMultiPoint","isSimplePolygonal","isSimpleGeometryCollection","computeSimple","BufferParameters","getEndCapStyle","_endCapStyle","isSingleSided","_isSingleSided","quadSegs","_quadrantSegments","_joinStyle","JOIN_BEVEL","JOIN_MITRE","_mitreLimit","JOIN_ROUND","DEFAULT_QUADRANT_SEGMENTS","getJoinStyle","joinStyle","simplifyFactor","_simplifyFactor","getSimplifyFactor","getQuadrantSegments","endCapStyle","getMitreLimit","mitreLimit","CAP_ROUND","DEFAULT_MITRE_LIMIT","DEFAULT_SIMPLIFY_FACTOR","quadrantSegments","setQuadrantSegments","setEndCapStyle","setJoinStyle","setMitreLimit","CAP_FLAT","CAP_SQUARE","RightmostEdgeFinder","_minCoord","getRightmostSideOfSegment","checkForRightmostCoordinate","findRightmostEdgeAtVertex","_minDe","_minIndex","pPrev","pNext","orientation","usePrev","_orientedDe","findRightmostEdgeAtNode","star","getRightmostEdge","dirEdgeList","getRightmostSide","LinkedList","addLast","removeFirst","BufferSubgraph","clearVisitedEdges","_dirEdgeList","getRightmostCoordinate","_rightMostCoord","startEdge","computeDepths","copySymDepths","outsideDepth","_finder","setEdgeDepths","addReachable","findResultEdges","setInResult","nodesVisited","nodeQueue","startNode","computeNodeDepth","adjNode","edgeEnv","nodeStack","symNode","getDirectedEdges","EdgeRing","computeRing","_ring","_geometryFactory","_isHole","_startDe","isFirstEdge","addPoints","setEdgeRing","computeMaxNodeDegree","_maxNodeDegree","getOutgoingDegree","isHole","containsPoint","isShell","getMaxNodeDegree","getShell","deLabel","holeLR","computePoints","MinimalEdgeRing","er","setMinEdgeRing","MaximalEdgeRing","buildMinimalRings","minEdgeRings","minEr","linkDirectedEdgesForMinimalEdgeRings","linkMinimalDirectedEdges","edgeRings","shellList","freeHoleList","resultPolyList","toPolygon","findEdgeRingContaining","setShell","maxEdgeRings","findShell","placePolygonHoles","_shellList","dirEdges","computePolygons","testEr","testRing","testEnv","minShell","minEnv","tryShell","tryRing","tryEnv","isContained","shellCount","buildMaximalEdgeRings","buildMinimalEdgeRings","sortShellsAndHoles","placeFreeHoles","BufferInputLineSimplifier","i0","distanceTol","_inputLine","isConcave","isShallow","isShallowSampled","deleteShallowConcavities","midIndex","findNextNonDeletedIndex","isMiddleVertexDeleted","isDeletable","_distanceTol","_isDeleted","_angleOrientation","NUM_PTS_TO_CHECK","collapseLine","inputLine","INIT","KEEP","OffsetSegmentString","_ptList","COORDINATE_ARRAY_TYPE","bufPt","isRedundant","addPt","lastPt","_minimimVertexDistance","startPt","minimimVertexDistance","OffsetSegmentGenerator","addStartPoint","_s0","_s1","_s2","_seg0","computeOffsetSegment","_side","_offset0","_seg1","_offset1","outsideTurn","addCollinear","addOutsideTurn","addInsideTurn","offsetL","offsetR","_bufParams","_segList","addDirectedFillet","squareCapSideOffset","squareCapLOffset","squareCapROffset","offset0","isMitreWithinLimit","addLimitedMitreJoin","OFFSET_SEGMENT_SEPARATION_FACTOR","addMitreJoin","addBevelJoin","addCornerFillet","addPts","addFirstSegment","endAngle","addLastSegment","ang0","angDiffHalf","midAng","mitreMidAng","mitreDist","bevelHalfLen","bevelMidX","bevelMidY","bevelMidPt","mitreMidLine","bevelEndLeft","pointAlongOffset","bevelEndRight","totalAngle","nSegs","_filletAngleQuantum","initAngle","currAngleInc","currAngle","sideSign","_hasNarrowConcaveAngle","INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR","_closingSegLengthFactor","_maxCurveSegmentError","setPrecisionModel","setMinimumVertexDistance","CURVE_VERTEX_SNAP_DISTANCE_FACTOR","hasNarrowConcaveAngle","bufParams","MAX_CLOSING_SEG_LEN_FACTOR","OffsetCurveBuilder","isRightSide","posDistance","segGen","getSegGen","computePointCurve","computeOffsetCurve","curvePts","distTol","simplifyTolerance","addSegments","simp2","initSideSegments","addNextSegment","simp1","simp","addLineEndCap","createSquare","computeSingleSidedBufferCurve","computeLineBufferCurve","getBufferParameters","bufDistance","getLineCurve","copyCoordinates","computeRingBufferCurve","SubgraphDepthLocater","findStabbedSegments","stabbingRayLeftPt","stabbedSegments","_subgraphs","bsg","dirEdge","_seg","ds","DepthSegment","_leftDepth","_upwardSeg","orientIndex","seg0","seg1","compare0","subgraphs","OffsetCurveSetBuilder","curve","_curveBuilder","addCurve","offsetSide","shellCoord","isErodedCompletely","holeCoord","triangleCoord","bufferDistance","tri","_curveList","getCurves","cwLeftLoc","cwRightLoc","getRingCurve","ringCoord","isTriangleErodedCompletely","envMinDimension","curveBuilder","EdgeEndStar","_edgeList","iNextCW","startLoc","currLoc","geomGraph","computeEdgeEndLabels","checkAreaLabelsConsistent","lastEdgeIndex","eSearch","_edgeMap","_ptInAreaLocation","computeLabel","propagateSideLabels","hasDimensionalCollapseEdge","getDegree","DirectedEdgeStar","getResultAreaEdges","firstOut","incoming","_SCANNING_FOR_INCOMING","_resultAreaEdgeList","nextOut","nextIn","_LINKING_TO_OUTGOING","insertEdgeEnd","de0","deLast","quad0","isNorthern","nodeLabel","prevOut","firstIn","edgeIndex","startDepth","targetLastDepth","nextDepth","endIndex","currDepth","nextDe","mergeSymLabels","setNextMin","findCoveredLineEdges","setCovered","eLabel","OverlayNodeFactory","OrientedCoordinateArray","oca","compareOriented","_orientation","orientation1","orientation2","limit1","limit2","compPt","done1","done2","EdgeList","edgeColl","_ocaMap","IntersectionAdder","getLineIntersector","numIntersections","numInteriorIntersections","_hasInterior","numProperIntersections","hasInteriorIntersection","BufferBuilder","_workingPrecisionModel","existingEdge","findEqualEdge","existingLabel","labelToMerge","isPointwiseEqual","mergeDelta","newDelta","setDepthDelta","subgraphList","polyBuilder","processedGraphs","subgraph","computeDepth","createEmptyResultGeometry","_workingNoder","bufferSegStrList","computeNodedEdges","createSubgraphs","buildSubgraphs","getNoder","oldLabel","insertUniqueEdge","lLoc","rLoc","NodingValidator","checkEndPtVertexIntersections","_segStrings","checkInteriorIntersections","ss0","pts0","checkValid","checkCollapses","checkCollapse","HotPixel","segMinx","segMaxx","segMiny","segMaxy","isOutsidePixelEnv","intersectsToleranceSquare","_corner","intersectsScaled","copyScaled","_p0Scaled","_p1Scaled","_originalPt","pScaled","getSafeEnvelope","_safeEnv","safeTolerance","SAFE_ENV_EXPANSION_FACTOR","intersectsLeft","intersectsBottom","segIndex","_ptScaled","initCorners","MonotoneChainSelectAction","selectedSegment","MCIndexPointSnapper","hotPixel","parentEdge","hotPixelVertexIndex","pixelEnv","hotPixelSnapAction","HotPixelSnapAction","isNodeAdded","_isNodeAdded","_parentEdge","_hotPixelVertexIndex","_hotPixel","addSnappedNode","InteriorIntersectionFinderAdder","_interiorIntersections","getInteriorIntersections","MCIndexSnapRounder","inputSegmentStrings","resultSegStrings","nv","findInteriorIntersections","computeIntersectionSnaps","computeVertexSnaps","intFinderAdder","edge0","_pointSnapper","snapRound","snapPts","snapPt","_pm","BufferOp","fixedPM","bufBuilder","setWorkingPrecisionModel","setNoder","_resultGeometry","_argGeom","bufferReducedPrecision","precDigits","MAX_PRECISION_DIGITS","_saveException","precisionDigits","sizeBasedScaleFactor","precisionScaleFactor","bufferFixedPrecision","computeGeometry","bufferOriginalPrecision","argPM","bufOp","maxPrecisionDigits","bufEnvMax","minUnitLog10","CAP_BUTT","GeometryLocation","isInsideArea","_segIndex","INSIDE_AREA","getGeometryComponent","_component","ConnectedElementLocationFilter","_locations","locations","DistanceOp","computeContainmentDistance","locPtPoly","_terminateDistance","polyGeomIndex","polyGeom","locationsIndex","polys","insideLocs","_minDistanceLocation","locs","ptLoc","locGeom","computeMinDistance","computeFacetDistance","lines0","lines1","computeMinDistanceLines","updateMinDistance","computeMinDistanceLinesPoints","computeMinDistancePoints","nearestLocations","nearestPoints","coord0","segClosestPoint","line0","line1","closestPoints","points0","points1","pt1","terminateDistance","EdgeString","forwardDirectedEdges","reverseDirectedEdges","coordinateList","_directedEdges","directedEdge","getEdgeDirection","getLine","visitedState","visited","setMarked","isRemoved","_from","_angle","getDirectionPt","getFromNode","getToNode","_to","_edgeDirection","from","to","directionPt","edgeDirection","LineMergeDirectedEdge","getOutEdges","_dirEdge","setEdge","addOutEdge","getDirEdge","fromNode","setDirectedEdges","_outEdges","sortEdges","_sorted","modi","_deStar","node0","node1","commonEdges","toEdges","retainAll","deStar","LineMergeEdge","_line","nodesFound","nodeIterator","dirEdgeIterator","_dirEdges","edgeIterator","LineMergeGraph","endCoordinate","endNode","directedEdge0","directedEdge1","findNode","LineMerger","buildEdgeStringsForUnprocessedNodes","buildEdgeStringsStartingAt","buildEdgeStringsForNonDegree2Nodes","buildEdgeStringsForObviousStartNodes","getMergedLineStrings","_mergedLineStrings","_edgeStrings","buildEdgeStringStartingWith","buildEdgeStringsForIsolatedLoops","edgeString","current","Subgraph","getParent","_parentGraph","parentGraph","ConnectedSubgraphFinder","getConnectedSubgraphs","findSubgraph","toNode","LineSequencer","_lineCount","oddDegreeCount","computeSequence","_isRun","sequences","findSequences","_sequencedGeometry","buildSequencedGeometry","_isSequenceable","finalLineCount","hasSequence","findSequence","lit","expectedClosed","unvisitedOutDE","findUnvisitedBestOrientedDE","startDESym","findLowestDegreeNode","listIterator","addReverseSubpath","hasPrevious","previous","newSeq","addFirst","endEdge","flipSeq","hasObviousStartNode","lineToAdd","getSequencedLineStrings","isSequenceable","wellOrientedDE","unvisitedDE","minDegree","minDegreeNode","mls","prevSubgraphNodes","currNodes","revPts","sequencer","LineStringSnapper","srcCoords","_isClosed","srcPt","snapVert","findSnapForVertex","_snapTolerance","_srcPts","snapVertices","snapSegments","distinctPtCount","findSegmentIndexToSnap","snapIndex","_allowSnappingToSourceVertices","allowSnappingToSourceVertices","srcLine","srcPts","GeometrySnapper","snapGeom","extractTargetCoordinates","SnapTransformer","_srcGeom","cleanResult","snappedGeom","ringPts","computeMinimumSegmentLength","ptSet","minSegLen","segLen","snapper0","snapper1","computeSizeBasedSnapTolerance","fixedSnapTol","computeOverlaySnapTolerance","SNAP_PRECISION_FACTOR","snapToSelf","srcGeom","snapper","setAllowSnappingToSourceVertices","_isSelfSnap","snapLine","_snapPts","isSelfSnap","BasicSegmentString","InteriorIntersectionFinder","getInteriorIntersection","_interiorIntersection","isCheckEndSegmentsOnly","_isCheckEndSegmentsOnly","getIntersectionSegments","_intSegments","_intersectionCount","getIntersections","_intersections","findAllIntersections","_findAllIntersections","keepIntersections","_keepIntersections","isEndSegment","finder","setFindAllIntersections","setKeepIntersections","FastNodingValidator","_isValid","getErrorMessage","intSegs","EdgeNodingValidator","_nv","toSegmentStrings","LineBuilder","opCode","_op","getGraph","collectLineEdge","_lineEdgesList","collectBoundaryTouchEdge","targetIndex","getArgGeometry","collectLines","_resultLineList","OverlayOp","isResultOfOp","setVisitedEdge","isCoveredByA","edgesList","labelIsolatedLine","INTERSECTION","ptLocator","PointBuilder","isCoveredByLA","_resultPointList","filterCoveredNodeToPoint","extractNonCoveredResultNodes","CommonBits","_isFirst","_commonMantissaBitsCount","_commonBits","_commonSignExp","getCommon","numBits","signExpBits","numCommonMostSigMantissaBits","zeroLowerBits","padStr","bitStr","nBits","prop","num1","num2","getBit","CommonBitsRemover","Translater","_commonCoord","invCoord","getCommonCoordinate","_ccFilter","CommonCoordinateFilter","_commonBitsX","_commonBitsY","SnapOverlayOp","_cbr","remGeom","removeCommonBits","addCommonBits","prepGeom","overlayOp","prepareResult","computeSnapTolerance","UNION","SYMDIFFERENCE","DIFFERENCE","SnapIfNeededOverlayOp","isSuccess","savedException","GeometryGraphOperation","_arg","_resultPrecisionModel","setComputationPrecision","cancelDuplicateResultEdges","_resultPolyList","resultPointList","resultLineList","opcode","createEmptyResult","replaceCollapsedEdges","newEdges","updateNodeLabelling","overlayOpCode","computeOverlay","_resultGeom","copyPoints","computeEdgeIntersections","baseSplitEdges","computeSplitEdges","insertUniqueEdges","computeLabelsFromDepths","computeLabelling","labelIncompleteNodes","findResultAreaEdges","lineBuilder","pointBuilder","graphNode","getDelta","toLine","ni","labelIncompleteNode","updateLabelling","geom1","dim0","dim1","resultDimension","loc0","loc1","PolygonizeDirectedEdge","getRing","PolygonizeEdge","ConnectedInteriorTester","findDifferentPoint","findEdgeInSameDirection","findEdgeEnd","intDe","visitLinkedDirectedEdges","visitInteriorRing","_disconnectedRingcoord","startDe","isInteriorsConnected","_geomGraph","setInteriorEdgesInResult","buildEdgeRings","visitShellInteriors","hasUnvisitedShellEdge","EdgeEndBuilder","eiCurr","eiNext","computeEdgeEnds","createEdgeEndForPrev","createEdgeEndForNext","EdgeEndBundle","_edgeEnds","foundInterior","computeLabelSide","computeLabelOn","computeLabelSides","EdgeEndBundleStar","eb","RelateNode","RelateNodeFactory","RelateNodeGraph","nodeIt","computeIntersectionNodes","copyNodesAndLabels","eeList","insertEdgeEnds","edgeIt","setLabelBoundary","ConsistentAreaTester","isNodeEdgeAreaLabelsConsistent","_nodeGraph","isAreaLabelsConsistent","hasDuplicateRings","eeb","isNodeConsistentArea","intersector","IndexedNestedRingTester","buildIndex","_rings","getNestedPoint","_nestedPt","isNonNested","innerRing","innerRingPts","results","searchRing","searchRingPts","innerRingPt","IsValidOp","findPtNotNode","_totalEnv","TopologyValidationError","getErrorType","_errorType","getMessage","errMsg","locStr","errorType","REPEATED_POINT","HOLE_OUTSIDE_SHELL","NESTED_HOLES","DISCONNECTED_INTERIOR","SELF_INTERSECTION","RING_SELF_INTERSECTION","NESTED_SHELLS","DUPLICATE_RINGS","TOO_FEW_POINTS","INVALID_COORDINATE","RING_NOT_CLOSED","checkInvalidCoordinates","_validErr","nestedTester","innerHole","cat","_parentGeometry","shellPts","holePts","shellPt","holePt","checkNoSelfIntersectingRing","cit","nodeSet","isFirst","pir","getValidationError","checkClosedRing","checkTooFewPoints","checkNoSelfIntersectingRings","checkClosedRings","checkConsistentArea","_isSelfTouchingRingFormingHoleValid","checkHolesInShell","checkHolesNotNested","checkConnectedInteriors","checkShellsNotNested","polyShell","badNestedPt","checkShellInsideHole","checkShellNotNested","testCoords","parentGeometry","isIncluded","_isIncluded","_ringPts","_deList","isIncludedSet","_isIncludedSet","startDE","setRing","isOuterHole","hasShell","isProcessed","_isProcessed","holeER","getOuterHole","adjRing","computeHole","isOuterShell","updateIncluded","adjShell","setIncluded","minShellEnv","tryShellRing","tryShellEnv","ptNotInList","EnvelopeComparator","r1","_lowestEdge","PolygonizeGraph","computeDepthParity","computeNextCWEdges","iNode","linePts","endPt","nStart","nEnd","deleteCutEdges","findLabeledEdgeRings","cutLines","getEdgeRings","maximalRings","convertMaximalToMinimalEdgeRings","edgeRingList","findEdgeRing","ringEdges","intNodes","findIntersectionNodes","computeNextCCWEdges","deleteDangles","findNodesOfDegree","dangleLines","deleteAllEdges","getDegreeNonDeleted","edgeRingStarts","currLabel","findDirEdgesInRing","prevDE","outDE","firstOutDE","prevInDE","inDE","Polygonizer","polygonize","_extractOnlyPolygonal","_polyList","getInvalidRingLines","_invalidRingLines","validEdgeRingList","invalidRingList","_dangles","_cutEdges","_isCheckingRingsValid","findValidRings","findShellsAndHoles","assignHolesToShells","_holeList","includeAll","findDisjointShells","extractPolygons","getDangles","getCutEdges","_lineStringAdder","isCheckingRingsValid","outerHoleER","setProcessed","polyList","holeList","assignHoleToShell","findOuterShells","isMoreToScan","LineStringAdder","extractOnlyPolygonal","RelateComputer","dimA","dimB","hasProper","hasProperInterior","thisIndex","labelIsolatedEdge","_isolatedEdges","computeDisjointIM","labelIsolatedNodes","computeProperIntersectionIM","eeBuilder","ee0","ee1","labelNodeEdges","labelIsolatedEdges","labelIsolatedNode","updateIMFromEdges","ga","gb","_im","arg","RectangleContains","isPointContainedInBoundary","isLineStringContainedInBoundary","isContainedInBoundary","_rectEnv","isLineSegmentContainedInBoundary","rectangle","RectangleLineIntersector","segEnv","isSegUpwards","_diagDown0","_diagDown1","_diagUp0","_diagUp1","rectEnv","RectangleIntersects","EnvelopeIntersectsVisitor","ecpVisitor","GeometryContainsPointVisitor","_rectangle","riVisitor","RectangleIntersectsSegmentVisitor","_intersects","elementEnv","_containsPoint","rectPt","_rectSeq","containsPointInPolygon","checkIntersectionWithLineStrings","testLine","checkIntersectionWithSegments","seq1","_rectIntersector","RelateOp","getIntersectionMatrix","_relate","relate","isEquals","isOverlaps","isCrosses","PointGeometryUnion","locater","exteriorCoords","_pointGeom","_otherGeom","ptComp","pointGeom","CascadedPolygonUnion","geomTree","unionTree","disjointGeoms","intersectingGeoms","g0Env","g1Env","unionActual","commonEnv","unionUsingEnvelopeIntersection","_inputPolys","STRTREE_NODE_CAPACITY","itemTree","binaryUnion","unionSafe","unionOptimized","restrictToPolygons","reduceToGeometries","common","disjointPolys","g0Int","extractByEnvelope","g1Int","bufferUnion","UnaryUnionOp","_polygons","unionPoints","ptGeom","unionNoOpt","unionLines","lineGeom","unionPolygons","unionLA","unionWithNull","PrecisionReducerCoordinateOperation","reducedCoords","_targetPM","noRepeatedCoords","minLength","collapsedCoords","_removeCollapsed","targetPM","removeCollapsed","GeometryPrecisionReducer","geomToBuffer","_changePrecisionModel","changePM","bufGeom","bufferOp","finalGeom","createGeometry","geomEdit","newFactory","createFactory","finalRemoveCollapsed","newPM","createEditor","inputFactory","changePrecisionModel","reducePW","reducePointwise","_isPointwise","fixPolygonalTopology","isPointwise","reducer","setPointwise","DouglasPeuckerLineSimplifier","_usePt","simplifySection","DouglasPeuckerSimplifier","isEnsureValidTopology","_isEnsureValidTopology","DPTransformer","tss","rawGeom","rawAreaGeom","removeDegenerateRings","simpResult","TaggedLineSegment","TaggedLineString","_resultSegs","asLineString","_parentLine","getResultSize","resultSegsSize","_segs","getParentCoordinates","getMinimumSize","_minimumSize","asLinearRing","getResultCoordinates","segs","parentLine","minimumSize","LineSegmentIndex","querySeg","LineSegmentVisitor","_querySeg","TaggedLineStringSimplifier","_linePts","newSeg","_outputIndex","sectionIndex","candidateSeg","hasBadOutputIntersection","hasBadInputIntersection","getSegment","addToResult","isValidToSimplify","furthestPtIndex","findFurthestPoint","hasBadIntersection","flatten","maxDist","midPt","_inputIndex","isInLineSection","inputIndex","outputIndex","TaggedLinesSimplifier","taggedLines","tlss","TopologyPreservingSimplifier","_linestringMap","LineStringMapBuilderFilter","_lineSimplifier","LineStringTransformer","taggedLine","createCoordinateSequence","linestringMap","minSize","tps","VWLineSimplifier","vwLine","curr","minVertex","isLive","VWVertex","simplifyVertex","_area","updateArea","_prev","MAX_AREA","tmpPrev","tmpNext","setPrev","_isLive","v","VWSimplifier","VWTransformer","SplitSegment","splitAt","minFrac","_minimumLen","_segLen","_splitPt","pointAlongReverse","getConstrainedLength","minLen","getSplitPoint","ConstraintSplitPointFinder","encroachPt","NonEncroachingSplitPointFinder","lineSeg","midPtLen","splitSeg","projPt","projectedSplitPoint","maxSplitLen","setMinimumLength","TrianglePredicate","bdx","bdy","cdx","cdy","abdet","bcdet","cadet","alift","blift","clift","nonRobustInCircle","isInCircleNonRobust","isInCircleDD","isInCircleDDSlow","isInCircleCC","circumCentre","toPoint","aTerm","triAreaDDFast","bTerm","cTerm","pTerm","ccRadius","triAreaDDSlow","triArea","isInCircleNormalized","t1","t2","Vertex","cab","cbc","hcc","nre","magn","getZ","isInCircleRobust","_z","cross","sa","crossProduct","BEHIND","BEYOND","ORIGIN","DESTINATION","BETWEEN","circleCenter","edgeLength","ptLen","ConstraintVertex","getConstraint","_constraint","isOnConstraint","_isOnConstraint","QuadEdge","qe","equalsOriented","toLineSegment","_vertex","dNext","lPrev","rPrev","rot","_rot","oPrev","lNext","invRot","setOrig","delete","rNext","getPrimary","dPrev","q0","q3","setDest","beta","t3","t4","makeEdge","IncrementalDelaunayTriangulator","_subdiv","isVertexOfEdge","isOnEdge","connect","isInCircle","insertSite","_isUsingTolerance","subdiv","QuadEdgeLocator","LastFoundQuadEdgeLocator","_lastEdge","locateFromEdge","LocateFailureException","msgWithSpatial","TriangleVisitor","triEdges","QuadEdgeSubdivision","includeFrame","TriangleVertexListVisitor","visitTriangles","getTriangleVertices","_frameVertex","_quadEdges","cellPts","startQE","cellPoly","locator","_locator","initSubdiv","ea","ec","leftTri","getTriangleEdges","rightTri","vLeftTriOther","isFrameVertex","vRightTriOther","triVisitor","_visitedKey","edgeStack","_startingEdge","visitedEdges","fetchTriangleToVisit","_edgeCoincidenceTolerance","_frameEnv","TriangleCoordinatesVisitor","getTriangles","vd","edgeCount","isFrame","_triEdges","isFrameEdge","quadEdges","getPrimaryEdges","visitedVertices","qd","TriangleEdgesListVisitor","priQE","eSym","eRot","eRotSym","iter","maxIter","TriangleCircumcentreVisitor","cells","getVertexUniqueEdges","getVoronoiCellPolygon","vorCells","getVoronoiCellPolygons","triPtsList","getTriangleCoordinates","tris","triPt","locEdge","triEdge","ccVertex","_triList","_coordList","_triCoords","EDGE_COINCIDENCE_TOL_FACTOR","createFrame","Segment","_ls","getEndZ","getStartZ","getStart","getEnd","getEndY","getStartX","getStartY","getEndX","z1","z2","ConformingDelaunayTriangulator","getInitialVertices","_initialVertices","getKDT","_kdt","enforceConstraints","addConstraintVertices","splits","enforceGabriel","_segments","MAX_SPLIT_ITER","getVertexFactory","_vertexFactory","getPointArray","_segVertices","segVertices","computeConvexHull","hull","_convexHull","insertSites","segRadius","closestNonGabriel","testRadius","getConstraintSegments","splitFinder","_splitFinder","segsToInsert","newSegments","segsToRemove","findNonGabrielPoint","findSplitPoint","splitVertex","createVertex","setOnConstraint","getSubdivision","computeBoundingBox","vertexEnv","computeVertexEnvelope","allPointsEnv","_computeAreaEnv","vertexFactory","formInitialDelaunay","setLocator","_incDel","kdnode","snappedV","initialVertices","DelaunayTriangulationBuilder","siteEnv","_siteCoords","toVertices","setSites","extractUniqueCoordinates","coordsCopy","verts","ConformingDelaunayTriangulationBuilder","_constraintVertexMap","_constraintLines","createVertices","createConstraintSegments","sites","createSiteVertices","cdt","setConstraints","constraintLines","constraintSegs","VoronoiDiagramBuilder","_diagramEnv","_clipEnv","getVoronoiDiagram","clipGeometryCollection","clipEnv","clipPoly","LinearLocation","_segmentIndex","getComponentIndex","_componentIndex","linearGeom","nseg","_segmentFraction","lineComp","pointAlongSegmentByFraction","getSegmentFraction","setToEnd","lastLine","getSegmentLength","lenToStart","lenToEnd","componentIndex1","segmentIndex1","segmentFraction1","isVertex","componentIndex0","segmentIndex0","segmentFraction0","segmentFraction","componentIndex","doNormalize","LinearIterator","_currentLine","getVertexIndex","_vertexIndex","getSegmentEnd","loadCurrentLine","_numLines","_linearGeom","getSegmentStart","isEndOfLine","segmentEndVertexIndex","LocationIndexOfPoint","indexOfFromStart","minIndex","minComponentIndex","minSegmentIndex","segDistance","candidateComponentIndex","candidateSegmentIndex","compareLocationValues","endLoc","getEndLocation","closestAfter","indexOfAfter","LocationIndexOfLine","subLine","locPt","subLineLoc","indicesOf","LinearGeometryBuilder","endLine","_lastPt","_ignoreInvalidLines","rawPts","_fixInvalidLines","validCoordinateSequence","fixInvalidLines","allowRepeatedPoints","ignoreInvalidLines","ExtractLineByLocation","setFixInvalidLines","startSegmentIndex","lastSegmentIndex","newCoordinateArray","computeLinear","LocationIndexedLine","checkGeometryType","extractPoint","indexLow","toLowest","LengthIndexOfPoint","ptMeasure","segmentStartMeasure","segMeasureToPt","segmentNearestMeasure","projFactor","LengthLocationMap","totalLength","isEndpoint","compIndex","resolveLower","forwardLength","getLocationForward","resolveHigher","LengthIndexedLine","positiveIndex","locationOf","locLow","startIndex2","clampIndex","endIndex2","resolveStartLower","CollectionUtil","Function","CoordinateArrayFilter","CoordinateCountFilter","_n","ObjectCounter","_counts","UnionOp","coveredBy","touches","within","disjoint","crosses","intersectionPattern","centPt","createPointFromInternalCoord","interiorPt","symDifference","toText","difference","isWithinDistance","SplitAction","onSplit","jsts","io","OL3Parser","inject","selectAction","drawAction","drawnFeature","selectedGeometry","drawnGeometry","polygonizer","TranslateAction","onTranslate","selectionStyle","translateOptions"],"mappings":"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","file":"vl-mapactions.js","sourceRoot":"../src","sourcesContent":["/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function() {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message = 'Assertion failed. See https://openlayers.org/en/' + path +\n    '/doc/errors/#' + code + ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  const output = Object(target);\n  for (let i = 1, ii = arguments.length; i < ii; ++i) {\n    const source = arguments[i];\n    if (source !== undefined && source !== null) {\n      for (const key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues = (typeof Object.values === 'function') ? Object.values : function(object) {\n  const values = [];\n  for (const property in object) {\n    values.push(object[property]);\n  }\n  return values;\n};\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function() {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel'\n};\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @private\n     */\n    this.disposed_ = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed_) {\n      this.disposed_ = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function() {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  preventDefault() {\n    this.propagationStopped = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n\n}\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {VOID} from '../functions.js';\nimport Event from './Event.js';\nimport {clear} from '../obj.js';\n\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n\n  /**\n   * @param {*=} opt_target Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    let listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = [];\n      this.listeners_[type] = listeners;\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[i]).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[i]).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        let pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>} Listeners.\n   */\n  getListeners(type) {\n    return this.listeners_[type];\n  }\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\n\nexport default Target;\n","/**\n * @module ol/Observable\n */\nimport {listen, unlistenByKey, listenOnce} from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {import(\"./events.js\").ListenerFunction} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  on(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  once(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listenOnce(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listenOnce(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  un(type, listener) {\n    if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport {getUid} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n\n  /**\n   * @param {Object<string, *>=} opt_values An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {!Object<string, *>}\n     */\n    this.values_ = {};\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return Object.keys(this.values_);\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return assign({}, this.values_);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    if (opt_silent) {\n      this.values_[key] = value;\n    } else {\n      const oldValue = this.values_[key];\n      this.values_[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\n\n/**\n * @type {Object<string, string>}\n */\nconst changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\nexport default BaseObject;\n","/**\n * @module ol/Feature\n */\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|Object<string, *>=} opt_geometryOrProperties\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n\n    super();\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n\n    if (opt_geometryOrProperties) {\n      if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  clone() {\n    const clone = new Feature(this.getProperties());\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return (\n      /** @type {Geometry|undefined} */ (this.get(this.geometryName_))\n    );\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(geometry,\n        EventType.CHANGE, this.handleGeometryChange_, this);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature.  This can be a single style object, an array\n   * of styles, or a function that takes a resolution and returns an array of\n   * styles. If it is `null` the feature has no style (a `null` style).\n   * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function() {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n","/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  const lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return Math.abs(extent1[0] - extent2[0]) < tolerance && Math.abs(extent1[2] - extent2[2]) < tolerance &&\n  Math.abs(extent1[1] - extent2[1]) < tolerance && Math.abs(extent1[3] - extent2[3]) < tolerance;\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  const dx = resolution * size[0] / 2;\n  const dy = resolution * size[1] / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + width * i / opt_stops, extent[1],\n        extent[2], extent[1] + height * i / opt_stops,\n        extent[2] - width * i / opt_stops, extent[3],\n        extent[0], extent[3] - height * i / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0], extent[1],\n      extent[2], extent[1],\n      extent[2], extent[3],\n      extent[0], extent[3]\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (projection.canWrapX() && (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor((center[0] - projectionExtent[0]) / worldWidth);\n    const offset = (worldsAway * worldWidth);\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nclass Projection {\n\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ = options.worldExtent !== undefined ?\n      options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ = options.axisOrientation !== undefined ?\n      options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport {cosh} from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function(resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      }\n    });\n\n  }\n\n}\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  const halfSize = HALF_SIZE;\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    let y = RADIUS *\n        Math.log(Math.tan(Math.PI * (+input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n\n  /**\n   * @param {string} code Code.\n   * @param {string=} opt_axisOrientation Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n}\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\nimport {add as addProj, clear as clearProj, get as getProj} from './proj/projections.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string' ?\n    getProj(/** @type {string} */ (projectionLike)) :\n    (/** @type {Projection} */ (projectionLike) || null);\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution = pointResolution * metersPerUnit / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      let vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      const metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  const transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @returns {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @returns {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @returns {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n","/**\n * @module ol/format/Feature\n */\nimport {assign} from '../obj.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection, equivalent as equivalentProjection, transformExtent} from '../proj.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = null;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.defaultFeatureProjection = null;\n\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Node|Object|string} source Source.\n   * @param {ReadOptions=} opt_options Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      let dataProjection = opt_options.dataProjection ?\n        getProjection(opt_options.dataProjection) : this.readProjection(source);\n      if (opt_options.extent &&\n          dataProjection && dataProjection.getUnits() === Units.TILE_PIXELS) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(opt_options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: opt_options.featureProjection\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign({\n      dataProjection: this.dataProjection,\n      featureProjection: this.defaultFeatureProjection\n    }, options);\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Node|Object|string} source Source.\n   * @param {ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions=} opt_options Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Node|Object|string} source Source.\n   * @param {ReadOptions=} opt_options Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Node|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   */\n  writeFeature(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   */\n  writeFeatures(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   */\n  writeGeometry(geometry, opt_options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\n  const dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\n\n  let transformed;\n  if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection);\n  } else {\n    transformed = geometry;\n  }\n  if (write && opt_options && /** @type {WriteOptions} */ (opt_options).decimals !== undefined) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (opt_options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function(coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  const featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\n  const dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\n\n  if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n","/**\n * @module ol/format/JSONFeature\n */\nimport {abstract} from '../util.js';\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getType() {\n    return FormatType.JSON;\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    return this.readFeatureFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    return this.readFeaturesFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, opt_options) {\n    return this.readGeometryFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return abstract();\n  }\n}\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\n\nexport default JSONFeature;\n","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` porperty of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  return 'matrix(' + mat.join(', ') + ')';\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {transform2D} from './flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\nimport {memoizeOne} from '../functions.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function(revision, squaredTolerance, opt_transform) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(this.getRevision(), squaredTolerance, opt_transform);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      this.extent_ = this.computeExtent(this.extent_);\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n      function(inCoordinates, outCoordinates, stride) {\n        const pixelExtent = sourceProj.getExtent();\n        const projectedExtent = sourceProj.getWorldExtent();\n        const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n        return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n      } :\n      getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n\n}\n\n\nexport default Geometry;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n\n  /**\n   * @param {Array<Geometry>=} opt_geometries Geometries.\n   */\n  constructor(opt_geometries) {\n\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(listen(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this));\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    return geometryCollection;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x, y, closestPoint, minSquaredDistance);\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(/** @type {GeometryCollection} */ (geometries[i]).getGeometriesArrayRecursive());\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.GEOMETRY_COLLECTION;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n\n    super();\n\n    /**\n     * @protected\n     * @type {GeometryLayout}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n      0, this.flatCoordinates.length, this.stride, extent);\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n        this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n    * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  }\n}\n\n\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  const coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  let pointX = NaN;\n  let pointY = NaN;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      const t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      const o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  const outside = forEachCorner(extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback(point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  const simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {GeometryLayout=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    return new LineString(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(this.flatCoordinates, 0,\n      this.flatCoordinates.length, this.stride, m, extrapolate);\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      fraction, opt_dest);\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      extent);\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n}\n\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {interpolatePoint, lineStringsCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @param {Array<number>=} opt_ends Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if ((this.layout != GeometryLayout.XYM &&\n         this.layout != GeometryLayout.XYZM) ||\n        this.flatCoordinates.length === 0) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates, offset, end, stride, 0.5);\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/Point\n */\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n}\n\n\nexport default Point;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n    return multiPoint;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride), this.layout);\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POINT;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n}\n\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {GeometryLayout=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n}\n\n\nexport default LinearRing;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(\n      flatCoordinates, offset, ends, stride, opt_right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    const reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(\n      flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {linearRingssAreOriented, orientLinearRingsArray} from './flat/orient.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @param {Array<Array<number>>=} opt_endss Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, opt_layout, opt_endss) {\n\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      let layout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const endss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\n        opt_layout);\n    }\n\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    return new MultiPolygon(\n      this.flatCoordinates.slice(), this.layout, newEndss);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates, 0, this.endss_, this.stride);\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingssAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRingsArray(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n    return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POLYGON;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\n\nexport default MultiPolygon;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformGeometryWithOptions} from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport GeometryType from '../geom/GeometryType.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n  * @api\n */\nclass GeoJSON extends JSONFeature {\n\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super();\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ?\n        options.dataProjection : 'EPSG:4326');\n\n    if (options.featureProjection) {\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeatureFromObject(object, opt_options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && 'geometry_name' in geoJSONFeature !== undefined) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeaturesFromObject(object, opt_options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, opt_options)];\n    }\n    return features;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readGeometryFromObject(object, opt_options) {\n    return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return (\n      /** @type {import(\"../proj/Projection.js\").default} */ (projection)\n    );\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeature} Object.\n   * @override\n   * @api\n   */\n  writeFeatureObject(feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, opt_options);\n    }\n\n    const properties = feature.getProperties();\n    delete properties[feature.getGeometryName()];\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @override\n   * @api\n   */\n  writeFeaturesObject(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @override\n   * @api\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  }\n}\n\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case GeometryType.POINT: {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geometry = readLineStringGeometry(/** @type {GeoJSONLineString} */ (object));\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geometry = readMultiPointGeometry(/** @type {GeoJSONMultiPoint} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geometry = readMultiLineStringGeometry(/** @type {GeoJSONMultiLineString} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geometry = readMultiPolygonGeometry(/** @type {GeoJSONMultiPolygon} */ (object));\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geometry = readGeometryCollectionGeometry(/** @type {GeoJSONGeometryCollection} */ (object));\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object.type);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, opt_options);\n}\n\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function(geometry) {\n      return readGeometry(geometry, opt_options);\n    });\n  return new GeometryCollection(geometries);\n}\n\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  geometry = transformGeometryWithOptions(geometry, true, opt_options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case GeometryType.POINT: {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geoJSON = writeLineStringGeometry(/** @type {LineString} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geoJSON = writePolygonGeometry(/** @type {Polygon} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geoJSON = writeMultiPointGeometry(/** @type {MultiPoint} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geoJSON = writeMultiLineStringGeometry(/** @type {MultiLineString} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geoJSON = writeMultiPolygonGeometry(/** @type {MultiPolygon} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geoJSON = writeGeometryCollectionGeometry(/** @type {GeometryCollection} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.CIRCLE: {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: []\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  const geometries = geometry.getGeometriesArray().map(function(geometry) {\n    const options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries\n  };\n}\n\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right)\n  };\n}\n\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right)\n  };\n}\n\n\nexport default GeoJSON;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function(center, resolution, size, opt_isMoving) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        let minX = extent[0] + viewWidth / 2;\n        let maxX = extent[2] - viewWidth / 2;\n        let minY = extent[1] + viewHeight / 2;\n        let maxY = extent[3] - viewHeight / 2;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x += -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y += -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent=} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize, showFullExtent) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *= Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio + 1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /= Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) / ratio + 1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent ?\n          getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent) :\n          maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent ?\n          getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent) :\n          maxResolution;\n        const minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance);\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset);\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    });\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent ?\n          getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent) :\n          maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  const numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\nimport {getWidth} from './extent.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + r * dx / d;\n  const y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  const projectionExtent = projection.getExtent();\n  if (projection.canWrapX() && (coordinate[0] < projectionExtent[0] || coordinate[0] >= projectionExtent[2])) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor((coordinate[0] - projectionExtent[0]) / worldWidth);\n    coordinate[0] -= (worldsAway * worldWidth);\n  }\n  return coordinate;\n}\n","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {VOID} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT, toUserCoordinate, toUserExtent, fromUserCoordinate, fromUserExtent, getUserProjection} from './proj.js';\nimport Units from './proj/Units.js';\nimport {equals} from './coordinate.js';\nimport {easeOut} from './easing.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n\n  /**\n   * @param {ViewOptions=} opt_options View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(options.center !== undefined ? options.center : null);\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(options.center, this.getProjection());\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(options.anchor, this.getProjection());\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (let i = 0; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution = progress === 1 ?\n            animation.targetResolution :\n            animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n            this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n          }\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n          const rotation = progress === 1 ?\n            modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n            animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(rotation, true);\n            this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n          }\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n      const y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) + Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) + Math.abs(h * Math.cos(opt_rotation))\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * @param {import(\"./size.js\").Size=} opt_size Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size) ? opt_size.slice() : [100, 100];\n    this.resolveConstraints(0);\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER));\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>=} opt_hints Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n   * first map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSize_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view shoud allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(fromUserExtent(extent, this.getProjection()), opt_size);\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSize_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function(value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      });\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function(resolution) {\n        const value = (Math.log(maxResolution / resolution) / logPower) / max;\n        return value;\n      });\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    const projection = this.getProjection();\n    const resolution = /** @type {number} */ (this.getResolution());\n    const rotation = this.getRotation();\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom()\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n      const zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return this.resolutions_[baseLevel] / Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1));\n    } else {\n      return this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_);\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions=} opt_options Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    const options = assign({size: this.getViewportSize_()}, opt_options || {});\n\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function',\n      24); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent),\n        25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(geometryOrExtent.getExtent(), this.getProjection());\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent.clone().transform(userProjection, this.getProjection()));\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions=} opt_options Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSize_();\n    }\n    const padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n    const coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(-rotation);\n    let sinAngle = Math.sin(-rotation);\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    const stride = geometry.getStride();\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n    resolution = isNaN(resolution) ? minResolution :\n      Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    let centerRotX = (minRotX + maxRotX) / 2;\n    let centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n    centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n    const centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    const centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    const center = [centerX, centerY];\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal({\n        resolution: resolution,\n        center: this.getConstrainedCenter(center, resolution),\n        duration: options.duration,\n        easing: options.easing\n      }, callback);\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(fromUserCoordinate(coordinate, this.getProjection()), size, position);\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    // calculate rotated position\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(-rotation);\n    let sinAngle = Math.sin(-rotation);\n    let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    const resolution = this.getResolution();\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    const centerX = rotX * cosAngle - rotY * sinAngle;\n    const centerY = rotY * cosAngle + rotX * sinAngle;\n\n    this.setCenterInternal([centerX, centerY]);\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([center[0] + deltaCoordinates[0], center[1] + deltaCoordinates[1]]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([center[0] + deltaCoordinates[0], center[1] + deltaCoordinates[1]]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {ViewHint} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n   * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n    const newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving);\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (!this.get(ViewProperty.CENTER) || !equals(this.get(ViewProperty.CENTER), newCenter)) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number=} opt_duration The animation duration in ms.\n   * @param {number=} opt_resolutionDirection Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n    const newCenter = this.constraints_.center(this.targetCenter_, newResolution, size);\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor = opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)) {\n\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number=} opt_duration Animation duration in ms.\n   * @param {number=} opt_resolutionDirection Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number=} opt_duration Animation duration in ms.\n   * @param {number=} opt_resolutionDirection Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number=} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(this.getConstrainedResolution(targetRes, opt_direction));\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number=} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function() {\n    callback(returnValue);\n  }, 0);\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth = options.smoothExtentConstraint !== undefined ? options.smoothExtentConstraint : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld = options.multiWorld !== undefined ?\n    options.multiWorld : false;\n\n  const smooth =\n      options.smoothResolutionConstraint !== undefined ? options.smoothResolutionConstraint : true;\n\n  const showFullExtent =\n      options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(resolutions, smooth,\n        !constrainOnlyCenter && extent, showFullExtent);\n    } else {\n      resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth,\n        !constrainOnlyCenter && extent, showFullExtent);\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor, maxResolution, minResolution, smooth,\n        !constrainOnlyCenter && extent, showFullExtent);\n    } else {\n      resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth,\n        !constrainOnlyCenter && extent, showFullExtent);\n    }\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right'\n};\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style\n * @property {string} variant\n * @property {string} weight\n * @property {string} size\n * @property {string} lineHeight\n * @property {string} family\n * @property {Array<string>} families\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From http://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp([\n  '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n  '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n  '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n  '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n  '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n  '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n  '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$'\n].join(''), 'i');\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family'\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function(fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal'\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/has\n */\n\nconst ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO = typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS = typeof WorkerGlobalScope !== 'undefined' && typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function() {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function() {\n        passive = true;\n      }\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @param {Array<HTMLCanvasElement>=} opt_canvasPool Canvas pool to take existing canvas from.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool) {\n  const canvas = opt_canvasPool && opt_canvasPool.length ?\n    opt_canvasPool.shift() :\n    WORKER_OFFSCREEN_CANVAS ?\n      new OffscreenCanvas(opt_width || 300, opt_height || 300) :\n      document.createElement('canvas');\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {removeNode, removeChildren, outerWidth, outerHeight} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport?\n * If `true` (deprecated), then `autoPanAnimation` and `autoPanMargin` will be\n * used to determine the panning parameters; if an object is supplied then other\n * parameters are ignored.\n * @property {PanOptions} [autoPanAnimation] The animation options used to pan\n * the overlay into view. This animation is only used when `autoPan` is enabled.\n * A `duration` and `easing` may be provided to customize the animation.\n * Deprecated and ignored if `autoPan` is supplied as an object.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning. Deprecated and ignored\n * if `autoPan` is supplied as an object.\n * @property {PanIntoViewOptions} [autoPanOptions] The options to use for the\n * autoPan. This is only used when `autoPan` is enabled and has preference over\n * the individual `autoPanMargin` and `autoPanOptions`.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning'\n};\n\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n\n    super();\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst = options.insertFirst !== undefined ?\n      options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className = options.className !== undefined ?\n      options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n\n    let autoPan = options.autoPan;\n    if (autoPan && ('object' !== typeof autoPan)) {\n      autoPan = {\n        animation: options.autoPanAnimation,\n        margin: options.autoPanMargin\n      };\n    }\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|false}\n     */\n    this.autoPan = /** @type {PanIntoViewOptions} */(autoPan) || false;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addEventListener(getChangeEventType(Property.ELEMENT), this.handleElementChanged);\n    this.addEventListener(getChangeEventType(Property.MAP), this.handleMapChanged);\n    this.addEventListener(getChangeEventType(Property.OFFSET), this.handleOffsetChanged);\n    this.addEventListener(getChangeEventType(Property.POSITION), this.handlePositionChanged);\n    this.addEventListener(getChangeEventType(Property.POSITIONING), this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning !== undefined ?\n      /** @type {OverlayPositioning} */ (options.positioning) :\n      OverlayPositioning.TOP_LEFT);\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return (\n      /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(Property.MAP))\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION))\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {OverlayPositioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return (\n      /** @type {OverlayPositioning} */ (this.get(Property.POSITIONING))\n    );\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(map,\n        MapEventType.POSTRENDER, this.render, this);\n      this.updatePixelPosition();\n      const container = this.stopEvent ?\n        map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visisble in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions|undefined} panIntoViewOptions Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n\n    const myMargin = (panIntoViewOptions.margin === undefined) ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map.getView().getCenterInternal());\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        const newCenterPx = [\n          centerPx[0] + delta[0],\n          centerPx[1] + delta[1]\n        ];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [\n      offsetX,\n      offsetY,\n      offsetX + size[0],\n      offsetY + size[1]\n    ];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {OverlayPositioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n        positioning == OverlayPositioning.CENTER_RIGHT ||\n        positioning == OverlayPositioning.TOP_RIGHT) {\n      posX = '-100%';\n    } else if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n        positioning == OverlayPositioning.CENTER_CENTER ||\n        positioning == OverlayPositioning.TOP_CENTER) {\n      posX = '-50%';\n    }\n    if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n        positioning == OverlayPositioning.BOTTOM_CENTER ||\n        positioning == OverlayPositioning.BOTTOM_RIGHT) {\n      posY = '-100%';\n    } else if (positioning == OverlayPositioning.CENTER_LEFT ||\n        positioning == OverlayPositioning.CENTER_CENTER ||\n        positioning == OverlayPositioning.CENTER_RIGHT) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n      // @ts-ignore IE9\n      style.msTransform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\n\nexport default Overlay;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n\n  /**\n   * @param {CollectionEventType} type Type.\n   * @param {*=} opt_element Element.\n   * @param {number=} opt_index The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n\n  /**\n   * @param {Array<T>=} opt_array Array.\n   * @param {Options=} opt_options Collection options.\n   */\n  constructor(opt_array, opt_options) {\n\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index));\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index));\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\n\nexport default Collection;\n","/**\n * @module ol/control/Control\n */\nimport {VOID} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n\n    super();\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = options.element ? options.element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    /**\n     * @private\n     * @type {function(import(\"../MapEvent.js\").default): void}\n     */\n    this.render_ = options.render ? options.render : VOID;\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_ ?\n        this.target_ : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(listen(map,\n          MapEventType.POSTRENDER, this.render, this));\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {\n    this.render_.call(this, mapEvent);\n  }\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ = typeof target === 'string' ?\n      document.getElementById(target) :\n      target;\n  }\n}\n\n\nexport default Control;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source'\n};\n","/**\n * @module ol/layer/Base\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\nimport {assert} from '../asserts.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n\n    super();\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n\n    properties[LayerProperty.OPACITY] =\n        options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n       options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n       options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n       options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n       options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n       options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ = properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean=} opt_managed Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state = this.state_ || /** @type {?} */ ({\n      layer: this,\n      managed: opt_managed === undefined ? true : opt_managed\n    });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex !== undefined ? zIndex : (state.managed === false ? Infinity : 0);\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return (\n      /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete'\n\n};\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n * @property {number} minZoom\n * @property {number} maxZoom\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addEventListener(getChangeEventType(LayerProperty.SOURCE), this.handleSourcePropertyChange_);\n\n    const source = options.source ? /** @type {SourceType} */ (options.source) : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n    * @inheritDoc\n    */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(source,\n        EventType.CHANGE, this.handleSourceChange_, this);\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n        const renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n        const layerStatesArray = renderEvent.frameState.layerStatesArray;\n        const layerState = this.getLayerState(false);\n        // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n        assert(!layerStatesArray.some(function(arrayLayerState) {\n          return arrayLayerState.layer === layerState.layer;\n        }), 67);\n        layerStatesArray.push(layerState);\n      }, this);\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (resolution < layerState.minResolution || resolution >= layerState.maxResolution) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {inView} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n\n  /**\n   * @param {Options=} opt_options Attribution options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className = options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n\n    const activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(EventType.CLICK, this.handleClick_.bind(this), false);\n\n    const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n        this.setCollapsible(false);\n      }\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n}\n\n\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n\n  /**\n   * @param {Options=} opt_options Rotate options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    const className = options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = 'ol-compass';\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add('ol-compass');\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(EventType.CLICK, this.handleClick_.bind(this), false);\n\n    const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n}\n\n\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n */\nexport function render(mapEvent) {\n  const frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  const rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    const transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      const contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n\n  /**\n   * @param {Options=} opt_options Zoom options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    const className = options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    const zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n      options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n      options.zoomOutTipLabel : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = className + '-in';\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n    );\n\n    inElement.addEventListener(EventType.CLICK, this.handleClick_.bind(this, delta), false);\n\n    const outElement = document.createElement('button');\n    outElement.className = className + '-out';\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n    );\n\n    outElement.addEventListener(EventType.CLICK, this.handleClick_.bind(this, -delta), false);\n\n    const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\n\nexport default Zoom;\n","/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\nconst events = ['fullscreenchange', 'webkitfullscreenchange', 'MSFullscreenChange'];\n\n\n/**\n * @enum {string}\n */\nconst FullScreenEventType = {\n\n  /**\n   * Triggered after the map entered fullscreen.\n   * @event FullScreenEventType#enterfullscreen\n   * @api\n   */\n  ENTERFULLSCREEN: 'enterfullscreen',\n\n  /**\n   * Triggered after the map leave fullscreen.\n   * @event FullScreenEventType#leavefullscreen\n   * @api\n   */\n  LEAVEFULLSCREEN: 'leavefullscreen'\n\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nclass FullScreen extends Control {\n\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ = options.className !== undefined ? options.className :\n      'ol-full-screen';\n\n    const label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text}\n     */\n    this.labelNode_ = typeof label === 'string' ?\n      document.createTextNode(label) : label;\n\n    const labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text}\n     */\n    this.labelActiveNode_ = typeof labelActive === 'string' ?\n      document.createTextNode(labelActive) : labelActive;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n    this.setClassName_(this.button_, isFullScreen());\n    this.button_.setAttribute('type', 'button');\n    this.button_.title = tipLabel;\n    this.button_.appendChild(this.labelNode_);\n\n    this.button_.addEventListener(EventType.CLICK, this.handleClick_.bind(this), false);\n\n    const cssClasses = this.cssClassName_ + ' ' + CLASS_UNSELECTABLE +\n        ' ' + CLASS_CONTROL + ' ' +\n        (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.button_);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreen_() {\n    if (!isFullScreenSupported()) {\n      return;\n    }\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    if (isFullScreen()) {\n      exitFullScreen();\n    } else {\n      let element;\n      if (this.source_) {\n        element = typeof this.source_ === 'string' ?\n          document.getElementById(this.source_) :\n          this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreenChange_() {\n    const map = this.getMap();\n    if (isFullScreen()) {\n      this.setClassName_(this.button_, true);\n      replaceNode(this.labelActiveNode_, this.labelNode_);\n      this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n    } else {\n      this.setClassName_(this.button_, false);\n      replaceNode(this.labelNode_, this.labelActiveNode_);\n      this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n    }\n    if (map) {\n      map.updateSize();\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  setClassName_(element, fullscreen) {\n    const activeClassName = this.cssClassName_ + '-true';\n    const inactiveClassName = this.cssClassName_ + '-false';\n    const nextClassName = fullscreen ? activeClassName : inactiveClassName;\n    element.classList.remove(activeClassName);\n    element.classList.remove(inactiveClassName);\n    element.classList.add(nextClassName);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      for (let i = 0, ii = events.length; i < ii; ++i) {\n        this.listenerKeys.push(\n          listen(document, events[i], this.handleFullScreenChange_, this));\n      }\n    }\n  }\n}\n\n\n/**\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported() {\n  const body = document.body;\n  return !!(\n    body.webkitRequestFullscreen ||\n    (body.msRequestFullscreen && document.msFullscreenEnabled) ||\n    (body.requestFullscreen && document.fullscreenEnabled)\n  );\n}\n\n/**\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen() {\n  return !!(\n    document.webkitIsFullScreen || document.msFullscreenElement || document.fullscreenElement\n  );\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n */\nfunction exitFullScreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n\nexport default FullScreen;\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v. 2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\n// Variable to hold current primary touch event identifier.\n// iOS needs this since it does not attribute\n// identifier 0 to primary touch event.\nlet primaryTouchId = null;\n\n// Variable to hold mouse pointer captures.\nlet mouseCaptureTarget = null;\n\nif (!(\"PointerEvent\" in window)) {\n  // Define {set,release}PointerCapture\n  definePointerCapture();\n\n  // Create Pointer polyfill from mouse events only on non-touch device\n  if (!(\"TouchEvent\" in window)) {\n    addMouseToPointerListener(document, \"mousedown\", \"pointerdown\");\n    addMouseToPointerListener(document, \"mousemove\", \"pointermove\");\n    addMouseToPointerListener(document, \"mouseup\", \"pointerup\");\n  }\n\n  // Define Pointer polyfill from touch events\n  addTouchToPointerListener(document, \"touchstart\", \"pointerdown\");\n  addTouchToPointerListener(document, \"touchmove\", \"pointermove\");\n  addTouchToPointerListener(document, \"touchend\", \"pointerup\");\n}\n\n// Function defining {set,release}PointerCapture from {set,releas}Capture\nfunction definePointerCapture() {\n  Element.prototype.setPointerCapture = Element.prototype.setCapture;\n  Element.prototype.releasePointerCapture = Element.prototype.releaseCapture;\n}\n\n// Function converting a Mouse event to a Pointer event.\nfunction addMouseToPointerListener(target, mouseType, pointerType) {\n  target.addEventListener(mouseType, mouseEvent => {\n    let pointerEvent = new MouseEvent(pointerType, mouseEvent);\n    pointerEvent.pointerId = 1;\n    pointerEvent.isPrimary = true;\n    pointerEvent.pointerType = \"mouse\";\n    pointerEvent.width = 1;\n    pointerEvent.height = 1;\n    pointerEvent.tiltX = 0;\n    pointerEvent.tiltY = 0;\n\n    // pressure is 0.5 if a button is holded\n    \"buttons\" in mouseEvent && mouseEvent.buttons !== 0\n      ? (pointerEvent.pressure = 0.5)\n      : (pointerEvent.pressure = 0);\n\n    // if already capturing mouse event, transfer target\n    // and don't forget implicit release on mouseup.\n    let target = mouseEvent.target;\n    if (mouseCaptureTarget !== null) {\n      target = mouseCaptureTarget;\n      if (mouseType === \"mouseup\") {\n        mouseCaptureTarget = null;\n      }\n    }\n\n    target.dispatchEvent(pointerEvent);\n    if (pointerEvent.defaultPrevented) {\n      mouseEvent.preventDefault();\n    }\n  });\n}\n\n// Function converting a Touch event to a Pointer event.\nfunction addTouchToPointerListener(target, touchType, pointerType) {\n  target.addEventListener(touchType, touchEvent => {\n    const changedTouches = touchEvent.changedTouches;\n    const nbTouches = changedTouches.length;\n    for (let t = 0; t < nbTouches; t++) {\n      let pointerEvent = new CustomEvent(pointerType, {\n        bubbles: true,\n        cancelable: true\n      });\n      pointerEvent.ctrlKey = touchEvent.ctrlKey;\n      pointerEvent.shiftKey = touchEvent.shiftKey;\n      pointerEvent.altKey = touchEvent.altKey;\n      pointerEvent.metaKey = touchEvent.metaKey;\n\n      const touch = changedTouches.item(t);\n      pointerEvent.clientX = touch.clientX;\n      pointerEvent.clientY = touch.clientY;\n      pointerEvent.screenX = touch.screenX;\n      pointerEvent.screenY = touch.screenY;\n      pointerEvent.pageX = touch.pageX;\n      pointerEvent.pageY = touch.pageY;\n      const rect = touch.target.getBoundingClientRect();\n      pointerEvent.offsetX = touch.clientX - rect.left;\n      pointerEvent.offsetY = touch.clientY - rect.top;\n      pointerEvent.pointerId = 1 + touch.identifier;\n\n      // Default values for standard MouseEvent fields.\n      pointerEvent.button = 0;\n      pointerEvent.buttons = 1;\n      pointerEvent.movementX = 0;\n      pointerEvent.movementY = 0;\n      pointerEvent.region = null;\n      pointerEvent.relatedTarget = null;\n      pointerEvent.x = pointerEvent.clientX;\n      pointerEvent.y = pointerEvent.clientY;\n\n      // Pointer event details\n      pointerEvent.pointerType = \"touch\";\n      pointerEvent.width = 1;\n      pointerEvent.height = 1;\n      pointerEvent.tiltX = 0;\n      pointerEvent.tiltY = 0;\n      pointerEvent.pressure = 1;\n\n      // First touch is the primary pointer event.\n      if (touchType === \"touchstart\" && primaryTouchId === null) {\n        primaryTouchId = touch.identifier;\n      }\n      pointerEvent.isPrimary = touch.identifier === primaryTouchId;\n\n      // If first touch ends, reset primary touch id.\n      if (touchType === \"touchend\" && pointerEvent.isPrimary) {\n        primaryTouchId = null;\n      }\n\n      touchEvent.target.dispatchEvent(pointerEvent);\n      if (pointerEvent.defaultPrevented) {\n        touchEvent.preventDefault();\n      }\n    }\n  });\n}\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n","/**\n * @module ol/control/MousePosition\n */\n\nimport 'elm-pep';\nimport {listen} from '../events.js';\nimport EventType from '../pointer/EventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport Control from './Control.js';\nimport {getTransformFromProjections, identityTransform, get as getProjection, getUserProjection} from '../proj.js';\n\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [undefinedHTML='&#160;'] Markup to show when coordinates are not\n * available (e.g. when the pointer leaves the map viewport).  By default, the last position\n * will be replaced with `'&#160;'` (`&nbsp;`) when the pointer leaves the viewport.  To\n * retain the last rendered position, set this option to something falsey (like an empty\n * string `''`).\n */\n\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nclass MousePosition extends Control {\n\n  /**\n   * @param {Options=} opt_options Mouse position options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    const element = document.createElement('div');\n    element.className = options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render || render,\n      target: options.target\n    });\n\n    this.addEventListener(getChangeEventType(PROJECTION), this.handleProjectionChanged_);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.undefinedHTML_ = options.undefinedHTML !== undefined ? options.undefinedHTML : '&#160;';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = !!this.undefinedHTML_;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return (\n      /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (this.get(COORDINATE_FORMAT))\n    );\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return (\n      /** @type {import(\"../proj/Projection.js\").default|undefined} */ (this.get(PROJECTION))\n    );\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this)\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this)\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.undefinedHTML_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_, projection);\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixelInternal(pixel);\n      if (coordinate) {\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_, userProjection);\n        }\n        this.transform_(coordinate, coordinate);\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n}\n\n\n/**\n * Update the projection. Rendering of the coordinates is done in\n * `handleMouseMove` and `handleMouseUp`.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {MousePosition}\n */\nexport function render(mapEvent) {\n  const frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.mapProjection_ = null;\n  } else {\n    if (this.mapProjection_ != frameState.viewState.projection) {\n      this.mapProjection_ = frameState.viewState.projection;\n      this.transform_ = null;\n    }\n  }\n}\n\n\nexport default MousePosition;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n  }\n\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nclass MapBrowserEvent extends MapEvent {\n\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {Event} browserEvent Browser event.\n   * @param {boolean=} opt_dragging Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n   */\n  constructor(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {Event}\n     * @api\n     */\n    this.originalEvent = browserEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original browser event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @override\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    this.originalEvent.preventDefault();\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @override\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    this.originalEvent.stopPropagation();\n  }\n}\n\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\nclass MapBrowserPointerEvent extends MapBrowserEvent {\n\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {PointerEvent} pointerEvent Pointer event.\n   * @param {boolean=} opt_dragging Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n   */\n  constructor(type, map, pointerEvent, opt_dragging, opt_frameState) {\n\n    super(type, map, pointerEvent, opt_dragging, opt_frameState);\n\n    /**\n     * @const\n     * @type {PointerEvent}\n     */\n    this.pointerEvent = pointerEvent;\n\n  }\n\n}\n\nexport default MapBrowserPointerEvent;\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport 'elm-pep';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport EventType from './events/EventType.js';\n\nclass MapBrowserEventHandler extends EventTarget {\n\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance ?\n      moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_, this);\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_, this);\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(EventType.TOUCHMOVE, this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.CLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(function() {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserPointerEvent(\n          MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n      }.bind(this), 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (event.type == MapBrowserEventType.POINTERUP ||\n        event.type == MapBrowserEventType.POINTERCANCEL) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n    if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    this.down_ = pointerEvent;\n\n    if (this.dragListenerKeys_.length === 0) {\n      this.dragListenerKeys_.push(\n        listen(document,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_, this),\n        listen(document,\n          MapBrowserEventType.POINTERUP,\n          this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_, this)\n      );\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n        this.dragging_);\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserPointerEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(new MapBrowserPointerEvent(\n      pointerEvent.type, this.map_, pointerEvent, dragging));\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    if (!this.originalPointerMoveEvent_ || this.originalPointerMoveEvent_.defaultPrevented) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return this.dragging_ ||\n        Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n        Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(EventType.TOUCHMOVE, this.boundHandleTouchMove_);\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_),\n      31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < (count >> 1)) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex = rIndex < count &&\n          priorities[rIndex] < priorities[lIndex] ?\n        rIndex : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n\n}\n\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\n\nclass TileQueue extends PriorityQueue {\n\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function(element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (/** @type {import(\"./Tile.js\").default} */ (element[0]).getKey());\n      });\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (tile.hifi && state === TileState.LOADED || state === TileState.ERROR || state === TileState.EMPTY) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n           this.getCount() > 0) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\n\nexport default TileQueue;\n\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(frameState, tile, tileSourceKey, tileCenter, tileResolution) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return 65536 * Math.log(tileResolution) +\n      Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n}\n","/**\n * @module ol/layer/Group\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from './Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options=} opt_options Layer options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addEventListener(getChangeEventType(Property.LAYERS), this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof /** @type {?} */ (layers).getArray === 'function',\n          43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return (\n      /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS))\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function(layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n\n    const pos = states.length;\n\n    this.getLayers().forEach(function(layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n      layerState.minZoom = Math.max(\n        layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(\n        layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\n\nexport default LayerGroup;\n","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport {clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, IMAGE_DECODE, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\nimport {toUserCoordinate, fromUserCoordinate} from './proj.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {Array<DeclutterItems>} declutterItems\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {number} layerIndex\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {Object} DeclutterItems\n * @property {Array<*>} items Declutter items of an executor.\n * @property {number} opacity Layer opacity.\n */\n\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n\n    super();\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio !== undefined ?\n      options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = function() {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className = 'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n    const handleMapBrowserEvent = this.handleMapBrowserEvent.bind(this);\n    for (const key in MapBrowserEventType) {\n      this.mapBrowserEventHandler_.addEventListener(MapBrowserEventType[key], handleMapBrowserEvent);\n    }\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    const handleBrowserEvent = this.handleBrowserEvent.bind(this);\n    this.viewport_.addEventListener(EventType.CONTEXTMENU, handleBrowserEvent, false);\n    this.viewport_.addEventListener(EventType.WHEEL, handleBrowserEvent,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false);\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this));\n\n    this.addEventListener(getChangeEventType(MapProperty.LAYERGROUP), this.handleLayerGroupChanged_);\n    this.addEventListener(getChangeEventType(MapProperty.VIEW), this.handleViewChanged_);\n    this.addEventListener(getChangeEventType(MapProperty.SIZE), this.handleSizeChanged_);\n    this.addEventListener(getChangeEventType(MapProperty.TARGET), this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function(control) {\n        control.setMap(this);\n      }.bind(this));\n\n    this.controls.addEventListener(CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }.bind(this));\n\n    this.controls.addEventListener(CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }.bind(this));\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function(interaction) {\n        interaction.setMap(this);\n      }.bind(this));\n\n    this.interactions.addEventListener(CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }.bind(this));\n\n    this.interactions.addEventListener(CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }.bind(this));\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    this.overlays_.addEventListener(CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n      }.bind(this));\n\n    this.overlays_.addEventListener(CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this));\n\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * @inheritDoc\n   */\n  disposeInternal() {\n    this.mapBrowserEventHandler_.dispose();\n    this.viewport_.removeEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_);\n    this.viewport_.removeEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n   *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    const layerFilter = opt_options.layerFilter !== undefined ?\n      opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, checkWrapped, callback, null,\n      layerFilter, null);\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(pixel, function(feature) {\n      features.push(feature);\n    }, opt_options);\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance = options.hitTolerance !== undefined ?\n      options.hitTolerance * this.frameState_.pixelRatio : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, checkWrapped, layerFilter, null);\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {Event} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {Event} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {Event|TouchEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition = 'changedTouches' in event ?\n      /** @type {TouchEvent} */ (event).changedTouches[0] :\n      /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string' ? document.getElementById(target) : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(this.getCoordinateFromPixelInternal(pixel), this.getView().getProjection());\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return (\n      /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP))\n    );\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(coordinate, this.getView().getProjection());\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return (\n      /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE))\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return (\n      /** @type {View} */ (this.get(MapProperty.VIEW))\n    );\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(this.frameState_, tile, tileSourceKey, tileCenter, tileResolution);\n  }\n\n  /**\n   * @param {Event} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const target = /** @type {Node} */ (mapBrowserEvent.originalEvent.target);\n    if (!mapBrowserEvent.dragging) {\n      if (this.overlayContainerStopEvent_.contains(target) || !(document.body.contains(target) || this.viewport_.getRootNode && this.viewport_.getRootNode().contains(target))) {\n        // Abort if the event target is a child of the container that doesn't allow\n        // event propagation or is no longer in the page. It's possible for the target to no longer\n        // be in the page if it has been removed in an event listener, this might happen in a Control\n        // that recreates it's content based on user interaction either manually or via a render\n        // in something like https://reactjs.org/\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    const interactionsArray = this.getInteractions().getArray();\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (!interaction.getActive()) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = !IMAGE_DECODE && Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n        !this.tileQueue_.getTilesLoading() && !this.getLoading()) {\n      this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.keyHandlerKeys_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n      removeNode(this.viewport_);\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      const keyboardEventTarget = !this.keyboardEventTarget_ ?\n        targetElement : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n        listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view, ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_, this);\n      this.viewChangeListenerKey_ = listen(\n        view, EventType.CHANGE,\n        this.handleViewPropertyChanged_, this);\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(\n          layerGroup, ObjectEventType.PROPERTYCHANGE,\n          this.render, this),\n        listen(\n          layerGroup, EventType.CHANGE,\n          this.render, this)\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterItems: previousFrameState ? previousFrameState.declutterItems : [],\n        extent: getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, size),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {}\n      };\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n      if (previousFrameState) {\n        const moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                    !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle = this.previousExtent_ &&\n          !frameState.viewHints[ViewHint.ANIMATING] &&\n          !frameState.viewHints[ViewHint.INTERACTING] &&\n          !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.postRenderTimeoutHandle_ = setTimeout(this.handlePostRender.bind(this), 0);\n\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    this.set(MapProperty.VIEW, view);\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      const computedStyle = getComputedStyle(targetElement);\n      this.setSize([\n        targetElement.offsetWidth -\n            parseFloat(computedStyle['borderLeftWidth']) -\n            parseFloat(computedStyle['paddingLeft']) -\n            parseFloat(computedStyle['paddingRight']) -\n            parseFloat(computedStyle['borderRightWidth']),\n        targetElement.offsetHeight -\n            parseFloat(computedStyle['borderTopWidth']) -\n            parseFloat(computedStyle['paddingTop']) -\n            parseFloat(computedStyle['paddingBottom']) -\n            parseFloat(computedStyle['borderBottomWidth'])\n      ]);\n    }\n\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10)\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n    /** @type {LayerGroup} */ (options.layers) : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.controls).getArray === 'function',\n        47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.interactions).getArray === 'function',\n        48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.overlays).getArray === 'function',\n        49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n   * @param {?CanvasRenderingContext2D=} opt_context Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n\n  }\n\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    const MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object<string, Color>}\n     */\n    const cache = {};\n\n    /**\n     * @type {number}\n     */\n    let cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {Color} Color.\n       */\n      function(s) {\n        let color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            let i = 0;\n            for (const key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0;\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n\n    /**\n    * @type {!Object<string, import(\"./IconImage.js\").default>}\n    * @private\n    */\n    this.cache_ = {};\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.cacheSize_ = 0;\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n  * FIXME empty description for jsdoc\n  */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n  * FIXME empty description for jsdoc\n  */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n  * @param {string} src Src.\n  * @param {?string} crossOrigin Cross origin.\n  * @param {import(\"../color.js\").Color} color Color.\n  * @return {import(\"./IconImage.js\").default} Icon image.\n  */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n  * @param {string} src Src.\n  * @param {?string} crossOrigin Cross origin.\n  * @param {import(\"../color.js\").Color} color Color.\n  * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n  */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n  * Set the cache size of the icon cache. Default is `32`. Change this value when\n  * your map uses more than 32 different icon images and you are not caching icon\n  * styles on the application level.\n  * @param {number} maxCacheSize Cache max size.\n  * @api\n  */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n   */\n  setImageStyle(imageStyle, opt_declutterGroup) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"./canvas.js\").DeclutterGroups=} opt_declutterGroups Declutter.\n   */\n  setTextStyle(textStyle, opt_declutterGroups) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas\n */\nimport {getFontParameters} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {toString} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n\n/**\n * @typedef Label\n * @property {number} width\n * @property {number} height\n * @property {Array<string|number>} contextInstructions\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {CanvasLineCap} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {CanvasLineJoin} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {CanvasLineCap} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {CanvasLineJoin} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n\n\n/**\n * Declutter groups for support of multi geometries.\n * @typedef {Array<DeclutterGroup>} DeclutterGroups\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function() {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function() {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + referenceFont, text);\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + fontFamily + ',' + referenceFont, text);\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function() {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let div;\n  const heights = textHeights;\n  return function(fontSpec) {\n    let height = heights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight)) ? 1.2 : Number(font.lineHeight);\n        textHeights[fontSpec] = lineHeight * (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!div) {\n          div = document.createElement('div');\n          div.innerHTML = 'M';\n          div.style.margin = '0 !important';\n          div.style.padding = '0 !important';\n          div.style.position = 'absolute !important';\n          div.style.left = '-99999px !important';\n        }\n        div.style.font = fontSpec;\n        document.body.appendChild(div);\n        height = div.offsetHeight;\n        heights[fontSpec] = height;\n        document.body.removeChild(div);\n      }\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImageOrLabel(context,\n  transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if ((/** @type {*} */ (labelOrImage).contextInstructions)) {\n    // label\n    context.translate(x, y);\n    context.scale(scale, scale);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else {\n    // image\n    context.drawImage(/** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, x, y, w * scale, h * scale);\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(context, contextInstructions[i + 1]);\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n\n/**\n * @type {HTMLCanvasElement}\n * @private\n */\nlet createTransformStringCanvas = null;\n\n/**\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @return {string} CSS transform.\n */\nexport function createTransformString(transform) {\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return toString(transform);\n  } else {\n    if (!createTransformStringCanvas) {\n      createTransformStringCanvas = createCanvasContext2D(1, 1).canvas;\n    }\n    createTransformStringCanvas.style.transform = toString(transform);\n    return createTransformStringCanvas.style.transform;\n  }\n}\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number=} opt_squaredTolerance Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction=} opt_userTransform Transform from user to view projection.\n   */\n  constructor(context, pixelRatio, extent, transform, viewRotation, opt_squaredTolerance, opt_userTransform) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageScale_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textScale_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, 2, this.transform_,\n      this.pixelCoordinates_);\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (rotation !== 0 || this.imageScale_ != 1) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(localTransform,\n          centerX, centerY,\n          this.imageScale_, this.imageScale_,\n          rotation,\n          -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n      }\n      context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\n        this.imageWidth_, this.imageHeight_, x, y,\n        this.imageWidth_, this.imageHeight_);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (rotation !== 0 || this.textScale_ != 1) {\n        const localTransform = composeTransform(this.tmpLocalTransform_,\n          x, y,\n          this.textScale_, this.textScale_,\n          rotation,\n          -x, -y);\n        context.setTransform.apply(context, localTransform);\n      }\n      if (this.textStrokeState_) {\n        context.strokeText(this.text_, x, y);\n      }\n      if (this.textFillState_) {\n        context.fillText(this.text_, x, y);\n      }\n    }\n    if (rotation !== 0 || this.textScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @override\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry, this.transform_, this.pixelCoordinates_);\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @override\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @override\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n        geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(),\n        0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign ?\n      textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ?\n          fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ?\n          strokeStyleLineCap : defaultLineCap,\n        lineDash: strokeStyleLineDash ?\n          strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset ?\n          strokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: strokeStyleLineJoin !== undefined ?\n          strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n          strokeStyleWidth : defaultLineWidth),\n        miterLimit: strokeStyleMiterLimit !== undefined ?\n          strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ?\n          strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  setImageStyle(imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      const imageAnchor = imageStyle.getAnchor();\n      // FIXME pixel ratio\n      const imageImage = imageStyle.getImage(1);\n      const imageOrigin = imageStyle.getOrigin();\n      const imageSize = imageStyle.getSize();\n      this.imageAnchorX_ = imageAnchor[0];\n      this.imageAnchorY_ = imageAnchor[1];\n      this.imageHeight_ = imageSize[1];\n      this.image_ = imageImage;\n      this.imageOpacity_ = imageStyle.getOpacity();\n      this.imageOriginX_ = imageOrigin[0];\n      this.imageOriginY_ = imageOrigin[1];\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\n      this.imageRotation_ = imageStyle.getRotation();\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n      this.imageWidth_ = imageSize[0];\n    }\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ?\n            textFillStyleColor : defaultFillStyle)\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ?\n            textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ?\n            textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ?\n            textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ?\n            textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ?\n            textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ?\n            textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ?\n            textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScale();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ?\n          textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ?\n          textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ?\n          textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n          textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n      this.textOffsetY_ =\n          textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n        textScale : 1);\n    }\n  }\n}\n\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4\n};\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport BuilderType from '../render/canvas/BuilderType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, opt_transform) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform);\n\n  return loading;\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(squaredTolerance, opt_transform);\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature) {\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature) {\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/render\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply as multiplyTransform,\n  scale as scaleTransform\n} from './transform.js';\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport {getSquaredTolerance} from './renderer/vector.js';\nimport {getUserProjection, getTransformFromProjections} from './proj.js';\n\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render';\n * import Fill from 'ol/style/Fill';\n * import Polygon from 'ol/geom/Polygon';\n *\n * var canvas = document.createElement('canvas');\n * var render = toContext(canvas.getContext('2d'),\n *     { size: [100, 100] });\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions=} opt_options Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, opt_options) {\n  const canvas = context.canvas;\n  const options = opt_options ? opt_options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @returns {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n  const frameState = event.frameState;\n  const transform = multiplyTransform(event.inversePixelTransform.slice(), frameState.coordinateToPixelTransform);\n  const squaredTolerance = getSquaredTolerance(frameState.viewState.resolution, frameState.pixelRatio);\n  let userTransform;\n  const userProjection = getUserProjection();\n  if (userProjection) {\n    userTransform = getTransformFromProjections(userProjection, frameState.viewState.projection);\n  }\n  return new CanvasImmediateRenderer(\n    event.context, frameState.pixelRatio, frameState.extent, transform,\n    frameState.viewState.rotation, squaredTolerance, userTransform);\n}\n\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @returns {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n  const result = pixel.slice(0);\n  applyTransform(event.inversePixelTransform.slice(), result);\n  return result;\n}\n\n/**\n * @param {import(\"./PluggableMap.js\").FrameState} frameState Frame state.\n * @param {?} declutterTree Declutter tree.\n * @returns {?} Declutter tree.\n */\nexport function renderDeclutterItems(frameState, declutterTree) {\n  if (declutterTree) {\n    declutterTree.clear();\n  }\n  const items = frameState.declutterItems;\n  for (let z = items.length - 1; z >= 0; --z) {\n    const item = items[z];\n    const zIndexItems = item.items;\n    for (let i = 0, ii = zIndexItems.length; i < ii; i += 3) {\n      declutterTree = zIndexItems[i].renderDeclutter(zIndexItems[i + 1], zIndexItems[i + 2], item.opacity, declutterTree);\n    }\n  }\n  items.length = 0;\n  return declutterTree;\n}\n","/**\n * @module ol/renderer/Map\n */\nimport {abstract} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {inView} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {renderDeclutterItems} from '../render.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n\n    /**\n     * @private\n     */\n    this.declutterTree_ = null;\n\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(coordinateToPixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / viewState.resolution, -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0], -viewState.center[1]);\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n   *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @return {?} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer) {\n      return callback.call(thisArg, feature, managed ? layer : null);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n    let declutteredFeatures;\n    if (this.declutterTree_) {\n      declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n        return entry.value;\n      });\n    }\n\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer);\n        if (layer.hasRenderer() && inView(layerState, viewState) && layerFilter.call(thisArg2, layer)) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX() ? translatedCoordinate : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState, hitTolerance, callback, declutteredFeatures);\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(coordinate, frameState, hitTolerance, checkWrapped, layerFilter, thisArg) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, hitTolerance, checkWrapped, TRUE, this, layerFilter, thisArg);\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    this.declutterTree_ = renderDeclutterItems(frameState, this.declutterTree_);\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {inView} from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport MapRenderer from './Map.js';\nimport SourceState from '../source/State.js';\nimport {replaceChildren} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport ObjectEventType from '../ObjectEventType.js';\n\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(checkedFonts, ObjectEventType.PROPERTYCHANGE, map.redrawText.bind(map));\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function(a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (!inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY && layerState.sourceState != SourceState.UNDEFINED)) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n    }\n    super.renderFrame(frameState);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.hasRenderer() && inView(layerState, viewState) && layerFilter(layer)) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n}\n\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/control/OverviewMap\n */\nimport PluggableMap from '../PluggableMap.js';\nimport CompositeMapRenderer from '../renderer/Composite.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport OverlayPositioning from '../OverlayPositioning.js';\nimport ViewProperty from '../ViewProperty.js';\nimport Control from './Control.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen, listenOnce} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals as equalsExtent, getBottomRight, getTopLeft, scaleFromCenter} from '../extent.js';\nimport View from '../View.js';\n\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nconst MAX_RATIO = 0.75;\n\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nconst MIN_RATIO = 0.1;\n\n\nclass ControlledMap extends PluggableMap {\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='«'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='»'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Layer.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Layer.js\").default>} [layers]\n * Layers for the overview map.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {boolean} [rotateWithView=false] Whether the control view should rotate with the main map view.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {View} [view] Custom view for the overview map (should use same projection as main map). If not provided,\n * a default view with the same projection as the main map will be used.\n */\n\n\n/**\n * Create a new control with a map acting as an overview map for another\n * defined map.\n *\n * @api\n */\nclass OverviewMap extends Control {\n\n  /**\n   * @param {Options=} opt_options OverviewMap options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     */\n    this.boundHandleRotationChanged_ = this.handleRotationChanged_.bind(this);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.viewExtent_ = undefined;\n\n    const className = options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    const tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    const collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00AB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : '\\u00BB';\n\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(EventType.CLICK, this.handleClick_.bind(this), false);\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * Explicitly given view to be used instead of a view derived from the main map.\n     * @type {View}\n     * @private\n     */\n    this.view_ = options.view;\n\n    /**\n     * @type {ControlledMap}\n     * @private\n     */\n    this.ovmap_ = new ControlledMap({\n      view: options.view\n    });\n    const ovmap = this.ovmap_;\n\n    if (options.layers) {\n      options.layers.forEach(function(layer) {\n        ovmap.addLayer(layer);\n      });\n    }\n\n    const box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {import(\"../Overlay.js\").default}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: OverlayPositioning.CENTER_CENTER,\n      element: box\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    const scope = this;\n\n    const overlay = this.boxOverlay_;\n    const overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    const computeDesiredMousePosition = function(mousePosition) {\n      return {\n        clientX: mousePosition.clientX,\n        clientY: mousePosition.clientY\n      };\n    };\n\n    const move = function(event) {\n      const position = /** @type {?} */ (computeDesiredMousePosition(event));\n      const coordinates = ovmap.getEventCoordinateInternal(/** @type {Event} */ (position));\n\n      overlay.setPosition(coordinates);\n    };\n\n    const endMoving = function(event) {\n      const coordinates = ovmap.getEventCoordinateInternal(event);\n\n      scope.getMap().getView().setCenterInternal(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function() {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      const oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    super.setMap(map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(listen(\n        map, ObjectEventType.PROPERTYCHANGE,\n        this.handleMapPropertyChange_, this));\n\n      const view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n   * @private\n   */\n  handleMapPropertyChange_(event) {\n    if (event.key === MapProperty.VIEW) {\n      const oldView = /** @type {import(\"../View.js\").default} */ (event.oldValue);\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      const newView = this.getMap().getView();\n      this.bindView_(newView);\n    }\n  }\n\n  /**\n   * Register listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  bindView_(view) {\n    if (!this.view_) {\n      // Unless an explicit view definition was given, derive default from whatever main map uses.\n      const newView = new View({\n        projection: view.getProjection()\n      });\n      this.ovmap_.setView(newView);\n    }\n\n    view.addEventListener(getChangeEventType(ViewProperty.ROTATION), this.boundHandleRotationChanged_);\n    // Sync once with the new view\n    this.handleRotationChanged_();\n  }\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  unbindView_(view) {\n    view.removeEventListener(getChangeEventType(ViewProperty.ROTATION), this.boundHandleRotationChanged_);\n  }\n\n  /**\n   * Handle rotation changes to the main map.\n   * @private\n   */\n  handleRotationChanged_() {\n    if (this.rotateWithView_) {\n      this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n    }\n  }\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  validateExtent_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    if (this.viewExtent_ && equalsExtent(extent, this.viewExtent_)) {\n      // repeats of the same extent may indicate constraint conflicts leading to an endless cycle\n      return;\n    }\n    this.viewExtent_ = extent;\n\n    const ovmapSize = /** @type {import(\"../size.js\").Size} */ (ovmap.getSize());\n\n    const ovview = ovmap.getView();\n    const ovextent = ovview.calculateExtentInternal(ovmapSize);\n\n    const topLeftPixel =\n        ovmap.getPixelFromCoordinateInternal(getTopLeft(extent));\n    const bottomRightPixel =\n        ovmap.getPixelFromCoordinateInternal(getBottomRight(extent));\n\n    const boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    const boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    const ovmapWidth = ovmapSize[0];\n    const ovmapHeight = ovmapSize[1];\n\n    if (boxWidth < ovmapWidth * MIN_RATIO ||\n        boxHeight < ovmapHeight * MIN_RATIO ||\n        boxWidth > ovmapWidth * MAX_RATIO ||\n        boxHeight > ovmapHeight * MAX_RATIO) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  }\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  resetExtent_() {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    const ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    const steps = Math.log(\n      MAX_RATIO / MIN_RATIO) / Math.LN2;\n    const ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fitInternal(polygonFromExtent(extent));\n  }\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  recenter_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    ovview.setCenterInternal(view.getCenterInternal());\n  }\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  updateBox_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    const rotation = this.rotateWithView_ ? 0 : -view.getRotation();\n\n    const overlay = this.boxOverlay_;\n    const box = this.boxOverlay_.getElement();\n    const center = view.getCenterInternal();\n    const resolution = view.getResolution();\n    const ovresolution = ovview.getResolution();\n    const width = mapSize[0] * resolution / ovresolution;\n    const height = mapSize[1] * resolution / ovresolution;\n\n    // set position using center coordinates\n    overlay.setPosition(center);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = width + 'px';\n      box.style.height = height + 'px';\n      const transform = 'rotate(' + rotation + 'rad)';\n      box.style.transform = transform;\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    const ovmap = this.ovmap_;\n    if (!this.collapsed_) {\n      if (ovmap.isRendered()) {\n        this.viewExtent_ = undefined;\n        ovmap.render();\n        return;\n      }\n      ovmap.updateSize();\n      this.resetExtent_();\n      listenOnce(ovmap, MapEventType.POSTRENDER,\n        function(event) {\n          this.updateBox_();\n        },\n        this);\n    }\n  }\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the overview map view can rotate, `false` otherwise.\n   * @return {boolean} True if the control view can rotate.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Set whether the overview map view should rotate with the main map view.\n   * @param {boolean} rotateWithView True if the control view should rotate.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    if (this.rotateWithView_ === rotateWithView) {\n      return;\n    }\n    this.rotateWithView_ = rotateWithView;\n    if (this.getMap().getView().getRotation() !== 0) {\n      if (this.rotateWithView_) {\n        this.handleRotationChanged_();\n      } else {\n        this.ovmap_.getView().setRotation(0);\n      }\n      this.viewExtent_ = undefined;\n      this.validateExtent_();\n      this.updateBox_();\n    }\n  }\n\n  /**\n   * Return the overview map.\n   * @return {import(\"../PluggableMap.js\").default} Overview map.\n   * @api\n   */\n  getOverviewMap() {\n    return this.ovmap_;\n  }\n}\n\n\n/**\n * Update the overview map element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {OverviewMap}\n */\nexport function render(mapEvent) {\n  this.validateExtent_();\n  this.updateBox_();\n}\n\n\nexport default OverviewMap;\n","/**\n * @module ol/control/ScaleLine\n */\nimport {getChangeEventType} from '../Object.js';\nimport {assert} from '../asserts.js';\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {getPointResolution, METERS_PER_UNIT} from '../proj.js';\nimport ProjUnits from '../proj/Units.js';\n\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport const Units = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us'\n};\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units|string} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n */\n\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nclass ScaleLine extends Control {\n\n  /**\n   * @param {Options=} opt_options Scale line options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    const className = options.className !== undefined ? options.className :\n      options.bar ? 'ol-scale-bar' : 'ol-scale-line';\n\n    super({\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addEventListener(getChangeEventType(UNITS_PROP), this.handleUnitsChanged_);\n\n    this.setUnits(options.units || Units.METRIC);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == Units.DEGREES ?\n      ProjUnits.DEGREES :\n      ProjUnits.METERS;\n    let pointResolution =\n        getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n\n    let nominalCount = this.minWidth_ * pointResolution;\n    let suffix = '';\n    if (units == Units.DEGREES) {\n      const metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == Units.IMPERIAL) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == Units.NAUTICAL) {\n      pointResolution /= 1852;\n      suffix = 'nm';\n    } else if (units == Units.METRIC) {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == Units.US) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    let i = 3 * Math.floor(\n      Math.log(this.minWidth_ * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      } else if (width >= this.minWidth_) {\n        break;\n      }\n      ++i;\n    }\n    let html;\n    if (this.scaleBar_) {\n      html = this.createScaleBar(width, count, suffix);\n    } else {\n      html = count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n    }\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @returns {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const mapScale = '1 : ' + Math.round(this.getScaleForResolution()).toLocaleString();\n    const scaleSteps = [];\n    const stepWidth = width / this.scaleBarSteps_;\n    let backgroundColor = '#ffffff';\n    for (let i = 0; i < this.scaleBarSteps_; i++) {\n      if (i === 0) {\n        // create the first marker at position 0\n        scaleSteps.push(this.createMarker('absolute', i));\n      }\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n            'class=\"ol-scale-singlebar\" ' +\n            'style=' +\n              '\"width: ' + stepWidth + 'px;' +\n              'background-color: ' + backgroundColor + ';\"' +\n          '>' +\n          '</div>' +\n          this.createMarker('relative', i) +\n          /*render text every second step, except when only 2 steps */\n          (i % 2 === 0 || this.scaleBarSteps_ === 2 ?\n            this.createStepText(i, width, false, scale, suffix) :\n            ''\n          ) +\n        '</div>'\n      );\n      if (i === this.scaleBarSteps_ - 1) {\n        {/*render text at the end */}\n        scaleSteps.push(this.createStepText(i + 1, width, true, scale, suffix));\n      }\n      // switch colors of steps between black and white\n      if (backgroundColor === '#ffffff') {\n        backgroundColor = '#000000';\n      } else {\n        backgroundColor = '#ffffff';\n      }\n    }\n\n    let scaleBarText;\n    if (this.scaleBarText_) {\n      scaleBarText = '<div ' +\n      'class=\"ol-scale-text\" ' +\n      'style=\"width: ' + width + 'px;\">' +\n      mapScale +\n    '</div>';\n    } else {\n      scaleBarText = '';\n    }\n    const container = '<div ' +\n      'style=\"display: flex;\">' +\n      scaleBarText +\n      scaleSteps.join('') +\n    '</div>';\n    return container;\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {string} position - The position, absolute or relative\n   * @param {number} i - The iterator\n   * @returns {string} The stringified div containing the marker\n   */\n  createMarker(position, i) {\n    const top = position === 'absolute' ? 3 : -10;\n    return '<div ' +\n        'class=\"ol-scale-step-marker\" ' +\n        'style=\"position: ' + position + ';' +\n          'top: ' + top + 'px;\"' +\n      '></div>';\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i - The iterator\n   * @param {number} width - The width the scalebar will currently use\n   * @param {boolean} isLast - Flag indicating if we add the last step text\n   * @param {number} scale - The current scale for the whole scalebar\n   * @param {string} suffix - The suffix for the scale\n   * @returns {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length = i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_ * i) * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : width / this.scaleBarSteps_ * -1;\n    const minWidth = i === 0 ? 0 : width / this.scaleBarSteps_ * 2;\n    return '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n        'margin-left: ' + margin + 'px;' +\n        'text-align: ' + (i === 0 ? 'left' : 'center') + '; ' +\n        'min-width: ' + minWidth + 'px;' +\n        'left: ' + (isLast ? width + 'px' : 'unset') + ';\"' +\n      '>' +\n      lengthString +\n    '</div>';\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = this.getMap().getView().getResolution();\n    const dpi = 25.4 / 0.28;\n    const mpu = this.viewState_.projection.getMetersPerUnit();\n    const inchesPerMeter = 39.37;\n    return parseFloat(resolution.toString()) * mpu * inchesPerMeter * dpi;\n  }\n}\n\n/**\n * Update the scale line element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {ScaleLine}\n */\nexport function render(mapEvent) {\n  const frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.viewState_ = null;\n  } else {\n    this.viewState_ = frameState.viewState;\n  }\n  this.updateElement_();\n}\n\n\nexport default ScaleLine;\n","/**\n * @module ol/control/ZoomSlider\n */\n\nimport 'elm-pep';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {clamp} from '../math.js';\nimport PointerEventType from '../pointer/EventType.js';\n\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nconst Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nclass ZoomSlider extends Control {\n\n  /**\n   * @param {Options=} opt_options Zoom slider options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render || render\n    });\n\n    /**\n      * @type {!Array.<import(\"../events.js\").EventsKey>}\n      * @private\n      */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    const className = options.className !== undefined ? options.className : 'ol-zoomslider';\n    const thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    const containerElement = this.element;\n    containerElement.className = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n\n    containerElement.addEventListener(PointerEventType.POINTERDOWN, this.handleDraggerStart_.bind(this), false);\n    containerElement.addEventListener(PointerEventType.POINTERMOVE, this.handleDraggerDrag_.bind(this), false);\n    containerElement.addEventListener(PointerEventType.POINTERUP, this.handleDraggerEnd_.bind(this), false);\n\n    containerElement.addEventListener(EventType.CLICK, this.handleContainerClick_.bind(this), false);\n    thumbElement.addEventListener(EventType.CLICK, stopPropagation, false);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      map.render();\n    }\n  }\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @private\n   */\n  initSlider_() {\n    const container = this.element;\n    const containerSize = {\n      width: container.offsetWidth, height: container.offsetHeight\n    };\n\n    const thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    const computedStyle = getComputedStyle(thumb);\n    const thumbWidth = thumb.offsetWidth +\n        parseFloat(computedStyle['marginRight']) +\n        parseFloat(computedStyle['marginLeft']);\n    const thumbHeight = thumb.offsetHeight +\n        parseFloat(computedStyle['marginTop']) +\n        parseFloat(computedStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerSize.width > containerSize.height) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerSize.width - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerSize.height - thumbHeight;\n    }\n    this.sliderInitialized_ = true;\n  }\n\n  /**\n   * @param {PointerEvent} event The browser event to handle.\n   * @private\n   */\n  handleContainerClick_(event) {\n    const view = this.getMap().getView();\n\n    const relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2);\n\n    const resolution = this.getResolutionForPosition_(relativePosition);\n    const zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\n\n    view.animateInternal({\n      zoom: zoom,\n      duration: this.duration_,\n      easing: easeOut\n    });\n  }\n\n  /**\n   * Handle dragger start events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerStart_(event) {\n    if (!this.dragging_ && event.target === this.element.firstElementChild) {\n      const element = /** @type {HTMLElement} */ (this.element.firstElementChild);\n      this.getMap().getView().beginInteraction();\n      this.startX_ = event.clientX - parseFloat(element.style.left);\n      this.startY_ = event.clientY - parseFloat(element.style.top);\n      this.dragging_ = true;\n\n      if (this.dragListenerKeys_.length === 0) {\n        const drag = this.handleDraggerDrag_;\n        const end = this.handleDraggerEnd_;\n        this.dragListenerKeys_.push(\n          listen(document, PointerEventType.POINTERMOVE, drag, this),\n          listen(document, PointerEventType.POINTERUP, end, this)\n        );\n      }\n    }\n  }\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerDrag_(event) {\n    if (this.dragging_) {\n      const deltaX = event.clientX - this.startX_;\n      const deltaY = event.clientY - this.startY_;\n      const relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ = this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n    }\n  }\n\n  /**\n   * Handle dragger end events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerEnd_(event) {\n    if (this.dragging_) {\n      const view = this.getMap().getView();\n      view.endInteraction();\n\n      this.dragging_ = false;\n      this.startX_ = undefined;\n      this.startY_ = undefined;\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n    }\n  }\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  setThumbPosition_(res) {\n    const position = this.getPositionForResolution_(res);\n    const thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  }\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  getRelativePosition_(x, y) {\n    let amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  }\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  getResolutionForPosition_(position) {\n    const fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  }\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  getPositionForResolution_(res) {\n    const fn = this.getMap().getView().getValueForResolutionFunction();\n    return clamp(1 - fn(res), 0, 1);\n  }\n}\n\n\n/**\n * Update the zoomslider element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {ZoomSlider}\n */\nexport function render(mapEvent) {\n  if (!mapEvent.frameState) {\n    return;\n  }\n  if (!this.sliderInitialized_) {\n    this.initSlider_();\n  }\n  const res = mapEvent.frameState.viewState.resolution;\n  this.currentResolution_ = res;\n  this.setThumbPosition_(res);\n}\n\n\nexport default ZoomSlider;\n","/**\n * @module ol/control/ZoomToExtent\n */\nimport EventType from '../events/EventType.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nclass ZoomToExtent extends Control {\n\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    const className = options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    const label = options.label !== undefined ? options.label : 'E';\n    const tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label\n    );\n\n    button.addEventListener(EventType.CLICK, this.handleClick_.bind(this), false);\n\n    const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  }\n\n  /**\n   * @protected\n   */\n  handleZoomToExtent() {\n    const map = this.getMap();\n    const view = map.getView();\n    const extent = !this.extent ? view.getProjection().getExtent() : this.extent;\n    view.fitInternal(polygonFromExtent(extent));\n  }\n}\n\nexport default ZoomToExtent;\n","/**\n * @module ol/control\n */\nimport Collection from './Collection.js';\nimport Attribution from './control/Attribution.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} options Options.\n   */\n  constructor(options) {\n    super();\n\n    if (options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center)\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate in the user projection.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super({\n      handleEvent: handleEvent\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    const browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    const map = mapBrowserEvent.map;\n    const anchor = mapBrowserEvent.coordinate;\n    const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    const view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function(mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function(mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function(mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function(mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function(mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function(mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function(mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function(mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super(/** @type {import(\"./Interaction.js\").InteractionOptions} */ (options));\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @override\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.pointerEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type ==\n          MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n\n}\n\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\nexport default PointerInteraction;\n","/**\n * @module ol/interaction/DragPan\n */\nimport {scale as scaleCoordinate, rotate as rotateCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys, primaryAction, focus} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * In addition, if there is a `tabindex` attribute on the map element,\n * {@link module:ol/events/condition~focus} will also be applied.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    super({\n      stopDown: FALSE\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : defaultCondition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n\n  }\n\n  /**\n   * @private\n   * @param {import(\"../MapBrowserEvent\").default} mapBrowserEvent Event.\n   * @return {boolean} Condition passes.\n   */\n  conditionInternal_(mapBrowserEvent) {\n    let pass = true;\n    if (mapBrowserEvent.map.getTargetElement().hasAttribute('tabindex')) {\n      pass = focus(mapBrowserEvent);\n    }\n    return pass && this.condition_(mapBrowserEvent);\n  }\n\n\n  /**\n   * @inheritDoc\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1]\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle)\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.conditionInternal_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Browser event.\n * @return {boolean} Combined condition result.\n */\nfunction defaultCondition(mapBrowserEvent) {\n  return noModifierKeys(mapBrowserEvent) && primaryAction(mapBrowserEvent);\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport {disable} from '../rotationconstraint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta =\n        Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]]\n    ];\n    const coordinates = pixels.map(this.map_.getCoordinateFromPixelInternal, this.map_);\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {mouseActionButton} from '../events/condition.js';\nimport {VOID} from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nclass DragBoxEvent extends Event {\n\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default): void}\n     * @private\n     */\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition ?\n      options.boxEndCondition : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n      this.onBoxEnd_(mapBrowserEvent);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n    }\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from './DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n}\n\n\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n  const map = this.getMap();\n  const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n  const size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n  let extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    const mapExtent = view.calculateExtentInternal(size);\n    const boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n      map.getPixelFromCoordinateInternal(getTopRight(extent))]);\n    const factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  const resolution = view.getConstrainedResolution(view.getResolutionForExtentInternal(extent, size));\n  const center = view.getConstrainedCenter(getCenter(extent), resolution);\n\n  view.animateInternal({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    super({\n      handleEvent: handleEvent\n    });\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function(mapBrowserEvent) {\n      return noModifierKeys(mapBrowserEvent) &&\n        targetNotEditable(mapBrowserEvent);\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition !== undefined ?\n      options.condition : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ = options.pixelDelta !== undefined ?\n      options.pixelDelta : 128;\n\n  }\n\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    const keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      let deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      const delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    super({\n      handleEvent: handleEvent\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  }\n\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    const charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      const map = mapBrowserEvent.map;\n      const delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport {always, focus} from '../events/condition.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * In addition, if there is a `tabindex` attribute on the map element,\n * {@link module:ol/events/condition~focus} will also be applied.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super(/** @type {import(\"./Interaction.js\").InteractionOptions} */ (options));\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n\n  }\n\n  /**\n   * @private\n   * @param {import(\"../MapBrowserEvent\").default} mapBrowserEvent Event.\n   * @return {boolean} Condition passes.\n   */\n  conditionInternal_(mapBrowserEvent) {\n    let pass = true;\n    if (mapBrowserEvent.map.getTargetElement().hasAttribute('tabindex')) {\n      pass = focus(mapBrowserEvent);\n    }\n    return pass && this.condition_(mapBrowserEvent);\n  }\n\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(undefined, this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0, this.lastAnchor_);\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.conditionInternal_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    mapBrowserEvent.preventDefault();\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX &&\n          wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ?\n        Mode.TRACKPAD :\n        Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (this.mode_ === Mode.TRACKPAD && !view.getConstrainResolution()) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.timeout_);\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta = -clamp(this.totalDelta_, -this.maxDelta_ * this.deltaPerZoom_, this.maxDelta_ * this.deltaPerZoom_) / this.deltaPerZoom_;\n    if (view.getConstrainResolution()) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? delta > 0 ? 1 : -1 : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX);\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ &&\n          Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport {TRUE} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors.\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nclass DragAndDropEvent extends Event {\n\n  /**\n   * @param {DragAndDropEventType} type Type.\n   * @param {File} file File.\n   * @param {Array<import(\"../Feature.js\").default>=} opt_features Features.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   */\n  constructor(type, file, opt_features, opt_projection) {\n\n    super(type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */\n    this.projection = opt_projection;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n * @api\n *\n * @fires DragAndDropEvent\n */\nclass DragAndDrop extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      handleEvent: TRUE\n    });\n\n    /**\n     * @private\n     * @type {Array<typeof import(\"../format/Feature.js\").default>}\n     */\n    this.formatConstructors_ = options.formatConstructors ?\n      options.formatConstructors : [];\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = options.projection ?\n      getProjection(options.projection) : null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target = options.target ? options.target : null;\n\n  }\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  handleResult_(file, event) {\n    const result = event.target.result;\n    const map = this.getMap();\n    let projection = this.projection_;\n    if (!projection) {\n      const view = map.getView();\n      projection = view.getProjection();\n    }\n\n    const formatConstructors = this.formatConstructors_;\n    let features = [];\n    for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      const format = new formatConstructors[i]();\n      features = this.tryReadFeatures_(format, result, {\n        featureProjection: projection\n      });\n      if (features && features.length > 0) {\n        break;\n      }\n    }\n    if (this.source_) {\n      this.source_.clear();\n      this.source_.addFeatures(features);\n    }\n    this.dispatchEvent(\n      new DragAndDropEvent(\n        DragAndDropEventType.ADD_FEATURES, file,\n        features, projection));\n  }\n\n  /**\n   * @private\n   */\n  registerListeners_() {\n    const map = this.getMap();\n    if (map) {\n      const dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, handleStop, this),\n        listen(dropArea, EventType.DROP, handleStop, this)\n      ];\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setActive(active) {\n    if (!this.getActive() && active) {\n      this.registerListeners_();\n    }\n    if (this.getActive() && !active) {\n      this.unregisterListeners_();\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    this.unregisterListeners_();\n    super.setMap(map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  }\n\n  /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  tryReadFeatures_(format, text, options) {\n    try {\n      return format.readFeatures(text, options);\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  unregisterListeners_() {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  }\n}\n\n\n/**\n * @param {DragEvent} event Event.\n * @this {DragAndDrop}\n */\nfunction handleDrop(event) {\n  const files = event.dataTransfer.files;\n  for (let i = 0, ii = files.length; i < ii; ++i) {\n    const file = files.item(i);\n    const reader = new FileReader();\n    reader.addEventListener(EventType.LOAD, this.handleResult_.bind(this, file));\n    reader.readAsText(file);\n  }\n}\n\n\n/**\n * @param {DragEvent} event Event.\n */\nfunction handleStop(event) {\n  event.stopPropagation();\n  event.preventDefault();\n  event.dataTransfer.dropEffect = 'copy';\n}\n\n\nexport default DragAndDrop;\n","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport {shiftKeyOnly, mouseOnly} from '../events/condition.js';\nimport PointerInteraction from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nclass DragRotateAndZoom extends PointerInteraction {\n\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const deltaX = offset[0] - size[0] / 2;\n    const deltaY = size[1] / 2 - offset[1];\n    const theta = Math.atan2(deltaY, deltaX);\n    const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const view = map.getView();\n    if (this.lastAngle_ !== undefined) {\n      const angleDelta = this.lastAngle_ - theta;\n      view.adjustRotationInternal(angleDelta);\n    }\n    this.lastAngle_ = theta;\n    if (this.lastMagnitude_ !== undefined) {\n      view.adjustResolutionInternal(this.lastMagnitude_ / magnitude);\n    }\n    if (this.lastMagnitude_ !== undefined) {\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n    }\n    this.lastMagnitude_ = magnitude;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n    view.endInteraction(this.duration_, direction);\n    this.lastScaleDelta_ = 0;\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (this.condition_(mapBrowserEvent)) {\n      mapBrowserEvent.map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      this.lastMagnitude_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotateAndZoom;\n","/**\n * @module ol/geom/Circle\n */\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate, translate} from './flat/transform.js';\n\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `opt_layout` and no\n   *     `opt_radius` are also accepted.\n   * @param {number=} opt_radius Radius.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  constructor(center, opt_radius, opt_layout) {\n    super();\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      this.setFlatCoordinates(opt_layout, center);\n    } else {\n      const radius = opt_radius ? opt_radius : 0;\n      this.setCenterAndRadius(center, radius, opt_layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n      extent);\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.CIRCLE;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getCoordinates() {\n    return null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setCoordinates(coordinates, opt_layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(rotate(center, 0, center.length, stride, angle, anchor, center));\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(translate(center, 0, center.length, stride, deltaX, deltaY, center));\n    this.changed();\n  }\n\n}\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n * @property {Array<number>} displacement\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: this.getScale(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice()\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @template T\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @template T\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: 1,\n      displacement: options.displacement !== undefined ? options.displacement : [0, 0]\n    });\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    this.render();\n\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice()\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getHitDetectionImage(pixelRatio) {\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.canvas_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImageSize() {\n    return this.imageSize_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getHitDetectionImageSize() {\n    return this.hitDetectionImageSize_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * @inheritDoc\n   */\n  load() {}\n\n  /**\n   * @inheritDoc\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * @protected\n   */\n  render() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    let size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    const renderOptions = {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit\n    };\n\n    const context = createCanvasContext2D(size, size);\n    this.canvas_ = context.canvas;\n\n    // canvas.width and height are rounded to the closest integer\n    size = this.canvas_.width;\n    const imageSize = size;\n    const displacement = this.getDisplacement();\n\n    this.draw_(renderOptions, context, 0, 0);\n\n    this.createHitDetectionCanvas_(renderOptions);\n\n    this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  draw_(renderOptions, context, x, y) {\n    let i, angle0, radiusC;\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      const radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    this.hitDetectionCanvas_ = this.canvas_;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n      }\n    }\n\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  drawHitDetectionCanvas_(renderOptions, context, x, y) {\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      const radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      let i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  }\n\n}\n\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n */\n\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      displacement: options.displacement !== undefined ? options.displacement : [0, 0]\n    });\n\n  }\n\n  /**\n  * Clones the style.\n  * @return {CircleStyle} The cloned style.\n  * @override\n  * @api\n  */\n  clone() {\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      displacement: this.getDisplacement().slice()\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth()\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options=} opt_options Style options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n       * @private\n       * @type {import(\"./Image.js\").default}\n       */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex()\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function(feature) {\n        return (\n          /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry))\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function() {\n        return (\n          /** @type {import(\"../geom/Geometry.js\").default} */ (geometry)\n        );\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ = options.renderBuffer !== undefined ?\n      options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n      options.updateWhileAnimating : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n      options.updateWhileInteracting : false;\n\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return (\n    /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike}\n   *     Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If it is `undefined` the default style is used. If\n   * it is `null` the layer has no style (a `null` style), so only features\n   * that have their own styles will be rendered in the layer. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style !== undefined ? style : createDefaultStyle;\n    this.styleFunction_ = style === null ?\n      undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n\n}\n\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n      return dash * pixelRatio;\n    });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatCoordinates(flatCoordinates, offset, end, stride, closed, skipFirst) {\n\n    let myEnd = this.coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          this.coordinates[myEnd++] = lastXCoord;\n          this.coordinates[myEnd++] = lastYCoord;\n        }\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else if (nextRel === Relationship.INTERSECTING) {\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      this.coordinates[myEnd++] = lastXCoord;\n      this.coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @inheritDoc.\n   */\n  drawCustom(geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n      flatCoordinates = geometry.getOrientedFlatCoordinates();\n      builderEndss = [];\n      const endss = geometry.getEndss();\n      offset = 0;\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const myEnds = [];\n        offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n        builderEndss.push(myEnds);\n      }\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        builderBegin, builderEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n      builderEnds = [];\n      flatCoordinates = (type == GeometryType.POLYGON) ?\n        /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n        geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride, builderEnds);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        builderBegin, builderEnds, geometry, renderer, inflateCoordinatesArray]);\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatCoordinates(\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        builderBegin, builderEnd, geometry, renderer, inflateCoordinates]);\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      builderEnd = this.coordinates.length;\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        builderBegin, builderEnd, geometry, renderer]);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    const extent = geometry.getExtent();\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0, extent];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0, extent];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {CanvasInstruction} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle);\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle);\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap = strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash.slice() : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin = strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit = strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n      state.lineJoin, state.miterLimit,\n      this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (state.currentStrokeStyle != strokeStyle ||\n        state.currentLineCap != lineCap ||\n        (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n        state.currentLineDashOffset != lineDashOffset ||\n        state.currentLineJoin != lineJoin ||\n        state.currentLineWidth != lineWidth ||\n        state.currentMiterLimit != miterLimit) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = this.resolution * (this.maxLineWidth + 1) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroups}\n     */\n    this.declutterGroups_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} My end.\n   */\n  drawCoordinates_(flatCoordinates, offset, end, stride) {\n    return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroups_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroups_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroups_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroups_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setImageStyle(imageStyle, declutterGroups) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    const image = imageStyle.getImage(1);\n    const origin = imageStyle.getOrigin();\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.declutterGroups_ = /** @type {import(\"../canvas.js\").DeclutterGroups} */ (declutterGroups);\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScale();\n    this.width_ = size[0];\n  }\n}\n\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n    const moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  finish() {\n    const state = this.state;\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @inheritDoc.\n   */\n  applyStroke(state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\n\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n      const moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {defaultTextAlign, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, registerFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1\n};\n\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroups}\n     */\n    this.declutterGroups_;\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n  }\n\n  /**\n   * @inheritDoc\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    let begin = this.coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let end = 2;\n    let stride = 2;\n    let i, ii;\n\n    if (textState.placement === TextPlacement.LINE) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      stride = geometry.getStride();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = geometry.getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = geometry.getEnds().slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss = geometry.getEndss();\n        ends = [];\n        for (i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (i = flatOffset; i < flatEnd; i += stride) {\n          this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        end = this.coordinates.length;\n        flatOffset = ends[o];\n        const declutterGroup = this.declutterGroups_ ?\n          (o === 0 ? this.declutterGroups_[0] : [].concat(this.declutterGroups_[0])) :\n          null;\n        this.drawChars_(begin, end, declutterGroup);\n        begin = end;\n      }\n      this.endGeometry(feature);\n\n    } else {\n\n      let geometryWidths = null;\n      if (!textState.overflow) {\n        geometryWidths = [];\n      }\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          end = flatCoordinates.length;\n          if (end == 0) {\n            return;\n          }\n          break;\n        default:\n      }\n      end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n        null, NaN, NaN, this.declutterGroups_, NaN, 1, 0, 0,\n        this.textRotateWithView_, this.textRotation_, 1, NaN,\n        textState.padding == defaultPadding ?\n          defaultPadding : textState.padding.map(function(p) {\n            return p * pixelRatio;\n          }),\n        !!textState.backgroundFill, !!textState.backgroundStroke,\n        this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n        this.textOffsetX_, this.textOffsetY_, geometryWidths\n      ]);\n      this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n        null, NaN, NaN, this.declutterGroups_, NaN, 1, 0, 0,\n        this.textRotateWithView_, this.textRotation_, 1 / this.pixelRatio, NaN,\n        textState.padding,\n        !!textState.backgroundFill, !!textState.backgroundStroke,\n        this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n        this.textOffsetX_, this.textOffsetY_, geometryWidths\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   */\n  drawChars_(begin, end, declutterGroup) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const textScale = textState.scale;\n    const strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n\n    this.instructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      pixelRatio,\n      offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      1,\n      offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n    ]);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setTextStyle(textStyle, declutterGroups) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      this.declutterGroups_ = /** @type {import(\"../canvas.js\").DeclutterGroups} */ (declutterGroups);\n\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle);\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n            lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n            lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n            miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle);\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScale();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? 1 : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState ?\n        (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n        strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n        strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n        '';\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?') + (textState.textBaseline || '?');\n      this.fillKey_ = fillState ?\n        (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n        '';\n    }\n  }\n}\n\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport {createEmpty} from '../../extent.js';\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder\n};\n\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} declutter Decluttering enabled.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio, declutter) {\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.declutter_ = declutter;\n\n    /**\n     * @type {import(\"../canvas.js\").DeclutterGroups}\n     * @private\n     */\n    this.declutterGroups_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @param {boolean} group Group with previous builder.\n   * @return {import(\"../canvas\").DeclutterGroups} The resulting instruction groups.\n   */\n  addDeclutter(group) {\n    let declutter = null;\n    if (this.declutter_) {\n      if (group) {\n        declutter = this.declutterGroups_;\n        /** @type {number} */ (declutter[0][4])++;\n      } else {\n        declutter = [createEmpty()];\n        this.declutterGroups_ = declutter;\n        declutter[0].push(1);\n      }\n    }\n    return declutter;\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_,\n        this.resolution_, this.pixelRatio_);\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache) {\n  const result = [];\n\n  // Keep text upright\n  const reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  const numChars = text.length;\n\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let segmentM = 0;\n  let segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n  let angleChanged = false;\n\n  let index, previousAngle;\n  for (let i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    const char = text[index];\n    const charLength = scale * measureAndCacheTextWidth(font, char, cache);\n    const charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    const segmentPos = charM - segmentM;\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      angleChanged = angleChanged || delta !== 0;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n    const interpolate = segmentPos / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result[index] = [x, y, charLength / 2, angle, char];\n    startM += charLength;\n  }\n  return angleChanged ? result : [[result[0][0], result[0][1], result[0][2], result[0][3], text]];\n}\n","(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\ntypeof define === 'function' && define.amd ? define(factory) :\n(global = global || self, global.RBush = factory());\n}(this, function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) { swap(arr, left, right); }\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) { i++; }\n            while (compare(arr[j], t) > 0) { j--; }\n        }\n\n        if (compare(arr[left], t) === 0) { swap(arr, left, j); }\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) { left = j + 1; }\n        if (k <= j) { right = j - 1; }\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nvar RBush = function RBush(maxEntries) {\n    if ( maxEntries === void 0 ) maxEntries = 9;\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n    this.clear();\n};\n\nRBush.prototype.all = function all () {\n    return this._all(this.data, []);\n};\n\nRBush.prototype.search = function search (bbox) {\n    var node = this.data;\n    var result = [];\n\n    if (!intersects(bbox, node)) { return result; }\n\n    var toBBox = this.toBBox;\n    var nodesToSearch = [];\n\n    while (node) {\n        for (var i = 0; i < node.children.length; i++) {\n            var child = node.children[i];\n            var childBBox = node.leaf ? toBBox(child) : child;\n\n            if (intersects(bbox, childBBox)) {\n                if (node.leaf) { result.push(child); }\n                else if (contains(bbox, childBBox)) { this._all(child, result); }\n                else { nodesToSearch.push(child); }\n            }\n        }\n        node = nodesToSearch.pop();\n    }\n\n    return result;\n};\n\nRBush.prototype.collides = function collides (bbox) {\n    var node = this.data;\n\n    if (!intersects(bbox, node)) { return false; }\n\n    var nodesToSearch = [];\n    while (node) {\n        for (var i = 0; i < node.children.length; i++) {\n            var child = node.children[i];\n            var childBBox = node.leaf ? this.toBBox(child) : child;\n\n            if (intersects(bbox, childBBox)) {\n                if (node.leaf || contains(bbox, childBBox)) { return true; }\n                nodesToSearch.push(child);\n            }\n        }\n        node = nodesToSearch.pop();\n    }\n\n    return false;\n};\n\nRBush.prototype.load = function load (data) {\n    if (!(data && data.length)) { return this; }\n\n    if (data.length < this._minEntries) {\n        for (var i = 0; i < data.length; i++) {\n            this.insert(data[i]);\n        }\n        return this;\n    }\n\n    // recursively build the tree with the given data from scratch using OMT algorithm\n    var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n    if (!this.data.children.length) {\n        // save as is if tree is empty\n        this.data = node;\n\n    } else if (this.data.height === node.height) {\n        // split root if trees have the same height\n        this._splitRoot(this.data, node);\n\n    } else {\n        if (this.data.height < node.height) {\n            // swap trees if inserted one is bigger\n            var tmpNode = this.data;\n            this.data = node;\n            node = tmpNode;\n        }\n\n        // insert the small tree into the large tree at appropriate level\n        this._insert(node, this.data.height - node.height - 1, true);\n    }\n\n    return this;\n};\n\nRBush.prototype.insert = function insert (item) {\n    if (item) { this._insert(item, this.data.height - 1); }\n    return this;\n};\n\nRBush.prototype.clear = function clear () {\n    this.data = createNode([]);\n    return this;\n};\n\nRBush.prototype.remove = function remove (item, equalsFn) {\n    if (!item) { return this; }\n\n    var node = this.data;\n    var bbox = this.toBBox(item);\n    var path = [];\n    var indexes = [];\n    var i, parent, goingUp;\n\n    // depth-first iterative tree traversal\n    while (node || path.length) {\n\n        if (!node) { // go up\n            node = path.pop();\n            parent = path[path.length - 1];\n            i = indexes.pop();\n            goingUp = true;\n        }\n\n        if (node.leaf) { // check current node\n            var index = findItem(item, node.children, equalsFn);\n\n            if (index !== -1) {\n                // item found, remove the item and condense tree upwards\n                node.children.splice(index, 1);\n                path.push(node);\n                this._condense(path);\n                return this;\n            }\n        }\n\n        if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n            path.push(node);\n            indexes.push(i);\n            i = 0;\n            parent = node;\n            node = node.children[0];\n\n        } else if (parent) { // go right\n            i++;\n            node = parent.children[i];\n            goingUp = false;\n\n        } else { node = null; } // nothing found\n    }\n\n    return this;\n};\n\nRBush.prototype.toBBox = function toBBox (item) { return item; };\n\nRBush.prototype.compareMinX = function compareMinX (a, b) { return a.minX - b.minX; };\nRBush.prototype.compareMinY = function compareMinY (a, b) { return a.minY - b.minY; };\n\nRBush.prototype.toJSON = function toJSON () { return this.data; };\n\nRBush.prototype.fromJSON = function fromJSON (data) {\n    this.data = data;\n    return this;\n};\n\nRBush.prototype._all = function _all (node, result) {\n    var nodesToSearch = [];\n    while (node) {\n        if (node.leaf) { result.push.apply(result, node.children); }\n        else { nodesToSearch.push.apply(nodesToSearch, node.children); }\n\n        node = nodesToSearch.pop();\n    }\n    return result;\n};\n\nRBush.prototype._build = function _build (items, left, right, height) {\n\n    var N = right - left + 1;\n    var M = this._maxEntries;\n    var node;\n\n    if (N <= M) {\n        // reached leaf level; return leaf\n        node = createNode(items.slice(left, right + 1));\n        calcBBox(node, this.toBBox);\n        return node;\n    }\n\n    if (!height) {\n        // target height of the bulk-loaded tree\n        height = Math.ceil(Math.log(N) / Math.log(M));\n\n        // target number of root entries to maximize storage utilization\n        M = Math.ceil(N / Math.pow(M, height - 1));\n    }\n\n    node = createNode([]);\n    node.leaf = false;\n    node.height = height;\n\n    // split the items into M mostly square tiles\n\n    var N2 = Math.ceil(N / M);\n    var N1 = N2 * Math.ceil(Math.sqrt(M));\n\n    multiSelect(items, left, right, N1, this.compareMinX);\n\n    for (var i = left; i <= right; i += N1) {\n\n        var right2 = Math.min(i + N1 - 1, right);\n\n        multiSelect(items, i, right2, N2, this.compareMinY);\n\n        for (var j = i; j <= right2; j += N2) {\n\n            var right3 = Math.min(j + N2 - 1, right2);\n\n            // pack each entry recursively\n            node.children.push(this._build(items, j, right3, height - 1));\n        }\n    }\n\n    calcBBox(node, this.toBBox);\n\n    return node;\n};\n\nRBush.prototype._chooseSubtree = function _chooseSubtree (bbox, node, level, path) {\n    while (true) {\n        path.push(node);\n\n        if (node.leaf || path.length - 1 === level) { break; }\n\n        var minArea = Infinity;\n        var minEnlargement = Infinity;\n        var targetNode = (void 0);\n\n        for (var i = 0; i < node.children.length; i++) {\n            var child = node.children[i];\n            var area = bboxArea(child);\n            var enlargement = enlargedArea(bbox, child) - area;\n\n            // choose entry with the least area enlargement\n            if (enlargement < minEnlargement) {\n                minEnlargement = enlargement;\n                minArea = area < minArea ? area : minArea;\n                targetNode = child;\n\n            } else if (enlargement === minEnlargement) {\n                // otherwise choose one with the smallest area\n                if (area < minArea) {\n                    minArea = area;\n                    targetNode = child;\n                }\n            }\n        }\n\n        node = targetNode || node.children[0];\n    }\n\n    return node;\n};\n\nRBush.prototype._insert = function _insert (item, level, isNode) {\n    var bbox = isNode ? item : this.toBBox(item);\n    var insertPath = [];\n\n    // find the best node for accommodating the item, saving all nodes along the path too\n    var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n    // put the item into the node\n    node.children.push(item);\n    extend(node, bbox);\n\n    // split on node overflow; propagate upwards if necessary\n    while (level >= 0) {\n        if (insertPath[level].children.length > this._maxEntries) {\n            this._split(insertPath, level);\n            level--;\n        } else { break; }\n    }\n\n    // adjust bboxes along the insertion path\n    this._adjustParentBBoxes(bbox, insertPath, level);\n};\n\n// split overflowed node into two\nRBush.prototype._split = function _split (insertPath, level) {\n    var node = insertPath[level];\n    var M = node.children.length;\n    var m = this._minEntries;\n\n    this._chooseSplitAxis(node, m, M);\n\n    var splitIndex = this._chooseSplitIndex(node, m, M);\n\n    var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n    newNode.height = node.height;\n    newNode.leaf = node.leaf;\n\n    calcBBox(node, this.toBBox);\n    calcBBox(newNode, this.toBBox);\n\n    if (level) { insertPath[level - 1].children.push(newNode); }\n    else { this._splitRoot(node, newNode); }\n};\n\nRBush.prototype._splitRoot = function _splitRoot (node, newNode) {\n    // split root node\n    this.data = createNode([node, newNode]);\n    this.data.height = node.height + 1;\n    this.data.leaf = false;\n    calcBBox(this.data, this.toBBox);\n};\n\nRBush.prototype._chooseSplitIndex = function _chooseSplitIndex (node, m, M) {\n    var index;\n    var minOverlap = Infinity;\n    var minArea = Infinity;\n\n    for (var i = m; i <= M - m; i++) {\n        var bbox1 = distBBox(node, 0, i, this.toBBox);\n        var bbox2 = distBBox(node, i, M, this.toBBox);\n\n        var overlap = intersectionArea(bbox1, bbox2);\n        var area = bboxArea(bbox1) + bboxArea(bbox2);\n\n        // choose distribution with minimum overlap\n        if (overlap < minOverlap) {\n            minOverlap = overlap;\n            index = i;\n\n            minArea = area < minArea ? area : minArea;\n\n        } else if (overlap === minOverlap) {\n            // otherwise choose distribution with minimum area\n            if (area < minArea) {\n                minArea = area;\n                index = i;\n            }\n        }\n    }\n\n    return index || M - m;\n};\n\n// sorts node children by the best axis for split\nRBush.prototype._chooseSplitAxis = function _chooseSplitAxis (node, m, M) {\n    var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n    var compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n    var xMargin = this._allDistMargin(node, m, M, compareMinX);\n    var yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n    // if total distributions margin value is minimal for x, sort by minX,\n    // otherwise it's already sorted by minY\n    if (xMargin < yMargin) { node.children.sort(compareMinX); }\n};\n\n// total margin of all possible split distributions where each node is at least m full\nRBush.prototype._allDistMargin = function _allDistMargin (node, m, M, compare) {\n    node.children.sort(compare);\n\n    var toBBox = this.toBBox;\n    var leftBBox = distBBox(node, 0, m, toBBox);\n    var rightBBox = distBBox(node, M - m, M, toBBox);\n    var margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n    for (var i = m; i < M - m; i++) {\n        var child = node.children[i];\n        extend(leftBBox, node.leaf ? toBBox(child) : child);\n        margin += bboxMargin(leftBBox);\n    }\n\n    for (var i$1 = M - m - 1; i$1 >= m; i$1--) {\n        var child$1 = node.children[i$1];\n        extend(rightBBox, node.leaf ? toBBox(child$1) : child$1);\n        margin += bboxMargin(rightBBox);\n    }\n\n    return margin;\n};\n\nRBush.prototype._adjustParentBBoxes = function _adjustParentBBoxes (bbox, path, level) {\n    // adjust bboxes along the given tree path\n    for (var i = level; i >= 0; i--) {\n        extend(path[i], bbox);\n    }\n};\n\nRBush.prototype._condense = function _condense (path) {\n    // go through the path, removing empty nodes and updating bboxes\n    for (var i = path.length - 1, siblings = (void 0); i >= 0; i--) {\n        if (path[i].children.length === 0) {\n            if (i > 0) {\n                siblings = path[i - 1].children;\n                siblings.splice(siblings.indexOf(path[i]), 1);\n\n            } else { this.clear(); }\n\n        } else { calcBBox(path[i], this.toBBox); }\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) { return items.indexOf(item); }\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) { return i; }\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) { destNode = createNode(null); }\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k; i < p; i++) {\n        var child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX);\n    var minY = Math.max(a.minY, b.minY);\n    var maxX = Math.min(a.maxX, b.maxX);\n    var maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) { continue; }\n\n        var mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n\nreturn RBush;\n\n}));\n","/**\n * @module ol/render/canvas/Executor\n */\nimport {equals} from '../../array.js';\nimport {createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, intersects} from '../../extent.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {drawImageOrLabel, defaultPadding, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\nimport {defaultTextAlign, measureTextHeight, measureAndCacheTextWidth, measureTextWidths} from '../canvas.js';\nimport RBush from 'rbush/rbush.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\n\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} textStates The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} fillStates The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} strokeStates The stroke states (decluttering).\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @type {Array<*>}\n     */\n    this.declutterItems = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = textState.scale * pixelRatio;\n    const align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    const strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      // make canvas 2 pixels wider to account for italic text width measurement errors\n      width: Math.ceil((renderWidth + 2) * scale),\n      height: Math.ceil((height + strokeWidth) * scale),\n      contextInstructions: contextInstructions\n    };\n    if (scale != 1) {\n      contextInstructions.push('scale', [scale, scale]);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = (0.5 - align);\n    const x = align * renderWidth + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n      context.stroke();\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {number} height Height.\n   * @param {number} opacity Opacity.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {number} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {number} width Width.\n   * @param {Array<number>} padding Padding.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayImageOrLabel_(\n    context,\n    x,\n    y,\n    imageOrLabel,\n    anchorX,\n    anchorY,\n    declutterGroup,\n    height,\n    opacity,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    width,\n    padding,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = fillInstruction || strokeInstruction;\n    anchorX *= scale;\n    anchorY *= scale;\n    x -= anchorX;\n    y -= anchorY;\n\n    const w = (width + originX > imageOrLabel.width) ? imageOrLabel.width - originX : width;\n    const h = (height + originY > imageOrLabel.height) ? imageOrLabel.height - originY : height;\n    const boxW = padding[3] + w * scale + padding[1];\n    const boxH = padding[0] + h * scale + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform = null;\n    if (rotation !== 0) {\n      const centerX = x + anchorX;\n      const centerY = y + anchorY;\n      transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n      applyTransform(tmpTransform, p1);\n      applyTransform(tmpTransform, p2);\n      applyTransform(tmpTransform, p3);\n      applyTransform(tmpTransform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n    }\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n    const intersects =\n        tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n        tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    if (declutterGroup) {\n      if (!intersects && declutterGroup[4] == 1) {\n        return;\n      }\n      extend(declutterGroup, tmpExtent);\n      const declutterArgs = intersects ?\n        [context, transform ? transform.slice(0) : null, opacity, imageOrLabel, originX, originY, w, h, x, y, scale] :\n        null;\n      if (declutterArgs) {\n        if (fillStroke) {\n          declutterArgs.push(fillInstruction, strokeInstruction, p1.slice(0), p2.slice(0), p3.slice(0), p4.slice(0));\n        }\n        declutterGroup.push(declutterArgs);\n      }\n    } else if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(context, p1, p2, p3, p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction));\n      }\n      drawImageOrLabel(context, transform, opacity, imageOrLabel, originX, originY, w, h, x, y, scale);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} opacity Layer opacity.\n   * @param {?} declutterTree Declutter tree.\n   * @return {?} Declutter tree.\n   */\n  renderDeclutter(declutterGroup, feature, opacity, declutterTree) {\n    if (declutterGroup && declutterGroup.length > 5) {\n      const groupCount = declutterGroup[4];\n      if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n        /** @type {import(\"../../structs/RBush.js\").Entry} */\n        const box = {\n          minX: /** @type {number} */ (declutterGroup[0]),\n          minY: /** @type {number} */ (declutterGroup[1]),\n          maxX: /** @type {number} */ (declutterGroup[2]),\n          maxY: /** @type {number} */ (declutterGroup[3]),\n          value: feature\n        };\n        if (!declutterTree) {\n          declutterTree = new RBush(9);\n        }\n        if (!declutterTree.collides(box)) {\n          declutterTree.insert(box);\n          for (let j = 5, jj = declutterGroup.length; j < jj; ++j) {\n            const declutterData = /** @type {Array} */ (declutterGroup[j]);\n            const context = declutterData[0];\n            const currentAlpha = context.globalAlpha;\n            if (currentAlpha !== opacity) {\n              context.globalAlpha = opacity;\n            }\n            if (declutterData.length > 11) {\n              this.replayTextBackground_(declutterData[0],\n                declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                declutterData[11], declutterData[12]);\n            }\n            drawImageOrLabel.apply(undefined, declutterData);\n            if (currentAlpha !== opacity) {\n              context.globalAlpha = currentAlpha;\n            }\n          }\n        }\n        declutterGroup.length = 5;\n        createOrUpdateEmpty(declutterGroup);\n      }\n    }\n    return declutterTree;\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale;\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike): T|undefined} featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    opt_hitExtent\n  ) {\n    this.declutterItems.length = 0;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates, 0, this.coordinates.length, 2,\n        transform, this.pixelCoordinates_);\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, declutterGroups, image, text, textKey;\n    let strokeKey, fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform = Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {CanvasInstruction} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (opt_hitExtent !== undefined && !intersects(opt_hitExtent, instruction[3])) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          declutterGroups = featureCallback ? null : instruction[6];\n          let height = /** @type {number} */ (instruction[7]);\n          const opacity = /** @type {number} */ (instruction[8]);\n          const originX = /** @type {number} */ (instruction[9]);\n          const originY = /** @type {number} */ (instruction[10]);\n          const rotateWithView = /** @type {boolean} */ (instruction[11]);\n          let rotation = /** @type {number} */ (instruction[12]);\n          const scale = /** @type {number} */ (instruction[13]);\n          let width = /** @type {number} */ (instruction[14]);\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey);\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[7] = height;\n            width = image.width;\n            instruction[14] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          let declutterGroupIndex = 0;\n          for (; d < dd; d += 2) {\n            if (geometryWidths && geometryWidths[widthIndex++] < width / this.pixelRatio) {\n              continue;\n            }\n            if (declutterGroups) {\n              const index = Math.floor(declutterGroupIndex);\n              if (declutterGroups.length < index + 1) {\n                declutterGroup = createEmpty();\n                declutterGroup.push(declutterGroups[0][4]);\n                declutterGroups.push(declutterGroup);\n              }\n              declutterGroup = declutterGroups[index];\n            }\n            this.replayImageOrLabel_(context,\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\n              snapToPixel, width, padding,\n              backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null,\n              backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n            if (declutterGroup) {\n              if (declutterGroupIndex === Math.floor(declutterGroupIndex)) {\n                this.declutterItems.push(this, declutterGroup, feature);\n              }\n              declutterGroupIndex += 1 / declutterGroup[4];\n\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          declutterGroup = featureCallback ? null : instruction[4];\n          const overflow = /** @type {number} */ (instruction[5]);\n          fillKey = /** @type {string} */ (instruction[6]);\n          const maxAngle = /** @type {number} */ (instruction[7]);\n          const measurePixelRatio = /** @type {number} */ (instruction[8]);\n          const offsetY = /** @type {number} */ (instruction[9]);\n          strokeKey = /** @type {string} */ (instruction[10]);\n          const strokeWidth = /** @type {number} */ (instruction[11]);\n          text = /** @type {string} */ (instruction[12]);\n          textKey = /** @type {string} */ (instruction[13]);\n          const pixelRatioScale = /** @type {number} */ (instruction[14]);\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = textState.scale * measurePixelRatio;\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength = textScale * measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates, begin, end, 2, text, startM, maxAngle, textScale, measureAndCacheTextWidth, font, cachedWidths);\n            if (parts) {\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                  this.replayImageOrLabel_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  this.replayImageOrLabel_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n            }\n          }\n          this.declutterItems.push(this, declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n            const result = featureCallback(feature);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   */\n  execute(context, transform, viewRotation, snapToPixel) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(context, transform, this.instructions, snapToPixel, undefined, undefined);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {function(import(\"../../Feature.js\").FeatureLike): T=} opt_featureCallback\n   *     Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(context, transform,\n      this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n  }\n}\n\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport BuilderType from './BuilderType.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\nimport Executor from './Executor.js';\n\n/**\n * @const\n * @type {Array<BuilderType>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT\n];\n\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceet that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number=} opt_renderBuffer Optional rendering buffer.\n   */\n  constructor(maxExtent, resolution, pixelRatio, overlaps, allInstructions, opt_renderBuffer) {\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_, this.pixelRatio_, this.overlaps_, instructions);\n      }\n    }\n  }\n\n\n  /**\n   * @param {Array<BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(this.hitDetectionTransform_,\n      hitTolerance + 0.5, hitTolerance + 0.5,\n      1 / resolution, -1 / resolution,\n      -rotation,\n      -coordinate[0], -coordinate[1]);\n\n    if (!this.hitDetectionContext_) {\n      this.hitDetectionContext_ = createCanvasContext2D(contextSize, contextSize);\n    }\n    const context = this.hitDetectionContext_;\n\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n\n    const mask = getCircleArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @return {?} Callback result.\n     */\n    function featureCallback(feature) {\n      const imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n      for (let i = 0; i < contextSize; i++) {\n        for (let j = 0; j < contextSize; j++) {\n          if (mask[i][j]) {\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n              let result;\n              if (!(declutteredFeatures && (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) ||\n                  declutteredFeatures.indexOf(feature) !== -1) {\n                result = callback(feature);\n              }\n              if (result) {\n                return result;\n              } else {\n                context.clearRect(0, 0, contextSize, contextSize);\n                return undefined;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(context, transform, rotation, featureCallback, hitExtent);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<BuilderType>=} opt_builderTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n   */\n  execute(context, transform, viewRotation, snapToPixel, opt_builderTypes, opt_declutterReplays) {\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          if (opt_declutterReplays &&\n              (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\n            const declutter = opt_declutterReplays[zIndexKey];\n            if (!declutter) {\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            replay.execute(context, transform, viewRotation, snapToPixel);\n          }\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nconst circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  let i;\n  const radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  const arraySize = radius * 2 + 1;\n  const arr = new Array(arraySize);\n  for (let i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  let x = radius;\n  let y = 0;\n  let error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} opacity Opacity.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n * @param {Array<import(\"../../PluggableMap.js\").DeclutterItems>} declutterItems Declutter items.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, opacity, snapToPixel, declutterItems) {\n  const zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  for (let z = 0, zz = zs.length; z < zz; ++z) {\n    const executorData = declutterReplays[zs[z].toString()];\n    let currentExecutor;\n    for (let i = 0, ii = executorData.length; i < ii;) {\n      const executor = executorData[i++];\n      if (executor !== currentExecutor) {\n        currentExecutor = executor;\n        declutterItems.push({\n          items: executor.declutterItems,\n          opacity: opacity\n        });\n      }\n      const transform = executorData[i++];\n      executor.execute(context, transform, rotation, snapToPixel);\n    }\n  }\n}\n\n\nexport default ExecutorGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport {abstract} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function(zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    ).bind(this);\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @param {Array<import(\"../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|void} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, declutteredFeatures) {}\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return abstract();\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform_ = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @protected\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (target && target.style.opacity === '' && target.className === layerClassName) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clip(context, frameState, extent) {\n    const pixelRatio = frameState.pixelRatio;\n    const halfWidth = (frameState.size[0] * pixelRatio) / 2;\n    const halfHeight = (frameState.size[1] * pixelRatio) / 2;\n    const rotation = frameState.viewState.rotation;\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, halfWidth, halfHeight);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(type, this.inversePixelTransform, frameState, context);\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(center, resolution, rotation, pixelRatio, width, height, offsetX) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(this.tempTransform_, dx1, dy1, sx, sy, -rotation, dx2, dy2);\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(this.inversePixelTransform, pixel.slice());\n    const context = this.context;\n\n    let data;\n    try {\n      data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n\n}\n\nexport default CanvasLayerRenderer;\n\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels'\n};\n","/**\n * @module ol/ImageBase\n */\nimport {abstract} from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\nimport {IMAGE_DECODE} from './has.js';\n\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\n\nclass ImageWrapper extends ImageBase {\n\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {ImageState}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @override\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function() {\n      listening = false;\n    };\n    promise.then(function() {\n      if (listening) {\n        loadHandler();\n      }\n    }).catch(function(error) {\n      if (listening) {\n        // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n        //        https://bugs.webkit.org/show_bug.cgi?id=198527\n        if (error.name === 'EncodingError' && error.message === 'Invalid image type.') {\n          loadHandler();\n        } else {\n          errorHandler();\n        }\n      }\n    });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler)\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport {createCanvasContext2D} from '../dom.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = color ? document.createElement('canvas') : null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.tainted_;\n\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D=} context A context with the image already drawn into.\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_(context) {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!context) {\n        context = createCanvasContext2D(1, 1);\n        context.drawImage(this.image_, 0, 0);\n      }\n      try {\n        context.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    }\n    this.size_ = [this.image_.width, this.image_.height];\n    this.unlistenImage_();\n    this.replaceColor_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    return this.canvas_ ? this.canvas_ : this.image_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage(pixelRatio) {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  replaceColor_() {\n    if (!this.color_) {\n      return;\n    }\n\n    this.canvas_.width = this.image_.width;\n    this.canvas_.height = this.image_.height;\n\n    const ctx = this.canvas_.getContext('2d');\n    ctx.drawImage(this.image_, 0, 0);\n\n    if (this.isTainted_(ctx)) {\n      // If reading from the canvas throws a SecurityError the same effect can be\n      // achieved with globalCompositeOperation.\n      // This could be used as the default, but it is not fully supported by all\n      // browsers. E. g. Internet Explorer 11 does not support the multiply\n      // operation and the resulting image shape will be completelly filled with\n      // the provided color.\n      // So this is only used as a fallback. It is still better than having no icon\n      // at all.\n      const c = this.color_;\n      ctx.globalCompositeOperation = 'multiply';\n      ctx.fillStyle = 'rgb(' + c[0] + ',' + c[1] + ',' + c[2] + ')';\n      ctx.fillRect(0, 0, this.image_.width, this.image_.height);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n      return;\n    }\n\n    const imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n    const data = imgData.data;\n    const r = this.color_[0] / 255.0;\n    const g = this.color_[1] / 255.0;\n    const b = this.color_[2] / 255.0;\n\n    for (let i = 0, ii = data.length; i < ii; i += 4) {\n      data[i] *= r;\n      data[i + 1] *= g;\n      data[i + 2] *= b;\n    }\n    ctx.putImageData(imgData, 0, 0);\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\n\nexport default IconImage;\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right'\n};\n","/**\n * @module ol/style/Icon\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport {get as getIconImage} from './IconImage.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n      options.anchorOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n      options.anchorXUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n      options.anchorYUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image),\n      4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize),\n      5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0,\n      6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState = options.src !== undefined ?\n      ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image, /** @type {string} */ (src), imgSize, this.crossOrigin_, imageState, this.color_);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n      options.offsetOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: this.getScale(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView()\n    });\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n        this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @override\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @override\n   */\n  getHitDetectionImageSize() {\n    return this.getImageSize();\n  }\n\n  /**\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @override\n   */\n  getHitDetectionImage(pixelRatio) {\n    return this.iconImage_.getHitDetectionImage(pixelRatio);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n    const displacement = this.getDisplacement();\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    offset[0] += displacement[0];\n    offset[1] += displacement[1];\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @override\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @override\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @override\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\n\nexport default Icon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill :\n      new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {import(\"./TextPlacement.js\").default|string}\n     */\n    this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: this.getScale(),\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n      backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined,\n      padding: this.getPadding()\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {string|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {string|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {string|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {string|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {!Array<number>} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/style\n */\n\nexport {default as Circle} from './style/Circle.js';\nexport {default as Fill} from './style/Fill.js';\nexport {default as Icon} from './style/Icon.js';\nexport {default as IconImage} from './style/IconImage.js';\nexport {default as Image} from './style/Image.js';\nexport {default as RegularShape} from './style/RegularShape.js';\nexport {default as Stroke} from './style/Stroke.js';\nexport {default as Style} from './style/Style.js';\nexport {default as Text} from './style/Text.js';\n","/**\n * @module ol/render/canvas/hitdetet\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {Icon} from '../../style.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(size, transforms, features, styleFunction, extent, resolution, rotation) {\n  const width = size[0] / 2;\n  const height = size[1] / 2;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(context, 0.5, extent, null, rotation);\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const canvas = document.createElement('canvas');\n        canvas.width = imgSize[0];\n        canvas.height = imgSize[1];\n        const imgContext = canvas.getContext('2d', {alpha: false});\n        imgContext.fillStyle = color;\n        const img = imgContext.canvas;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        const width = imgSize ? imgSize[0] : img.width;\n        const height = imgSize ? imgSize[1] : img.height;\n        const iconContext = createCanvasContext2D(width, height);\n        iconContext.drawImage(img, 0, 0);\n        style.setImage(new Icon({\n          img: img,\n          imgSize: imgSize,\n          anchor: image.getAnchor(),\n          anchorXUnits: IconAnchorUnits.PIXELS,\n          anchorYUnits: IconAnchorUnits.PIXELS,\n          offset: image.getOrigin(),\n          size: image.getSize(),\n          opacity: image.getOpacity(),\n          scale: image.getScale(),\n          rotation: image.getRotation(),\n          rotateWithView: image.getRotateWithView()\n        }));\n      }\n      const zIndex = Number(style.getZIndex());\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      const geometry = style.getGeometryFunction()(feature);\n      if (geometry && intersects(extent, geometry.getExtent())) {\n        byGeometryType[geometry.getType().replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  document.body.appendChild(context.canvas);\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const index = (Math.round(pixel[0] / 2) + Math.round(pixel[1] / 2) * imageData.width) * 4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + (256 * (g + (256 * r)));\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport ViewHint from '../../ViewHint.js';\nimport {buffer, createEmpty, containsExtent, getWidth, intersects as intersectsExtent, wrapX as wrapExtentX} from '../../extent.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\nimport {fromUserExtent, toUserExtent, getUserProjection, getTransformFromProjections} from '../../proj.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport ExecutorGroup, {replayDeclutter} from '../../render/canvas/ExecutorGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {toString as transformToString, makeScale, makeInverse, apply} from '../../transform.js';\nimport {createHitDetectionImageData, hitDetect} from '../../render/canvas/hitdetect.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  useContainer(target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    super.useContainer(target, transform, opacity);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  renderFrame(frameState, target) {\n\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    if (!replayGroup || replayGroup.isEmpty()) {\n      if (!this.containerReused && canvas.width > 0) {\n        canvas.width = 0;\n      }\n      return this.container;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      clipped = !containsExtent(layerExtent, frameState.extent) && intersectsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clip(context, frameState, layerExtent);\n      }\n    }\n\n\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n\n    const transform = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, 0);\n    const declutterReplays = this.getLayer().getDeclutter() ? {} : null;\n    replayGroup.execute(context, transform, rotation, snapToPixel, undefined, declutterReplays);\n\n    if (vectorSource.getWrapX() && projection.canWrapX() && !containsExtent(projectionExtent, extent)) {\n      let startX = extent[0];\n      const worldWidth = getWidth(projectionExtent);\n      let world = 0;\n      let offsetX;\n      while (startX < projectionExtent[0]) {\n        --world;\n        offsetX = worldWidth * world;\n        const transform = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, offsetX);\n        replayGroup.execute(context, transform, rotation, snapToPixel, undefined, declutterReplays);\n        startX += worldWidth;\n      }\n      world = 0;\n      startX = extent[2];\n      while (startX > projectionExtent[2]) {\n        ++world;\n        offsetX = worldWidth * world;\n        const transform = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, offsetX);\n        replayGroup.execute(context, transform, rotation, snapToPixel, undefined, declutterReplays);\n        startX -= worldWidth;\n      }\n    }\n    if (declutterReplays) {\n      const viewHints = frameState.viewHints;\n      const hifi = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      replayDeclutter(declutterReplays, context, rotation, 1, hifi, frameState.declutterItems);\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = layerState.opacity;\n    const container = this.container;\n    if (opacity !== parseFloat(container.style.opacity)) {\n      container.style.opacity = opacity === 1 ? '' : opacity;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getFeatures(pixel) {\n    return new Promise(function(resolve, reject) {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.renderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] / 2;\n        const height = size[1] / 2;\n        transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, 0).slice());\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (source.getWrapX() && projection.canWrapX() && !containsExtent(projectionExtent, extent)) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, offsetX).slice());\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, offsetX).slice());\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(size, transforms,\n          this.renderedFeatures_, layer.getStyleFunction(), extent, resolution, rotation);\n      }\n      resolve(hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_));\n    }.bind(this));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, declutteredFeatures) {\n    if (!this.replayGroup_) {\n      return undefined;\n    } else {\n      const resolution = frameState.viewState.resolution;\n      const rotation = frameState.viewState.rotation;\n      const layer = this.getLayer();\n      /** @type {!Object<string, boolean>} */\n      const features = {};\n\n      const result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance,\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          const key = getUid(feature);\n          if (!(key in features)) {\n            features[key] = true;\n            return callback(feature, layer);\n          }\n        }, layer.getDeclutter() ? declutteredFeatures : null);\n\n      return result;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (vectorSource.getWrapX() && projection.canWrapX() &&\n        !containsExtent(projectionExtent, frameState.extent)) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (loadExtent[0] < projectionExtent[0] && loadExtent[2] < projectionExtent[2]) {\n        loadExtents.push([loadExtent[0] + worldWidth, loadExtent[1], loadExtent[2] + worldWidth, loadExtent[3]]);\n      } else if (loadExtent[0] > projectionExtent[0] && loadExtent[2] > projectionExtent[2]) {\n        loadExtents.push([loadExtent[0] - worldWidth, loadExtent[1], loadExtent[2] - worldWidth, loadExtent[3]]);\n      }\n    }\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio), extent, resolution,\n      pixelRatio, vectorLayer.getDeclutter());\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(toUserExtent(loadExtents[i], projection), resolution, userProjection);\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @this {CanvasVectorLayerRenderer}\n     */\n    const render = function(feature) {\n      let styles;\n      const styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        const dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup, userTransform);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(extent, resolution,\n      pixelRatio, vectorSource.getOverlaps(),\n      replayGroupInstructions, vectorLayer.getRenderBuffer());\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.renderedRotation_ = viewState.rotation;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction=} opt_transform Transform from user to view projection.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(feature, squaredTolerance, styles, builderGroup, opt_transform) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          builderGroup, feature, styles[i], squaredTolerance,\n          this.boundHandleStyleImageChange_, opt_transform) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup, feature, styles, squaredTolerance,\n        this.boundHandleStyleImageChange_, opt_transform);\n    }\n    return loading;\n  }\n}\n\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\n\nexport default VectorLayer;\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default): void} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent): void|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>): void} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default): void|function(this:import(\"./source/Vector\").default): void} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(extent, resolution, projection) {\n      const xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      xhr.withCredentials = withCredentials;\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          const type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          let source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection\n            }),\n            format.readProjection(source));\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(features, dataProjection) {\n      const sourceOrTile = /** @type {?} */ (this);\n      if (typeof sourceOrTile.addFeatures === 'function') {\n        /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n      }\n    }, /* FIXME handle error */ VOID);\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function(extent, resolution) {\n      const z = tileGrid.getZForResolution(resolution);\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/source/Source\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from './State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n      options.attributionsCollapsible : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {SourceState}\n     */\n    this.state_ = options.state !== undefined ?\n      options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {SourceState} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {SourceState} state State.\n   * @protected\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n}\n\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../util.js';\nimport RBush_ from 'rbush/rbush.js';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number=} opt_maxEntries Max entries.\n   */\n  constructor(opt_maxEntries) {\n\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function(item) {\n      return item.value;\n    });\n  }\n\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3]\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function(item) {\n      return item.value;\n    });\n  }\n\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n\n  /**\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n  }\n\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n\n}\n\n\nexport default RBush;\n","/**\n * @module ol/source/Vector\n */\n\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nexport class VectorSourceEvent extends Event {\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>=} opt_feature Feature.\n   */\n  constructor(type, opt_feature) {\n\n    super(type);\n\n    /**\n     * The feature being added or removed.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n  }\n\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options=} opt_options Vector source options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, /** @type {import(\"../format/Feature.js\").default} */ (this.format_));\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n        options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n  }\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE,\n        this.handleFeatureChange_, this),\n      listen(feature, ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_, this)\n    ];\n  }\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_),\n        30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n    }\n  }\n\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    this.addEventListener(VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    collection.addEventListener(CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(/** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }.bind(this));\n    collection.addEventListener(CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(/** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }.bind(this));\n    this.featuresCollection_ = collection;\n  }\n\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function(feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function(feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      });\n  }\n\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n\n  /**\n   * Get all features on the source in random order.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray();\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return (\n      /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features)\n    );\n  }\n\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray();\n    } else {\n      return [];\n    }\n  }\n\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean=} opt_filter Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function(feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      });\n    return closestFeature;\n  }\n\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.CHANGEFEATURE, feature));\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  }\n\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution);\n    this.loading = false;\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function(object) {\n          return containsExtent(object.extent, extentToLoad);\n        });\n      if (!alreadyLoaded) {\n        this.loader_.call(this, extentToLoad, resolution, projection);\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n        this.loading = this.loader_ !== VOID;\n      }\n    }\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function(object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  }\n\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.REMOVEFEATURE, feature));\n  }\n\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.setLoader(xhr(url, this.format_));\n  }\n\n}\n\n\nexport default VectorSource;\n","/**\n * @module ol/interaction/Draw\n */\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport {noModifierKeys, always, shiftKeyOnly} from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default=,\n *     import(\"../proj/Projection.js\").default=):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nconst Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nclass DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {?}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {GeometryType}\n     * @private\n     */\n    this.type_ = /** @type {GeometryType} */ (options.type);\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints ?\n      options.minPoints :\n      (this.mode_ === Mode.POLYGON ? 3 : 2);\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      if (this.type_ === GeometryType.CIRCLE) {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry, projection) {\n          const circle = opt_geometry ? /** @type {Circle} */ (opt_geometry) :\n            new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center, fromUserCoordinate(coordinates[1], projection));\n          circle.setCenterAndRadius(center, Math.sqrt(squaredLength));\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        const mode = this.mode_;\n        if (mode === Mode.POINT) {\n          Constructor = Point;\n        } else if (mode === Mode.LINE_STRING) {\n          Constructor = LineString;\n        } else if (mode === Mode.POLYGON) {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry, projection) {\n          let geometry = opt_geometry;\n          if (geometry) {\n            if (mode === Mode.POLYGON) {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n              } else {\n                geometry.setCoordinates([]);\n              }\n            } else {\n              geometry.setCoordinates(coordinates);\n            }\n          } else {\n            geometry = new Constructor(coordinates);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance ?\n      options.clickTolerance * options.clickTolerance : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition ? options.freehandCondition : shiftKeyOnly;\n    }\n\n    this.addEventListener(getChangeEventType(InteractionProperty.ACTIVE), this.updateState_);\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @override\n   * @api\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (!this.freehand_ && this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (this.freehand_ &&\n        event.type === MapBrowserEventType.POINTERDRAG &&\n        this.sketchFeature_ !== null) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (this.freehand_ &&\n        event.type === MapBrowserEventType.POINTERDOWN) {\n      pass = false;\n    } else if (move) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        pass = this.handlePointerMove_(event);\n      } else if (/** @type {MapBrowserPointerEvent} */ (event).pointerEvent.pointerType == 'mouse' ||\n          (event.type === MapBrowserEventType.POINTERDRAG && this.downTimeout_ === undefined)) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event);\n      }\n      return true;\n    } else if (this.condition_(event)) {\n      this.lastDragTime_ = Date.now();\n      this.downTimeout_ = setTimeout(function() {\n        this.handlePointerMove_(new MapBrowserPointerEvent(\n          MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, false, event.frameState));\n      }.bind(this), this.dragVertexDelay_);\n      this.downPx_ = event.pixel;\n      return true;\n    } else {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n  }\n\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n\n    this.handlePointerMove_(event);\n\n    const circleMode = this.mode_ === Mode.CIRCLE;\n\n    if (this.shouldHandle_) {\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event);\n        if (this.mode_ === Mode.POINT) {\n          this.finishDrawing();\n        }\n      } else if (this.freehand_ || circleMode) {\n        this.finishDrawing();\n      } else if (this.atFinish_(event)) {\n        if (this.finishCondition_(event)) {\n          this.finishDrawing();\n        }\n      } else {\n        this.addToDrawing_(event.coordinate);\n      }\n      pass = false;\n    } else if (this.freehand_) {\n      this.abortDrawing();\n    }\n    if (!pass && this.stopClick_) {\n      event.stopPropagation();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @return {boolean} Pass the event to other interactions.\n   * @private\n   */\n  handlePointerMove_(event) {\n    if (this.downPx_ &&\n        ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_ ?\n        squaredDistance > this.squaredClickTolerance_ :\n        squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return true;\n      }\n    }\n\n    if (this.finishCoordinate_) {\n      this.modifyDrawing_(event);\n    } else {\n      this.createOrUpdateSketchPoint_(event);\n    }\n    return true;\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(event) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      if (this.mode_ === Mode.LINE_STRING) {\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n      } else if (this.mode_ === Mode.POLYGON) {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [sketchCoords[0][0], sketchCoords[0][sketchCoords[0].length - 2]];\n      }\n      if (potentiallyDone) {\n        const map = event.map;\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const pixel = event.pixel;\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  createOrUpdateSketchPoint_(event) {\n    const coordinates = event.coordinate.slice();\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  startDrawing_(event) {\n    const start = event.coordinate;\n    const projection = event.map.getView().getProjection();\n    this.finishCoordinate_ = start;\n    if (this.mode_ === Mode.POINT) {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === Mode.POLYGON) {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(\n        new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(this.sketchCoords_, undefined, projection);\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  modifyDrawing_(event) {\n    let coordinate = event.coordinate;\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = event.map.getView().getProjection();\n    let coordinates, last;\n    if (this.mode_ === Mode.POINT) {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(event)) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(/** @type {!LineCoordType} */ (this.sketchCoords_), geometry, projection);\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    /** @type {LineString} */\n    let sketchLineGeom;\n    if (geometry.getType() == GeometryType.POLYGON &&\n        this.mode_ !== Mode.POLYGON) {\n      if (!this.sketchLine_) {\n        this.sketchLine_ = new Feature();\n      }\n      const ring = geometry.getLinearRing(0);\n      sketchLineGeom = this.sketchLine_.getGeometry();\n      if (!sketchLineGeom) {\n        sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n        this.sketchLine_.setGeometry(sketchLineGeom);\n      } else {\n        sketchLineGeom.setFlatCoordinates(\n          ring.getLayout(), ring.getFlatCoordinates());\n        sketchLineGeom.changed();\n      }\n    } else if (this.sketchLineCoords_) {\n      sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    if (this.mode_ === Mode.LINE_STRING) {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn.\n   * @api\n   */\n  removeLastPoint() {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let coordinates;\n    /** @type {LineString} */\n    let sketchLineGeom;\n    if (this.mode_ === Mode.LINE_STRING) {\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      coordinates.splice(-2, 1);\n      this.geometryFunction_(coordinates, geometry, projection);\n      if (coordinates.length >= 2) {\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n      }\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      coordinates.splice(-2, 1);\n      sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(coordinates);\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n\n    if (coordinates.length === 0) {\n      this.abortDrawing();\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === Mode.LINE_STRING) {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === Mode.POLYGON) {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === GeometryType.MULTI_POINT) {\n      sketchFeature.setGeometry(new MultiPoint([/** @type {PointCoordType} */(coordinates)]));\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n      sketchFeature.setGeometry(new MultiLineString([/** @type {LineCoordType} */(coordinates)]));\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n      sketchFeature.setGeometry(new MultiPolygon([/** @type {PolyCoordType} */(coordinates)]));\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended into\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    let sketchCoords = [];\n    if (mode === Mode.LINE_STRING) {\n      sketchCoords = /** @type {LineCoordType} */ this.sketchCoords_;\n    } else if (mode === Mode.POLYGON) {\n      sketchCoords = this.sketchCoords_ && this.sketchCoords_.length ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0] : [];\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    const ending = sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    // Duplicate last coordinate for sketch drawing\n    this.addToDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function(coordinates, opt_geometry, projection) {\n    const center = fromUserCoordinate(/** @type {LineCoordType} */ (coordinates)[0], projection);\n    const end = fromUserCoordinate(/** @type {LineCoordType} */ (coordinates)[1], projection);\n    const radius = Math.sqrt(\n      squaredCoordinateDistance(center, end));\n    const geometry = opt_geometry ? /** @type {Polygon} */ (opt_geometry) :\n      fromCircle(new Circle(center), opt_sides);\n    let angle = opt_angle;\n    if (!opt_angle) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      angle = Math.atan(y / x) - (x < 0 ? Math.PI : 0);\n    }\n    makeRegular(geometry, center, radius, angle);\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return (\n    function(coordinates, opt_geometry, projection) {\n      const extent = boundingExtent(/** @type {LineCoordType} */ (coordinates).map(function(coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      }));\n      const boxCoordinates = [[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]];\n      let geometry = opt_geometry;\n      if (geometry) {\n        geometry.setCoordinates(boxCoordinates);\n      } else {\n        geometry = new Polygon(boxCoordinates);\n      }\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry.transform(projection, userProjection);\n      }\n      return geometry;\n    }\n  );\n}\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {GeometryType} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Mode.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Mode.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Mode.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Mode.CIRCLE;\n  }\n  return (\n    /** @type {!Mode} */ (mode)\n  );\n}\n\n\nexport default Draw;\n","/**\n * @module ol/interaction/Extent\n */\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {squaredDistanceToSegment, closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {toUserExtent} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to\n * {@link module:ol/style/Style~createEditing()['Polygon']}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to\n * {@link module:ol/style/Style~createEditing()['Point']}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n\n/**\n * @enum {string}\n */\nconst ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event ExtentEvent#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nclass ExtentEvent extends Event {\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent the new extent\n   */\n  constructor(extent) {\n    super(ExtentEventType.EXTENTCHANGED);\n\n    /**\n     * The current extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = extent;\n  }\n\n}\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nclass Extent extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * Extent of the drawn box\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.extent_ = null;\n\n    /**\n     * Handler for pointer move events\n     * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n     * @private\n     */\n    this.pointerHandler_ = null;\n\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Feature for displaying the visible extent\n     * @type {Feature}\n     * @private\n     */\n    this.extentFeature_ = null;\n\n    /**\n     * Feature for displaying the visible pointer\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    if (!opt_options) {\n      opt_options = {};\n    }\n\n    /**\n     * Layer for the extentFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.boxStyle ? opt_options.boxStyle : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Layer for the vertexFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.pointerStyle ? opt_options.pointerStyle : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    if (opt_options.extent) {\n      this.setExtent(opt_options.extent);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n   * @param {import(\"../PluggableMap.js\").default} map map\n   * @returns {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  snapToVertex_(pixel, map) {\n    const pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\n    const sortByDistance = function(a, b) {\n      return squaredDistanceToSegment(pixelCoordinate, a) -\n          squaredDistanceToSegment(pixelCoordinate, b);\n    };\n    const extent = this.getExtentInternal();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      const segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      const closestSegment = segments[0];\n\n      let vertex = (closestOnSegment(pixelCoordinate,\n        closestSegment));\n      const vertexPixel = map.getPixelFromCoordinateInternal(vertex);\n\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        const pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\n        const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ?\n            closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n   * @private\n   */\n  handlePointerMove_(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    let vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent extent\n   * @returns {Feature} extent as featrue\n   * @private\n   */\n  createOrUpdateExtentFeature_(extent) {\n    let extentFeature = this.extentFeature_;\n\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      this.extentOverlay_.getSource().addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n   * @returns {Feature} vertex as feature\n   * @private\n   */\n  createOrUpdatePointerFeature_(vertex) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n    //display pointer (if not dragging)\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    //call pointer to determine up/down/drag\n    super.handleEvent(mapBrowserEvent);\n    //return false to stop propagation\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    const extent = this.getExtentInternal();\n    let vertex = this.snapToVertex_(pixel, map);\n\n    //find the extent corner opposite the passed corner\n    const getOpposingPoint = function(point) {\n      let x_ = null;\n      let y_ = null;\n      if (point[0] == extent[0]) {\n        x_ = extent[2];\n      } else if (point[0] == extent[2]) {\n        x_ = extent[0];\n      }\n      if (point[1] == extent[1]) {\n        y_ = extent[3];\n      } else if (point[1] == extent[3]) {\n        y_ = extent[1];\n      }\n      if (x_ !== null && y_ !== null) {\n        return [x_, y_];\n      }\n      return null;\n    };\n    if (vertex && extent) {\n      const x = (vertex[0] == extent[0] || vertex[0] == extent[2]) ? vertex[0] : null;\n      const y = (vertex[1] == extent[1] || vertex[1] == extent[3]) ? vertex[1] : null;\n\n      //snap to point\n      if (x !== null && y !== null) {\n        this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n      //snap to edge\n      } else if (x !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([x, extent[1]]),\n          getOpposingPoint([x, extent[3]])\n        );\n      } else if (y !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([extent[0], y]),\n          getOpposingPoint([extent[2], y])\n        );\n      }\n    //no snap - new bbox\n    } else {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n      this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n      this.pointerHandler_ = getPointHandler(vertex);\n    }\n    return true; //event handled; start downup sequence\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (this.pointerHandler_) {\n      const pixelCoordinate = mapBrowserEvent.coordinate;\n      this.setExtent(this.pointerHandler_(pixelCoordinate));\n      this.createOrUpdatePointerFeature_(pixelCoordinate);\n    }\n    return true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.pointerHandler_ = null;\n    //If bbox is zero area, set to null;\n    const extent = this.getExtentInternal();\n    if (!extent || getArea(extent) === 0) {\n      this.setExtent(null);\n    }\n    return false; //Stop handling downup sequence\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection (or user projection if set)\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtent() {\n    return toUserExtent(this.getExtentInternal(), this.getMap().getView().getProjection());\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtentInternal() {\n    return this.extent_;\n  }\n\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent\n   * @api\n   */\n  setExtent(extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentEvent(this.extent_));\n  }\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POLYGON];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function(point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  } else if (fixedP1[1] == fixedP2[1]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  } else {\n    return null;\n  }\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @returns {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [[extent[0], extent[1]], [extent[0], extent[3]]],\n    [[extent[0], extent[3]], [extent[2], extent[3]]],\n    [[extent[2], extent[3]], [extent[2], extent[1]]],\n    [[extent[2], extent[1]], [extent[0], extent[1]]]\n  ];\n}\n\n\nexport default Extent;\n","/**\n * @module ol/interaction/Modify\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {equals} from '../array.js';\nimport {equals as coordinatesEqual, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, closestOnSegment} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {always, primaryAction, altKeyOnly, singleClick} from '../events/condition.js';\nimport {boundingExtent, buffer as bufferExtent, createOrUpdateFromCoordinate as createExtent} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {getUserProjection, fromUserExtent, toUserExtent, fromUserCoordinate, toUserCoordinate} from '../proj.js';\n\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\nconst tempExtent = [0, 0, 0, 0];\nconst tempSegment = [];\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth]\n * @property {Feature} feature\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} [index]\n * @property {Array<import(\"../extent.js\").Extent>} segment\n * @property {Array<SegmentData>} [featureSegments]\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style used for the features being modified. By default the default edit\n * style is used (see {@link module:ol/style}).\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the features option.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the source option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<Feature>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserPointerEvent\n   * Associated {@link module:ol/MapBrowserPointerEvent}.\n   */\n  constructor(type, features, mapBrowserPointerEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserPointerEvent;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /** @private */\n    this.boundHandleFeatureChange_ = this.handleFeatureChange_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition ?\n      options.deleteCondition : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition ?\n      options.insertVertexCondition : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.modified_ = false;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this)\n    };\n\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    let features;\n    if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      this.source_.addEventListener(VectorEventType.ADDFEATURE, this.handleSourceAdd_.bind(this));\n      this.source_.addEventListener(VectorEventType.REMOVEFEATURE, this.handleSourceRemove_.bind(this));\n    } else {\n      features = options.features;\n    }\n    if (!features) {\n      throw new Error('The modify interaction requires features or a source');\n    }\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    this.features_.addEventListener(CollectionEventType.ADD, this.handleFeatureAdd_.bind(this));\n    this.features_.addEventListener(CollectionEventType.REMOVE, this.handleFeatureRemove_.bind(this));\n\n    /**\n     * @type {import(\"../MapBrowserPointerEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} evt Map browser event\n   * @private\n   */\n  willModifyFeatures_(evt) {\n    if (!this.modified_) {\n      this.modified_ = true;\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYSTART, this.features_, evt));\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of canditate features is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    feature.removeEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n    const nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      const nodeToRemove = nodesToRemove[i];\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(/** @type {Feature} */ (evt.element));\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = /** @type {Feature} */ (evt.element);\n    this.removeFeature_(feature);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n\n    /** @type {SegmentData} */\n    const segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates]\n    };\n\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates]\n      };\n\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment\n      };\n\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n\n          /** @type {SegmentData} */\n          const segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment\n          };\n\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n\n    /** @type {SegmentData} */\n    const centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates]\n    };\n\n    /** @type {SegmentData} */\n    const circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates]\n    };\n\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    let circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n    const userProjection = getUserProjection();\n    if (userProjection && this.getMap()) {\n      const projection = this.getMap().getView().getProjection();\n      circleGeometry = circleGeometry.clone().transform(userProjection, projection);\n      circleGeometry = fromCircle(/** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)).transform(projection, userProjection);\n    }\n    this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const geometry = geometries[i];\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      writer(feature, geometry);\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n    return vertexFeature;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the geometry.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    let handled;\n    if (!mapBrowserEvent.map.getView().getInteracting() &&\n        mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n        !this.handlingDownUpSequence) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return super.handleEvent(mapBrowserEvent) && !handled;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDragEvent(evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt);\n\n    const vertex = evt.coordinate;\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      const dragSegment = this.dragSegments_[i];\n      const segmentData = dragSegment[0];\n      const depth = segmentData.depth;\n      const geometry = segmentData.geometry;\n      let coordinates;\n      const segment = segmentData.segment;\n      const index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case GeometryType.POINT:\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case GeometryType.MULTI_POINT:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case GeometryType.LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.CIRCLE:\n          segment[0] = vertex;\n          segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else { // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            const projection = evt.map.getView().getProjection();\n            let radius = coordinateDistance(fromUserCoordinate(geometry.getCenter(), projection),\n              fromUserCoordinate(vertex, projection));\n            const userProjection = getUserProjection();\n            if (userProjection) {\n              const circleGeometry = geometry.clone().transform(userProjection, projection);\n              circleGeometry.setRadius(radius);\n              radius = circleGeometry.transform(projection, userProjection).getRadius();\n            }\n            geometry.setRadius(radius);\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n          // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    const pixelCoordinate = evt.coordinate;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\n    this.dragSegments_.length = 0;\n    this.modified_ = false;\n    const vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      const projection = evt.map.getView().getProjection();\n      const insertVertices = [];\n      const vertex = vertexFeature.getGeometry().getCoordinates();\n      const vertexExtent = boundingExtent([vertex]);\n      const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      const componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        const segmentDataMatch = segmentDataMatches[i];\n        const segment = segmentDataMatch.segment;\n        let uid = getUid(segmentDataMatch.feature);\n        const depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n\n        if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE && segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n          const closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch, projection);\n          if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n          continue;\n        }\n\n        if (coordinatesEqual(segment[0], vertex) && !componentSegments[uid][0]) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n          continue;\n        }\n\n        if (coordinatesEqual(segment[1], vertex) && !componentSegments[uid][1]) {\n          // prevent dragging closed linestrings by the connecting node\n          if ((segmentDataMatch.geometry.getType() ===\n              GeometryType.LINE_STRING ||\n              segmentDataMatch.geometry.getType() ===\n              GeometryType.MULTI_LINE_STRING) &&\n              componentSegments[uid][0] &&\n              componentSegments[uid][0].index === 0) {\n            continue;\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n          continue;\n        }\n\n        if (getUid(segment) in this.vertexSegments_ &&\n            (!componentSegments[uid][0] && !componentSegments[uid][1]) &&\n            this.insertVertexCondition_(evt)) {\n          insertVertices.push([segmentDataMatch, vertex]);\n        }\n      }\n\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt);\n      }\n\n      for (let j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_.apply(this, insertVertices[j]);\n      }\n    }\n    return !!this.vertexFeature_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(evt) {\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n      const segmentData = this.dragSegments_[i][0];\n      const geometry = segmentData.geometry;\n      if (geometry.getType() === GeometryType.CIRCLE) {\n        // Update a circle object in the R* bush:\n        const coordinates = geometry.getCenter();\n        const centerSegmentData = segmentData.featureSegments[0];\n        const circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        let circleGeometry = geometry;\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          const projection = evt.map.getView().getProjection();\n          circleGeometry = circleGeometry.clone().transform(userProjection, projection);\n          circleGeometry = fromCircle(circleGeometry).transform(projection, userProjection);\n        }\n        this.rBush_.update(circleGeometry.getExtent(), circumferenceSegmentData);\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.modified_) {\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n      this.modified_ = false;\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_coordinate The pixel Coordinate.\n   * @private\n   */\n  handlePointerAtPixel_(pixel, map, opt_coordinate) {\n    const pixelCoordinate = opt_coordinate || map.getCoordinateFromPixel(pixel);\n    const projection = map.getView().getProjection();\n    const sortByDistance = function(a, b) {\n      return projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n          projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection);\n    };\n\n    const viewExtent = fromUserExtent(createExtent(pixelCoordinate, tempExtent), projection);\n    const buffer = map.getView().getResolution() * this.pixelTolerance_;\n    const box = toUserExtent(bufferExtent(viewExtent, buffer, tempExtent), projection);\n\n    const rBush = this.rBush_;\n    const nodes = rBush.getInExtent(box);\n    if (nodes.length > 0) {\n      nodes.sort(sortByDistance);\n      const node = nodes[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        const vertexSegments = {};\n\n        if (node.geometry.getType() === GeometryType.CIRCLE && node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(vertex);\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(vertex);\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if ((coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1]) ||\n                (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0])))) {\n              vertexSegments[getUid(segment)] = true;\n            } else {\n              break;\n            }\n          }\n        }\n\n        vertexSegments[getUid(closestSegment)] = true;\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = segmentData.index;\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n\n    /** @type {SegmentData} */\n    const newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index\n    };\n\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    /** @type {SegmentData} */\n    const newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1\n    };\n\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  }\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint() {\n    if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt);\n      const removed = this.removeVertex_();\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n      this.modified_ = false;\n      return removed;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case GeometryType.MULTI_LINE_STRING:\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.LINE_STRING:\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.MULTI_POLYGON:\n          component = component[segmentData.depth[1]];\n          /* falls through */\n        case GeometryType.POLYGON:\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n          // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n\n          /** @type {SegmentData} */\n          const newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments\n          };\n\n          this.rBush_.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n\n    }\n    return deleted;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n      if (segmentDataMatch.geometry === geometry &&\n          (depth === undefined || segmentDataMatch.depth === undefined ||\n          equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index) {\n        segmentDataMatch.index += delta;\n      }\n    });\n  }\n}\n\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry.clone().transform(userProjection, projection));\n      }\n      const distanceToCenterSquared =\n            squaredCoordinateDistance(circleGeometry.getCenter(), fromUserCoordinate(pointCoordinates, projection));\n      const distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE && segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry.clone().transform(userProjection, projection));\n    }\n    return toUserCoordinate(circleGeometry.getClosestPoint(fromUserCoordinate(pointCoordinates, projection)), projection);\n  }\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(closestOnSegment(coordinate, tempSegment), projection);\n}\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n\nexport default Modify;\n","/**\n * @module ol/interaction/Select\n */\nimport {getUid} from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {extend, includes} from '../array.js';\nimport Event from '../events/Event.js';\nimport {singleClick, never, shiftKeyOnly} from '../events/condition.js';\nimport {TRUE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport {clear} from '../obj.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport Collection from '../Collection.js';\n\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select'\n};\n\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}).\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nclass SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n}\n\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object.<number, import(\"../style/Style.js\").default|Array.<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nconst originalFeatureStyles = {};\n\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    super({\n      handleEvent: handleEvent\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     */\n    this.boundAddFeature_ = this.addFeature_.bind(this);\n\n    /**\n     * @private\n     */\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array.<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ = options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * @private\n     * @type {import(\"../Collection.js\").default}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n   * the (last) selected feature. Note that this will not work with any\n   * programmatic method like pushing features to\n   * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return (\n      /** @type {import('../layer/Vector.js').default} */ (this.featureLayerAssociation_[getUid(feature)])\n    );\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @override\n   * @api\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map) {\n      this.features_.addEventListener(CollectionEventType.ADD, this.boundAddFeature_);\n      this.features_.addEventListener(CollectionEventType.REMOVE, this.boundRemoveFeature_);\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(CollectionEventType.ADD, this.boundAddFeature_);\n      this.features_.removeEventListener(CollectionEventType.REMOVE, this.boundRemoveFeature_);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.restorePreviousStyle_(feature);\n    }\n  }\n\n  /**\n   * @return {import(\"../style/Style.js\").default|Array.<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null} Select style.\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  applySelectedStyle_(feature) {\n    const key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  restorePreviousStyle_(feature) {\n    const key = getUid(feature);\n    const selectInteractions = /** @type {Array<Select>} */ (this.getMap().getInteractions().getArray().filter(function(interaction) {\n      return interaction instanceof Select && interaction.getStyle() && interaction.getFeatures().getArray().indexOf(feature) !== -1;\n    }));\n    if (selectInteractions.length > 0) {\n      feature.setStyle(selectInteractions[selectInteractions.length - 1].getStyle());\n    } else {\n      feature.setStyle(originalFeatureStyles[key]);\n      delete originalFeatureStyles[key];\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n * selected state of features.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {Select}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  const add = this.addCondition_(mapBrowserEvent);\n  const remove = this.removeCondition_(mapBrowserEvent);\n  const toggle = this.toggleCondition_(mapBrowserEvent);\n  const set = !add && !remove && !toggle;\n  const map = mapBrowserEvent.map;\n  const features = this.getFeatures();\n  const deselected = [];\n  const selected = [];\n  if (set) {\n    // Replace the currently selected feature(s) with the feature(s) at the\n    // pixel, or clear the selected feature(s) if there is no feature at\n    // the pixel.\n    clear(this.featureLayerAssociation_);\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (let i = features.getLength() - 1; i >= 0; --i) {\n      const feature = features.item(i);\n      const index = selected.indexOf(feature);\n      if (index > -1) {\n        // feature is already selected\n        selected.splice(index, 1);\n      } else {\n        features.remove(feature);\n        deselected.push(feature);\n      }\n    }\n    if (selected.length !== 0) {\n      features.extend(selected);\n    }\n  } else {\n    // Modify the currently selected feature(s).\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              selected.push(feature);\n              this.addFeatureLayerAssociation_(feature, layer);\n            } else if ((remove || toggle) && includes(features.getArray(), feature)) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (let j = deselected.length - 1; j >= 0; --j) {\n      features.remove(deselected[j]);\n    }\n    features.extend(selected);\n  }\n  if (selected.length > 0 || deselected.length > 0) {\n    this.dispatchEvent(\n      new SelectEvent(SelectEventType.SELECT,\n        selected, deselected, mapBrowserEvent));\n  }\n  return true;\n}\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n\n  return function(feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\nexport default Select;\n","/**\n * @module ol/interaction/Snap\n */\nimport {getUid} from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment} from '../coordinate.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport {getUserProjection, fromUserCoordinate, toUserCoordinate} from '../proj.js';\n\n\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel\n */\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n * @return {import(\"../Feature.js\").default} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (/** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature;\n  } else if (/** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element) {\n    return /** @type {import(\"../Feature.js\").default} */ (/** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element);\n  }\n}\n\nconst tempSegment = [];\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @api\n */\nclass Snap extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @type {import(\"../source/Vector.js\").default}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n    * Segment RTree for each layer\n    * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n    * @private\n    */\n    this.rBush_ = new RBush();\n\n    /**\n    * @const\n    * @private\n    * @type {Object<string, function(import(\"../Feature.js\").default, import(\"../geom/Geometry.js\").default): void>}\n    */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this)\n    };\n  }\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean=} opt_listen Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  addFeature(feature, opt_listen) {\n    const register = opt_listen !== undefined ? opt_listen : true;\n    const feature_uid = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (segmentWriter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n        segmentWriter(feature, geometry);\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_, this);\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  forEachFeatureAdd_(feature) {\n    this.addFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  forEachFeatureRemove_(feature) {\n    this.removeFeature(feature);\n  }\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  getFeatures_() {\n    let features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleEvent(evt) {\n    const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n    if (result.snapped) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n    }\n    return super.handleEvent(evt);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    this.addFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    this.removeFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    const feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      const uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(evt) {\n    const featuresToUpdate = getValues(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n    return false;\n  }\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  removeFeature(feature, opt_unlisten) {\n    const unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n    const feature_uid = getUid(feature);\n    const extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      const rBush = this.rBush_;\n      const nodesToRemove = [];\n      rBush.forEachInExtent(extent, function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    const keys = this.featuresListenerKeys_;\n    const features = /** @type {Array<import(\"../Feature.js\").default>} */ (this.getFeatures_());\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      features.forEach(this.forEachFeatureRemove_.bind(this));\n    }\n    super.setMap(map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(this.features_, CollectionEventType.ADD,\n            this.handleFeatureAdd_, this),\n          listen(this.features_, CollectionEventType.REMOVE,\n            this.handleFeatureRemove_, this)\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(this.source_, VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_, this),\n          listen(this.source_, VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_, this)\n        );\n      }\n      features.forEach(this.forEachFeatureAdd_.bind(this));\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @return {Result} Snap result\n   */\n  snapTo(pixel, pixelCoordinate, map) {\n    const lowerLeft = map.getCoordinateFromPixel(\n      [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n    const upperRight = map.getCoordinateFromPixel(\n      [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n    const box = boundingExtent([lowerLeft, upperRight]);\n\n    let segments = this.rBush_.getInExtent(box);\n\n    // If snapping on vertices only, don't consider circles\n    if (this.vertex_ && !this.edge_) {\n      segments = segments.filter(function(segment) {\n        return segment.feature.getGeometry().getType() !==\n            GeometryType.CIRCLE;\n      });\n    }\n\n    let snapped = false;\n    let vertex = null;\n    let vertexPixel = null;\n\n    if (segments.length === 0) {\n      return {\n        snapped: snapped,\n        vertex: vertex,\n        vertexPixel: vertexPixel\n      };\n    }\n\n    const projection = map.getView().getProjection();\n    const projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n\n    let closestSegmentData;\n    let minSquaredDistance = Infinity;\n    for (let i = 0; i < segments.length; ++i) {\n      const segmentData = segments[i];\n      tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n      tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n      const delta = squaredDistanceToSegment(projectedCoordinate, tempSegment);\n      if (delta < minSquaredDistance) {\n        closestSegmentData = segmentData;\n        minSquaredDistance = delta;\n      }\n    }\n    const closestSegment = closestSegmentData.segment;\n\n    if (this.vertex_ && !this.edge_) {\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n      const squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      if (dist <= this.pixelTolerance_) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      const isCircle = closestSegmentData.feature.getGeometry().getType() === GeometryType.CIRCLE;\n      if (isCircle) {\n        let circleGeometry = closestSegmentData.feature.getGeometry();\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          circleGeometry = circleGeometry.clone().transform(userProjection, projection);\n        }\n        vertex = toUserCoordinate(closestOnCircle(projectedCoordinate,\n          /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)), projection);\n      } else {\n        tempSegment[0] = fromUserCoordinate(closestSegment[0], projection);\n        tempSegment[1] = fromUserCoordinate(closestSegment[1], projection);\n        vertex = toUserCoordinate(closestOnSegment(projectedCoordinate, tempSegment), projection);\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          if (dist <= this.pixelTolerance_) {\n            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n\n    return {\n      snapped: snapped,\n      vertex: vertex,\n      vertexPixel: vertexPixel\n    };\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  updateFeature_(feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const projection = this.getMap().getView().getProjection();\n    let circleGeometry = geometry;\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry.clone().transform(userProjection, projection));\n    }\n    const polygon = fromCircle(circleGeometry);\n    if (userProjection) {\n      polygon.transform(projection, userProjection);\n    }\n    const coordinates = polygon.getCoordinates()[0];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = {\n        feature: feature,\n        segment: segment\n      };\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n      if (segmentWriter) {\n        segmentWriter(feature, geometries[i]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = {\n        feature: feature,\n        segment: segment\n      };\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = {\n          feature: feature,\n          segment: segment\n        };\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n      const segmentData = {\n        feature: feature,\n        segment: [coordinates, coordinates]\n      };\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n          const segmentData = {\n            feature: feature,\n            segment: segment\n          };\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    const segmentData = {\n      feature: feature,\n      segment: [coordinates, coordinates]\n    };\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = {\n          feature: feature,\n          segment: segment\n        };\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n}\n\n\nexport default Snap;\n","/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport {getChangeEventType} from '../Object.js';\nimport Event from '../events/Event.js';\nimport {TRUE} from '../functions.js';\nimport {includes} from '../array.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\n\n\n/**\n * @enum {string}\n */\nconst TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {Collection<import(\"../Feature.js\").default>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport class TranslateEvent extends Event {\n  /**\n   * @param {TranslateEventType} type Type.\n   * @param {Collection<import(\"../Feature.js\").default>} features The features translated.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} startCoordinate The original coordinates before.translation started\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   */\n  constructor(type, features, coordinate, startCoordinate, mapBrowserEvent) {\n\n    super(type);\n\n    /**\n     * The features being translated.\n     * @type {Collection<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * The coordinate of the start position before translation started.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.startCoordinate = startCoordinate;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @fires TranslateEvent\n * @api\n */\nclass Translate extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * The last position we translated to.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n    /**\n     * The start position before translation started.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.startCoordinate_ = null;\n\n\n    /**\n     * @type {Collection<import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @type {import(\"../Feature.js\").default}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    this.addEventListener(getChangeEventType(InteractionProperty.ACTIVE), this.handleActiveChanged_);\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(event) {\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n    if (!this.lastCoordinate_ && this.lastFeature_) {\n      this.startCoordinate_ = event.coordinate;\n      this.lastCoordinate_ = event.coordinate;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATESTART, features,\n          event.coordinate, this.startCoordinate_, event));\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(event) {\n    if (this.lastCoordinate_) {\n      this.lastCoordinate_ = null;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATEEND, features,\n          event.coordinate, this.startCoordinate_, event));\n      // cleanup\n      this.startCoordinate_ = null;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDragEvent(event) {\n    if (this.lastCoordinate_) {\n      const newCoordinate = event.coordinate;\n      const deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n      const deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      features.forEach(function(feature) {\n        const geom = feature.getGeometry();\n        geom.translate(deltaX, deltaY);\n        feature.setGeometry(geom);\n      });\n\n      this.lastCoordinate_ = newCoordinate;\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATING, features,\n          newCoordinate, this.startCoordinate_, event));\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleMoveEvent(event) {\n    const elem = event.map.getViewport();\n\n    // Change the cursor to grab/grabbing if hovering any of the features managed\n    // by the interaction\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n    } else {\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {import(\"../PluggableMap.js\").default} map Map to test the intersection on.\n   * @return {import(\"../Feature.js\").default} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  featuresAtPixel_(pixel, map) {\n    return map.forEachFeatureAtPixel(pixel,\n      function(feature, layer) {\n        if (this.filter_(feature, layer)) {\n          if (!this.features_ || includes(this.features_.getArray(), feature)) {\n            return feature;\n          }\n        }\n      }.bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    this.updateState_(oldMap);\n  }\n\n  /**\n   * @private\n   */\n  handleActiveChanged_() {\n    this.updateState_(null);\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} oldMap Old map.\n   * @private\n   */\n  updateState_(oldMap) {\n    let map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        const elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  }\n}\n\nexport default Translate;\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport {focus} from './events/condition.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      condition: options.onFocusOnly ? focus : undefined,\n      kinetic: kinetic\n    }));\n  }\n\n  const pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      condition: options.onFocusOnly ? focus : undefined,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n","/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\n\nexport default Map;\n","import {defaults} from 'ol/src/interaction';\nimport Map from 'ol/src/Map';\n\n/**\n * Deze map bevat enkel de functionaliteit om de acties te behandelen. Aan het eerste argument van de constructor kan het gebruikelijke object map opties worden weergegeven die ook op de ol.Map worden gezet, samen met een extra parameter 'acties' in dat object. Deze array bevat MapActions.\n * De eerste actie van de array is steeds de default actie en zal ook hierop gezet worden bij bijvoorbeeld een escape toets.\n *\n * Deze kaart regelt dat er maar één actie actief kan staan. Bij het activeren van een andere actie wordt namelijk de huidige actie gedeactiveerd.\n */\nexport class MapWithActions extends Map {\n  static get CLICK_COUNT_TIMEOUT() {\n    return 300;\n  }\n\n  constructor(options) {\n    options = options || {};\n    const enableRotation = !options.disableRotation;\n    const enableMouseWheelZoom = !options.disableMouseWheelZoom;\n    const interactions = defaults({\n      altShiftDragRotate: enableRotation,\n      pinchRotate: enableRotation,\n      mouseWheelZoom: enableMouseWheelZoom,\n    });\n    if (options && options.interactions) {\n      options.interactions.forEach((interaction) => interactions.push(interaction));\n    }\n    options.interactions = interactions;\n    super(options);\n    this.actions = [];\n\n    options.actions.forEach((action) => {\n      this.addAction(action);\n    });\n\n    setTimeout(() => {\n      this.activateDefaultAction();\n    });\n\n    if (!options.disableEscapeKey) {\n      const activateFirstActionOnEscapeKey = (e) => {\n        if (e && e.keyCode && e.keyCode == 27) {\n          this.activateDefaultAction();\n        }\n      };\n\n      document.body.removeEventListener('keydown', activateFirstActionOnEscapeKey);\n      document.body.addEventListener('keydown', activateFirstActionOnEscapeKey);\n    }\n  }\n\n  activateAction(action) {\n    if (this.currentAction) {\n      if (this.currentAction == action) {\n        return false;\n      }\n\n      this.currentAction.deactivate();\n      clearTimeout(this.timeout);\n    }\n\n    this.currentAction = action;\n\n    // delay the activation of the action with 300ms because ol has a timeout of 251ms to detect a double click event\n    // when we don't use a delay some click and select events of the previous action will be triggered on the new action\n    this.timeout = setTimeout(() => {\n      action.activate();\n    }, MapWithActions.CLICK_COUNT_TIMEOUT);\n  }\n\n  addAction(action) {\n    this.actions.push(action);\n    action.map = this;\n    action.interactions.forEach((interaction) => {\n      this.addInteraction(interaction);\n    });\n  }\n\n  removeAction(action) {\n    if (this.currentAction == action) {\n      this.activateDefaultAction();\n    }\n    action.interactions.forEach((interaction) => {\n      this.removeInteraction(interaction);\n    });\n    this.actions.splice(this.actions.indexOf(action), 1);\n  }\n\n  activateDefaultAction() {\n    if (this.actions.length > 0 && this.actions[0]) {\n      if (this.currentAction == this.actions[0]) {\n        this.currentAction.deactivate();\n        this.currentAction = undefined;\n      }\n      this.activateAction(this.actions[0]);\n    }\n  }\n}\n","import GeoJSON from 'ol/src/format/GeoJSON';\nimport View from 'ol/src/View';\nimport Overlay from 'ol/src/Overlay';\nimport {\n  Zoom,\n  Rotate,\n  ZoomSlider,\n  ScaleLine,\n  OverviewMap,\n} from 'ol/src/control';\nimport {MapWithActions} from './vl-mapactions-map-with-actions';\n\n/**\n * Dit is een versie van de MapWithActions die nog enkele extra functies bevat zoals het zoomen naar een bepaalde extent (of bounding box), het togglen van de layers, en alle functionaliteit omtrent een overzichtskaartje (ol.control.OverviewMap).\n * De view kan in het map opties object bij constructie worden meegegeven, of achteraf aangemaakt in de initializeView functie. Hieraan kan de view worden meegegeven als argument of bij geen argument wordt een standaard view aangemaakt op basis van de meegegeven projectie.\n */\nexport class CustomMap extends MapWithActions {\n  constructor(options) {\n    options.layers = [\n      options.customLayers.baseLayerGroup,\n      options.customLayers.overlayGroup,\n    ];\n\n    options.controls = options.controls || [\n      new Zoom(),\n      new Rotate(),\n      new ZoomSlider(),\n      new ScaleLine({\n        minWidth: 128,\n      }),\n    ];\n\n    super(options);\n\n    this.projection = options.projection;\n\n    this.geoJSONFormat = new GeoJSON({\n      dataProjection: options.projection,\n    });\n\n    this.custom = options.custom || {};\n\n    if (options.customLayers.overviewMapLayers && options.customLayers.overviewMapLayers.length > 0) {\n      this.createOverviewMapControl(options);\n    }\n\n    this.baseLayers = options.customLayers.baseLayerGroup.getLayers().getArray();\n\n    this.maxZoomViewToExtent = options.maxZoomViewToExtent || 16;\n  }\n\n  createOverviewMapControl(options) {\n    const self = this;\n\n    const toggleBaseLayer = (baseLayer) => {\n      const getNextLayerAfterVisibleLayer = (layers) => {\n        let currentIndex = 0;\n        self.baseLayers.forEach((layer, index) => {\n          if (layer.getVisible()) {\n            currentIndex = index;\n          }\n        });\n        return layers[(currentIndex + 1) >= layers.length ? 0 : currentIndex + 1];\n      };\n\n      if (!baseLayer) {\n        baseLayer = getNextLayerAfterVisibleLayer(self.baseLayers);\n      }\n      self.baseLayers.forEach((layer) => layer.setVisible(layer == baseLayer));\n      const overviewMapLayers = self.overviewMapControl.getOverviewMap().getLayers().getArray();\n      const nextVisibleOverviewMapLayer = getNextLayerAfterVisibleLayer(overviewMapLayers);\n      overviewMapLayers.forEach((layer) => layer.setVisible(layer == nextVisibleOverviewMapLayer));\n      self.render();\n      self.overviewMapControl.getOverviewMap().render();\n    };\n\n    this.overviewMapLayers = options.customLayers.overviewMapLayers;\n    this.overviewMapControl = new OverviewMap({\n      layers: this.overviewMapLayers,\n      collapsed: false,\n      view: new View({\n        projection: this.projection,\n      }),\n    });\n\n    this.overviewMapControl.element.addEventListener('click', () => toggleBaseLayer(), false);\n\n    if (options.view) {\n      options.controls.push(this.overviewMapControl);\n    }\n\n    this.custom.toggleBaseLayer = toggleBaseLayer;\n  }\n\n  addBaseLayerAndOverlayMapLayer(baseLayer, overlayMapLayer) {\n    baseLayer.setVisible(this.baseLayers.length === 0);\n    this.baseLayers.push(baseLayer);\n\n    if (this.overviewMapControl) {\n      this.overviewMapControl.getOverviewMap().getLayers().getArray().push(overlayMapLayer);\n    } else {\n      this.createOverviewMapControl({\n        customLayers: {\n          overviewMapLayers: [overlayMapLayer],\n        },\n      });\n    }\n    overlayMapLayer.setVisible(this.overviewMapControl.getOverviewMap().getLayers().getArray().length === 2);\n  }\n\n  getBaseLayers() {\n    return this.getLayerGroup().getLayers().getArray()[0].getLayers().getArray();\n  }\n\n  getOverlayLayers() {\n    return this.getLayerGroup().getLayers().getArray()[1].getLayers().getArray();\n  }\n\n  initializeView(boundingBox, maxZoom) {\n    if (!this.getView().getZoom()) {\n      const view = new View({\n        extent: this.projection.getExtent(),\n        projection: this.projection,\n        maxZoom: 16,\n        minZoom: 2,\n        center: [140860.69299028325, 190532.7165957574],\n        zoom: 2,\n      });\n      this.zoomViewToExtent(view, boundingBox, maxZoom);\n      this.setView(view);\n      if (this.overviewMapControl) {\n        this.addControl(this.overviewMapControl); // control needs to be added after view initialization\n      }\n    }\n  }\n\n  zoomToExtent(boundingBox, maxZoom) {\n    this.zoomViewToExtent(this.getView(), boundingBox, maxZoom);\n  }\n\n  zoomViewToExtent(view, boundingBox, maxZoom) {\n    if (boundingBox) {\n      view.fit(boundingBox, {size: this.getSize()});\n    }\n\n    if (maxZoom || this.maxZoomViewToExtent) {\n      if (view.getZoom() > (maxZoom || this.maxZoomViewToExtent)) {\n        view.setZoom(maxZoom || this.maxZoomViewToExtent);\n      }\n    }\n  }\n\n  zoomToGeometry(geometry, maxZoom) {\n    const geoJson = {\n      type: 'FeatureCollection',\n      features: [{\n        type: 'Feature',\n        geometry: geometry,\n      }],\n    };\n    this.zoomToExtent(this.geoJSONFormat.readFeatures(geoJson)[0].getGeometry().getExtent(), maxZoom);\n  }\n\n  showInfo(info, coordinate) {\n    const close = document.createElement('div');\n    close.setAttribute('class', 'close');\n    close.onclick = () => event.currentTarget.parentNode.remove();\n\n    const element = document.createElement('div');\n    element.innerHTML = '<span class=\\'content\\'>' + info + '</span><div class=\\'arrow\\'></div>';\n    element.setAttribute('class', 'info-tooltip');\n    element.appendChild(close);\n\n    const tooltip = new Overlay({\n      offset: [0, -5],\n      positioning: 'bottom-center',\n      element: element,\n    });\n\n    this.addOverlay(tooltip);\n    tooltip.setPosition(coordinate);\n    element.parentNode.style.position = 'fixed'; // because the overlay has absolute positioning and otherwise the left side panel could influence the overlay elements\n  }\n}\n","export class MapAction {\n  constructor(interactions) {\n    if (!Array.isArray(interactions)) {\n      interactions = [interactions];\n    }\n    this.interactions = [];\n    interactions.forEach((interaction) => {\n      this.addInteraction(interaction);\n    });\n  }\n\n  addInteraction(interaction) {\n    interaction.setActive(false);\n    this.interactions.push(interaction);\n  }\n\n  activate() {\n    this.interactions.forEach((interaction) => {\n      interaction.setActive(true);\n    });\n  }\n\n  deactivate() {\n    this.interactions.forEach((interaction) => {\n      interaction.setActive(false);\n    });\n  }\n}\n","import {Select} from 'ol/src/interaction';\nimport {pointerMove} from 'ol/src/events/condition';\nimport {MapAction} from './vl-mapactions-mapaction';\n\nexport class SelectAction extends MapAction {\n  constructor(layer, onSelect, options) {\n    const cluster = options && options.cluster;\n    const filter = options && options.filter ? options.filter : () => true;\n    const style = options ? options.style : null;\n    const hoverStyle = options ? options.hoverStyle || style : style;\n\n    const selectInteractionFilter = (feature, layer) => {\n      this.selectInteraction.getFeatures().clear();\n      return this.filter(feature, layer);\n    };\n\n    const hoverInteractionFilter = (feature, layer) => {\n      const isSelected = this.selectInteraction.getFeatures().getArray().indexOf(feature) !== -1;\n      return this.filter(feature, layer) && !isSelected;\n    };\n\n    const hoverInteraction = new Select({\n      filter: hoverInteractionFilter,\n      condition: pointerMove,\n      style: hoverStyle,\n    });\n\n    const markInteraction = new Select({\n      style: style,\n    });\n\n    const selectInteraction = new Select({\n      filter: selectInteractionFilter,\n    });\n\n    super([markInteraction, selectInteraction, hoverInteraction]);\n\n    this.cluster = cluster;\n    this.filter = filter;\n    this.layer = layer;\n    this.style = style;\n    this.hoverStyle = hoverStyle;\n    this.hoverInteraction = hoverInteraction;\n    this.markInteraction = markInteraction;\n    this.selectInteraction = selectInteraction;\n\n    this.hoverInteraction.on('select', () => {\n      const element = this.map.getTargetElement();\n      if (this.hoverInteraction.getFeatures().getLength() > 0) {\n        element.style.cursor = 'pointer';\n      } else {\n        element.style.cursor = '';\n      }\n    });\n\n    this.selectedFeature = null;\n\n    this.getLayer = () => layer;\n\n    const nextFeature = (features) => {\n      const index = features.getArray().indexOf(this.selectedFeature);\n      let next = index + 1;\n      if (next > features.getLength() - 1) {\n        next = 0;\n      }\n      return features.getArray()[next];\n    };\n\n    this.selectInteraction.on('select', (event) => {\n      this.markInteraction.getFeatures().clear();\n      if (this.selectInteraction.getFeatures().getLength() > 0) {\n        const selectedFeature = null;\n        if (this.selectInteraction.getFeatures().getLength() === 1) {\n          this.selectedFeature = this.selectInteraction.getFeatures().getArray()[0];\n        } else {\n          this.selectedFeature = nextFeature(this.selectInteraction.getFeatures());\n        }\n        if (onSelect) {\n          onSelect(this.selectedFeature, event, this.getLayer(selectedFeature));\n        }\n      } else {\n        this.selectedFeature = null;\n        if (onSelect) {\n          onSelect();\n        }\n      }\n    });\n    this.selectInteractionFilter = selectInteractionFilter;\n    this.hoverInteractionFilter = hoverInteractionFilter;\n  }\n\n  _fixClusterBehavior() {\n    if (this.selectedFeature) {\n      const features = this.selectedFeature.get('features') || [this.selectedFeature];\n      this.selectInteraction.getFeatures().clear();\n      this.markInteraction.getFeatures().clear();\n      if (features) {\n        features.forEach((feature) => {\n          if (feature.getId()) {\n            this.markFeatureWithId(feature.getId());\n          }\n        });\n      }\n    }\n  }\n\n  getClusterWithFeatureId(clusters, id) {\n    for (let i = 0; i < clusters.length; i++) {\n      const features = clusters[i].get('features');\n      if (features && this.getFeatureById(features, id)) {\n        return clusters[i];\n      }\n    }\n  };\n\n  getFeatureById(features, id) {\n    for (let i = 0; i < features.length; i++) {\n      if (features[i].getId() === id) {\n        return features[i];\n      }\n    }\n  }\n\n  clearFeatures() {\n    this.selectInteraction.getFeatures().clear();\n    this.markInteraction.getFeatures().clear();\n    this.hoverInteraction.getFeatures().clear();\n  }\n\n  activate() {\n    if (this.cluster && this.map) {\n      this._fixClusterBehaviorListener = () => this._fixClusterBehavior();\n      this.map.on('moveend', this._fixClusterBehaviorListener);\n      this.selectInteraction.on('select', this._fixClusterBehaviorListener);\n    }\n    super.activate();\n  }\n\n  deactivate() {\n    if (this._fixClusterBehaviorListener) {\n      this.map.un('moveend', this._fixClusterBehaviorListener);\n      this.selectInteraction.un('select', this._fixClusterBehaviorListener);\n    }\n    this.clearFeatures();\n    super.deactivate();\n  }\n\n  selectFeature(feature) {\n    this.selectInteraction.getFeatures().push(feature);\n    this.selectInteraction.dispatchEvent({\n      type: 'select',\n      feature: feature,\n    });\n  }\n\n  getSelectedFeatures() {\n    return this.selectInteraction.getFeatures();\n  }\n\n  vergeetLaatstGeselecteerdeFeature() {\n    this.selectedFeature = null;\n  }\n\n  markFeatureWithId(id, layer) {\n    layer = layer || this.layer;\n    const feature = layer.getSource().getFeatureById(id) || this.getClusterWithFeatureId(layer.getSource().getFeatures(), id);\n    if (feature) {\n      if (this.markInteraction.getFeatures().getArray().indexOf(feature) === -1) {\n        this.markInteraction.getFeatures().push(feature);\n      }\n    }\n  }\n\n  isMarked(feature) {\n    let marked = false;\n    this.markInteraction.getFeatures().forEach((selectedFeature) => {\n      if (selectedFeature === feature) {\n        marked = true;\n      }\n    });\n    return marked;\n  }\n\n  demarkAllFeatures() {\n    this.markInteraction.getFeatures().clear();\n  }\n}\n","import DragBox from 'ol/src/interaction/DragBox';\nimport {Stroke, Style} from 'ol/src/style';\nimport {SelectAction} from './vl-mapactions-select-action';\n\nexport class BoxSelectAction extends SelectAction {\n  constructor(layer, onSelect, options) {\n    super(layer, (feature) => {\n      if (feature) {\n        onSelect([feature]);\n      }\n    }, options);\n\n    this.dragBoxInteraction = new DragBox({\n      style: new Style({\n        stroke: new Stroke({\n          color: [0, 0, 255, 1],\n        }),\n      }),\n    });\n\n    this.addInteraction(this.dragBoxInteraction);\n\n    this.dragBoxInteraction.on('boxdrag', () => {\n      const boxExtent = this.dragBoxInteraction.getGeometry().getExtent();\n      this.hoverInteraction.getFeatures().clear();\n      layer.getSource().forEachFeatureIntersectingExtent(boxExtent, (feature) => {\n        this.hoverInteraction.getFeatures().push(feature);\n      });\n    });\n\n    this.dragBoxInteraction.on('boxend', () => {\n      if (this.hoverInteraction.getFeatures().getLength() > 0) {\n        onSelect(this.hoverInteraction.getFeatures().getArray().slice(0)); // copy of the current array to prevent issues in IE\n      }\n    });\n  };\n}\n","import {Fill, Stroke, Style, Circle} from 'ol/src/style';\nimport {BoxSelectAction} from './vl-mapactions-box-select-action';\n\nexport class DeleteAction extends BoxSelectAction {\n  constructor(layer, onDelete, options) {\n    const defaultStyle = new Style({\n      fill: new Fill({\n        color: 'rgba(217, 83, 79, 0.6)',\n      }),\n      stroke: new Stroke({\n        color: '#d9534f',\n        width: 5,\n      }),\n      image: new Circle({\n        radius: 4,\n        stroke: new Stroke({\n          color: '#d9534f',\n          width: 5,\n        }),\n        fill: new Fill({\n          color: 'rgba(217, 83, 79, 0.6)',\n        }),\n      }),\n    });\n\n    const style = options ? options.style || defaultStyle : defaultStyle;\n\n    const removeFeature = (feature) => {\n      if (feature && layer.getSource().getFeatureById(feature.getId()) === feature) {\n        layer.getSource().removeFeature(feature);\n      }\n    };\n\n    super(layer, (features) => {\n      if (onDelete && onDelete != null) {\n        onDelete(features, (feature) => {\n          removeFeature(feature);\n          this.clearFeatures();\n        }, () => {\n          this.clearFeatures();\n        });\n      } else {\n        features.forEach((feature) => {\n          removeFeature(feature);\n        });\n        this.clearFeatures();\n      }\n    }, {\n      style: style,\n    });\n  }\n}\n","/**\n * @module ol/geom\n */\n\nexport {default as Circle} from './geom/Circle.js';\nexport {default as Geometry} from './geom/Geometry.js';\nexport {default as GeometryCollection} from './geom/GeometryCollection.js';\nexport {default as LineString} from './geom/LineString.js';\nexport {default as MultiLineString} from './geom/MultiLineString.js';\nexport {default as MultiPoint} from './geom/MultiPoint.js';\nexport {default as MultiPolygon} from './geom/MultiPolygon.js';\nexport {default as Point} from './geom/Point.js';\nexport {default as Polygon} from './geom/Polygon.js';\nexport {default as LinearRing} from './geom/LinearRing.js';\n","import Snap from 'ol/src/interaction/Snap';\n\nexport class SnapInteraction extends Snap {\n  constructor(layer) {\n    const source = layer ? layer.getSource() : null;\n    const snapOptions = {\n      source: source,\n      pixelTolerance: 7,\n    };\n    super(snapOptions);\n    this.snapOptions = snapOptions;\n  }\n}\n","import Draw from 'ol/src/interaction/Draw';\nimport Overlay from 'ol/src/Overlay';\nimport {LineString, Polygon} from 'ol/src/geom';\nimport {unByKey} from 'ol/src/Observable';\nimport {MapAction} from './vl-mapactions-mapaction';\nimport {SnapInteraction} from './vl-mapactions-snap-interaction';\n\nexport class DrawAction extends MapAction {\n  constructor(layer, type, onDraw, options) {\n    const interactions = [];\n    const drawOptions = options || {};\n    drawOptions.source = layer.getSource();\n    drawOptions.type = type;\n    const drawInteraction = new Draw(drawOptions);\n    interactions.push(drawInteraction);\n    if (drawOptions.snapping) {\n      interactions.push(new SnapInteraction(drawOptions.snapping.layer || layer));\n    }\n\n    drawInteraction.on('drawstart', (event) => {\n      if (drawOptions.measure) {\n        const feature = event.feature;\n\n        drawOptions.measure = typeof drawOptions.measure === 'object' ? drawOptions.measure : {};\n        drawOptions.measure.tooltip = drawOptions.measure.tooltip || {};\n\n        const tooltipElement = document.createElement('div');\n        tooltipElement.setAttribute('class', 'measure-tooltip');\n\n        this.tooltip = new Overlay({\n          offset: drawOptions.measure.tooltip.offset || [-15, 10],\n          positioning: 'bottom-center',\n        });\n\n        this.map.addOverlay(this.tooltip);\n\n        this.measurePointermoveHandler = this.map.on('pointermove', () => {\n          this._showMeasureTooltip(feature, this.tooltip, tooltipElement);\n        });\n      }\n    });\n\n    drawInteraction.on('drawend', (event) => {\n      const feature = event.feature;\n      onDraw(feature, () => {\n        try {\n          layer.getSource().removeFeature(feature); // when the features was not yet added to the source we'll add a listener in the catch block\n        } catch (exception) {\n          const listener = layer.getSource().on('addfeature', (event) => {\n            layer.getSource().removeFeature(event.feature);\n            unByKey(listener);\n          });\n        }\n      });\n      this._cleanUp();\n    });\n\n    super(interactions);\n\n    this.drawOptions = drawOptions;\n    this.drawInteraction = drawInteraction;\n  }\n\n  deactivate() {\n    this._cleanUp();\n    super.deactivate();\n  }\n\n  _cleanUp() {\n    if (this.drawOptions.measure) {\n      unByKey(this.measurePointermoveHandler);\n      this._removeTooltip();\n    }\n  };\n\n  _removeTooltip() {\n    if (this.tooltip) {\n      this.map.removeOverlay(this.tooltip);\n      this.tooltip = undefined;\n    }\n  };\n\n  _showMeasureTooltip(feature, tooltipElement) {\n    if (this.tooltip) {\n      const length = this._getLengthOfLastSegment(feature.getGeometry());\n      if (length !== 0) {\n        tooltipElement.textContent = length + ' m';\n        this.tooltip.setElement(tooltipElement);\n        this.tooltip.setPosition(feature.getGeometry().getLastCoordinate());\n      }\n    }\n  }\n\n  _getLengthOfLastSegment(geometry) {\n    if (geometry && geometry instanceof LineString) {\n      return new LineString(this._getCoordinatesOfLastSegment(geometry)).getLength().toFixed(2);\n    } else if (geometry && geometry instanceof Polygon) {\n      return new LineString(this._getCoordinatesOfLastSegment(geometry.getLinearRing(0))).getLength().toFixed(2);\n    }\n    return 0;\n  }\n\n  _getCoordinatesOfLastSegment(geometry) {\n    const size = geometry.getCoordinates().length;\n    return geometry.getCoordinates().slice(size - 2);\n  }\n}\n","import {DrawAction} from './vl-mapactions-draw-action';\n\nexport class DrawLijnstukAction extends DrawAction {\n  constructor(layer, onDraw, options) {\n    options = options || {};\n    options.maxPoints = 2;\n    super(layer, 'LineString', onDraw, options);\n    this.drawLijnstukOptions = options;\n  }\n}\n","import {Polygon} from 'ol/src/geom';\nimport {DrawAction} from './vl-mapactions-draw-action';\n\nexport class DrawRectangleAction extends DrawAction {\n  constructor(layer, onDraw, options) {\n    const drawRectangleOptions = options || {};\n    drawRectangleOptions.maxPoints = 2;\n    drawRectangleOptions.geometryFunction = (coordinates, geometry) => {\n      if (!geometry) {\n        geometry = new Polygon([]);\n      }\n      const start = coordinates[0];\n      const end = coordinates[1];\n      geometry.setCoordinates([\n        [start, [start[0], end[1]], end, [end[0], start[1]], start],\n      ]);\n      return geometry;\n    };\n\n    super(layer, 'LineString', onDraw, drawRectangleOptions);\n\n    this.drawRectangleOptions = drawRectangleOptions;\n  }\n}\n","import {Select} from 'ol/src/interaction';\nimport {pointerMove} from 'ol/src/events/condition';\nimport {MapAction} from './vl-mapactions-mapaction';\n\nexport class HighlightAction extends MapAction {\n  constructor(layer, options) {\n    const highlightInteraction = new Select({\n      layers: [layer],\n      condition: pointerMove,\n      style: options ? options.style : null,\n    });\n\n    super([highlightInteraction]);\n\n    this.layer = layer;\n    this.highlightInteraction = highlightInteraction;\n  }\n\n  deactivate() {\n    this.dehighlightAllFeatures();\n    super.deactivate();\n  }\n\n  highlightFeatureWithId(id) {\n    if (id) {\n      const feature = this.layer.getSource().getFeatureById(id) || this._getClusterByFeatureId(this.layer.getSource().getFeatures(), id);\n      if (feature) {\n        if (this.highlightInteraction.getFeatures().getArray().indexOf(feature) === -1) {\n          this.highlightInteraction.getFeatures().push(feature);\n        }\n      }\n    }\n  }\n\n  _getClusterByFeatureId(clusters, id) {\n    for (let i = 0; i < clusters.length; i++) {\n      const features = clusters[i].get('features');\n      if (features && this._getFeatureById(features, id)) {\n        return clusters[i];\n      }\n    }\n  }\n\n  _getFeatureById(features, id) {\n    for (let i = 0; i < features.length; i++) {\n      if (features[i].getId() === id) {\n        return features[i];\n      }\n    }\n  }\n\n  isHighlighted(feature) {\n    let highlighted = false;\n    this.highlightInteraction.getFeatures().forEach((highlightedFeature) => {\n      if (highlightedFeature === feature) {\n        highlighted = true;\n      }\n    });\n    return highlighted;\n  }\n\n  dehighlightAllFeatures() {\n    this.highlightInteraction.getFeatures().clear();\n  }\n}\n","import Overlay from 'ol/src/Overlay';\nimport {unByKey} from 'ol/src/Observable';\nimport {DrawAction} from './vl-mapactions-draw-action';\n\nexport class MeasureAction extends DrawAction {\n  constructor(layer, options) {\n    super(layer, 'LineString', () => {\n      unByKey(this.measurePointermoveHandler);\n    }, options);\n\n    let featureCounter = 0;\n\n    this.layer = layer;\n    this.measureTooltips = [];\n    this.measurePointermoveHandler = undefined;\n\n    const showMeasureTooltip = (feature, tooltip, tooltipElement) => {\n      const length = feature.getGeometry().getLength().toFixed(2);\n      tooltipElement.textContent = length + ' m';\n      tooltip.setElement(tooltipElement);\n      tooltip.setPosition(feature.getGeometry().getLastCoordinate());\n    };\n\n    this.drawInteraction.on('drawstart', (event) => {\n      const id = featureCounter++;\n      const measureFeature = event.feature;\n      measureFeature.setId(id);\n      const tooltipElement = document.createElement('div');\n      tooltipElement.setAttribute('class', 'measure-tooltip');\n      const tooltip = new Overlay({\n        offset: [-15, 10],\n        positioning: 'bottom-center',\n      });\n      this.map.addOverlay(tooltip);\n      this.measureTooltips[id] = tooltip;\n      this.measurePointermoveHandler = this.map.on('pointermove', () => showMeasureTooltip(measureFeature, tooltip, tooltipElement));\n    });\n\n    const removeTooltip = (id) => {\n      this.map.removeOverlay(this.measureTooltips[id]);\n      this.measureTooltips[id] = null;\n    };\n\n    this.layer.getSource().on('removefeature', (event) => {\n      removeTooltip(event.feature.getId());\n    });\n\n    this.cleanUp = () => {\n      unByKey(this.measurePointermoveHandler);\n      const tooltipsToRemove = [];\n      this.measureTooltips.forEach((value, index) => {\n        if (this.layer.getSource().getFeatureById(index) == null) {\n          tooltipsToRemove.push(index);\n        }\n      });\n      tooltipsToRemove.forEach((id) => {\n        removeTooltip(id);\n      });\n    };\n\n    this.getTooltipFor = (id) => {\n      return this.measureTooltips[id];\n    };\n\n    this.measureOptions = options;\n  }\n\n  deactivate() {\n    this.cleanUp();\n    super.deactivate(this);\n  }\n}\n","import {Modify} from 'ol/src/interaction';\nimport {SnapInteraction} from './vl-mapactions-snap-interaction';\nimport {SelectAction} from './vl-mapactions-select-action';\n\nexport class ModifyAction extends SelectAction {\n  constructor(layer, onModify, options) {\n    const filter = options ? options.filter : null;\n\n    super(layer, null, {\n      filter: filter,\n    });\n\n    this.modifyInteraction = new Modify({\n      features: this.selectInteraction.getFeatures(),\n    });\n\n    this.addInteraction(this.modifyInteraction);\n\n    if (options && options.snapping) {\n      this.addInteraction(new SnapInteraction(options.snapping.layer || layer));\n    }\n\n    this.modifyInteraction.on('modifystart', (event) => {\n      this.currentGeometryBeingModified = event.features.getArray()[0].getGeometry().clone();\n    });\n\n    this.modifyInteraction.on('modifyend', (event) => {\n      event.features.forEach((feature) => {\n        onModify(feature, (feature) => {\n          feature.setGeometry(this.currentGeometryBeingModified);\n        });\n      });\n    });\n  }\n}\n","import {Translate} from 'ol/src/interaction';\nimport {ModifyAction} from './vl-mapactions-modify-action';\n\nexport class ModifyAndTranslateAction extends ModifyAction {\n  constructor(layer, onModify, options) {\n    super(layer, onModify, options);\n\n    this.translateInteraction = new Translate({\n      features: this.selectInteraction.getFeatures(),\n    });\n\n    this.addInteraction(this.translateInteraction);\n\n    this.translateInteraction.on('translateend', (event) => {\n      event.features.forEach((feature) => {\n        onModify(feature, (feature) => {\n          feature.getGeometry().setCoordinates(feature.get('entity').geometry.coordinates);\n        });\n        this.selectInteraction.getFeatures().clear();\n      });\n    });\n  }\n}\n","import {SelectAction} from './vl-mapactions-select-action';\n\nexport class SelectActions extends SelectAction {\n  constructor(layerConfiguraties, onSelect, options) {\n    const layers = layerConfiguraties.map((layerConfiguratie) => layerConfiguratie.layer);\n\n    const style = (feature) => {\n      const layer = this._getLayer(feature);\n      const style = this._getLayerStyle(layer);\n      return style && typeof style === 'function' ? style(feature) : style;\n    };\n\n    const hoverStyle = (feature) => {\n      const layer = this._getLayer(feature);\n      const style = this._getLayerHoverStyle(layer);\n      return style && typeof style === 'function' ? style(feature) : style;\n    };\n\n    const filter = (feature, layer) => {\n      let layerFilter = false;\n      this.layers.forEach((_layer) => {\n        if (_layer == layer) {\n          layerFilter = true;\n        }\n      });\n      if (options && options.filter) {\n        return layerFilter && options.filter(feature);\n      }\n      return layerFilter;\n    };\n\n    super(layers, onSelect, {\n      filter: filter,\n      style: style,\n      hoverStyle: hoverStyle,\n    },\n    );\n\n    this.layerConfiguraties = layerConfiguraties;\n    this.layers = layers;\n    this.style = style;\n    this.hoverStyle = hoverStyle;\n    this.filter = filter;\n  }\n\n  _getLayer(feature) {\n    return this.layers.find((layer) => layer.getSource().getFeatures().indexOf(feature) !== -1);\n  }\n\n  _getLayerStyle(layer, type) {\n    const layerConfiguratie = this.layerConfiguraties.find((layerConfiguratie) => layerConfiguratie.layer === layer);\n    return layerConfiguratie ? layerConfiguratie[type || 'style'] : null;\n  }\n\n  _getLayerHoverStyle(layer) {\n    return this._getLayerStyle(layer, 'hoverStyle') || this._getLayerStyle(layer);\n  }\n\n  markFeatureWithId(id, layer) {\n    if (layer) {\n      super.markFeatureWithId(id, layer);\n    } else {\n      this.layers.forEach((layer) => {\n        super.markFeatureWithId(id, layer);\n      });\n      // todo refactor! : this is wrong: what if multiple features have same id but different layer?\n    }\n  };\n}\n","import Overlay from 'ol/src/Overlay';\n\nexport class Tooltips {\n  constructor(layer, infoPromise, loadingMessage, doneLoading) {\n    this.layer = layer;\n    layer.tooltips = [];\n\n    this.showTooltip = (map, feature, coordinates, options) => {\n      options = options || {};\n\n      const element = document.createElement('div');\n      element.innerHTML = '<span class=\\'content\\'></span><div class=\\'arrow\\'></div>';\n      element.setAttribute('class', 'info-tooltip');\n\n      const tooltip = new Overlay({\n        offset: options.offset || [0, -10],\n        positioning: 'bottom-center',\n        insertFirst: false,\n      });\n\n      tooltip.setElement(element);\n      map.addOverlay(tooltip);\n      layer.tooltips.push(tooltip);\n\n      const showInfoContent = (content) => {\n        element.childNodes[0].innerHTML = content;\n        tooltip.setPosition(coordinates);\n        tooltip.setElement(element);\n        element.parentNode.style.position = 'fixed'; // because the overlay has absolute positioning and otherwise the left side panel could influence the overlay elements\n      };\n\n      const delay = 100; // Maximum time we wait on the promise to be resolved before rendering a loading element\n      let resolveDelay = 0; // Minimum time the loading element will be displayed to prevent flashy text\n      const loading = setTimeout(() => {\n        resolveDelay = 500; // Set the minimum delay time the loading element will be visible\n        showInfoContent('<span class=\\'icon\\'></span> ' + (loadingMessage ? loadingMessage : 'Info berekenen  ...'));\n      }, delay);\n\n      infoPromise(feature, coordinates).then((result) => {\n        setTimeout(() => {\n          clearTimeout(loading);\n          showInfoContent(result);\n          map.render(); // re-render the map so changes in the size of the tooltip (due to different content) don't result in a badly placed tooltip\n          if (doneLoading) {\n            doneLoading(feature, coordinates);\n          }\n        }, resolveDelay);\n      });\n    };\n\n    this.clear = (map) => {\n      this.layer.tooltips.forEach((tooltip) => map.removeOverlay(tooltip));\n    };\n  }\n}\n","import {DrawAction} from './vl-mapactions-draw-action';\nimport {Tooltips} from './vl-mapactions-tooltips';\n\nexport class ShowInfoAction extends DrawAction {\n  constructor(layer, infoPromise, loadingMessage, tooltipOptions) {\n    const tooltips = new Tooltips(layer, infoPromise, loadingMessage);\n\n    super(layer, 'Point', (feature) => {\n      this.tooltips.showTooltip(this.map, feature, feature.getGeometry().getCoordinates(), tooltipOptions);\n    });\n\n    this.layer = layer;\n    this.tooltips = tooltips;\n  }\n\n  clear() {\n    this.tooltips.clear(this.map);\n    this.layer.getSource().clear();\n  }\n\n  deactivate() {\n    this.clear();\n    super.deactivate();\n  }\n}\n","import {SelectAction} from './vl-mapactions-select-action';\nimport {Tooltips} from './vl-mapactions-tooltips';\n\nexport class ShowInfoSelectAction extends SelectAction {\n  constructor(layer, infoPromise, loadingMessage, doneLoading, tooltipOptions) {\n    super(layer, (feature, event) => {\n      if (feature) {\n        const coordinate = feature.getGeometry().getClosestPoint(event.mapBrowserEvent.coordinate);\n        this.tooltips.showTooltip(this.map, feature, coordinate, tooltipOptions);\n      }\n    });\n\n    this.tooltips = new Tooltips(layer, infoPromise, loadingMessage, doneLoading);\n    this.layer = layer;\n  }\n\n  clear() {\n    this.tooltips.clear(this.map);\n  }\n\n  deactivate() {\n    this.clear();\n    this.layer.setVisible(this.visible);\n    super.deactivate();\n  }\n\n  activate() {\n    this.visible = this.layer.getVisible();\n    this.layer.setVisible(true);\n    super.activate();\n  }\n}\n","import * as geom from './org/locationtech/jts/geom'\nimport * as algorithm from './org/locationtech/jts/algorithm'\nimport * as densify from './org/locationtech/jts/densify'\nimport * as dissolve from './org/locationtech/jts/dissolve'\nimport * as geomgraph from './org/locationtech/jts/geomgraph'\nimport * as index from './org/locationtech/jts/index'\nimport * as io from './org/locationtech/jts/io'\nimport * as noding from './org/locationtech/jts/noding'\nimport * as operation from './org/locationtech/jts/operation'\nimport * as precision from './org/locationtech/jts/precision'\nimport * as simplify from './org/locationtech/jts/simplify'\nimport * as triangulate from './org/locationtech/jts/triangulate'\nimport * as linearref from './org/locationtech/jts/linearref'\nimport * as util from './org/locationtech/jts/util'\n\nimport './org/locationtech/jts/monkey'\n\nconst version = 'npm_package_version (git_hash)'\nexport {\n  version,\n  algorithm,\n  densify,\n  dissolve,\n  geom,\n  geomgraph,\n  index,\n  io,\n  noding,\n  operation,\n  precision,\n  simplify,\n  triangulate,\n  linearref,\n  util\n}\n","export default class NumberUtil {\n  constructor () {\n    NumberUtil.constructor_.apply(this, arguments)\n  }\n\n  static equalsWithTolerance (x1, x2, tolerance) {\n    return Math.abs(x1 - x2) <= tolerance\n  }\n\n  getClass () {\n    return NumberUtil\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nNumberUtil.constructor_ = function () {}\n","export default function IllegalArgumentException (message) {\n  this.message = message\n}\n","export default function Long (high, low) {\n  this.low = low | 0\n  this.high = high | 0\n}\n\nLong.toBinaryString = function (i) {\n  let mask\n  let result = ''\n  for (mask = 0x80000000; mask > 0; mask >>>= 1) { result += (i.high & mask) === mask ? '1' : '0' }\n  for (mask = 0x80000000; mask > 0; mask >>>= 1) { result += (i.low & mask) === mask ? '1' : '0' }\n  return result\n}\n","import Long from './Long'\n\nexport default function Double () { }\n\nDouble.isNaN = n => Number.isNaN(n)\nDouble.isInfinite = n => !Number.isFinite(n)\nDouble.MAX_VALUE = Number.MAX_VALUE\n\nif (typeof Float64Array === 'function' &&\n  typeof Int32Array === 'function') {\n  // Simple and fast conversion between double and long bits\n  // using TypedArrays and ArrayViewBuffers.\n  (function () {\n    const EXP_BIT_MASK = 0x7ff00000\n    const SIGNIF_BIT_MASK = 0xFFFFF\n    const f64buf = new Float64Array(1)\n    const i32buf = new Int32Array(f64buf.buffer)\n    Double.doubleToLongBits = function (value) {\n      f64buf[0] = value\n      let low = i32buf[0] | 0\n      let high = i32buf[1] | 0\n      // Check for NaN based on values of bit fields, maximum\n      // exponent and nonzero significand.\n      if (((high & EXP_BIT_MASK) === EXP_BIT_MASK) &&\n        ((high & SIGNIF_BIT_MASK) !== 0) &&\n        (low !== 0)) {\n        low = 0 | 0\n        high = 0x7ff80000 | 0\n      }\n      return new Long(high, low)\n    }\n    Double.longBitsToDouble = function (bits) {\n      i32buf[0] = bits.low\n      i32buf[1] = bits.high\n      return f64buf[0]\n    }\n  })()\n} else {\n  // More complex and slower fallback implementation using\n  // math and the divide-by-two and multiply-by-two algorithms.\n  (function () {\n    const BIAS = 1023\n    const log2 = Math.log2\n    const floor = Math.floor\n    const pow = Math.pow\n    const MAX_REL_BITS_INTEGER = (function () {\n      for (let i = 53; i > 0; i--) {\n        const bits = pow(2, i) - 1\n        if (floor(log2(bits)) + 1 === i) {\n          return bits\n        }\n      }\n      return 0\n    })()\n    Double.doubleToLongBits = function (value) {\n      let x, y, f, bits, skip\n      let sign, exp, high, low\n\n      // Get the sign bit and absolute value.\n      if (value < 0 || 1 / value === Number.NEGATIVE_INFINITY) {\n        sign = (1 << 31)\n        value = (-value)\n      } else {\n        sign = 0\n      }\n\n      // Handle some special values.\n      if (value === 0) {\n        // Handle zeros (+/-0).\n        low = 0 | 0\n        high = sign // exponent: 00..00, significand: 00..00\n        return new Long(high, low)\n      }\n\n      if (value === Infinity) {\n        // Handle infinity (only positive values for value possible).\n        low = 0 | 0\n        high = sign | 0x7ff00000 // exponent: 11..11, significand: 00..00\n        return new Long(high, low)\n      }\n\n      if (value !== value) { // eslint-disable-line\n        // Handle NaNs (boiled down to only one distinct NaN).\n        low = 0 | 0\n        high = 0x7ff80000 // exponent: 11..11, significand: 10..00\n        return new Long(high, low)\n      }\n\n      // Preinitialize variables, that are not neccessarily set by\n      // the algorithm.\n      bits = 0\n      low = 0 | 0\n\n      // Get the (always positive) integer part of value.\n      x = floor(value)\n\n      // Process the integer part if it's greater than 1. Zero requires\n      // no bits at all, 1 represents the implicit (hidden) leading bit,\n      // which must not be written as well.\n      if (x > 1) {\n        // If we can reliably determine the number of bits required for\n        // the integer part,\n        if (x <= MAX_REL_BITS_INTEGER) {\n          // get the number of bits required to represent it minus 1\n          bits = floor(log2(x)) /* + 1 - 1 */\n          // and simply copy/shift the integer bits into low and high.\n          // That's much faster than the divide-by-two algorithm (saves\n          // up to ~60%).\n          // We always need to mask out the most significant bit, which\n          // is the implicit (aka hidden) bit.\n          if (bits <= 20) {\n            // The simple case in which the integer fits into the\n            // lower 20 bits of the high word is worth to be handled\n            // separately (saves ~25%).\n            low = 0 | 0\n            high = (x << (20 - bits)) & 0xfffff\n          } else {\n            // Here, the integer part is split into low and high.\n            // Since its value may require more than 32 bits, we\n            // cannot use bitwise operators (which implicitly cast\n            // to Int32), but use arithmetic operators % and / to\n            // get low and high parts. The uppper 20 bits go to high,\n            // the remaining bits (in f) to low.\n            f = bits - 20\n            // Like (1 << f) but safe with even more than 32 bits.\n            y = pow(2, f)\n            low = (x % y) << (32 - f)\n            high = (x / y) & 0xfffff\n          }\n        } else {\n          // For greater values, we must use the much slower divide-by-two\n          // algorithm. Bits are generated from right to left, that is from\n          // least to most significant bit. For each bit, we left-shift both\n          // low and high by one and carry bit #0 from high to #31 in low.\n          // The next bit is then copied into bit #19 in high, the leftmost\n          // bit of the double's significand.\n\n          // Preserve x for later user, so work with f.\n          f = x\n          low = 0 | 0\n          while (true) {\n            y = f / 2\n            f = floor(y)\n            if (f === 0) {\n              // We just found the most signigicant (1-)bit, which\n              // is the implicit bit and so, not stored in the double\n              // value. So, it's time to leave the loop.\n              break\n            }\n            // Count this bit, shift low and carry bit #0 from high.\n            bits++\n            low >>>= 1\n            low |= (high & 0x1) << 31\n            // Shift high.\n            high >>>= 1\n            if (y !== f) {\n              // Copy the new bit into bit #19 in high (only required if 1).\n              high |= 0x80000\n            }\n          }\n        }\n      }\n\n      // Bias the exponent.\n      exp = bits + BIAS\n\n      // If the integer part is zero, we've not yet seen the implicit\n      // leading bit. Variable skip is later used while processing the\n      // fractional part (if any).\n      skip = (x === 0)\n\n      // Get fraction only into x.\n      x = value - x\n\n      // If some significand bits are still left to be filled and\n      // the fractional part is not zero, convert the fraction using\n      // the multiply-by-2 algorithm.\n      if (bits < 52 && x !== 0) {\n        // Initialize 'buffer' f, into which newly created bits get\n        // shifted from right to left.\n        f = 0\n\n        while (true) {\n          y = x * 2\n          if (y >= 1) {\n            // This is a new 1-bit. Add and count this bit, if not\n            // prohibited by skip.\n            x = y - 1\n            if (!skip) {\n              f <<= 1\n              f |= 1\n              bits++\n            } else {\n              // Otherwise, decrement the exponent and unset\n              // skip, so that all following bits get written.\n              exp--\n              skip = false\n            }\n          } else {\n            // This is a new 0-bit. Add and count this bit, if not\n            // prohibited by skip.\n            x = y\n            if (!skip) {\n              f <<= 1\n              bits++\n            } else if (--exp === 0) {\n              // Otherwise we've just decremented the exponent. If the\n              // biased exponent is zero now (-1023), we process a\n              // subnormal number, which has no impled leading 1-bit.\n              // So, count this 0-bit and unset skip to write out\n              // all the following bits.\n              bits++\n              skip = false\n            }\n          }\n          if (bits === 20) {\n            // When 20 bits have been created in total, we're done with\n            // the high word. Copy the bits from 'buffer' f into high\n            // and reset 'buffer' f. Following bits will end up in the\n            // low word.\n            high |= f\n            f = 0\n          } else if (bits === 52) {\n            // When 52 bits have been created in total, we're done with\n            // low word as well. Copy the bits from 'buffer' f into low\n            // and exit the loop.\n            low |= f\n            break\n          }\n          if (y === 1) {\n            // When y is exactly 1, there is no remainder and the process\n            // is complete (the number is finite). Copy the bits from\n            // 'buffer' f into either low or high and exit the loop.\n            if (bits < 20) {\n              high |= (f << (20 - bits))\n            } else if (bits < 52) {\n              low |= (f << (52 - bits))\n            }\n            break\n          }\n        }\n      }\n\n      // Copy/shift the exponent and sign bits into the high word.\n      high |= (exp << 20)\n      high |= sign\n\n      return new Long(high, low)\n    }\n    Double.longBitsToDouble = function (bits) {\n      let i\n      let x, sign, exp, fract\n      const high = bits.high\n      const low = bits.low\n\n      // Extract the sign.\n      sign = (high & (1 << 31)) ? -1 : 1\n\n      // Extract the unbiased exponent.\n      exp = ((high & 0x7ff00000) >> 20) - BIAS\n\n      // Calculate the fraction from left to right. Start\n      // off with the 20 lower bits from the high word.\n      fract = 0\n      x = (1 << 19)\n      for (i = 1; i <= 20; i++) {\n        if (high & x) {\n          fract += pow(2, -i)\n        }\n        x >>>= 1\n      }\n      // Continue with all 32 bits from the low word.\n      x = (1 << 31)\n      for (i = 21; i <= 52; i++) {\n        if (low & x) {\n          fract += pow(2, -i)\n        }\n        x >>>= 1\n      }\n\n      // Handle special values.\n      // Check for zero and subnormal values.\n      if (exp === -BIAS) {\n        if (fract === 0) {\n          // +/-1.0 * 0.0 => +/-0.0\n          return sign * 0\n        }\n        exp = -1022\n      } else if (exp === BIAS + 1) { // Check for +/-Infinity or NaN.\n        if (fract === 0) {\n          // +/-1.0 / 0.0 => +/-Infinity\n          return sign / 0\n        }\n        return NaN\n      } else { // Nothing special? Seems to be a normal number.\n        // Add the implicit leading bit (1*2^0).\n        fract += 1\n      }\n\n      return sign * fract * pow(2, exp)\n    }\n  })()\n}\n","export default function Comparable () {}\n","export default function Clonable () {}\n","export default function Comparator () {}\n","export default function Serializable () {}\n","export default function RuntimeException (message) {\n  this.name = 'RuntimeException'\n  this.message = message\n  this.stack = (new Error()).stack\n  Error.call(this, message)\n}\n\nRuntimeException.prototype = Object.create(Error.prototype)\nRuntimeException.prototype.constructor = Error\n","import RuntimeException from '../../../../java/lang/RuntimeException'\nexport default class AssertionFailedException extends RuntimeException {\n  constructor () {\n    super()\n    AssertionFailedException.constructor_.apply(this, arguments)\n  }\n\n  getClass () {\n    return AssertionFailedException\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nAssertionFailedException.constructor_ = function () {\n  if (arguments.length === 0) {\n    RuntimeException.constructor_.call(this)\n  } else if (arguments.length === 1) {\n    const message = arguments[0]\n    RuntimeException.constructor_.call(this, message)\n  }\n}\n","import AssertionFailedException from './AssertionFailedException'\nexport default class Assert {\n  constructor () {\n    Assert.constructor_.apply(this, arguments)\n  }\n\n  static shouldNeverReachHere () {\n    if (arguments.length === 0) {\n      Assert.shouldNeverReachHere(null)\n    } else if (arguments.length === 1) {\n      const message = arguments[0]\n      throw new AssertionFailedException('Should never reach here' + (message !== null ? ': ' + message : ''))\n    }\n  }\n\n  static isTrue () {\n    if (arguments.length === 1) {\n      const assertion = arguments[0]\n      Assert.isTrue(assertion, null)\n    } else if (arguments.length === 2) {\n      const assertion = arguments[0]; const message = arguments[1]\n      if (!assertion) {\n        if (message === null) {\n          throw new AssertionFailedException()\n        } else {\n          throw new AssertionFailedException(message)\n        }\n      }\n    }\n  }\n\n  static equals () {\n    if (arguments.length === 2) {\n      const expectedValue = arguments[0]; const actualValue = arguments[1]\n      Assert.equals(expectedValue, actualValue, null)\n    } else if (arguments.length === 3) {\n      const expectedValue = arguments[0]; const actualValue = arguments[1]; const message = arguments[2]\n      if (!actualValue.equals(expectedValue)) {\n        throw new AssertionFailedException('Expected ' + expectedValue + ' but encountered ' + actualValue + (message !== null ? ': ' + message : ''))\n      }\n    }\n  }\n\n  getClass () {\n    return Assert\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nAssert.constructor_ = function () {}\n","import NumberUtil from '../util/NumberUtil'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException'\nimport Double from '../../../../java/lang/Double'\nimport Comparable from '../../../../java/lang/Comparable'\nimport Cloneable from '../../../../java/lang/Cloneable'\nimport Comparator from '../../../../java/util/Comparator'\nimport Serializable from '../../../../java/io/Serializable'\nimport Assert from '../util/Assert'\nexport default class Coordinate {\n  constructor () {\n    Coordinate.constructor_.apply(this, arguments)\n  }\n\n  static hashCode () {\n    if (arguments.length === 1 && typeof arguments[0] === 'number') {\n      const x = arguments[0]\n      const f = Double.doubleToLongBits(x)\n      return Math.trunc(f ^ f >>> 32)\n    }\n  }\n\n  setOrdinate (ordinateIndex, value) {\n    switch (ordinateIndex) {\n      case Coordinate.X:\n        this.x = value\n        break\n      case Coordinate.Y:\n        this.y = value\n        break\n      case Coordinate.Z:\n        this.z = value\n        break\n      default:\n        throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n    }\n  }\n\n  equals2D () {\n    if (arguments.length === 1) {\n      const other = arguments[0]\n      if (this.x !== other.x) {\n        return false\n      }\n      if (this.y !== other.y) {\n        return false\n      }\n      return true\n    } else if (arguments.length === 2) {\n      const c = arguments[0]; const tolerance = arguments[1]\n      if (!NumberUtil.equalsWithTolerance(this.x, c.x, tolerance)) {\n        return false\n      }\n      if (!NumberUtil.equalsWithTolerance(this.y, c.y, tolerance)) {\n        return false\n      }\n      return true\n    }\n  }\n\n  getOrdinate (ordinateIndex) {\n    switch (ordinateIndex) {\n      case Coordinate.X:\n        return this.x\n      case Coordinate.Y:\n        return this.y\n      case Coordinate.Z:\n        return this.z\n    }\n    throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n  }\n\n  equals3D (other) {\n    return this.x === other.x && this.y === other.y && (this.z === other.z || Double.isNaN(this.z) && Double.isNaN(other.z))\n  }\n\n  equals (other) {\n    if (!(other instanceof Coordinate)) {\n      return false\n    }\n    return this.equals2D(other)\n  }\n\n  equalInZ (c, tolerance) {\n    return NumberUtil.equalsWithTolerance(this.z, c.z, tolerance)\n  }\n\n  compareTo (o) {\n    const other = o\n    if (this.x < other.x) return -1\n    if (this.x > other.x) return 1\n    if (this.y < other.y) return -1\n    if (this.y > other.y) return 1\n    return 0\n  }\n\n  clone () {\n    try {\n      const coord = null\n      return coord\n    } catch (e) {\n      if (e instanceof CloneNotSupportedException) {\n        Assert.shouldNeverReachHere(\"this shouldn't happen because this class is Cloneable\")\n        return null\n      } else throw e\n    } finally {}\n  }\n\n  copy () {\n    return new Coordinate(this)\n  }\n\n  toString () {\n    return '(' + this.x + ', ' + this.y + ', ' + this.z + ')'\n  }\n\n  distance3D (c) {\n    const dx = this.x - c.x\n    const dy = this.y - c.y\n    const dz = this.z - c.z\n    return Math.sqrt(dx * dx + dy * dy + dz * dz)\n  }\n\n  distance (c) {\n    const dx = this.x - c.x\n    const dy = this.y - c.y\n    return Math.sqrt(dx * dx + dy * dy)\n  }\n\n  hashCode () {\n    let result = 17\n    result = 37 * result + Coordinate.hashCode(this.x)\n    result = 37 * result + Coordinate.hashCode(this.y)\n    return result\n  }\n\n  setCoordinate (other) {\n    this.x = other.x\n    this.y = other.y\n    this.z = other.z\n  }\n\n  getClass () {\n    return Coordinate\n  }\n\n  get interfaces_ () {\n    return [Comparable, Cloneable, Serializable]\n  }\n}\nclass DimensionalComparator {\n  constructor () {\n    DimensionalComparator.constructor_.apply(this, arguments)\n  }\n\n  static compare (a, b) {\n    if (a < b) return -1\n    if (a > b) return 1\n    if (Double.isNaN(a)) {\n      if (Double.isNaN(b)) return 0\n      return -1\n    }\n    if (Double.isNaN(b)) return 1\n    return 0\n  }\n\n  compare (o1, o2) {\n    const c1 = o1\n    const c2 = o2\n    const compX = DimensionalComparator.compare(c1.x, c2.x)\n    if (compX !== 0) return compX\n    const compY = DimensionalComparator.compare(c1.y, c2.y)\n    if (compY !== 0) return compY\n    if (this._dimensionsToTest <= 2) return 0\n    const compZ = DimensionalComparator.compare(c1.z, c2.z)\n    return compZ\n  }\n\n  getClass () {\n    return DimensionalComparator\n  }\n\n  get interfaces_ () {\n    return [Comparator]\n  }\n}\nDimensionalComparator.constructor_ = function () {\n  this._dimensionsToTest = 2\n  if (arguments.length === 0) {\n    DimensionalComparator.constructor_.call(this, 2)\n  } else if (arguments.length === 1) {\n    const dimensionsToTest = arguments[0]\n    if (dimensionsToTest !== 2 && dimensionsToTest !== 3) throw new IllegalArgumentException('only 2 or 3 dimensions may be specified')\n    this._dimensionsToTest = dimensionsToTest\n  }\n}\nCoordinate.DimensionalComparator = DimensionalComparator\nCoordinate.constructor_ = function () {\n  this.x = null\n  this.y = null\n  this.z = null\n  if (arguments.length === 0) {\n    Coordinate.constructor_.call(this, 0.0, 0.0)\n  } else if (arguments.length === 1) {\n    const c = arguments[0]\n    Coordinate.constructor_.call(this, c.x, c.y, c.z)\n  } else if (arguments.length === 2) {\n    const x = arguments[0]; const y = arguments[1]\n    Coordinate.constructor_.call(this, x, y, Coordinate.NULL_ORDINATE)\n  } else if (arguments.length === 3) {\n    const x = arguments[0]; const y = arguments[1]; const z = arguments[2]\n    this.x = x\n    this.y = y\n    this.z = z\n  }\n}\nCoordinate.serialVersionUID = 6683108902428366910\nCoordinate.NULL_ORDINATE = Double.NaN\nCoordinate.X = 0\nCoordinate.Y = 1\nCoordinate.Z = 2\n","export default function (o, i) {\n  return o.interfaces_ && o.interfaces_.indexOf(i) > -1\n}\n","/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Collection.html\n *\n * @constructor\n * @private\n */\nexport default function Collection () {};\n\n/**\n * Ensures that this collection contains the specified element (optional\n * operation).\n * @param {Object} e\n * @return {boolean}\n */\nCollection.prototype.add = function () {}\n\n/**\n * Appends all of the elements in the specified collection to the end of this\n * list, in the order that they are returned by the specified collection's\n * iterator (optional operation).\n * @param {javascript.util.Collection} c\n * @return {boolean}\n */\nCollection.prototype.addAll = function () {}\n\n/**\n * Returns true if this collection contains no elements.\n * @return {boolean}\n */\nCollection.prototype.isEmpty = function () {}\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {javascript.util.Iterator}\n */\nCollection.prototype.iterator = function () {}\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {number}\n */\nCollection.prototype.size = function () {}\n\n/**\n * Returns an array containing all of the elements in this collection.\n * @return {Array}\n */\nCollection.prototype.toArray = function () {}\n\n/**\n * Removes a single instance of the specified element from this collection if it\n * is present. (optional)\n * @param {Object} e\n * @return {boolean}\n */\nCollection.prototype.remove = function () {}\n","/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nexport default function IndexOutOfBoundsException (message) {\n  this.message = message || ''\n};\nIndexOutOfBoundsException.prototype = new Error()\n\n/**\n * @type {string}\n */\nIndexOutOfBoundsException.prototype.name = 'IndexOutOfBoundsException'\n","import Collection from './Collection'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/List.html\n *\n * @extends {javascript.util.Collection}\n * @constructor\n * @private\n */\nexport default function List () { };\nList.prototype = Object.create(Collection.prototype)\nList.prototype.constructor = List\n\n/**\n * Returns the element at the specified position in this list.\n * @param {number} index\n * @return {Object}\n */\nList.prototype.get = function () { }\n\n/**\n * Replaces the element at the specified position in this list with the\n * specified element (optional operation).\n * @param {number} index\n * @param {Object} e\n * @return {Object}\n */\nList.prototype.set = function () { }\n\n/**\n * Returns true if this collection contains no elements.\n * @return {boolean}\n */\nList.prototype.isEmpty = function () { }\n","/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nexport default function NoSuchElementException (message) {\n  this.message = message || ''\n};\nNoSuchElementException.prototype = new Error()\n\n/**\n * @type {string}\n */\nNoSuchElementException.prototype.name = 'NoSuchElementException'\n","import Collection from './Collection'\nimport IndexOutOfBoundsException from '../lang/IndexOutOfBoundsException'\nimport List from './List'\nimport NoSuchElementException from './NoSuchElementException'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/ArrayList.html\n *\n * @extends List\n * @private\n */\nexport default function ArrayList () {\n  /**\n   * @type {Array}\n   * @private\n  */\n  this.array_ = []\n\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0])\n  }\n};\nArrayList.prototype = Object.create(List.prototype)\nArrayList.prototype.constructor = ArrayList\n\nArrayList.prototype.ensureCapacity = function () {}\nArrayList.prototype.interfaces_ = [List, Collection]\n\n/**\n * @override\n */\nArrayList.prototype.add = function (e) {\n  if (arguments.length === 1) {\n    this.array_.push(e)\n  } else {\n    this.array_.splice(arguments[0], 0, arguments[1])\n  }\n  return true\n}\n\nArrayList.prototype.clear = function () {\n  this.array_ = []\n}\n\n/**\n * @override\n */\nArrayList.prototype.addAll = function (c) {\n  for (let i = c.iterator(); i.hasNext();) {\n    this.add(i.next())\n  }\n  return true\n}\n\n/**\n * @override\n */\nArrayList.prototype.set = function (index, element) {\n  const oldElement = this.array_[index]\n  this.array_[index] = element\n  return oldElement\n}\n\n/**\n * @override\n */\nArrayList.prototype.iterator = function () {\n  return new Iterator_(this)\n}\n\n/**\n * @override\n */\nArrayList.prototype.get = function (index) {\n  if (index < 0 || index >= this.size()) {\n    throw new IndexOutOfBoundsException()\n  }\n\n  return this.array_[index]\n}\n\n/**\n * @override\n */\nArrayList.prototype.isEmpty = function () {\n  return this.array_.length === 0\n}\n\n/**\n * @override\n */\nArrayList.prototype.size = function () {\n  return this.array_.length\n}\n\n/**\n * @override\n */\nArrayList.prototype.toArray = function () {\n  const array = []\n\n  for (let i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this.array_[i])\n  }\n\n  return array\n}\n\n/**\n * @override\n */\nArrayList.prototype.remove = function (o) {\n  let found = false\n\n  for (let i = 0, len = this.array_.length; i < len; i++) {\n    if (this.array_[i] === o) {\n      this.array_.splice(i, 1)\n      found = true\n      break\n    }\n  }\n\n  return found\n}\n\nArrayList.prototype.removeAll = function (c) {\n  for (let i = c.iterator(); i.hasNext();) {\n    this.remove(i.next())\n  }\n  return true\n}\n\n/**\n * @extends {Iterator}\n * @param {ArrayList} arrayList\n * @constructor\n * @private\n */\nconst Iterator_ = function (arrayList) {\n  /**\n   * @type {ArrayList}\n   * @private\n  */\n  this.arrayList_ = arrayList\n  /**\n   * @type {number}\n   * @private\n  */\n  this.position_ = 0\n}\n\n/**\n * @override\n */\nIterator_.prototype.next = function () {\n  if (this.position_ === this.arrayList_.size()) {\n    throw new NoSuchElementException()\n  }\n  return this.arrayList_.get(this.position_++)\n}\n\n/**\n * @override\n */\nIterator_.prototype.hasNext = function () {\n  if (this.position_ < this.arrayList_.size()) {\n    return true\n  } else {\n    return false\n  }\n}\n\n/**\n * TODO: should be in ListIterator\n * @override\n */\nIterator_.prototype.set = function (element) {\n  return this.arrayList_.set(this.position_ - 1, element)\n}\n\n/**\n * @override\n */\nIterator_.prototype.remove = function () {\n  this.arrayList_.remove(this.arrayList_.get(this.position_))\n}\n","import hasInterface from '../../../../hasInterface'\nimport Collection from '../../../../java/util/Collection'\nimport Coordinate from './Coordinate'\nimport ArrayList from '../../../../java/util/ArrayList'\nexport default class CoordinateList extends ArrayList {\n  constructor () {\n    super()\n    CoordinateList.constructor_.apply(this, arguments)\n  }\n\n  getCoordinate (i) {\n    return this.get(i)\n  }\n\n  addAll () {\n    if (arguments.length === 2 && (typeof arguments[1] === 'boolean' && hasInterface(arguments[0], Collection))) {\n      const coll = arguments[0]; const allowRepeated = arguments[1]\n      let isChanged = false\n      for (let i = coll.iterator(); i.hasNext();) {\n        this.add(i.next(), allowRepeated)\n        isChanged = true\n      }\n      return isChanged\n    } else return super.addAll.apply(this, arguments)\n  }\n\n  clone () {\n    const clone = super.clone.call(this)\n    for (let i = 0; i < this.size(); i++) {\n      clone.add(i, this.get(i).clone())\n    }\n    return clone\n  }\n\n  toCoordinateArray () {\n    return this.toArray(CoordinateList.coordArrayType)\n  }\n\n  add () {\n    if (arguments.length === 1) {\n      const coord = arguments[0]\n      super.add.call(this, coord)\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof Array && typeof arguments[1] === 'boolean') {\n        const coord = arguments[0]; const allowRepeated = arguments[1]\n        this.add(coord, allowRepeated, true)\n        return true\n      } else if (arguments[0] instanceof Coordinate && typeof arguments[1] === 'boolean') {\n        const coord = arguments[0]; const allowRepeated = arguments[1]\n        if (!allowRepeated) {\n          if (this.size() >= 1) {\n            const last = this.get(this.size() - 1)\n            if (last.equals2D(coord)) return null\n          }\n        }\n        super.add.call(this, coord)\n      } else if (arguments[0] instanceof Object && typeof arguments[1] === 'boolean') {\n        const obj = arguments[0]; const allowRepeated = arguments[1]\n        this.add(obj, allowRepeated)\n        return true\n      }\n    } else if (arguments.length === 3) {\n      if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Array && typeof arguments[1] === 'boolean')) {\n        const coord = arguments[0]; const allowRepeated = arguments[1]; const direction = arguments[2]\n        if (direction) {\n          for (let i = 0; i < coord.length; i++) {\n            this.add(coord[i], allowRepeated)\n          }\n        } else {\n          for (let i = coord.length - 1; i >= 0; i--) {\n            this.add(coord[i], allowRepeated)\n          }\n        }\n        return true\n      } else if (typeof arguments[2] === 'boolean' && (Number.isInteger(arguments[0]) && arguments[1] instanceof Coordinate)) {\n        const i = arguments[0]; const coord = arguments[1]; const allowRepeated = arguments[2]\n        if (!allowRepeated) {\n          const size = this.size()\n          if (size > 0) {\n            if (i > 0) {\n              const prev = this.get(i - 1)\n              if (prev.equals2D(coord)) return null\n            }\n            if (i < size) {\n              const next = this.get(i)\n              if (next.equals2D(coord)) return null\n            }\n          }\n        }\n        super.add.call(this, i, coord)\n      }\n    } else if (arguments.length === 4) {\n      const coord = arguments[0]; const allowRepeated = arguments[1]; const start = arguments[2]; const end = arguments[3]\n      let inc = 1\n      if (start > end) inc = -1\n      for (let i = start; i !== end; i += inc) {\n        this.add(coord[i], allowRepeated)\n      }\n      return true\n    }\n  }\n\n  closeRing () {\n    if (this.size() > 0) this.add(new Coordinate(this.get(0)), false)\n  }\n\n  getClass () {\n    return CoordinateList\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nCoordinateList.constructor_ = function () {\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    const coord = arguments[0]\n    this.ensureCapacity(coord.length)\n    this.add(coord, true)\n  } else if (arguments.length === 2) {\n    const coord = arguments[0]; const allowRepeated = arguments[1]\n    this.ensureCapacity(coord.length)\n    this.add(coord, allowRepeated)\n  }\n}\nCoordinateList.coordArrayType = new Array(0).fill(null)\n","import Coordinate from './Coordinate'\nimport Comparable from '../../../../java/lang/Comparable'\nimport Serializable from '../../../../java/io/Serializable'\nexport default class Envelope {\n  constructor () {\n    Envelope.constructor_.apply(this, arguments)\n  }\n\n  static intersects () {\n    if (arguments.length === 3) {\n      const p1 = arguments[0]; const p2 = arguments[1]; const q = arguments[2]\n      if (q.x >= (p1.x < p2.x ? p1.x : p2.x) && q.x <= (p1.x > p2.x ? p1.x : p2.x) && (q.y >= (p1.y < p2.y ? p1.y : p2.y) && q.y <= (p1.y > p2.y ? p1.y : p2.y))) {\n        return true\n      }\n      return false\n    } else if (arguments.length === 4) {\n      const p1 = arguments[0]; const p2 = arguments[1]; const q1 = arguments[2]; const q2 = arguments[3]\n      let minq = Math.min(q1.x, q2.x)\n      let maxq = Math.max(q1.x, q2.x)\n      let minp = Math.min(p1.x, p2.x)\n      let maxp = Math.max(p1.x, p2.x)\n      if (minp > maxq) return false\n      if (maxp < minq) return false\n      minq = Math.min(q1.y, q2.y)\n      maxq = Math.max(q1.y, q2.y)\n      minp = Math.min(p1.y, p2.y)\n      maxp = Math.max(p1.y, p2.y)\n      if (minp > maxq) return false\n      if (maxp < minq) return false\n      return true\n    }\n  }\n\n  getArea () {\n    return this.getWidth() * this.getHeight()\n  }\n\n  equals (other) {\n    if (!(other instanceof Envelope)) {\n      return false\n    }\n    const otherEnvelope = other\n    if (this.isNull()) {\n      return otherEnvelope.isNull()\n    }\n    return this._maxx === otherEnvelope.getMaxX() && this._maxy === otherEnvelope.getMaxY() && this._minx === otherEnvelope.getMinX() && this._miny === otherEnvelope.getMinY()\n  }\n\n  intersection (env) {\n    if (this.isNull() || env.isNull() || !this.intersects(env)) return new Envelope()\n    const intMinX = this._minx > env._minx ? this._minx : env._minx\n    const intMinY = this._miny > env._miny ? this._miny : env._miny\n    const intMaxX = this._maxx < env._maxx ? this._maxx : env._maxx\n    const intMaxY = this._maxy < env._maxy ? this._maxy : env._maxy\n    return new Envelope(intMinX, intMaxX, intMinY, intMaxY)\n  }\n\n  isNull () {\n    return this._maxx < this._minx\n  }\n\n  getMaxX () {\n    return this._maxx\n  }\n\n  covers () {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Coordinate) {\n        const p = arguments[0]\n        return this.covers(p.x, p.y)\n      } else if (arguments[0] instanceof Envelope) {\n        const other = arguments[0]\n        if (this.isNull() || other.isNull()) {\n          return false\n        }\n        return other.getMinX() >= this._minx && other.getMaxX() <= this._maxx && other.getMinY() >= this._miny && other.getMaxY() <= this._maxy\n      }\n    } else if (arguments.length === 2) {\n      const x = arguments[0]; const y = arguments[1]\n      if (this.isNull()) return false\n      return x >= this._minx && x <= this._maxx && y >= this._miny && y <= this._maxy\n    }\n  }\n\n  intersects () {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Envelope) {\n        const other = arguments[0]\n        if (this.isNull() || other.isNull()) {\n          return false\n        }\n        return !(other._minx > this._maxx || other._maxx < this._minx || other._miny > this._maxy || other._maxy < this._miny)\n      } else if (arguments[0] instanceof Coordinate) {\n        const p = arguments[0]\n        return this.intersects(p.x, p.y)\n      }\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n        const a = arguments[0]; const b = arguments[1]\n        if (this.isNull()) {\n          return false\n        }\n        const envminx = a.x < b.x ? a.x : b.x\n        if (envminx > this._maxx) return false\n        const envmaxx = a.x > b.x ? a.x : b.x\n        if (envmaxx < this._minx) return false\n        const envminy = a.y < b.y ? a.y : b.y\n        if (envminy > this._maxy) return false\n        const envmaxy = a.y > b.y ? a.y : b.y\n        if (envmaxy < this._miny) return false\n        return true\n      } else if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n        const x = arguments[0]; const y = arguments[1]\n        if (this.isNull()) return false\n        return !(x > this._maxx || x < this._minx || y > this._maxy || y < this._miny)\n      }\n    }\n  }\n\n  getMinY () {\n    return this._miny\n  }\n\n  getMinX () {\n    return this._minx\n  }\n\n  expandToInclude () {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Coordinate) {\n        const p = arguments[0]\n        this.expandToInclude(p.x, p.y)\n      } else if (arguments[0] instanceof Envelope) {\n        const other = arguments[0]\n        if (other.isNull()) {\n          return null\n        }\n        if (this.isNull()) {\n          this._minx = other.getMinX()\n          this._maxx = other.getMaxX()\n          this._miny = other.getMinY()\n          this._maxy = other.getMaxY()\n        } else {\n          if (other._minx < this._minx) {\n            this._minx = other._minx\n          }\n          if (other._maxx > this._maxx) {\n            this._maxx = other._maxx\n          }\n          if (other._miny < this._miny) {\n            this._miny = other._miny\n          }\n          if (other._maxy > this._maxy) {\n            this._maxy = other._maxy\n          }\n        }\n      }\n    } else if (arguments.length === 2) {\n      const x = arguments[0]; const y = arguments[1]\n      if (this.isNull()) {\n        this._minx = x\n        this._maxx = x\n        this._miny = y\n        this._maxy = y\n      } else {\n        if (x < this._minx) {\n          this._minx = x\n        }\n        if (x > this._maxx) {\n          this._maxx = x\n        }\n        if (y < this._miny) {\n          this._miny = y\n        }\n        if (y > this._maxy) {\n          this._maxy = y\n        }\n      }\n    }\n  }\n\n  minExtent () {\n    if (this.isNull()) return 0.0\n    const w = this.getWidth()\n    const h = this.getHeight()\n    if (w < h) return w\n    return h\n  }\n\n  getWidth () {\n    if (this.isNull()) {\n      return 0\n    }\n    return this._maxx - this._minx\n  }\n\n  compareTo (o) {\n    const env = o\n    if (this.isNull()) {\n      if (env.isNull()) return 0\n      return -1\n    } else {\n      if (env.isNull()) return 1\n    }\n    if (this._minx < env._minx) return -1\n    if (this._minx > env._minx) return 1\n    if (this._miny < env._miny) return -1\n    if (this._miny > env._miny) return 1\n    if (this._maxx < env._maxx) return -1\n    if (this._maxx > env._maxx) return 1\n    if (this._maxy < env._maxy) return -1\n    if (this._maxy > env._maxy) return 1\n    return 0\n  }\n\n  translate (transX, transY) {\n    if (this.isNull()) {\n      return null\n    }\n    this.init(this.getMinX() + transX, this.getMaxX() + transX, this.getMinY() + transY, this.getMaxY() + transY)\n  }\n\n  toString () {\n    return 'Env[' + this._minx + ' : ' + this._maxx + ', ' + this._miny + ' : ' + this._maxy + ']'\n  }\n\n  setToNull () {\n    this._minx = 0\n    this._maxx = -1\n    this._miny = 0\n    this._maxy = -1\n  }\n\n  getHeight () {\n    if (this.isNull()) {\n      return 0\n    }\n    return this._maxy - this._miny\n  }\n\n  maxExtent () {\n    if (this.isNull()) return 0.0\n    const w = this.getWidth()\n    const h = this.getHeight()\n    if (w > h) return w\n    return h\n  }\n\n  expandBy () {\n    if (arguments.length === 1) {\n      const distance = arguments[0]\n      this.expandBy(distance, distance)\n    } else if (arguments.length === 2) {\n      const deltaX = arguments[0]; const deltaY = arguments[1]\n      if (this.isNull()) return null\n      this._minx -= deltaX\n      this._maxx += deltaX\n      this._miny -= deltaY\n      this._maxy += deltaY\n      if (this._minx > this._maxx || this._miny > this._maxy) this.setToNull()\n    }\n  }\n\n  contains () {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Envelope) {\n        const other = arguments[0]\n        return this.covers(other)\n      } else if (arguments[0] instanceof Coordinate) {\n        const p = arguments[0]\n        return this.covers(p)\n      }\n    } else if (arguments.length === 2) {\n      const x = arguments[0]; const y = arguments[1]\n      return this.covers(x, y)\n    }\n  }\n\n  centre () {\n    if (this.isNull()) return null\n    return new Coordinate((this.getMinX() + this.getMaxX()) / 2.0, (this.getMinY() + this.getMaxY()) / 2.0)\n  }\n\n  init () {\n    if (arguments.length === 0) {\n      this.setToNull()\n    } else if (arguments.length === 1) {\n      if (arguments[0] instanceof Coordinate) {\n        const p = arguments[0]\n        this.init(p.x, p.x, p.y, p.y)\n      } else if (arguments[0] instanceof Envelope) {\n        const env = arguments[0]\n        this._minx = env._minx\n        this._maxx = env._maxx\n        this._miny = env._miny\n        this._maxy = env._maxy\n      }\n    } else if (arguments.length === 2) {\n      const p1 = arguments[0]; const p2 = arguments[1]\n      this.init(p1.x, p2.x, p1.y, p2.y)\n    } else if (arguments.length === 4) {\n      const x1 = arguments[0]; const x2 = arguments[1]; const y1 = arguments[2]; const y2 = arguments[3]\n      if (x1 < x2) {\n        this._minx = x1\n        this._maxx = x2\n      } else {\n        this._minx = x2\n        this._maxx = x1\n      }\n      if (y1 < y2) {\n        this._miny = y1\n        this._maxy = y2\n      } else {\n        this._miny = y2\n        this._maxy = y1\n      }\n    }\n  }\n\n  getMaxY () {\n    return this._maxy\n  }\n\n  distance (env) {\n    if (this.intersects(env)) return 0\n    let dx = 0.0\n    if (this._maxx < env._minx) dx = env._minx - this._maxx; else if (this._minx > env._maxx) dx = this._minx - env._maxx\n    let dy = 0.0\n    if (this._maxy < env._miny) dy = env._miny - this._maxy; else if (this._miny > env._maxy) dy = this._miny - env._maxy\n    if (dx === 0.0) return dy\n    if (dy === 0.0) return dx\n    return Math.sqrt(dx * dx + dy * dy)\n  }\n\n  hashCode () {\n    let result = 17\n    result = 37 * result + Coordinate.hashCode(this._minx)\n    result = 37 * result + Coordinate.hashCode(this._maxx)\n    result = 37 * result + Coordinate.hashCode(this._miny)\n    result = 37 * result + Coordinate.hashCode(this._maxy)\n    return result\n  }\n\n  getClass () {\n    return Envelope\n  }\n\n  get interfaces_ () {\n    return [Comparable, Serializable]\n  }\n}\nEnvelope.constructor_ = function () {\n  this._minx = null\n  this._maxx = null\n  this._miny = null\n  this._maxy = null\n  if (arguments.length === 0) {\n    this.init()\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      const p = arguments[0]\n      this.init(p.x, p.x, p.y, p.y)\n    } else if (arguments[0] instanceof Envelope) {\n      const env = arguments[0]\n      this.init(env)\n    }\n  } else if (arguments.length === 2) {\n    const p1 = arguments[0]; const p2 = arguments[1]\n    this.init(p1.x, p2.x, p1.y, p2.y)\n  } else if (arguments.length === 4) {\n    const x1 = arguments[0]; const x2 = arguments[1]; const y1 = arguments[2]; const y2 = arguments[3]\n    this.init(x1, x2, y1, y2)\n  }\n}\nEnvelope.serialVersionUID = 5873921885273102420\n","export default function Exception () {}\n","import Exception from '../../../../java/lang/Exception'\nexport default class NotRepresentableException extends Exception {\n  constructor () {\n    super()\n    NotRepresentableException.constructor_.apply(this, arguments)\n  }\n\n  getClass () {\n    return NotRepresentableException\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nNotRepresentableException.constructor_ = function () {\n  Exception.constructor_.call(this, 'Projective point not representable on the Cartesian plane.')\n}\n","export default function StringBuffer (str) {\n  this.str = str\n}\n\nStringBuffer.prototype.append = function (e) {\n  this.str += e\n}\n\nStringBuffer.prototype.setCharAt = function (i, c) {\n  this.str = this.str.substr(0, i) + c + this.str.substr(i + 1)\n}\n\nStringBuffer.prototype.toString = function (e) {\n  return this.str\n}\n","export default function Integer (value) {\n  this.value = value\n}\n\nInteger.prototype.intValue = function () {\n  return this.value\n}\nInteger.prototype.compareTo = function (o) {\n  if (this.value < o) return -1\n  if (this.value > o) return 1\n  return 0\n}\n\nInteger.isNaN = n => Number.isNaN(n)\n","export default function Character () {}\nCharacter.isWhitespace = c => ((c <= 32 && c >= 0) || c === 127)\nCharacter.toUpperCase = c => c.toUpperCase()\n","import StringBuffer from '../../../../java/lang/StringBuffer'\nimport Double from '../../../../java/lang/Double'\nimport Integer from '../../../../java/lang/Integer'\nimport Character from '../../../../java/lang/Character'\nimport Comparable from '../../../../java/lang/Comparable'\nimport Cloneable from '../../../../java/lang/Cloneable'\nimport Serializable from '../../../../java/io/Serializable'\nexport default class DD {\n  constructor () {\n    DD.constructor_.apply(this, arguments)\n  }\n\n  static sqr (x) {\n    return DD.valueOf(x).selfMultiply(x)\n  }\n\n  static valueOf () {\n    if (typeof arguments[0] === 'string') {\n      const str = arguments[0]\n      return DD.parse(str)\n    } else if (typeof arguments[0] === 'number') {\n      const x = arguments[0]\n      return new DD(x)\n    }\n  }\n\n  static sqrt (x) {\n    return DD.valueOf(x).sqrt()\n  }\n\n  static parse (str) {\n    let i = 0\n    const strlen = str.length\n    while (Character.isWhitespace(str.charAt(i))) i++\n    let isNegative = false\n    if (i < strlen) {\n      const signCh = str.charAt(i)\n      if (signCh === '-' || signCh === '+') {\n        i++\n        if (signCh === '-') isNegative = true\n      }\n    }\n    const val = new DD()\n    let numDigits = 0\n    let numBeforeDec = 0\n    let exp = 0\n    while (true) {\n      if (i >= strlen) break\n      const ch = str.charAt(i)\n      i++\n      if (Character.isDigit(ch)) {\n        const d = ch - '0'\n        val.selfMultiply(DD.TEN)\n        val.selfAdd(d)\n        numDigits++\n        continue\n      }\n      if (ch === '.') {\n        numBeforeDec = numDigits\n        continue\n      }\n      if (ch === 'e' || ch === 'E') {\n        const expStr = str.substring(i)\n        try {\n          exp = Integer.parseInt(expStr)\n        } catch (ex) {\n          if (ex instanceof NumberFormatException) {\n            throw new NumberFormatException('Invalid exponent ' + expStr + ' in string ' + str)\n          } else throw ex\n        } finally {}\n        break\n      }\n      throw new NumberFormatException(\"Unexpected character '\" + ch + \"' at position \" + i + ' in string ' + str)\n    }\n    let val2 = val\n    const numDecPlaces = numDigits - numBeforeDec - exp\n    if (numDecPlaces === 0) {\n      val2 = val\n    } else if (numDecPlaces > 0) {\n      const scale = DD.TEN.pow(numDecPlaces)\n      val2 = val.divide(scale)\n    } else if (numDecPlaces < 0) {\n      const scale = DD.TEN.pow(-numDecPlaces)\n      val2 = val.multiply(scale)\n    }\n    if (isNegative) {\n      return val2.negate()\n    }\n    return val2\n  }\n\n  static createNaN () {\n    return new DD(Double.NaN, Double.NaN)\n  }\n\n  static copy (dd) {\n    return new DD(dd)\n  }\n\n  static magnitude (x) {\n    const xAbs = Math.abs(x)\n    const xLog10 = Math.log(xAbs) / Math.log(10)\n    let xMag = Math.trunc(Math.floor(xLog10))\n    const xApprox = Math.pow(10, xMag)\n    if (xApprox * 10 <= xAbs) xMag += 1\n    return xMag\n  }\n\n  static stringOfChar (ch, len) {\n    const buf = new StringBuffer()\n    for (let i = 0; i < len; i++) {\n      buf.append(ch)\n    }\n    return buf.toString()\n  }\n\n  le (y) {\n    return this._hi < y._hi || this._hi === y._hi && this._lo <= y._lo\n  }\n\n  extractSignificantDigits (insertDecimalPoint, magnitude) {\n    let y = this.abs()\n    let mag = DD.magnitude(y._hi)\n    const scale = DD.TEN.pow(mag)\n    y = y.divide(scale)\n    if (y.gt(DD.TEN)) {\n      y = y.divide(DD.TEN)\n      mag += 1\n    } else if (y.lt(DD.ONE)) {\n      y = y.multiply(DD.TEN)\n      mag -= 1\n    }\n    const decimalPointPos = mag + 1\n    const buf = new StringBuffer()\n    const numDigits = DD.MAX_PRINT_DIGITS - 1\n    for (let i = 0; i <= numDigits; i++) {\n      if (insertDecimalPoint && i === decimalPointPos) {\n        buf.append('.')\n      }\n      const digit = Math.trunc(y._hi)\n      if (digit < 0 || digit > 9) {}\n      if (digit < 0) {\n        break\n      }\n      let rebiasBy10 = false\n      let digitChar = 0\n      if (digit > 9) {\n        rebiasBy10 = true\n        digitChar = '9'\n      } else {\n        digitChar = '0' + digit\n      }\n      buf.append(digitChar)\n      y = y.subtract(DD.valueOf(digit)).multiply(DD.TEN)\n      if (rebiasBy10) y.selfAdd(DD.TEN)\n      let continueExtractingDigits = true\n      const remMag = DD.magnitude(y._hi)\n      if (remMag < 0 && Math.abs(remMag) >= numDigits - i) continueExtractingDigits = false\n      if (!continueExtractingDigits) break\n    }\n    magnitude[0] = mag\n    return buf.toString()\n  }\n\n  sqr () {\n    return this.multiply(this)\n  }\n\n  doubleValue () {\n    return this._hi + this._lo\n  }\n\n  subtract () {\n    if (arguments[0] instanceof DD) {\n      const y = arguments[0]\n      return this.add(y.negate())\n    } else if (typeof arguments[0] === 'number') {\n      const y = arguments[0]\n      return this.add(-y)\n    }\n  }\n\n  equals () {\n    if (arguments.length === 1 && arguments[0] instanceof DD) {\n      const y = arguments[0]\n      return this._hi === y._hi && this._lo === y._lo\n    }\n  }\n\n  isZero () {\n    return this._hi === 0.0 && this._lo === 0.0\n  }\n\n  selfSubtract () {\n    if (arguments[0] instanceof DD) {\n      const y = arguments[0]\n      if (this.isNaN()) return this\n      return this.selfAdd(-y._hi, -y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      const y = arguments[0]\n      if (this.isNaN()) return this\n      return this.selfAdd(-y, 0.0)\n    }\n  }\n\n  getSpecialNumberString () {\n    if (this.isZero()) return '0.0'\n    if (this.isNaN()) return 'NaN '\n    return null\n  }\n\n  min (x) {\n    if (this.le(x)) {\n      return this\n    } else {\n      return x\n    }\n  }\n\n  selfDivide () {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof DD) {\n        const y = arguments[0]\n        return this.selfDivide(y._hi, y._lo)\n      } else if (typeof arguments[0] === 'number') {\n        const y = arguments[0]\n        return this.selfDivide(y, 0.0)\n      }\n    } else if (arguments.length === 2) {\n      const yhi = arguments[0]; const ylo = arguments[1]\n      let hc = null; let tc = null; let hy = null; let ty = null; let C = null; let c = null; let U = null; let u = null\n      C = this._hi / yhi\n      c = DD.SPLIT * C\n      hc = c - C\n      u = DD.SPLIT * yhi\n      hc = c - hc\n      tc = C - hc\n      hy = u - yhi\n      U = C * yhi\n      hy = u - hy\n      ty = yhi - hy\n      u = hc * hy - U + hc * ty + tc * hy + tc * ty\n      c = (this._hi - U - u + this._lo - C * ylo) / yhi\n      u = C + c\n      this._hi = u\n      this._lo = C - u + c\n      return this\n    }\n  }\n\n  dump () {\n    return 'DD<' + this._hi + ', ' + this._lo + '>'\n  }\n\n  divide () {\n    if (arguments[0] instanceof DD) {\n      const y = arguments[0]\n      let hc = null; let tc = null; let hy = null; let ty = null; let C = null; let c = null; let U = null; let u = null\n      C = this._hi / y._hi\n      c = DD.SPLIT * C\n      hc = c - C\n      u = DD.SPLIT * y._hi\n      hc = c - hc\n      tc = C - hc\n      hy = u - y._hi\n      U = C * y._hi\n      hy = u - hy\n      ty = y._hi - hy\n      u = hc * hy - U + hc * ty + tc * hy + tc * ty\n      c = (this._hi - U - u + this._lo - C * y._lo) / y._hi\n      u = C + c\n      const zhi = u\n      const zlo = C - u + c\n      return new DD(zhi, zlo)\n    } else if (typeof arguments[0] === 'number') {\n      const y = arguments[0]\n      if (Double.isNaN(y)) return DD.createNaN()\n      return DD.copy(this).selfDivide(y, 0.0)\n    }\n  }\n\n  ge (y) {\n    return this._hi > y._hi || this._hi === y._hi && this._lo >= y._lo\n  }\n\n  pow (exp) {\n    if (exp === 0.0) return DD.valueOf(1.0)\n    let r = new DD(this)\n    let s = DD.valueOf(1.0)\n    let n = Math.abs(exp)\n    if (n > 1) {\n      while (n > 0) {\n        if (n % 2 === 1) {\n          s.selfMultiply(r)\n        }\n        n /= 2\n        if (n > 0) r = r.sqr()\n      }\n    } else {\n      s = r\n    }\n    if (exp < 0) return s.reciprocal()\n    return s\n  }\n\n  ceil () {\n    if (this.isNaN()) return DD.NaN\n    const fhi = Math.ceil(this._hi)\n    let flo = 0.0\n    if (fhi === this._hi) {\n      flo = Math.ceil(this._lo)\n    }\n    return new DD(fhi, flo)\n  }\n\n  compareTo (o) {\n    const other = o\n    if (this._hi < other._hi) return -1\n    if (this._hi > other._hi) return 1\n    if (this._lo < other._lo) return -1\n    if (this._lo > other._lo) return 1\n    return 0\n  }\n\n  rint () {\n    if (this.isNaN()) return this\n    const plus5 = this.add(0.5)\n    return plus5.floor()\n  }\n\n  setValue () {\n    if (arguments[0] instanceof DD) {\n      const value = arguments[0]\n      this.init(value)\n      return this\n    } else if (typeof arguments[0] === 'number') {\n      const value = arguments[0]\n      this.init(value)\n      return this\n    }\n  }\n\n  max (x) {\n    if (this.ge(x)) {\n      return this\n    } else {\n      return x\n    }\n  }\n\n  sqrt () {\n    if (this.isZero()) return DD.valueOf(0.0)\n    if (this.isNegative()) {\n      return DD.NaN\n    }\n    const x = 1.0 / Math.sqrt(this._hi)\n    const ax = this._hi * x\n    const axdd = DD.valueOf(ax)\n    const diffSq = this.subtract(axdd.sqr())\n    const d2 = diffSq._hi * (x * 0.5)\n    return axdd.add(d2)\n  }\n\n  selfAdd () {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof DD) {\n        const y = arguments[0]\n        return this.selfAdd(y._hi, y._lo)\n      } else if (typeof arguments[0] === 'number') {\n        const y = arguments[0]\n        let H = null; let h = null; let S = null; let s = null; let e = null; let f = null\n        S = this._hi + y\n        e = S - this._hi\n        s = S - e\n        s = y - e + (this._hi - s)\n        f = s + this._lo\n        H = S + f\n        h = f + (S - H)\n        this._hi = H + h\n        this._lo = h + (H - this._hi)\n        return this\n      }\n    } else if (arguments.length === 2) {\n      const yhi = arguments[0]; const ylo = arguments[1]\n      let H = null; let h = null; let T = null; let t = null; let S = null; let s = null; let e = null; let f = null\n      S = this._hi + yhi\n      T = this._lo + ylo\n      e = S - this._hi\n      f = T - this._lo\n      s = S - e\n      t = T - f\n      s = yhi - e + (this._hi - s)\n      t = ylo - f + (this._lo - t)\n      e = s + T\n      H = S + e\n      h = e + (S - H)\n      e = t + h\n      const zhi = H + e\n      const zlo = e + (H - zhi)\n      this._hi = zhi\n      this._lo = zlo\n      return this\n    }\n  }\n\n  selfMultiply () {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof DD) {\n        const y = arguments[0]\n        return this.selfMultiply(y._hi, y._lo)\n      } else if (typeof arguments[0] === 'number') {\n        const y = arguments[0]\n        return this.selfMultiply(y, 0.0)\n      }\n    } else if (arguments.length === 2) {\n      const yhi = arguments[0]; const ylo = arguments[1]\n      let hx = null; let tx = null; let hy = null; let ty = null; let C = null; let c = null\n      C = DD.SPLIT * this._hi\n      hx = C - this._hi\n      c = DD.SPLIT * yhi\n      hx = C - hx\n      tx = this._hi - hx\n      hy = c - yhi\n      C = this._hi * yhi\n      hy = c - hy\n      ty = yhi - hy\n      c = hx * hy - C + hx * ty + tx * hy + tx * ty + (this._hi * ylo + this._lo * yhi)\n      const zhi = C + c\n      hx = C - zhi\n      const zlo = c + hx\n      this._hi = zhi\n      this._lo = zlo\n      return this\n    }\n  }\n\n  selfSqr () {\n    return this.selfMultiply(this)\n  }\n\n  floor () {\n    if (this.isNaN()) return DD.NaN\n    const fhi = Math.floor(this._hi)\n    let flo = 0.0\n    if (fhi === this._hi) {\n      flo = Math.floor(this._lo)\n    }\n    return new DD(fhi, flo)\n  }\n\n  negate () {\n    if (this.isNaN()) return this\n    return new DD(-this._hi, -this._lo)\n  }\n\n  clone () {\n    try {\n      return null\n    } catch (ex) {\n      if (ex instanceof CloneNotSupportedException) {\n        return null\n      } else throw ex\n    } finally {}\n  }\n\n  multiply () {\n    if (arguments[0] instanceof DD) {\n      const y = arguments[0]\n      if (y.isNaN()) return DD.createNaN()\n      return DD.copy(this).selfMultiply(y)\n    } else if (typeof arguments[0] === 'number') {\n      const y = arguments[0]\n      if (Double.isNaN(y)) return DD.createNaN()\n      return DD.copy(this).selfMultiply(y, 0.0)\n    }\n  }\n\n  isNaN () {\n    return Double.isNaN(this._hi)\n  }\n\n  intValue () {\n    return Math.trunc(this._hi)\n  }\n\n  toString () {\n    const mag = DD.magnitude(this._hi)\n    if (mag >= -3 && mag <= 20) return this.toStandardNotation()\n    return this.toSciNotation()\n  }\n\n  toStandardNotation () {\n    const specialStr = this.getSpecialNumberString()\n    if (specialStr !== null) return specialStr\n    const magnitude = new Array(1).fill(null)\n    const sigDigits = this.extractSignificantDigits(true, magnitude)\n    const decimalPointPos = magnitude[0] + 1\n    let num = sigDigits\n    if (sigDigits.charAt(0) === '.') {\n      num = '0' + sigDigits\n    } else if (decimalPointPos < 0) {\n      num = '0.' + DD.stringOfChar('0', -decimalPointPos) + sigDigits\n    } else if (sigDigits.indexOf('.') === -1) {\n      const numZeroes = decimalPointPos - sigDigits.length\n      const zeroes = DD.stringOfChar('0', numZeroes)\n      num = sigDigits + zeroes + '.0'\n    }\n    if (this.isNegative()) return '-' + num\n    return num\n  }\n\n  reciprocal () {\n    let hc = null; let tc = null; let hy = null; let ty = null; let C = null; let c = null; let U = null; let u = null\n    C = 1.0 / this._hi\n    c = DD.SPLIT * C\n    hc = c - C\n    u = DD.SPLIT * this._hi\n    hc = c - hc\n    tc = C - hc\n    hy = u - this._hi\n    U = C * this._hi\n    hy = u - hy\n    ty = this._hi - hy\n    u = hc * hy - U + hc * ty + tc * hy + tc * ty\n    c = (1.0 - U - u - C * this._lo) / this._hi\n    const zhi = C + c\n    const zlo = C - zhi + c\n    return new DD(zhi, zlo)\n  }\n\n  toSciNotation () {\n    if (this.isZero()) return DD.SCI_NOT_ZERO\n    const specialStr = this.getSpecialNumberString()\n    if (specialStr !== null) return specialStr\n    const magnitude = new Array(1).fill(null)\n    const digits = this.extractSignificantDigits(false, magnitude)\n    const expStr = DD.SCI_NOT_EXPONENT_CHAR + magnitude[0]\n    if (digits.charAt(0) === '0') {\n      throw new IllegalStateException('Found leading zero: ' + digits)\n    }\n    let trailingDigits = ''\n    if (digits.length > 1) trailingDigits = digits.substring(1)\n    const digitsWithDecimal = digits.charAt(0) + '.' + trailingDigits\n    if (this.isNegative()) return '-' + digitsWithDecimal + expStr\n    return digitsWithDecimal + expStr\n  }\n\n  abs () {\n    if (this.isNaN()) return DD.NaN\n    if (this.isNegative()) return this.negate()\n    return new DD(this)\n  }\n\n  isPositive () {\n    return this._hi > 0.0 || this._hi === 0.0 && this._lo > 0.0\n  }\n\n  lt (y) {\n    return this._hi < y._hi || this._hi === y._hi && this._lo < y._lo\n  }\n\n  add () {\n    if (arguments[0] instanceof DD) {\n      const y = arguments[0]\n      return DD.copy(this).selfAdd(y)\n    } else if (typeof arguments[0] === 'number') {\n      const y = arguments[0]\n      return DD.copy(this).selfAdd(y)\n    }\n  }\n\n  init () {\n    if (arguments.length === 1) {\n      if (typeof arguments[0] === 'number') {\n        const x = arguments[0]\n        this._hi = x\n        this._lo = 0.0\n      } else if (arguments[0] instanceof DD) {\n        const dd = arguments[0]\n        this._hi = dd._hi\n        this._lo = dd._lo\n      }\n    } else if (arguments.length === 2) {\n      const hi = arguments[0]; const lo = arguments[1]\n      this._hi = hi\n      this._lo = lo\n    }\n  }\n\n  gt (y) {\n    return this._hi > y._hi || this._hi === y._hi && this._lo > y._lo\n  }\n\n  isNegative () {\n    return this._hi < 0.0 || this._hi === 0.0 && this._lo < 0.0\n  }\n\n  trunc () {\n    if (this.isNaN()) return DD.NaN\n    if (this.isPositive()) return this.floor(); else return this.ceil()\n  }\n\n  signum () {\n    if (this._hi > 0) return 1\n    if (this._hi < 0) return -1\n    if (this._lo > 0) return 1\n    if (this._lo < 0) return -1\n    return 0\n  }\n\n  getClass () {\n    return DD\n  }\n\n  get interfaces_ () {\n    return [Serializable, Comparable, Cloneable]\n  }\n}\nDD.constructor_ = function () {\n  this._hi = 0.0\n  this._lo = 0.0\n  if (arguments.length === 0) {\n    this.init(0.0)\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'number') {\n      const x = arguments[0]\n      this.init(x)\n    } else if (arguments[0] instanceof DD) {\n      const dd = arguments[0]\n      this.init(dd)\n    } else if (typeof arguments[0] === 'string') {\n      const str = arguments[0]\n      DD.constructor_.call(this, DD.parse(str))\n    }\n  } else if (arguments.length === 2) {\n    const hi = arguments[0]; const lo = arguments[1]\n    this.init(hi, lo)\n  }\n}\nDD.PI = new DD(3.141592653589793116e+00, 1.224646799147353207e-16)\nDD.TWO_PI = new DD(6.283185307179586232e+00, 2.449293598294706414e-16)\nDD.PI_2 = new DD(1.570796326794896558e+00, 6.123233995736766036e-17)\nDD.E = new DD(2.718281828459045091e+00, 1.445646891729250158e-16)\nDD.NaN = new DD(Double.NaN, Double.NaN)\nDD.EPS = 1.23259516440783e-32\nDD.SPLIT = 134217729.0\nDD.MAX_PRINT_DIGITS = 32\nDD.TEN = DD.valueOf(10.0)\nDD.ONE = DD.valueOf(1.0)\nDD.SCI_NOT_EXPONENT_CHAR = 'E'\nDD.SCI_NOT_ZERO = '0.0E0'\n","import Coordinate from '../geom/Coordinate'\nimport DD from '../math/DD'\nexport default class CGAlgorithmsDD {\n  constructor () {\n    CGAlgorithmsDD.constructor_.apply(this, arguments)\n  }\n\n  static orientationIndex (p1, p2, q) {\n    const index = CGAlgorithmsDD.orientationIndexFilter(p1, p2, q)\n    if (index <= 1) return index\n    const dx1 = DD.valueOf(p2.x).selfAdd(-p1.x)\n    const dy1 = DD.valueOf(p2.y).selfAdd(-p1.y)\n    const dx2 = DD.valueOf(q.x).selfAdd(-p2.x)\n    const dy2 = DD.valueOf(q.y).selfAdd(-p2.y)\n    return dx1.selfMultiply(dy2).selfSubtract(dy1.selfMultiply(dx2)).signum()\n  }\n\n  static signOfDet2x2 () {\n    if (arguments[3] instanceof DD && (arguments[2] instanceof DD && (arguments[0] instanceof DD && arguments[1] instanceof DD))) {\n      const x1 = arguments[0]; const y1 = arguments[1]; const x2 = arguments[2]; const y2 = arguments[3]\n      const det = x1.multiply(y2).selfSubtract(y1.multiply(x2))\n      return det.signum()\n    } else if (typeof arguments[3] === 'number' && (typeof arguments[2] === 'number' && (typeof arguments[0] === 'number' && typeof arguments[1] === 'number'))) {\n      const dx1 = arguments[0]; const dy1 = arguments[1]; const dx2 = arguments[2]; const dy2 = arguments[3]\n      const x1 = DD.valueOf(dx1)\n      const y1 = DD.valueOf(dy1)\n      const x2 = DD.valueOf(dx2)\n      const y2 = DD.valueOf(dy2)\n      const det = x1.multiply(y2).selfSubtract(y1.multiply(x2))\n      return det.signum()\n    }\n  }\n\n  static intersection (p1, p2, q1, q2) {\n    const denom1 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p2.x).selfSubtract(p1.x))\n    const denom2 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p2.y).selfSubtract(p1.y))\n    const denom = denom1.subtract(denom2)\n    const numx1 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y))\n    const numx2 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x))\n    const numx = numx1.subtract(numx2)\n    const fracP = numx.selfDivide(denom).doubleValue()\n    const x = DD.valueOf(p1.x).selfAdd(DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(fracP)).doubleValue()\n    const numy1 = DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y))\n    const numy2 = DD.valueOf(p2.y).selfSubtract(p1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x))\n    const numy = numy1.subtract(numy2)\n    const fracQ = numy.selfDivide(denom).doubleValue()\n    const y = DD.valueOf(q1.y).selfAdd(DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(fracQ)).doubleValue()\n    return new Coordinate(x, y)\n  }\n\n  static orientationIndexFilter (pa, pb, pc) {\n    let detsum = null\n    const detleft = (pa.x - pc.x) * (pb.y - pc.y)\n    const detright = (pa.y - pc.y) * (pb.x - pc.x)\n    const det = detleft - detright\n    if (detleft > 0.0) {\n      if (detright <= 0.0) {\n        return CGAlgorithmsDD.signum(det)\n      } else {\n        detsum = detleft + detright\n      }\n    } else if (detleft < 0.0) {\n      if (detright >= 0.0) {\n        return CGAlgorithmsDD.signum(det)\n      } else {\n        detsum = -detleft - detright\n      }\n    } else {\n      return CGAlgorithmsDD.signum(det)\n    }\n    const errbound = CGAlgorithmsDD.DP_SAFE_EPSILON * detsum\n    if (det >= errbound || -det >= errbound) {\n      return CGAlgorithmsDD.signum(det)\n    }\n    return 2\n  }\n\n  static signum (x) {\n    if (x > 0) return 1\n    if (x < 0) return -1\n    return 0\n  }\n\n  getClass () {\n    return CGAlgorithmsDD\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nCGAlgorithmsDD.constructor_ = function () {}\nCGAlgorithmsDD.DP_SAFE_EPSILON = 1e-15\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException'\nimport CGAlgorithmsDD from './CGAlgorithmsDD'\nexport default class Orientation {\n  constructor () {\n    Orientation.constructor_.apply(this, arguments)\n  }\n\n  static index (p1, p2, q) {\n    return CGAlgorithmsDD.orientationIndex(p1, p2, q)\n  }\n\n  static isCCW (ring) {\n    const nPts = ring.length - 1\n    if (nPts < 3) throw new IllegalArgumentException('Ring has fewer than 4 points, so orientation cannot be determined')\n    let hiPt = ring[0]\n    let hiIndex = 0\n    for (let i = 1; i <= nPts; i++) {\n      const p = ring[i]\n      if (p.y > hiPt.y) {\n        hiPt = p\n        hiIndex = i\n      }\n    }\n    let iPrev = hiIndex\n    do {\n      iPrev = iPrev - 1\n      if (iPrev < 0) iPrev = nPts\n    } while (ring[iPrev].equals2D(hiPt) && iPrev !== hiIndex)\n    let iNext = hiIndex\n    do {\n      iNext = (iNext + 1) % nPts\n    } while (ring[iNext].equals2D(hiPt) && iNext !== hiIndex)\n    const prev = ring[iPrev]\n    const next = ring[iNext]\n    if (prev.equals2D(hiPt) || next.equals2D(hiPt) || prev.equals2D(next)) return false\n    const disc = Orientation.index(prev, hiPt, next)\n    let isCCW = null\n    if (disc === 0) {\n      isCCW = prev.x > next.x\n    } else {\n      isCCW = disc > 0\n    }\n    return isCCW\n  }\n\n  getClass () {\n    return Orientation\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nOrientation.constructor_ = function () {}\nOrientation.CLOCKWISE = -1\nOrientation.RIGHT = Orientation.CLOCKWISE\nOrientation.COUNTERCLOCKWISE = 1\nOrientation.LEFT = Orientation.COUNTERCLOCKWISE\nOrientation.COLLINEAR = 0\nOrientation.STRAIGHT = Orientation.COLLINEAR\n","export default function System () { }\n\nSystem.arraycopy = (src, srcPos, dest, destPos, len) => {\n  let c = 0\n  for (let i = srcPos; i < srcPos + len; i++) {\n    dest[destPos + c] = src[i]\n    c++\n  }\n}\n\nSystem.getProperty = (name) => {\n  return {\n    'line.separator': '\\n'\n  }[name]\n}\n","import NotRepresentableException from './NotRepresentableException'\nimport Coordinate from '../geom/Coordinate'\nimport Double from '../../../../java/lang/Double'\nexport default class HCoordinate {\n  constructor () {\n    HCoordinate.constructor_.apply(this, arguments)\n  }\n\n  static intersection (p1, p2, q1, q2) {\n    const px = p1.y - p2.y\n    const py = p2.x - p1.x\n    const pw = p1.x * p2.y - p2.x * p1.y\n    const qx = q1.y - q2.y\n    const qy = q2.x - q1.x\n    const qw = q1.x * q2.y - q2.x * q1.y\n    const x = py * qw - qy * pw\n    const y = qx * pw - px * qw\n    const w = px * qy - qx * py\n    const xInt = x / w\n    const yInt = y / w\n    if (Double.isNaN(xInt) || (Double.isInfinite(xInt) || Double.isNaN(yInt)) || Double.isInfinite(yInt)) {\n      throw new NotRepresentableException()\n    }\n    return new Coordinate(xInt, yInt)\n  }\n\n  getY () {\n    const a = this.y / this.w\n    if (Double.isNaN(a) || Double.isInfinite(a)) {\n      throw new NotRepresentableException()\n    }\n    return a\n  }\n\n  getX () {\n    const a = this.x / this.w\n    if (Double.isNaN(a) || Double.isInfinite(a)) {\n      throw new NotRepresentableException()\n    }\n    return a\n  }\n\n  getCoordinate () {\n    const p = new Coordinate()\n    p.x = this.getX()\n    p.y = this.getY()\n    return p\n  }\n\n  getClass () {\n    return HCoordinate\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nHCoordinate.constructor_ = function () {\n  this.x = null\n  this.y = null\n  this.w = null\n  if (arguments.length === 0) {\n    this.x = 0.0\n    this.y = 0.0\n    this.w = 1.0\n  } else if (arguments.length === 1) {\n    const p = arguments[0]\n    this.x = p.x\n    this.y = p.y\n    this.w = 1.0\n  } else if (arguments.length === 2) {\n    if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n      const _x = arguments[0]; const _y = arguments[1]\n      this.x = _x\n      this.y = _y\n      this.w = 1.0\n    } else if (arguments[0] instanceof HCoordinate && arguments[1] instanceof HCoordinate) {\n      const p1 = arguments[0]; const p2 = arguments[1]\n      this.x = p1.y * p2.w - p2.y * p1.w\n      this.y = p2.x * p1.w - p1.x * p2.w\n      this.w = p1.x * p2.y - p2.x * p1.y\n    } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n      const p1 = arguments[0]; const p2 = arguments[1]\n      this.x = p1.y - p2.y\n      this.y = p2.x - p1.x\n      this.w = p1.x * p2.y - p2.x * p1.y\n    }\n  } else if (arguments.length === 3) {\n    const _x = arguments[0]; const _y = arguments[1]; const _w = arguments[2]\n    this.x = _x\n    this.y = _y\n    this.w = _w\n  } else if (arguments.length === 4) {\n    const p1 = arguments[0]; const p2 = arguments[1]; const q1 = arguments[2]; const q2 = arguments[3]\n    const px = p1.y - p2.y\n    const py = p2.x - p1.x\n    const pw = p1.x * p2.y - p2.x * p1.y\n    const qx = q1.y - q2.y\n    const qy = q2.x - q1.x\n    const qw = q1.x * q2.y - q2.x * q1.y\n    this.x = py * qw - qy * pw\n    this.y = qx * pw - px * qw\n    this.w = px * qy - qx * py\n  }\n}\n","import Double from '../../../../java/lang/Double'\nexport default class MathUtil {\n  constructor () {\n    MathUtil.constructor_.apply(this, arguments)\n  }\n\n  static log10 (x) {\n    const ln = Math.log(x)\n    if (Double.isInfinite(ln)) return ln\n    if (Double.isNaN(ln)) return ln\n    return ln / MathUtil.LOG_10\n  }\n\n  static min (v1, v2, v3, v4) {\n    let min = v1\n    if (v2 < min) min = v2\n    if (v3 < min) min = v3\n    if (v4 < min) min = v4\n    return min\n  }\n\n  static clamp () {\n    if (typeof arguments[2] === 'number' && (typeof arguments[0] === 'number' && typeof arguments[1] === 'number')) {\n      const x = arguments[0]; const min = arguments[1]; const max = arguments[2]\n      if (x < min) return min\n      if (x > max) return max\n      return x\n    } else if (Number.isInteger(arguments[2]) && (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1]))) {\n      const x = arguments[0]; const min = arguments[1]; const max = arguments[2]\n      if (x < min) return min\n      if (x > max) return max\n      return x\n    }\n  }\n\n  static wrap (index, max) {\n    if (index < 0) {\n      return max - -index % max\n    }\n    return index % max\n  }\n\n  static max () {\n    if (arguments.length === 3) {\n      const v1 = arguments[0]; const v2 = arguments[1]; const v3 = arguments[2]\n      let max = v1\n      if (v2 > max) max = v2\n      if (v3 > max) max = v3\n      return max\n    } else if (arguments.length === 4) {\n      const v1 = arguments[0]; const v2 = arguments[1]; const v3 = arguments[2]; const v4 = arguments[3]\n      let max = v1\n      if (v2 > max) max = v2\n      if (v3 > max) max = v3\n      if (v4 > max) max = v4\n      return max\n    }\n  }\n\n  static average (x1, x2) {\n    return (x1 + x2) / 2.0\n  }\n\n  getClass () {\n    return MathUtil\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nMathUtil.constructor_ = function () {}\nMathUtil.LOG_10 = Math.log(10)\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException'\nimport MathUtil from '../math/MathUtil'\nimport Envelope from '../geom/Envelope'\nexport default class Distance {\n  constructor () {\n    Distance.constructor_.apply(this, arguments)\n  }\n\n  static segmentToSegment (A, B, C, D) {\n    if (A.equals(B)) return Distance.pointToSegment(A, C, D)\n    if (C.equals(D)) return Distance.pointToSegment(D, A, B)\n    let noIntersection = false\n    if (!Envelope.intersects(A, B, C, D)) {\n      noIntersection = true\n    } else {\n      const denom = (B.x - A.x) * (D.y - C.y) - (B.y - A.y) * (D.x - C.x)\n      if (denom === 0) {\n        noIntersection = true\n      } else {\n        const r_num = (A.y - C.y) * (D.x - C.x) - (A.x - C.x) * (D.y - C.y)\n        const s_num = (A.y - C.y) * (B.x - A.x) - (A.x - C.x) * (B.y - A.y)\n        const s = s_num / denom\n        const r = r_num / denom\n        if (r < 0 || r > 1 || s < 0 || s > 1) {\n          noIntersection = true\n        }\n      }\n    }\n    if (noIntersection) {\n      return MathUtil.min(Distance.pointToSegment(A, C, D), Distance.pointToSegment(B, C, D), Distance.pointToSegment(C, A, B), Distance.pointToSegment(D, A, B))\n    }\n    return 0.0\n  }\n\n  static pointToSegment (p, A, B) {\n    if (A.x === B.x && A.y === B.y) return p.distance(A)\n    const len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y)\n    const r = ((p.x - A.x) * (B.x - A.x) + (p.y - A.y) * (B.y - A.y)) / len2\n    if (r <= 0.0) return p.distance(A)\n    if (r >= 1.0) return p.distance(B)\n    const s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2\n    return Math.abs(s) * Math.sqrt(len2)\n  }\n\n  static pointToLinePerpendicular (p, A, B) {\n    const len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y)\n    const s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2\n    return Math.abs(s) * Math.sqrt(len2)\n  }\n\n  static pointToSegmentString (p, line) {\n    if (line.length === 0) throw new IllegalArgumentException('Line array must contain at least one vertex')\n    let minDistance = p.distance(line[0])\n    for (let i = 0; i < line.length - 1; i++) {\n      const dist = Distance.pointToSegment(p, line[i], line[i + 1])\n      if (dist < minDistance) {\n        minDistance = dist\n      }\n    }\n    return minDistance\n  }\n\n  getClass () {\n    return Distance\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nDistance.constructor_ = function () {}\n","import Cloneable from '../../../../java/lang/Cloneable'\nexport default class CoordinateSequence {\n  constructor () {\n    CoordinateSequence.constructor_.apply(this, arguments)\n  }\n\n  setOrdinate (index, ordinateIndex, value) {}\n  size () {}\n  getOrdinate (index, ordinateIndex) {}\n  getCoordinate () {\n    if (arguments.length === 1) {\n      const i = arguments[0]\n    } else if (arguments.length === 2) {\n      const index = arguments[0]; const coord = arguments[1]\n    }\n  }\n\n  getCoordinateCopy (i) {}\n  getDimension () {}\n  getX (index) {}\n  expandEnvelope (env) {}\n  copy () {}\n  getY (index) {}\n  toCoordinateArray () {}\n  getClass () {\n    return CoordinateSequence\n  }\n\n  get interfaces_ () {\n    return [Cloneable]\n  }\n}\nCoordinateSequence.constructor_ = function () {}\nCoordinateSequence.X = 0\nCoordinateSequence.Y = 1\nCoordinateSequence.Z = 2\nCoordinateSequence.M = 3\n","import hasInterface from '../../../../hasInterface'\nimport CoordinateSequence from './CoordinateSequence'\nexport default class CoordinateSequenceFactory {\n  constructor () {\n    CoordinateSequenceFactory.constructor_.apply(this, arguments)\n  }\n\n  create () {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Array) {\n        const coordinates = arguments[0]\n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        const coordSeq = arguments[0]\n      }\n    } else if (arguments.length === 2) {\n      const size = arguments[0]; const dimension = arguments[1]\n    }\n  }\n\n  getClass () {\n    return CoordinateSequenceFactory\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nCoordinateSequenceFactory.constructor_ = function () {}\n","export default class GeometryComponentFilter {\n  constructor () {\n    GeometryComponentFilter.constructor_.apply(this, arguments)\n  }\n\n  filter (geom) {}\n  getClass () {\n    return GeometryComponentFilter\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nGeometryComponentFilter.constructor_ = function () {}\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException'\nimport GeometryComponentFilter from './GeometryComponentFilter'\nimport Comparable from '../../../../java/lang/Comparable'\nimport Cloneable from '../../../../java/lang/Cloneable'\nimport Serializable from '../../../../java/io/Serializable'\nimport Envelope from './Envelope'\nexport default class Geometry {\n  constructor () {\n    Geometry.constructor_.apply(this, arguments)\n  }\n\n  isGeometryCollection () {\n    return this.getTypeCode() === Geometry.TYPECODE_GEOMETRYCOLLECTION\n  }\n\n  getFactory () {\n    return this._factory\n  }\n\n  getGeometryN (n) {\n    return this\n  }\n\n  getArea () {\n    return 0.0\n  }\n\n  isRectangle () {\n    return false\n  }\n\n  equals () {\n    if (arguments[0] instanceof Geometry) {\n      const g = arguments[0]\n      if (g === null) return false\n      return this.equalsTopo(g)\n    } else if (arguments[0] instanceof Object) {\n      const o = arguments[0]\n      if (!(o instanceof Geometry)) return false\n      const g = o\n      return this.equalsExact(g)\n    }\n  }\n\n  equalsExact (other) {\n    return this === other || this.equalsExact(other, 0)\n  }\n\n  geometryChanged () {\n    this.apply(Geometry.geometryChangedFilter)\n  }\n\n  geometryChangedAction () {\n    this._envelope = null\n  }\n\n  equalsNorm (g) {\n    if (g === null) return false\n    return this.norm().equalsExact(g.norm())\n  }\n\n  getLength () {\n    return 0.0\n  }\n\n  getNumGeometries () {\n    return 1\n  }\n\n  compareTo () {\n    let other\n    if (arguments.length === 1) {\n      const o = arguments[0]\n      other = o\n      if (this.getTypeCode() !== other.getTypeCode()) {\n        return this.getTypeCode() - other.getTypeCode()\n      }\n      if (this.isEmpty() && other.isEmpty()) {\n        return 0\n      }\n      if (this.isEmpty()) {\n        return -1\n      }\n      if (other.isEmpty()) {\n        return 1\n      }\n      return this.compareToSameClass(o)\n    } else if (arguments.length === 2) {\n      const o = arguments[0]; const comp = arguments[1]\n      other = o\n      if (this.getTypeCode() !== other.getTypeCode()) {\n        return this.getTypeCode() - other.getTypeCode()\n      }\n      if (this.isEmpty() && other.isEmpty()) {\n        return 0\n      }\n      if (this.isEmpty()) {\n        return -1\n      }\n      if (other.isEmpty()) {\n        return 1\n      }\n      return this.compareToSameClass(o, comp)\n    }\n  }\n\n  getUserData () {\n    return this._userData\n  }\n\n  getSRID () {\n    return this._SRID\n  }\n\n  getEnvelope () {\n    return this.getFactory().toGeometry(this.getEnvelopeInternal())\n  }\n\n  checkNotGeometryCollection (g) {\n    if (g.getTypeCode() === Geometry.TYPECODE_GEOMETRYCOLLECTION) {\n      throw new IllegalArgumentException('This method does not support GeometryCollection arguments')\n    }\n  }\n\n  equal (a, b, tolerance) {\n    if (tolerance === 0) {\n      return a.equals(b)\n    }\n    return a.distance(b) <= tolerance\n  }\n\n  norm () {\n    const copy = this.copy()\n    copy.normalize()\n    return copy\n  }\n\n  getPrecisionModel () {\n    return this._factory.getPrecisionModel()\n  }\n\n  getEnvelopeInternal () {\n    if (this._envelope === null) {\n      this._envelope = this.computeEnvelopeInternal()\n    }\n    return new Envelope(this._envelope)\n  }\n\n  setSRID (SRID) {\n    this._SRID = SRID\n  }\n\n  setUserData (userData) {\n    this._userData = userData\n  }\n\n  compare (a, b) {\n    const i = a.iterator()\n    const j = b.iterator()\n    while (i.hasNext() && j.hasNext()) {\n      const aElement = i.next()\n      const bElement = j.next()\n      const comparison = aElement.compareTo(bElement)\n      if (comparison !== 0) {\n        return comparison\n      }\n    }\n    if (i.hasNext()) {\n      return 1\n    }\n    if (j.hasNext()) {\n      return -1\n    }\n    return 0\n  }\n\n  hashCode () {\n    return this.getEnvelopeInternal().hashCode()\n  }\n\n  isGeometryCollectionOrDerived () {\n    if (this.getTypeCode() === Geometry.TYPECODE_GEOMETRYCOLLECTION || this.getTypeCode() === Geometry.TYPECODE_MULTIPOINT || this.getTypeCode() === Geometry.TYPECODE_MULTILINESTRING || this.getTypeCode() === Geometry.TYPECODE_MULTIPOLYGON) {\n      return true\n    }\n    return false\n  }\n\n  get interfaces_ () {\n    return [Cloneable, Comparable, Serializable]\n  }\n\n  getClass () {\n    return Geometry\n  }\n\n  static hasNonEmptyElements (geometries) {\n    for (let i = 0; i < geometries.length; i++) {\n      if (!geometries[i].isEmpty()) {\n        return true\n      }\n    }\n    return false\n  }\n\n  static hasNullElements (array) {\n    for (let i = 0; i < array.length; i++) {\n      if (array[i] === null) {\n        return true\n      }\n    }\n    return false\n  }\n};\nGeometry.constructor_ = function (factory) {\n  if (!factory) { return }\n  this._envelope = null\n  this._userData = null\n  this._factory = factory\n  this._SRID = factory.getSRID()\n}\nGeometry.serialVersionUID = 8763622679187376702\nGeometry.TYPECODE_POINT = 0\nGeometry.TYPECODE_MULTIPOINT = 1\nGeometry.TYPECODE_LINESTRING = 2\nGeometry.TYPECODE_LINEARRING = 3\nGeometry.TYPECODE_MULTILINESTRING = 4\nGeometry.TYPECODE_POLYGON = 5\nGeometry.TYPECODE_MULTIPOLYGON = 6\nGeometry.TYPECODE_GEOMETRYCOLLECTION = 7\nGeometry.TYPENAME_POINT = 'Point'\nGeometry.TYPENAME_MULTIPOINT = 'MultiPoint'\nGeometry.TYPENAME_LINESTRING = 'LineString'\nGeometry.TYPENAME_LINEARRING = 'LinearRing'\nGeometry.TYPENAME_MULTILINESTRING = 'MultiLineString'\nGeometry.TYPENAME_POLYGON = 'Polygon'\nGeometry.TYPENAME_MULTIPOLYGON = 'MultiPolygon'\nGeometry.TYPENAME_GEOMETRYCOLLECTION = 'GeometryCollection'\nGeometry.geometryChangedFilter = {\n  get interfaces_ () {\n    return [GeometryComponentFilter]\n  },\n  filter (geom) {\n    geom.geometryChangedAction()\n  }\n}\n","export default class CoordinateFilter {\n  constructor () {\n    CoordinateFilter.constructor_.apply(this, arguments)\n  }\n\n  filter (coord) {}\n  getClass () {\n    return CoordinateFilter\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nCoordinateFilter.constructor_ = function () {}\n","export default class BoundaryNodeRule {\n  constructor () {\n    BoundaryNodeRule.constructor_.apply(this, arguments)\n  }\n\n  isInBoundary (boundaryCount) {}\n  getClass () {\n    return BoundaryNodeRule\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nclass Mod2BoundaryNodeRule {\n  constructor () {\n    Mod2BoundaryNodeRule.constructor_.apply(this, arguments)\n  }\n\n  isInBoundary (boundaryCount) {\n    return boundaryCount % 2 === 1\n  }\n\n  getClass () {\n    return Mod2BoundaryNodeRule\n  }\n\n  get interfaces_ () {\n    return [BoundaryNodeRule]\n  }\n}\nMod2BoundaryNodeRule.constructor_ = function () {}\nclass EndPointBoundaryNodeRule {\n  constructor () {\n    EndPointBoundaryNodeRule.constructor_.apply(this, arguments)\n  }\n\n  isInBoundary (boundaryCount) {\n    return boundaryCount > 0\n  }\n\n  getClass () {\n    return EndPointBoundaryNodeRule\n  }\n\n  get interfaces_ () {\n    return [BoundaryNodeRule]\n  }\n}\nEndPointBoundaryNodeRule.constructor_ = function () {}\nclass MultiValentEndPointBoundaryNodeRule {\n  constructor () {\n    MultiValentEndPointBoundaryNodeRule.constructor_.apply(this, arguments)\n  }\n\n  isInBoundary (boundaryCount) {\n    return boundaryCount > 1\n  }\n\n  getClass () {\n    return MultiValentEndPointBoundaryNodeRule\n  }\n\n  get interfaces_ () {\n    return [BoundaryNodeRule]\n  }\n}\nMultiValentEndPointBoundaryNodeRule.constructor_ = function () {}\nclass MonoValentEndPointBoundaryNodeRule {\n  constructor () {\n    MonoValentEndPointBoundaryNodeRule.constructor_.apply(this, arguments)\n  }\n\n  isInBoundary (boundaryCount) {\n    return boundaryCount === 1\n  }\n\n  getClass () {\n    return MonoValentEndPointBoundaryNodeRule\n  }\n\n  get interfaces_ () {\n    return [BoundaryNodeRule]\n  }\n}\nMonoValentEndPointBoundaryNodeRule.constructor_ = function () {}\nBoundaryNodeRule.Mod2BoundaryNodeRule = Mod2BoundaryNodeRule\nBoundaryNodeRule.EndPointBoundaryNodeRule = EndPointBoundaryNodeRule\nBoundaryNodeRule.MultiValentEndPointBoundaryNodeRule = MultiValentEndPointBoundaryNodeRule\nBoundaryNodeRule.MonoValentEndPointBoundaryNodeRule = MonoValentEndPointBoundaryNodeRule\nBoundaryNodeRule.constructor_ = function () {}\nBoundaryNodeRule.MOD2_BOUNDARY_RULE = new Mod2BoundaryNodeRule()\nBoundaryNodeRule.ENDPOINT_BOUNDARY_RULE = new EndPointBoundaryNodeRule()\nBoundaryNodeRule.MULTIVALENT_ENDPOINT_BOUNDARY_RULE = new MultiValentEndPointBoundaryNodeRule()\nBoundaryNodeRule.MONOVALENT_ENDPOINT_BOUNDARY_RULE = new MonoValentEndPointBoundaryNodeRule()\nBoundaryNodeRule.OGC_SFS_BOUNDARY_RULE = BoundaryNodeRule.MOD2_BOUNDARY_RULE\n","import CoordinateList from './CoordinateList'\nimport Coordinate from './Coordinate'\nimport MathUtil from '../math/MathUtil'\nimport System from '../../../../java/lang/System'\nimport Comparator from '../../../../java/util/Comparator'\nimport Envelope from './Envelope'\nexport default class CoordinateArrays {\n  constructor () {\n    CoordinateArrays.constructor_.apply(this, arguments)\n  }\n\n  static isRing (pts) {\n    if (pts.length < 4) return false\n    if (!pts[0].equals2D(pts[pts.length - 1])) return false\n    return true\n  }\n\n  static ptNotInList (testPts, pts) {\n    for (let i = 0; i < testPts.length; i++) {\n      const testPt = testPts[i]\n      if (CoordinateArrays.indexOf(testPt, pts) < 0) return testPt\n    }\n    return null\n  }\n\n  static scroll (coordinates, firstCoordinate) {\n    const i = CoordinateArrays.indexOf(firstCoordinate, coordinates)\n    if (i < 0) return null\n    const newCoordinates = new Array(coordinates.length).fill(null)\n    System.arraycopy(coordinates, i, newCoordinates, 0, coordinates.length - i)\n    System.arraycopy(coordinates, 0, newCoordinates, coordinates.length - i, i)\n    System.arraycopy(newCoordinates, 0, coordinates, 0, coordinates.length)\n  }\n\n  static equals () {\n    if (arguments.length === 2) {\n      const coord1 = arguments[0]; const coord2 = arguments[1]\n      if (coord1 === coord2) return true\n      if (coord1 === null || coord2 === null) return false\n      if (coord1.length !== coord2.length) return false\n      for (let i = 0; i < coord1.length; i++) {\n        if (!coord1[i].equals(coord2[i])) return false\n      }\n      return true\n    } else if (arguments.length === 3) {\n      const coord1 = arguments[0]; const coord2 = arguments[1]; const coordinateComparator = arguments[2]\n      if (coord1 === coord2) return true\n      if (coord1 === null || coord2 === null) return false\n      if (coord1.length !== coord2.length) return false\n      for (let i = 0; i < coord1.length; i++) {\n        if (coordinateComparator.compare(coord1[i], coord2[i]) !== 0) return false\n      }\n      return true\n    }\n  }\n\n  static intersection (coordinates, env) {\n    const coordList = new CoordinateList()\n    for (let i = 0; i < coordinates.length; i++) {\n      if (env.intersects(coordinates[i])) coordList.add(coordinates[i], true)\n    }\n    return coordList.toCoordinateArray()\n  }\n\n  static hasRepeatedPoints (coord) {\n    for (let i = 1; i < coord.length; i++) {\n      if (coord[i - 1].equals(coord[i])) {\n        return true\n      }\n    }\n    return false\n  }\n\n  static removeRepeatedPoints (coord) {\n    if (!CoordinateArrays.hasRepeatedPoints(coord)) return coord\n    const coordList = new CoordinateList(coord, false)\n    return coordList.toCoordinateArray()\n  }\n\n  static reverse (coord) {\n    const last = coord.length - 1\n    const mid = Math.trunc(last / 2)\n    for (let i = 0; i <= mid; i++) {\n      const tmp = coord[i]\n      coord[i] = coord[last - i]\n      coord[last - i] = tmp\n    }\n  }\n\n  static removeNull (coord) {\n    let nonNull = 0\n    for (let i = 0; i < coord.length; i++) {\n      if (coord[i] !== null) nonNull++\n    }\n    const newCoord = new Array(nonNull).fill(null)\n    if (nonNull === 0) return newCoord\n    let j = 0\n    for (let i = 0; i < coord.length; i++) {\n      if (coord[i] !== null) newCoord[j++] = coord[i]\n    }\n    return newCoord\n  }\n\n  static copyDeep () {\n    if (arguments.length === 1) {\n      const coordinates = arguments[0]\n      const copy = new Array(coordinates.length).fill(null)\n      for (let i = 0; i < coordinates.length; i++) {\n        copy[i] = new Coordinate(coordinates[i])\n      }\n      return copy\n    } else if (arguments.length === 5) {\n      const src = arguments[0]; const srcStart = arguments[1]; const dest = arguments[2]; const destStart = arguments[3]; const length = arguments[4]\n      for (let i = 0; i < length; i++) {\n        dest[destStart + i] = new Coordinate(src[srcStart + i])\n      }\n    }\n  }\n\n  static isEqualReversed (pts1, pts2) {\n    for (let i = 0; i < pts1.length; i++) {\n      const p1 = pts1[i]\n      const p2 = pts2[pts1.length - i - 1]\n      if (p1.compareTo(p2) !== 0) return false\n    }\n    return true\n  }\n\n  static envelope (coordinates) {\n    const env = new Envelope()\n    for (let i = 0; i < coordinates.length; i++) {\n      env.expandToInclude(coordinates[i])\n    }\n    return env\n  }\n\n  static toCoordinateArray (coordList) {\n    return coordList.toArray(CoordinateArrays.coordArrayType)\n  }\n\n  static atLeastNCoordinatesOrNothing (n, c) {\n    return c.length >= n ? c : []\n  }\n\n  static indexOf (coordinate, coordinates) {\n    for (let i = 0; i < coordinates.length; i++) {\n      if (coordinate.equals(coordinates[i])) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  static increasingDirection (pts) {\n    for (let i = 0; i < Math.trunc(pts.length / 2); i++) {\n      const j = pts.length - 1 - i\n      const comp = pts[i].compareTo(pts[j])\n      if (comp !== 0) return comp\n    }\n    return 1\n  }\n\n  static compare (pts1, pts2) {\n    let i = 0\n    while (i < pts1.length && i < pts2.length) {\n      const compare = pts1[i].compareTo(pts2[i])\n      if (compare !== 0) return compare\n      i++\n    }\n    if (i < pts2.length) return -1\n    if (i < pts1.length) return 1\n    return 0\n  }\n\n  static minCoordinate (coordinates) {\n    let minCoord = null\n    for (let i = 0; i < coordinates.length; i++) {\n      if (minCoord === null || minCoord.compareTo(coordinates[i]) > 0) {\n        minCoord = coordinates[i]\n      }\n    }\n    return minCoord\n  }\n\n  static extract (pts, start, end) {\n    start = MathUtil.clamp(start, 0, pts.length)\n    end = MathUtil.clamp(end, -1, pts.length)\n    let npts = end - start + 1\n    if (end < 0) npts = 0\n    if (start >= pts.length) npts = 0\n    if (end < start) npts = 0\n    const extractPts = new Array(npts).fill(null)\n    if (npts === 0) return extractPts\n    let iPts = 0\n    for (let i = start; i <= end; i++) {\n      extractPts[iPts++] = pts[i]\n    }\n    return extractPts\n  }\n\n  getClass () {\n    return CoordinateArrays\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nclass ForwardComparator {\n  constructor () {\n    ForwardComparator.constructor_.apply(this, arguments)\n  }\n\n  compare (o1, o2) {\n    const pts1 = o1\n    const pts2 = o2\n    return CoordinateArrays.compare(pts1, pts2)\n  }\n\n  getClass () {\n    return ForwardComparator\n  }\n\n  get interfaces_ () {\n    return [Comparator]\n  }\n}\nForwardComparator.constructor_ = function () {}\nclass BidirectionalComparator {\n  constructor () {\n    BidirectionalComparator.constructor_.apply(this, arguments)\n  }\n\n  compare (o1, o2) {\n    const pts1 = o1\n    const pts2 = o2\n    if (pts1.length < pts2.length) return -1\n    if (pts1.length > pts2.length) return 1\n    if (pts1.length === 0) return 0\n    const forwardComp = CoordinateArrays.compare(pts1, pts2)\n    const isEqualRev = CoordinateArrays.isEqualReversed(pts1, pts2)\n    if (isEqualRev) return 0\n    return forwardComp\n  }\n\n  OLDcompare (o1, o2) {\n    const pts1 = o1\n    const pts2 = o2\n    if (pts1.length < pts2.length) return -1\n    if (pts1.length > pts2.length) return 1\n    if (pts1.length === 0) return 0\n    const dir1 = CoordinateArrays.increasingDirection(pts1)\n    const dir2 = CoordinateArrays.increasingDirection(pts2)\n    let i1 = dir1 > 0 ? 0 : pts1.length - 1\n    let i2 = dir2 > 0 ? 0 : pts1.length - 1\n    for (let i = 0; i < pts1.length; i++) {\n      const comparePt = pts1[i1].compareTo(pts2[i2])\n      if (comparePt !== 0) return comparePt\n      i1 += dir1\n      i2 += dir2\n    }\n    return 0\n  }\n\n  getClass () {\n    return BidirectionalComparator\n  }\n\n  get interfaces_ () {\n    return [Comparator]\n  }\n}\nBidirectionalComparator.constructor_ = function () {}\nCoordinateArrays.ForwardComparator = ForwardComparator\nCoordinateArrays.BidirectionalComparator = BidirectionalComparator\nCoordinateArrays.constructor_ = function () {}\nCoordinateArrays.coordArrayType = new Array(0).fill(null)\n","/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Map.html\n *\n * @constructor\n * @private\n */\nexport default function Map () {};\n\n/**\n * Returns the value to which the specified key is mapped, or null if this map\n * contains no mapping for the key.\n * @param {Object} key\n * @return {Object}\n */\nMap.prototype.get = function () {}\n\n/**\n * Associates the specified value with the specified key in this map (optional\n * operation).\n * @param {Object} key\n * @param {Object} value\n * @return {Object}\n */\nMap.prototype.put = function () {}\n\n/**\n * Returns the number of key-value mappings in this map.\n * @return {number}\n */\nMap.prototype.size = function () {}\n\n/**\n * Returns a Collection view of the values contained in this map.\n * @return {javascript.util.Collection}\n */\nMap.prototype.values = function () {}\n\n/**\n * Returns a {@link Set} view of the mappings contained in this map.\n * The set is backed by the map, so changes to the map are\n * reflected in the set, and vice-versa.  If the map is modified\n * while an iteration over the set is in progress (except through\n * the iterator's own <tt>remove</tt> operation, or through the\n * <tt>setValue</tt> operation on a map entry returned by the\n * iterator) the results of the iteration are undefined.  The set\n * supports element removal, which removes the corresponding\n * mapping from the map, via the <tt>Iterator.remove</tt>,\n * <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and\n * <tt>clear</tt> operations.  It does not support the\n * <tt>add</tt> or <tt>addAll</tt> operations.\n *\n * @return {Set} a set view of the mappings contained in this map\n */\nMap.prototype.entrySet = function () {}\n","import Map from './Map'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedMap.html\n *\n * @extends {Map}\n * @constructor\n * @private\n */\nexport default function SortedMap () {};\nSortedMap.prototype = new Map()\n","/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nexport default function UnsupportedOperationException (message) {\n  this.message = message || ''\n};\nUnsupportedOperationException.prototype = new Error()\n\n/**\n * @type {string}\n */\nUnsupportedOperationException.prototype.name = 'OperationNotSupported'\n","import Collection from './Collection'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Set.html\n *\n * @extends {Collection}\n * @constructor\n * @private\n */\nexport default function Set () {};\nSet.prototype = new Collection()\n\n/**\n * Returns true if this set contains the specified element. More formally,\n * returns true if and only if this set contains an element e such that (o==null ?\n * e==null : o.equals(e)).\n * @param {Object} e\n * @return {boolean}\n */\nSet.prototype.contains = function () {}\n","import Collection from './Collection'\nimport NoSuchElementException from './NoSuchElementException'\nimport UnsupportedOperationException from '../lang/UnsupportedOperationException'\nimport Set from './Set'\n\n/**\n * @see http://docs.oracle.com/javase/6/docs/api/java/util/HashSet.html\n *\n * @extends {javascript.util.Set}\n * @constructor\n * @private\n */\nexport default function HashSet () {\n  /**\n   * @type {Array}\n   * @private\n  */\n  this.array_ = []\n\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0])\n  }\n};\nHashSet.prototype = new Set()\n\n/**\n * @override\n */\nHashSet.prototype.contains = function (o) {\n  for (let i = 0, len = this.array_.length; i < len; i++) {\n    const e = this.array_[i]\n    if (e === o) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @override\n */\nHashSet.prototype.add = function (o) {\n  if (this.contains(o)) {\n    return false\n  }\n\n  this.array_.push(o)\n\n  return true\n}\n\n/**\n * @override\n */\nHashSet.prototype.addAll = function (c) {\n  for (let i = c.iterator(); i.hasNext();) {\n    this.add(i.next())\n  }\n  return true\n}\n\n/**\n * @override\n */\nHashSet.prototype.remove = function (o) {\n  throw new UnsupportedOperationException()\n}\n\n/**\n * @override\n */\nHashSet.prototype.size = function () {\n  return this.array_.length\n}\n\n/**\n * @override\n */\nHashSet.prototype.isEmpty = function () {\n  return this.array_.length === 0\n}\n\n/**\n * @override\n */\nHashSet.prototype.toArray = function () {\n  const array = []\n\n  for (let i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this.array_[i])\n  }\n\n  return array\n}\n\n/**\n * @override\n */\nHashSet.prototype.iterator = function () {\n  return new Iterator_(this)\n}\n\n/**\n * @extends {Iterator}\n * @param {HashSet} hashSet\n * @constructor\n * @private\n */\nconst Iterator_ = function (hashSet) {\n  /**\n   * @type {HashSet}\n   * @private\n   */\n  this.hashSet_ = hashSet\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0\n}\n\n/**\n * @override\n */\nIterator_.prototype.next = function () {\n  if (this.position_ === this.hashSet_.size()) {\n    throw new NoSuchElementException()\n  }\n  return this.hashSet_.array_[this.position_++]\n}\n\n/**\n * @override\n */\nIterator_.prototype.hasNext = function () {\n  if (this.position_ < this.hashSet_.size()) {\n    return true\n  } else {\n    return false\n  }\n}\n\n/**\n * @override\n */\nIterator_.prototype.remove = function () {\n  throw new UnsupportedOperationException()\n}\n","import ArrayList from './ArrayList'\nimport SortedMap from './SortedMap'\nimport HashSet from './HashSet'\n\nconst BLACK = 0\nconst RED = 1\nfunction colorOf (p) { return (p == null ? BLACK : p.color) }\nfunction parentOf (p) { return (p == null ? null : p.parent) }\nfunction setColor (p, c) { if (p !== null) p.color = c }\nfunction leftOf (p) { return (p == null ? null : p.left) }\nfunction rightOf (p) { return (p == null ? null : p.right) }\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeMap.html\n *\n * @extends {SortedMap}\n * @constructor\n * @private\n */\nexport default function TreeMap () {\n  /**\n   * @type {Object}\n   * @private\n   */\n  this.root_ = null\n  /**\n   * @type {number}\n   * @private\n  */\n  this.size_ = 0\n};\nTreeMap.prototype = new SortedMap()\n\n/**\n * @override\n */\nTreeMap.prototype.get = function (key) {\n  var p = this.root_\n  while (p !== null) {\n    var cmp = key.compareTo(p.key)\n    if (cmp < 0) {\n      p = p.left\n    } else if (cmp > 0) {\n      p = p.right\n    } else {\n      return p.value\n    }\n  }\n  return null\n}\n\n/**\n * @override\n */\nTreeMap.prototype.put = function (key, value) {\n  if (this.root_ === null) {\n    this.root_ = {\n      key: key,\n      value: value,\n      left: null,\n      right: null,\n      parent: null,\n      color: BLACK,\n      getValue () { return this.value },\n      getKey () { return this.key }\n    }\n    this.size_ = 1\n    return null\n  }\n  var t = this.root_; var parent; var cmp\n  do {\n    parent = t\n    cmp = key.compareTo(t.key)\n    if (cmp < 0) {\n      t = t.left\n    } else if (cmp > 0) {\n      t = t.right\n    } else {\n      var oldValue = t.value\n      t.value = value\n      return oldValue\n    }\n  } while (t !== null)\n  var e = {\n    key: key,\n    left: null,\n    right: null,\n    value: value,\n    parent: parent,\n    color: BLACK,\n    getValue () { return this.value },\n    getKey () { return this.key }\n  }\n  if (cmp < 0) {\n    parent.left = e\n  } else {\n    parent.right = e\n  }\n  this.fixAfterInsertion(e)\n  this.size_++\n  return null\n}\n\n/**\n * @param {Object} x\n */\nTreeMap.prototype.fixAfterInsertion = function (x) {\n  let y\n  x.color = RED\n  while (x != null && x !== this.root_ && x.parent.color === RED) {\n    if (parentOf(x) === leftOf(parentOf(parentOf(x)))) {\n      y = rightOf(parentOf(parentOf(x)))\n      if (colorOf(y) === RED) {\n        setColor(parentOf(x), BLACK)\n        setColor(y, BLACK)\n        setColor(parentOf(parentOf(x)), RED)\n        x = parentOf(parentOf(x))\n      } else {\n        if (x === rightOf(parentOf(x))) {\n          x = parentOf(x)\n          this.rotateLeft(x)\n        }\n        setColor(parentOf(x), BLACK)\n        setColor(parentOf(parentOf(x)), RED)\n        this.rotateRight(parentOf(parentOf(x)))\n      }\n    } else {\n      y = leftOf(parentOf(parentOf(x)))\n      if (colorOf(y) === RED) {\n        setColor(parentOf(x), BLACK)\n        setColor(y, BLACK)\n        setColor(parentOf(parentOf(x)), RED)\n        x = parentOf(parentOf(x))\n      } else {\n        if (x === leftOf(parentOf(x))) {\n          x = parentOf(x)\n          this.rotateRight(x)\n        }\n        setColor(parentOf(x), BLACK)\n        setColor(parentOf(parentOf(x)), RED)\n        this.rotateLeft(parentOf(parentOf(x)))\n      }\n    }\n  }\n  this.root_.color = BLACK\n}\n\n/**\n * @override\n */\nTreeMap.prototype.values = function () {\n  var arrayList = new ArrayList()\n  var p = this.getFirstEntry()\n  if (p !== null) {\n    arrayList.add(p.value)\n    while ((p = TreeMap.successor(p)) !== null) {\n      arrayList.add(p.value)\n    }\n  }\n  return arrayList\n}\n\n/**\n * @override\n */\nTreeMap.prototype.entrySet = function () {\n  var hashSet = new HashSet()\n  var p = this.getFirstEntry()\n  if (p !== null) {\n    hashSet.add(p)\n    while ((p = TreeMap.successor(p)) !== null) {\n      hashSet.add(p)\n    }\n  }\n  return hashSet\n}\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateLeft = function (p) {\n  if (p != null) {\n    var r = p.right\n    p.right = r.left\n    if (r.left != null) { r.left.parent = p }\n    r.parent = p.parent\n    if (p.parent == null) { this.root_ = r } else if (p.parent.left === p) { p.parent.left = r } else { p.parent.right = r }\n    r.left = p\n    p.parent = r\n  }\n}\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateRight = function (p) {\n  if (p != null) {\n    var l = p.left\n    p.left = l.right\n    if (l.right != null) l.right.parent = p\n    l.parent = p.parent\n    if (p.parent == null) { this.root_ = l } else if (p.parent.right === p) { p.parent.right = l } else p.parent.left = l\n    l.right = p\n    p.parent = l\n  }\n}\n\n/**\n * @return {Object}\n */\nTreeMap.prototype.getFirstEntry = function () {\n  var p = this.root_\n  if (p != null) {\n    while (p.left != null) {\n      p = p.left\n    }\n  }\n  return p\n}\n\n/**\n * @param {Object} t\n * @return {Object}\n * @private\n */\nTreeMap.successor = function (t) {\n  let p\n  if (t === null) { return null } else if (t.right !== null) {\n    p = t.right\n    while (p.left !== null) {\n      p = p.left\n    }\n    return p\n  } else {\n    p = t.parent\n    var ch = t\n    while (p !== null && ch === p.right) {\n      ch = p\n      p = p.parent\n    }\n    return p\n  }\n}\n\n/**\n * @override\n */\nTreeMap.prototype.size = function () {\n  return this.size_\n}\n\nTreeMap.prototype.containsKey = function (key) {\n  var p = this.root_\n  while (p !== null) {\n    var cmp = key.compareTo(p.key)\n    if (cmp < 0) {\n      p = p.left\n    } else if (cmp > 0) {\n      p = p.right\n    } else {\n      return true\n    }\n  }\n  return false\n}\n","export default class Lineal {\n  constructor () {\n    Lineal.constructor_.apply(this, arguments)\n  }\n\n  getClass () {\n    return Lineal\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nLineal.constructor_ = function () {}\n","import Set from './Set'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedSet.html\n *\n * @extends {Set}\n * @constructor\n * @private\n */\nexport default function SortedSet () {};\nSortedSet.prototype = new Set()\n","import Collection from './Collection'\nimport NoSuchElementException from './NoSuchElementException'\nimport UnsupportedOperationException from '../lang/UnsupportedOperationException'\nimport SortedSet from './SortedSet'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeSet.html\n *\n * @extends {SortedSet}\n * @constructor\n * @private\n */\nexport default function TreeSet () {\n  /**\n   * @type {Array}\n   * @private\n  */\n  this.array_ = []\n\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0])\n  }\n};\nTreeSet.prototype = new SortedSet()\n\n/**\n * @override\n */\nTreeSet.prototype.contains = function (o) {\n  for (let i = 0, len = this.array_.length; i < len; i++) {\n    const e = this.array_[i]\n    if (e.compareTo(o) === 0) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @override\n */\nTreeSet.prototype.add = function (o) {\n  if (this.contains(o)) {\n    return false\n  }\n\n  for (let i = 0, len = this.array_.length; i < len; i++) {\n    const e = this.array_[i]\n    if (e.compareTo(o) === 1) {\n      this.array_.splice(i, 0, o)\n      return true\n    }\n  }\n\n  this.array_.push(o)\n\n  return true\n}\n\n/**\n * @override\n */\nTreeSet.prototype.addAll = function (c) {\n  for (let i = c.iterator(); i.hasNext();) {\n    this.add(i.next())\n  }\n  return true\n}\n\n/**\n * @override\n */\nTreeSet.prototype.remove = function (e) {\n  throw new UnsupportedOperationException()\n}\n\n/**\n * @override\n */\nTreeSet.prototype.size = function () {\n  return this.array_.length\n}\n\n/**\n * @override\n */\nTreeSet.prototype.isEmpty = function () {\n  return this.array_.length === 0\n}\n\n/**\n * @override\n */\nTreeSet.prototype.toArray = function () {\n  const array = []\n\n  for (let i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this.array_[i])\n  }\n\n  return array\n}\n\n/**\n * @override\n */\nTreeSet.prototype.iterator = function () {\n  return new Iterator_(this)\n}\n\n/**\n * @extends {javascript.util.Iterator}\n * @param {javascript.util.TreeSet} treeSet\n * @constructor\n * @private\n */\nconst Iterator_ = function (treeSet) {\n  /**\n   * @type {javascript.util.TreeSet}\n   * @private\n   */\n  this.treeSet_ = treeSet\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0\n}\n\n/**\n * @override\n */\nIterator_.prototype.next = function () {\n  if (this.position_ === this.treeSet_.size()) {\n    throw new NoSuchElementException()\n  }\n  return this.treeSet_.array_[this.position_++]\n}\n\n/**\n * @override\n */\nIterator_.prototype.hasNext = function () {\n  if (this.position_ < this.treeSet_.size()) {\n    return true\n  } else {\n    return false\n  }\n}\n\n/**\n * @override\n */\nIterator_.prototype.remove = function () {\n  throw new UnsupportedOperationException()\n}\n","import ArrayList from './ArrayList'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Arrays.html\n *\n * @constructor\n * @private\n */\nexport default function Arrays () {};\n\n/**\n */\nArrays.sort = function () {\n  const a = arguments[0]; let i; let t; let comparator; let compare\n  if (arguments.length === 1) {\n    compare = function (a, b) {\n      return a.compareTo(b)\n    }\n    a.sort(compare)\n  } else if (arguments.length === 2) {\n    comparator = arguments[1]\n    compare = function (a, b) {\n      return comparator.compare(a, b)\n    }\n    a.sort(compare)\n  } else if (arguments.length === 3) {\n    t = a.slice(arguments[1], arguments[2])\n    t.sort()\n    const r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length))\n    a.splice(0, a.length)\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i])\n    }\n  } else if (arguments.length === 4) {\n    t = a.slice(arguments[1], arguments[2])\n    comparator = arguments[3]\n    compare = function (a, b) {\n      return comparator.compare(a, b)\n    }\n    t.sort(compare)\n    const r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length))\n    a.splice(0, a.length)\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i])\n    }\n  }\n}\n\n/**\n * @param {Array} array\n * @return {ArrayList}\n */\nArrays.asList = function (array) {\n  const arrayList = new ArrayList()\n  for (let i = 0, len = array.length; i < len; i++) {\n    arrayList.add(array[i])\n  }\n  return arrayList\n}\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException'\nimport Character from '../../../../java/lang/Character'\nexport default class Dimension {\n  constructor () {\n    Dimension.constructor_.apply(this, arguments)\n  }\n\n  static toDimensionSymbol (dimensionValue) {\n    switch (dimensionValue) {\n      case Dimension.FALSE:\n        return Dimension.SYM_FALSE\n      case Dimension.TRUE:\n        return Dimension.SYM_TRUE\n      case Dimension.DONTCARE:\n        return Dimension.SYM_DONTCARE\n      case Dimension.P:\n        return Dimension.SYM_P\n      case Dimension.L:\n        return Dimension.SYM_L\n      case Dimension.A:\n        return Dimension.SYM_A\n    }\n    throw new IllegalArgumentException('Unknown dimension value: ' + dimensionValue)\n  }\n\n  static toDimensionValue (dimensionSymbol) {\n    switch (Character.toUpperCase(dimensionSymbol)) {\n      case Dimension.SYM_FALSE:\n        return Dimension.FALSE\n      case Dimension.SYM_TRUE:\n        return Dimension.TRUE\n      case Dimension.SYM_DONTCARE:\n        return Dimension.DONTCARE\n      case Dimension.SYM_P:\n        return Dimension.P\n      case Dimension.SYM_L:\n        return Dimension.L\n      case Dimension.SYM_A:\n        return Dimension.A\n    }\n    throw new IllegalArgumentException('Unknown dimension symbol: ' + dimensionSymbol)\n  }\n\n  getClass () {\n    return Dimension\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nDimension.constructor_ = function () {}\nDimension.P = 0\nDimension.L = 1\nDimension.A = 2\nDimension.FALSE = -1\nDimension.TRUE = -2\nDimension.DONTCARE = -3\nDimension.SYM_FALSE = 'F'\nDimension.SYM_TRUE = 'T'\nDimension.SYM_DONTCARE = '*'\nDimension.SYM_P = '0'\nDimension.SYM_L = '1'\nDimension.SYM_A = '2'\n","export default class GeometryFilter {\n  constructor () {\n    GeometryFilter.constructor_.apply(this, arguments)\n  }\n\n  filter (geom) {}\n  getClass () {\n    return GeometryFilter\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nGeometryFilter.constructor_ = function () {}\n","export default class CoordinateSequenceFilter {\n  constructor () {\n    CoordinateSequenceFilter.constructor_.apply(this, arguments)\n  }\n\n  filter (seq, i) {}\n  isDone () {}\n  isGeometryChanged () {}\n  getClass () {\n    return CoordinateSequenceFilter\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nCoordinateSequenceFilter.constructor_ = function () {}\n","import TreeSet from '../../../../java/util/TreeSet'\nimport Geometry from './Geometry'\nimport Arrays from '../../../../java/util/Arrays'\nimport CoordinateFilter from './CoordinateFilter'\nimport hasInterface from '../../../../hasInterface'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException'\nimport GeometryComponentFilter from './GeometryComponentFilter'\nimport Dimension from './Dimension'\nimport GeometryFilter from './GeometryFilter'\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter'\nimport Envelope from './Envelope'\nimport Assert from '../util/Assert'\nexport default class GeometryCollection extends Geometry {\n  constructor () {\n    super()\n    GeometryCollection.constructor_.apply(this, arguments)\n  }\n\n  computeEnvelopeInternal () {\n    const envelope = new Envelope()\n    for (let i = 0; i < this._geometries.length; i++) {\n      envelope.expandToInclude(this._geometries[i].getEnvelopeInternal())\n    }\n    return envelope\n  }\n\n  getGeometryN (n) {\n    return this._geometries[n]\n  }\n\n  getCoordinates () {\n    const coordinates = new Array(this.getNumPoints()).fill(null)\n    let k = -1\n    for (let i = 0; i < this._geometries.length; i++) {\n      const childCoordinates = this._geometries[i].getCoordinates()\n      for (let j = 0; j < childCoordinates.length; j++) {\n        k++\n        coordinates[k] = childCoordinates[j]\n      }\n    }\n    return coordinates\n  }\n\n  getArea () {\n    let area = 0.0\n    for (let i = 0; i < this._geometries.length; i++) {\n      area += this._geometries[i].getArea()\n    }\n    return area\n  }\n\n  equalsExact () {\n    if (arguments.length === 2 && (typeof arguments[1] === 'number' && arguments[0] instanceof Geometry)) {\n      const other = arguments[0]; const tolerance = arguments[1]\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      const otherCollection = other\n      if (this._geometries.length !== otherCollection._geometries.length) {\n        return false\n      }\n      for (let i = 0; i < this._geometries.length; i++) {\n        if (!this._geometries[i].equalsExact(otherCollection._geometries[i], tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else return super.equalsExact.apply(this, arguments)\n  }\n\n  normalize () {\n    for (let i = 0; i < this._geometries.length; i++) {\n      this._geometries[i].normalize()\n    }\n    Arrays.sort(this._geometries)\n  }\n\n  getCoordinate () {\n    if (this.isEmpty()) return null\n    return this._geometries[0].getCoordinate()\n  }\n\n  getBoundaryDimension () {\n    let dimension = Dimension.FALSE\n    for (let i = 0; i < this._geometries.length; i++) {\n      dimension = Math.max(dimension, this._geometries[i].getBoundaryDimension())\n    }\n    return dimension\n  }\n\n  getTypeCode () {\n    return Geometry.TYPECODE_GEOMETRYCOLLECTION\n  }\n\n  getDimension () {\n    let dimension = Dimension.FALSE\n    for (let i = 0; i < this._geometries.length; i++) {\n      dimension = Math.max(dimension, this._geometries[i].getDimension())\n    }\n    return dimension\n  }\n\n  getLength () {\n    let sum = 0.0\n    for (let i = 0; i < this._geometries.length; i++) {\n      sum += this._geometries[i].getLength()\n    }\n    return sum\n  }\n\n  getNumPoints () {\n    let numPoints = 0\n    for (let i = 0; i < this._geometries.length; i++) {\n      numPoints += this._geometries[i].getNumPoints()\n    }\n    return numPoints\n  }\n\n  getNumGeometries () {\n    return this._geometries.length\n  }\n\n  reverse () {\n    const n = this._geometries.length\n    const revGeoms = new Array(n).fill(null)\n    for (let i = 0; i < this._geometries.length; i++) {\n      revGeoms[i] = this._geometries[i].reverse()\n    }\n    return this.getFactory().createGeometryCollection(revGeoms)\n  }\n\n  compareToSameClass () {\n    if (arguments.length === 1) {\n      const o = arguments[0]\n      const theseElements = new TreeSet(Arrays.asList(this._geometries))\n      const otherElements = new TreeSet(Arrays.asList(o._geometries))\n      return this.compare(theseElements, otherElements)\n    } else if (arguments.length === 2) {\n      const o = arguments[0]; const comp = arguments[1]\n      const gc = o\n      const n1 = this.getNumGeometries()\n      const n2 = gc.getNumGeometries()\n      let i = 0\n      while (i < n1 && i < n2) {\n        const thisGeom = this.getGeometryN(i)\n        const otherGeom = gc.getGeometryN(i)\n        const holeComp = thisGeom.compareToSameClass(otherGeom, comp)\n        if (holeComp !== 0) return holeComp\n        i++\n      }\n      if (i < n1) return 1\n      if (i < n2) return -1\n      return 0\n    }\n  }\n\n  apply () {\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      const filter = arguments[0]\n      for (let i = 0; i < this._geometries.length; i++) {\n        this._geometries[i].apply(filter)\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      const filter = arguments[0]\n      if (this._geometries.length === 0) return null\n      for (let i = 0; i < this._geometries.length; i++) {\n        this._geometries[i].apply(filter)\n        if (filter.isDone()) {\n          break\n        }\n      }\n      if (filter.isGeometryChanged()) this.geometryChanged()\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n      for (let i = 0; i < this._geometries.length; i++) {\n        this._geometries[i].apply(filter)\n      }\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n      for (let i = 0; i < this._geometries.length; i++) {\n        this._geometries[i].apply(filter)\n      }\n    }\n  }\n\n  getBoundary () {\n    this.checkNotGeometryCollection(this)\n    Assert.shouldNeverReachHere()\n    return null\n  }\n\n  getGeometryType () {\n    return Geometry.TYPENAME_GEOMETRYCOLLECTION\n  }\n\n  copy () {\n    const geometries = new Array(this._geometries.length).fill(null)\n    for (let i = 0; i < geometries.length; i++) {\n      geometries[i] = this._geometries[i].copy()\n    }\n    return new GeometryCollection(geometries, this._factory)\n  }\n\n  isEmpty () {\n    for (let i = 0; i < this._geometries.length; i++) {\n      if (!this._geometries[i].isEmpty()) {\n        return false\n      }\n    }\n    return true\n  }\n\n  getClass () {\n    return GeometryCollection\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nGeometryCollection.constructor_ = function () {\n  this._geometries = null\n  if (arguments.length === 0) {} else if (arguments.length === 2) {\n    let geometries = arguments[0]; const factory = arguments[1]\n    Geometry.constructor_.call(this, factory)\n    if (geometries === null) {\n      geometries = []\n    }\n    if (Geometry.hasNullElements(geometries)) {\n      throw new IllegalArgumentException('geometries must not contain null elements')\n    }\n    this._geometries = geometries\n  }\n}\nGeometryCollection.serialVersionUID = -5694727726395021467\n","import Geometry from './Geometry'\nimport BoundaryOp from '../operation/BoundaryOp'\nimport Lineal from './Lineal'\nimport GeometryCollection from './GeometryCollection'\nimport Dimension from './Dimension'\nexport default class MultiLineString extends GeometryCollection {\n  constructor () {\n    super()\n    MultiLineString.constructor_.apply(this, arguments)\n  }\n\n  equalsExact () {\n    if (arguments.length === 2 && (typeof arguments[1] === 'number' && arguments[0] instanceof Geometry)) {\n      const other = arguments[0]; const tolerance = arguments[1]\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return super.equalsExact.call(this, other, tolerance)\n    } else return super.equalsExact.apply(this, arguments)\n  }\n\n  getBoundaryDimension () {\n    if (this.isClosed()) {\n      return Dimension.FALSE\n    }\n    return 0\n  }\n\n  isClosed () {\n    if (this.isEmpty()) {\n      return false\n    }\n    for (let i = 0; i < this._geometries.length; i++) {\n      if (!this._geometries[i].isClosed()) {\n        return false\n      }\n    }\n    return true\n  }\n\n  getTypeCode () {\n    return Geometry.TYPECODE_MULTILINESTRING\n  }\n\n  getDimension () {\n    return 1\n  }\n\n  reverse () {\n    const nLines = this._geometries.length\n    const revLines = new Array(nLines).fill(null)\n    for (let i = 0; i < this._geometries.length; i++) {\n      revLines[nLines - 1 - i] = this._geometries[i].reverse()\n    }\n    return this.getFactory().createMultiLineString(revLines)\n  }\n\n  getBoundary () {\n    return new BoundaryOp(this).getBoundary()\n  }\n\n  getGeometryType () {\n    return Geometry.TYPENAME_MULTILINESTRING\n  }\n\n  copy () {\n    const lineStrings = new Array(this._geometries.length).fill(null)\n    for (let i = 0; i < lineStrings.length; i++) {\n      lineStrings[i] = this._geometries[i].copy()\n    }\n    return new MultiLineString(lineStrings, this._factory)\n  }\n\n  getClass () {\n    return MultiLineString\n  }\n\n  get interfaces_ () {\n    return [Lineal]\n  }\n}\nMultiLineString.constructor_ = function () {\n  const lineStrings = arguments[0]; const factory = arguments[1]\n  GeometryCollection.constructor_.call(this, lineStrings, factory)\n}\nMultiLineString.serialVersionUID = 8166665132445433741\n","import LineString from '../geom/LineString'\nimport BoundaryNodeRule from '../algorithm/BoundaryNodeRule'\nimport CoordinateArrays from '../geom/CoordinateArrays'\nimport ArrayList from '../../../../java/util/ArrayList'\nimport TreeMap from '../../../../java/util/TreeMap'\nimport MultiLineString from '../geom/MultiLineString'\nexport default class BoundaryOp {\n  constructor () {\n    BoundaryOp.constructor_.apply(this, arguments)\n  }\n\n  static getBoundary () {\n    if (arguments.length === 1) {\n      const g = arguments[0]\n      const bop = new BoundaryOp(g)\n      return bop.getBoundary()\n    } else if (arguments.length === 2) {\n      const g = arguments[0]; const bnRule = arguments[1]\n      const bop = new BoundaryOp(g, bnRule)\n      return bop.getBoundary()\n    }\n  }\n\n  boundaryMultiLineString (mLine) {\n    if (this._geom.isEmpty()) {\n      return this.getEmptyMultiPoint()\n    }\n    const bdyPts = this.computeBoundaryCoordinates(mLine)\n    if (bdyPts.length === 1) {\n      return this._geomFact.createPoint(bdyPts[0])\n    }\n    return this._geomFact.createMultiPointFromCoords(bdyPts)\n  }\n\n  getBoundary () {\n    if (this._geom instanceof LineString) return this.boundaryLineString(this._geom)\n    if (this._geom instanceof MultiLineString) return this.boundaryMultiLineString(this._geom)\n    return this._geom.getBoundary()\n  }\n\n  boundaryLineString (line) {\n    if (this._geom.isEmpty()) {\n      return this.getEmptyMultiPoint()\n    }\n    if (line.isClosed()) {\n      const closedEndpointOnBoundary = this._bnRule.isInBoundary(2)\n      if (closedEndpointOnBoundary) {\n        return line.getStartPoint()\n      } else {\n        return this._geomFact.createMultiPoint()\n      }\n    }\n    return this._geomFact.createMultiPoint([line.getStartPoint(), line.getEndPoint()])\n  }\n\n  getEmptyMultiPoint () {\n    return this._geomFact.createMultiPoint()\n  }\n\n  computeBoundaryCoordinates (mLine) {\n    const bdyPts = new ArrayList()\n    this._endpointMap = new TreeMap()\n    for (let i = 0; i < mLine.getNumGeometries(); i++) {\n      const line = mLine.getGeometryN(i)\n      if (line.getNumPoints() === 0) continue\n      this.addEndpoint(line.getCoordinateN(0))\n      this.addEndpoint(line.getCoordinateN(line.getNumPoints() - 1))\n    }\n    for (let it = this._endpointMap.entrySet().iterator(); it.hasNext();) {\n      const entry = it.next()\n      const counter = entry.getValue()\n      const valence = counter.count\n      if (this._bnRule.isInBoundary(valence)) {\n        bdyPts.add(entry.getKey())\n      }\n    }\n    return CoordinateArrays.toCoordinateArray(bdyPts)\n  }\n\n  addEndpoint (pt) {\n    let counter = this._endpointMap.get(pt)\n    if (counter === null) {\n      counter = new Counter()\n      this._endpointMap.put(pt, counter)\n    }\n    counter.count++\n  }\n\n  getClass () {\n    return BoundaryOp\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nBoundaryOp.constructor_ = function () {\n  this._geom = null\n  this._geomFact = null\n  this._bnRule = null\n  this._endpointMap = null\n  if (arguments.length === 1) {\n    const geom = arguments[0]\n    BoundaryOp.constructor_.call(this, geom, BoundaryNodeRule.MOD2_BOUNDARY_RULE)\n  } else if (arguments.length === 2) {\n    const geom = arguments[0]; const bnRule = arguments[1]\n    this._geom = geom\n    this._geomFact = geom.getFactory()\n    this._bnRule = bnRule\n  }\n}\nclass Counter {\n  constructor () {\n    Counter.constructor_.apply(this, arguments)\n  }\n\n  getClass () {\n    return Counter\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nCounter.constructor_ = function () {\n  this.count = null\n}\n","import Coordinate from '../geom/Coordinate'\nexport default class Length {\n  constructor () {\n    Length.constructor_.apply(this, arguments)\n  }\n\n  static ofLine (pts) {\n    const n = pts.size()\n    if (n <= 1) return 0.0\n    let len = 0.0\n    const p = new Coordinate()\n    pts.getCoordinate(0, p)\n    let x0 = p.x\n    let y0 = p.y\n    for (let i = 1; i < n; i++) {\n      pts.getCoordinate(i, p)\n      const x1 = p.x\n      const y1 = p.y\n      const dx = x1 - x0\n      const dy = y1 - y0\n      len += Math.sqrt(dx * dx + dy * dy)\n      x0 = x1\n      y0 = y1\n    }\n    return len\n  }\n\n  getClass () {\n    return Length\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nLength.constructor_ = function () {}\n","export default function PrintStream () {}\n","export default function StringReader () {}\n","export default function ByteArrayOutputStream () {}\n","export default function IOException () {}\n","export default function LineNumberReader () {}\n","import PrintStream from '../../../../java/io/PrintStream'\nimport StringReader from '../../../../java/io/StringReader'\nimport DecimalFormat from '../../../../java/text/DecimalFormat'\nimport System from '../../../../java/lang/System'\nimport ArrayList from '../../../../java/util/ArrayList'\nimport ByteArrayOutputStream from '../../../../java/io/ByteArrayOutputStream'\nimport Assert from './Assert'\nimport IOException from '../../../../java/io/IOException'\nimport LineNumberReader from '../../../../java/io/LineNumberReader'\nexport default class StringUtil {\n  constructor () {\n    StringUtil.constructor_.apply(this, arguments)\n  }\n\n  static chars (c, n) {\n    const ch = new Array(n).fill(null)\n    for (let i = 0; i < n; i++) {\n      ch[i] = c\n    }\n    return new String(ch)\n  }\n\n  static getStackTrace () {\n    if (arguments.length === 1) {\n      const t = arguments[0]\n      const os = new ByteArrayOutputStream()\n      const ps = new PrintStream(os)\n      t.printStackTrace(ps)\n      return os.toString()\n    } else if (arguments.length === 2) {\n      const t = arguments[0]; const depth = arguments[1]\n      let stackTrace = ''\n      const stringReader = new StringReader(StringUtil.getStackTrace(t))\n      const lineNumberReader = new LineNumberReader(stringReader)\n      for (let i = 0; i < depth; i++) {\n        try {\n          stackTrace += lineNumberReader.readLine() + StringUtil.NEWLINE\n        } catch (e) {\n          if (e instanceof IOException) {\n            Assert.shouldNeverReachHere()\n          } else throw e\n        } finally {}\n      }\n      return stackTrace\n    }\n  }\n\n  static split (s, separator) {\n    const separatorlen = separator.length\n    const tokenList = new ArrayList()\n    let tmpString = '' + s\n    let pos = tmpString.indexOf(separator)\n    while (pos >= 0) {\n      const token = tmpString.substring(0, pos)\n      tokenList.add(token)\n      tmpString = tmpString.substring(pos + separatorlen)\n      pos = tmpString.indexOf(separator)\n    }\n    if (tmpString.length > 0) tokenList.add(tmpString)\n    const res = new Array(tokenList.size()).fill(null)\n    for (let i = 0; i < res.length; i++) {\n      res[i] = tokenList.get(i)\n    }\n    return res\n  }\n\n  static toString () {\n    if (arguments.length === 1 && typeof arguments[0] === 'number') {\n      const d = arguments[0]\n      return StringUtil.SIMPLE_ORDINATE_FORMAT.format(d)\n    }\n  }\n\n  static spaces (n) {\n    return StringUtil.chars(' ', n)\n  }\n\n  getClass () {\n    return StringUtil\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nStringUtil.constructor_ = function () {}\nStringUtil.NEWLINE = System.getProperty('line.separator')\nStringUtil.SIMPLE_ORDINATE_FORMAT = new DecimalFormat('0.#')\n","export default function StringBuilder (str) {\n  this.str = str\n}\n\nStringBuilder.prototype.append = function (e) {\n  this.str += e\n}\n\nStringBuilder.prototype.setCharAt = function (i, c) {\n  this.str = this.str.substr(0, i) + c + this.str.substr(i + 1)\n}\n\nStringBuilder.prototype.toString = function (e) {\n  return this.str\n}\n","export default function DecimalFormat () {}\n","import hasInterface from '../../../../hasInterface'\nimport StringUtil from '../util/StringUtil'\nimport Double from '../../../../java/lang/Double'\nimport CoordinateSequence from './CoordinateSequence'\nimport StringBuilder from '../../../../java/lang/StringBuilder'\nexport default class CoordinateSequences {\n  constructor () {\n    CoordinateSequences.constructor_.apply(this, arguments)\n  }\n\n  static copyCoord (src, srcPos, dest, destPos) {\n    const minDim = Math.min(src.getDimension(), dest.getDimension())\n    for (let dim = 0; dim < minDim; dim++) {\n      dest.setOrdinate(destPos, dim, src.getOrdinate(srcPos, dim))\n    }\n  }\n\n  static isRing (seq) {\n    const n = seq.size()\n    if (n === 0) return true\n    if (n <= 3) return false\n    return seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y)\n  }\n\n  static isEqual (cs1, cs2) {\n    const cs1Size = cs1.size()\n    const cs2Size = cs2.size()\n    if (cs1Size !== cs2Size) return false\n    const dim = Math.min(cs1.getDimension(), cs2.getDimension())\n    for (let i = 0; i < cs1Size; i++) {\n      for (let d = 0; d < dim; d++) {\n        const v1 = cs1.getOrdinate(i, d)\n        const v2 = cs2.getOrdinate(i, d)\n        if (cs1.getOrdinate(i, d) === cs2.getOrdinate(i, d)) continue\n        if (Double.isNaN(v1) && Double.isNaN(v2)) continue\n        return false\n      }\n    }\n    return true\n  }\n\n  static extend (fact, seq, size) {\n    const newseq = fact.create(size, seq.getDimension())\n    const n = seq.size()\n    CoordinateSequences.copy(seq, 0, newseq, 0, n)\n    if (n > 0) {\n      for (let i = n; i < size; i++) CoordinateSequences.copy(seq, n - 1, newseq, i, 1)\n    }\n    return newseq\n  }\n\n  static reverse (seq) {\n    const last = seq.size() - 1\n    const mid = Math.trunc(last / 2)\n    for (let i = 0; i <= mid; i++) {\n      CoordinateSequences.swap(seq, i, last - i)\n    }\n  }\n\n  static swap (seq, i, j) {\n    if (i === j) return null\n    for (let dim = 0; dim < seq.getDimension(); dim++) {\n      const tmp = seq.getOrdinate(i, dim)\n      seq.setOrdinate(i, dim, seq.getOrdinate(j, dim))\n      seq.setOrdinate(j, dim, tmp)\n    }\n  }\n\n  static copy (src, srcPos, dest, destPos, length) {\n    for (let i = 0; i < length; i++) {\n      CoordinateSequences.copyCoord(src, srcPos + i, dest, destPos + i)\n    }\n  }\n\n  static toString () {\n    if (arguments.length === 1 && hasInterface(arguments[0], CoordinateSequence)) {\n      const cs = arguments[0]\n      const size = cs.size()\n      if (size === 0) return '()'\n      const dim = cs.getDimension()\n      const builder = new StringBuilder()\n      builder.append('(')\n      for (let i = 0; i < size; i++) {\n        if (i > 0) builder.append(' ')\n        for (let d = 0; d < dim; d++) {\n          if (d > 0) builder.append(',')\n          builder.append(StringUtil.toString(cs.getOrdinate(i, d)))\n        }\n      }\n      builder.append(')')\n      return builder.toString()\n    }\n  }\n\n  static ensureValidRing (fact, seq) {\n    const n = seq.size()\n    if (n === 0) return seq\n    if (n <= 3) return CoordinateSequences.createClosedRing(fact, seq, 4)\n    const isClosed = seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y)\n    if (isClosed) return seq\n    return CoordinateSequences.createClosedRing(fact, seq, n + 1)\n  }\n\n  static createClosedRing (fact, seq, size) {\n    const newseq = fact.create(size, seq.getDimension())\n    const n = seq.size()\n    CoordinateSequences.copy(seq, 0, newseq, 0, n)\n    for (let i = n; i < size; i++) CoordinateSequences.copy(seq, 0, newseq, i, 1)\n    return newseq\n  }\n\n  getClass () {\n    return CoordinateSequences\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nCoordinateSequences.constructor_ = function () {}\n","import Geometry from './Geometry'\nimport CoordinateFilter from './CoordinateFilter'\nimport hasInterface from '../../../../hasInterface'\nimport BoundaryOp from '../operation/BoundaryOp'\nimport Length from '../algorithm/Length'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException'\nimport Lineal from './Lineal'\nimport CoordinateSequences from './CoordinateSequences'\nimport GeometryComponentFilter from './GeometryComponentFilter'\nimport Dimension from './Dimension'\nimport GeometryFilter from './GeometryFilter'\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter'\nimport Envelope from './Envelope'\nexport default class LineString extends Geometry {\n  constructor () {\n    super()\n    LineString.constructor_.apply(this, arguments)\n  }\n\n  computeEnvelopeInternal () {\n    if (this.isEmpty()) {\n      return new Envelope()\n    }\n    return this._points.expandEnvelope(new Envelope())\n  }\n\n  isRing () {\n    return this.isClosed() && this.isSimple()\n  }\n\n  getCoordinates () {\n    return this._points.toCoordinateArray()\n  }\n\n  equalsExact () {\n    if (arguments.length === 2 && (typeof arguments[1] === 'number' && arguments[0] instanceof Geometry)) {\n      const other = arguments[0]; const tolerance = arguments[1]\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      const otherLineString = other\n      if (this._points.size() !== otherLineString._points.size()) {\n        return false\n      }\n      for (let i = 0; i < this._points.size(); i++) {\n        if (!this.equal(this._points.getCoordinate(i), otherLineString._points.getCoordinate(i), tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else return super.equalsExact.apply(this, arguments)\n  }\n\n  normalize () {\n    for (let i = 0; i < Math.trunc(this._points.size() / 2); i++) {\n      const j = this._points.size() - 1 - i\n      if (!this._points.getCoordinate(i).equals(this._points.getCoordinate(j))) {\n        if (this._points.getCoordinate(i).compareTo(this._points.getCoordinate(j)) > 0) {\n          const copy = this._points.copy()\n          CoordinateSequences.reverse(copy)\n          this._points = copy\n        }\n        return null\n      }\n    }\n  }\n\n  getCoordinate () {\n    if (this.isEmpty()) return null\n    return this._points.getCoordinate(0)\n  }\n\n  getBoundaryDimension () {\n    if (this.isClosed()) {\n      return Dimension.FALSE\n    }\n    return 0\n  }\n\n  isClosed () {\n    if (this.isEmpty()) {\n      return false\n    }\n    return this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints() - 1))\n  }\n\n  getEndPoint () {\n    if (this.isEmpty()) {\n      return null\n    }\n    return this.getPointN(this.getNumPoints() - 1)\n  }\n\n  getTypeCode () {\n    return Geometry.TYPECODE_LINESTRING\n  }\n\n  getDimension () {\n    return 1\n  }\n\n  getLength () {\n    return Length.ofLine(this._points)\n  }\n\n  getNumPoints () {\n    return this._points.size()\n  }\n\n  reverse () {\n    const seq = this._points.copy()\n    CoordinateSequences.reverse(seq)\n    const revLine = this.getFactory().createLineString(seq)\n    return revLine\n  }\n\n  compareToSameClass () {\n    if (arguments.length === 1) {\n      const o = arguments[0]\n      const line = o\n      let i = 0\n      let j = 0\n      while (i < this._points.size() && j < line._points.size()) {\n        const comparison = this._points.getCoordinate(i).compareTo(line._points.getCoordinate(j))\n        if (comparison !== 0) {\n          return comparison\n        }\n        i++\n        j++\n      }\n      if (i < this._points.size()) {\n        return 1\n      }\n      if (j < line._points.size()) {\n        return -1\n      }\n      return 0\n    } else if (arguments.length === 2) {\n      const o = arguments[0]; const comp = arguments[1]\n      const line = o\n      return comp.compare(this._points, line._points)\n    }\n  }\n\n  apply () {\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      const filter = arguments[0]\n      for (let i = 0; i < this._points.size(); i++) {\n        filter.filter(this._points.getCoordinate(i))\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      const filter = arguments[0]\n      if (this._points.size() === 0) return null\n      for (let i = 0; i < this._points.size(); i++) {\n        filter.filter(this._points, i)\n        if (filter.isDone()) break\n      }\n      if (filter.isGeometryChanged()) this.geometryChanged()\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n    }\n  }\n\n  getBoundary () {\n    return new BoundaryOp(this).getBoundary()\n  }\n\n  isEquivalentClass (other) {\n    return other instanceof LineString\n  }\n\n  getCoordinateN (n) {\n    return this._points.getCoordinate(n)\n  }\n\n  getGeometryType () {\n    return Geometry.TYPENAME_LINESTRING\n  }\n\n  copy () {\n    return new LineString(this._points.copy(), this._factory)\n  }\n\n  getCoordinateSequence () {\n    return this._points\n  }\n\n  isEmpty () {\n    return this._points.size() === 0\n  }\n\n  init (points) {\n    if (points === null) {\n      points = this.getFactory().getCoordinateSequenceFactory().create([])\n    }\n    if (points.size() === 1) {\n      throw new IllegalArgumentException('Invalid number of points in LineString (found ' + points.size() + ' - must be 0 or >= 2)')\n    }\n    this._points = points\n  }\n\n  isCoordinate (pt) {\n    for (let i = 0; i < this._points.size(); i++) {\n      if (this._points.getCoordinate(i).equals(pt)) {\n        return true\n      }\n    }\n    return false\n  }\n\n  getStartPoint () {\n    if (this.isEmpty()) {\n      return null\n    }\n    return this.getPointN(0)\n  }\n\n  getPointN (n) {\n    return this.getFactory().createPoint(this._points.getCoordinate(n))\n  }\n\n  getClass () {\n    return LineString\n  }\n\n  get interfaces_ () {\n    return [Lineal]\n  }\n}\nLineString.constructor_ = function () {\n  this._points = null\n  if (arguments.length === 0) {} else if (arguments.length === 2) {\n    const points = arguments[0]; const factory = arguments[1]\n    Geometry.constructor_.call(this, factory)\n    this.init(points)\n  }\n}\nLineString.serialVersionUID = 3110669828065365560\n","export default class Puntal {\n  constructor () {\n    Puntal.constructor_.apply(this, arguments)\n  }\n\n  getClass () {\n    return Puntal\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nPuntal.constructor_ = function () {}\n","import Geometry from './Geometry'\nimport CoordinateFilter from './CoordinateFilter'\nimport hasInterface from '../../../../hasInterface'\nimport GeometryComponentFilter from './GeometryComponentFilter'\nimport Dimension from './Dimension'\nimport GeometryFilter from './GeometryFilter'\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter'\nimport Puntal from './Puntal'\nimport Envelope from './Envelope'\nimport Assert from '../util/Assert'\nexport default class Point extends Geometry {\n  constructor () {\n    super()\n    Point.constructor_.apply(this, arguments)\n  }\n\n  computeEnvelopeInternal () {\n    if (this.isEmpty()) {\n      return new Envelope()\n    }\n    const env = new Envelope()\n    env.expandToInclude(this._coordinates.getX(0), this._coordinates.getY(0))\n    return env\n  }\n\n  getCoordinates () {\n    return this.isEmpty() ? [] : [this.getCoordinate()]\n  }\n\n  equalsExact () {\n    if (arguments.length === 2 && (typeof arguments[1] === 'number' && arguments[0] instanceof Geometry)) {\n      const other = arguments[0]; const tolerance = arguments[1]\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      if (this.isEmpty() && other.isEmpty()) {\n        return true\n      }\n      if (this.isEmpty() !== other.isEmpty()) {\n        return false\n      }\n      return this.equal(other.getCoordinate(), this.getCoordinate(), tolerance)\n    } else return super.equalsExact.apply(this, arguments)\n  }\n\n  normalize () {}\n  getCoordinate () {\n    return this._coordinates.size() !== 0 ? this._coordinates.getCoordinate(0) : null\n  }\n\n  getBoundaryDimension () {\n    return Dimension.FALSE\n  }\n\n  getTypeCode () {\n    return Geometry.TYPECODE_POINT\n  }\n\n  getDimension () {\n    return 0\n  }\n\n  getNumPoints () {\n    return this.isEmpty() ? 0 : 1\n  }\n\n  reverse () {\n    return this.copy()\n  }\n\n  getX () {\n    if (this.getCoordinate() === null) {\n      throw new IllegalStateException('getX called on empty Point')\n    }\n    return this.getCoordinate().x\n  }\n\n  compareToSameClass () {\n    if (arguments.length === 1) {\n      const other = arguments[0]\n      const point = other\n      return this.getCoordinate().compareTo(point.getCoordinate())\n    } else if (arguments.length === 2) {\n      const other = arguments[0]; const comp = arguments[1]\n      const point = other\n      return comp.compare(this._coordinates, point._coordinates)\n    }\n  }\n\n  apply () {\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      const filter = arguments[0]\n      if (this.isEmpty()) {\n        return null\n      }\n      filter.filter(this.getCoordinate())\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      const filter = arguments[0]\n      if (this.isEmpty()) return null\n      filter.filter(this._coordinates, 0)\n      if (filter.isGeometryChanged()) this.geometryChanged()\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n    }\n  }\n\n  getBoundary () {\n    return this.getFactory().createGeometryCollection()\n  }\n\n  getGeometryType () {\n    return Geometry.TYPENAME_POINT\n  }\n\n  copy () {\n    return new Point(this._coordinates.copy(), this._factory)\n  }\n\n  getCoordinateSequence () {\n    return this._coordinates\n  }\n\n  getY () {\n    if (this.getCoordinate() === null) {\n      throw new IllegalStateException('getY called on empty Point')\n    }\n    return this.getCoordinate().y\n  }\n\n  isEmpty () {\n    return this._coordinates.size() === 0\n  }\n\n  init (coordinates) {\n    if (coordinates === null) {\n      coordinates = this.getFactory().getCoordinateSequenceFactory().create([])\n    }\n    Assert.isTrue(coordinates.size() <= 1)\n    this._coordinates = coordinates\n  }\n\n  isSimple () {\n    return true\n  }\n\n  getClass () {\n    return Point\n  }\n\n  get interfaces_ () {\n    return [Puntal]\n  }\n}\nPoint.constructor_ = function () {\n  this._coordinates = null\n  const coordinates = arguments[0]; const factory = arguments[1]\n  Geometry.constructor_.call(this, factory)\n  this.init(coordinates)\n}\nPoint.serialVersionUID = 4902022702746614570\n","import hasInterface from '../../../../hasInterface'\nimport Coordinate from '../geom/Coordinate'\nimport CoordinateSequence from '../geom/CoordinateSequence'\nexport default class Area {\n  constructor () {\n    Area.constructor_.apply(this, arguments)\n  }\n\n  static ofRing () {\n    if (arguments[0] instanceof Array) {\n      const ring = arguments[0]\n      return Math.abs(Area.ofRingSigned(ring))\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      const ring = arguments[0]\n      return Math.abs(Area.ofRingSigned(ring))\n    }\n  }\n\n  static ofRingSigned () {\n    if (arguments[0] instanceof Array) {\n      const ring = arguments[0]\n      if (ring.length < 3) return 0.0\n      let sum = 0.0\n      const x0 = ring[0].x\n      for (let i = 1; i < ring.length - 1; i++) {\n        const x = ring[i].x - x0\n        const y1 = ring[i + 1].y\n        const y2 = ring[i - 1].y\n        sum += x * (y2 - y1)\n      }\n      return sum / 2.0\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      const ring = arguments[0]\n      const n = ring.size()\n      if (n < 3) return 0.0\n      const p0 = new Coordinate()\n      const p1 = new Coordinate()\n      const p2 = new Coordinate()\n      ring.getCoordinate(0, p1)\n      ring.getCoordinate(1, p2)\n      const x0 = p1.x\n      p2.x -= x0\n      let sum = 0.0\n      for (let i = 1; i < n - 1; i++) {\n        p0.y = p1.y\n        p1.x = p2.x\n        p1.y = p2.y\n        ring.getCoordinate(i + 1, p2)\n        p2.x -= x0\n        sum += p1.x * (p0.y - p2.y)\n      }\n      return sum / 2.0\n    }\n  }\n\n  getClass () {\n    return Area\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nArea.constructor_ = function () {}\n","export default class Polygonal {\n  constructor () {\n    Polygonal.constructor_.apply(this, arguments)\n  }\n\n  getClass () {\n    return Polygonal\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nPolygonal.constructor_ = function () {}\n","import Area from '../algorithm/Area'\nimport Geometry from './Geometry'\nimport Arrays from '../../../../java/util/Arrays'\nimport CoordinateFilter from './CoordinateFilter'\nimport hasInterface from '../../../../hasInterface'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException'\nimport Orientation from '../algorithm/Orientation'\nimport System from '../../../../java/lang/System'\nimport GeometryComponentFilter from './GeometryComponentFilter'\nimport CoordinateArrays from './CoordinateArrays'\nimport Polygonal from './Polygonal'\nimport GeometryFilter from './GeometryFilter'\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter'\nexport default class Polygon extends Geometry {\n  constructor () {\n    super()\n    Polygon.constructor_.apply(this, arguments)\n  }\n\n  computeEnvelopeInternal () {\n    return this._shell.getEnvelopeInternal()\n  }\n\n  getCoordinates () {\n    if (this.isEmpty()) {\n      return []\n    }\n    const coordinates = new Array(this.getNumPoints()).fill(null)\n    let k = -1\n    const shellCoordinates = this._shell.getCoordinates()\n    for (let x = 0; x < shellCoordinates.length; x++) {\n      k++\n      coordinates[k] = shellCoordinates[x]\n    }\n    for (let i = 0; i < this._holes.length; i++) {\n      const childCoordinates = this._holes[i].getCoordinates()\n      for (let j = 0; j < childCoordinates.length; j++) {\n        k++\n        coordinates[k] = childCoordinates[j]\n      }\n    }\n    return coordinates\n  }\n\n  getArea () {\n    let area = 0.0\n    area += Area.ofRing(this._shell.getCoordinateSequence())\n    for (let i = 0; i < this._holes.length; i++) {\n      area -= Area.ofRing(this._holes[i].getCoordinateSequence())\n    }\n    return area\n  }\n\n  isRectangle () {\n    if (this.getNumInteriorRing() !== 0) return false\n    if (this._shell === null) return false\n    if (this._shell.getNumPoints() !== 5) return false\n    const seq = this._shell.getCoordinateSequence()\n    const env = this.getEnvelopeInternal()\n    for (let i = 0; i < 5; i++) {\n      const x = seq.getX(i)\n      if (!(x === env.getMinX() || x === env.getMaxX())) return false\n      const y = seq.getY(i)\n      if (!(y === env.getMinY() || y === env.getMaxY())) return false\n    }\n    let prevX = seq.getX(0)\n    let prevY = seq.getY(0)\n    for (let i = 1; i <= 4; i++) {\n      const x = seq.getX(i)\n      const y = seq.getY(i)\n      const xChanged = x !== prevX\n      const yChanged = y !== prevY\n      if (xChanged === yChanged) return false\n      prevX = x\n      prevY = y\n    }\n    return true\n  }\n\n  equalsExact () {\n    if (arguments.length === 2 && (typeof arguments[1] === 'number' && arguments[0] instanceof Geometry)) {\n      const other = arguments[0]; const tolerance = arguments[1]\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      const otherPolygon = other\n      const thisShell = this._shell\n      const otherPolygonShell = otherPolygon._shell\n      if (!thisShell.equalsExact(otherPolygonShell, tolerance)) {\n        return false\n      }\n      if (this._holes.length !== otherPolygon._holes.length) {\n        return false\n      }\n      for (let i = 0; i < this._holes.length; i++) {\n        if (!this._holes[i].equalsExact(otherPolygon._holes[i], tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else return super.equalsExact.apply(this, arguments)\n  }\n\n  normalize () {\n    if (arguments.length === 0) {\n      this.normalize(this._shell, true)\n      for (let i = 0; i < this._holes.length; i++) {\n        this.normalize(this._holes[i], false)\n      }\n      Arrays.sort(this._holes)\n    } else if (arguments.length === 2) {\n      const ring = arguments[0]; const clockwise = arguments[1]\n      if (ring.isEmpty()) {\n        return null\n      }\n      const uniqueCoordinates = new Array(ring.getCoordinates().length - 1).fill(null)\n      System.arraycopy(ring.getCoordinates(), 0, uniqueCoordinates, 0, uniqueCoordinates.length)\n      const minCoordinate = CoordinateArrays.minCoordinate(ring.getCoordinates())\n      CoordinateArrays.scroll(uniqueCoordinates, minCoordinate)\n      System.arraycopy(uniqueCoordinates, 0, ring.getCoordinates(), 0, uniqueCoordinates.length)\n      ring.getCoordinates()[uniqueCoordinates.length] = uniqueCoordinates[0]\n      if (Orientation.isCCW(ring.getCoordinates()) === clockwise) {\n        CoordinateArrays.reverse(ring.getCoordinates())\n      }\n    }\n  }\n\n  getCoordinate () {\n    return this._shell.getCoordinate()\n  }\n\n  getNumInteriorRing () {\n    return this._holes.length\n  }\n\n  getBoundaryDimension () {\n    return 1\n  }\n\n  getTypeCode () {\n    return Geometry.TYPECODE_POLYGON\n  }\n\n  getDimension () {\n    return 2\n  }\n\n  getLength () {\n    let len = 0.0\n    len += this._shell.getLength()\n    for (let i = 0; i < this._holes.length; i++) {\n      len += this._holes[i].getLength()\n    }\n    return len\n  }\n\n  getNumPoints () {\n    let numPoints = this._shell.getNumPoints()\n    for (let i = 0; i < this._holes.length; i++) {\n      numPoints += this._holes[i].getNumPoints()\n    }\n    return numPoints\n  }\n\n  reverse () {\n    const poly = this.copy()\n    poly._shell = this._shell.copy().reverse()\n    poly._holes = new Array(this._holes.length).fill(null)\n    for (let i = 0; i < this._holes.length; i++) {\n      poly._holes[i] = this._holes[i].copy().reverse()\n    }\n    return poly\n  }\n\n  convexHull () {\n    return this.getExteriorRing().convexHull()\n  }\n\n  compareToSameClass () {\n    if (arguments.length === 1) {\n      const o = arguments[0]\n      const thisShell = this._shell\n      const otherShell = o._shell\n      return thisShell.compareToSameClass(otherShell)\n    } else if (arguments.length === 2) {\n      const o = arguments[0]; const comp = arguments[1]\n      const poly = o\n      const thisShell = this._shell\n      const otherShell = poly._shell\n      const shellComp = thisShell.compareToSameClass(otherShell, comp)\n      if (shellComp !== 0) return shellComp\n      const nHole1 = this.getNumInteriorRing()\n      const nHole2 = poly.getNumInteriorRing()\n      let i = 0\n      while (i < nHole1 && i < nHole2) {\n        const thisHole = this.getInteriorRingN(i)\n        const otherHole = poly.getInteriorRingN(i)\n        const holeComp = thisHole.compareToSameClass(otherHole, comp)\n        if (holeComp !== 0) return holeComp\n        i++\n      }\n      if (i < nHole1) return 1\n      if (i < nHole2) return -1\n      return 0\n    }\n  }\n\n  apply () {\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      const filter = arguments[0]\n      this._shell.apply(filter)\n      for (let i = 0; i < this._holes.length; i++) {\n        this._holes[i].apply(filter)\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      const filter = arguments[0]\n      this._shell.apply(filter)\n      if (!filter.isDone()) {\n        for (let i = 0; i < this._holes.length; i++) {\n          this._holes[i].apply(filter)\n          if (filter.isDone()) break\n        }\n      }\n      if (filter.isGeometryChanged()) this.geometryChanged()\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n      this._shell.apply(filter)\n      for (let i = 0; i < this._holes.length; i++) {\n        this._holes[i].apply(filter)\n      }\n    }\n  }\n\n  getBoundary () {\n    if (this.isEmpty()) {\n      return this.getFactory().createMultiLineString()\n    }\n    const rings = new Array(this._holes.length + 1).fill(null)\n    rings[0] = this._shell\n    for (let i = 0; i < this._holes.length; i++) {\n      rings[i + 1] = this._holes[i]\n    }\n    if (rings.length <= 1) return this.getFactory().createLinearRing(rings[0].getCoordinateSequence())\n    return this.getFactory().createMultiLineString(rings)\n  }\n\n  getGeometryType () {\n    return Geometry.TYPENAME_POLYGON\n  }\n\n  copy () {\n    const shellCopy = this._shell.copy()\n    const holeCopies = new Array(this._holes.length).fill(null)\n    for (let i = 0; i < this._holes.length; i++) {\n      holeCopies[i] = this._holes[i].copy()\n    }\n    return new Polygon(shellCopy, holeCopies, this._factory)\n  }\n\n  getExteriorRing () {\n    return this._shell\n  }\n\n  isEmpty () {\n    return this._shell.isEmpty()\n  }\n\n  getInteriorRingN (n) {\n    return this._holes[n]\n  }\n\n  getClass () {\n    return Polygon\n  }\n\n  get interfaces_ () {\n    return [Polygonal]\n  }\n}\nPolygon.constructor_ = function () {\n  this._shell = null\n  this._holes = null\n  let shell = arguments[0]; let holes = arguments[1]; const factory = arguments[2]\n  Geometry.constructor_.call(this, factory)\n  if (shell === null) {\n    shell = this.getFactory().createLinearRing()\n  }\n  if (holes === null) {\n    holes = []\n  }\n  if (Geometry.hasNullElements(holes)) {\n    throw new IllegalArgumentException('holes must not contain null elements')\n  }\n  if (shell.isEmpty() && Geometry.hasNonEmptyElements(holes)) {\n    throw new IllegalArgumentException('shell is empty but holes are not')\n  }\n  this._shell = shell\n  this._holes = holes\n}\nPolygon.serialVersionUID = -3494792200821764533\n","import Geometry from './Geometry'\nimport GeometryCollection from './GeometryCollection'\nimport Dimension from './Dimension'\nimport Puntal from './Puntal'\nexport default class MultiPoint extends GeometryCollection {\n  constructor () {\n    super()\n    MultiPoint.constructor_.apply(this, arguments)\n  }\n\n  isValid () {\n    return true\n  }\n\n  equalsExact () {\n    if (arguments.length === 2 && (typeof arguments[1] === 'number' && arguments[0] instanceof Geometry)) {\n      const other = arguments[0]; const tolerance = arguments[1]\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return super.equalsExact.call(this, other, tolerance)\n    } else return super.equalsExact.apply(this, arguments)\n  }\n\n  getCoordinate () {\n    if (arguments.length === 1 && Number.isInteger(arguments[0])) {\n      const n = arguments[0]\n      return this._geometries[n].getCoordinate()\n    } else return super.getCoordinate.apply(this, arguments)\n  }\n\n  getBoundaryDimension () {\n    return Dimension.FALSE\n  }\n\n  getTypeCode () {\n    return Geometry.TYPECODE_MULTIPOINT\n  }\n\n  getDimension () {\n    return 0\n  }\n\n  getBoundary () {\n    return this.getFactory().createGeometryCollection()\n  }\n\n  getGeometryType () {\n    return Geometry.TYPENAME_MULTIPOINT\n  }\n\n  copy () {\n    const points = new Array(this._geometries.length).fill(null)\n    for (let i = 0; i < points.length; i++) {\n      points[i] = this._geometries[i].copy()\n    }\n    return new MultiPoint(points, this._factory)\n  }\n\n  getClass () {\n    return MultiPoint\n  }\n\n  get interfaces_ () {\n    return [Puntal]\n  }\n}\nMultiPoint.constructor_ = function () {\n  const points = arguments[0]; const factory = arguments[1]\n  GeometryCollection.constructor_.call(this, points, factory)\n}\nMultiPoint.serialVersionUID = -8048474874175355449\n","import LineString from './LineString'\nimport Geometry from './Geometry'\nimport hasInterface from '../../../../hasInterface'\nimport GeometryFactory from './GeometryFactory'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException'\nimport CoordinateSequences from './CoordinateSequences'\nimport CoordinateSequence from './CoordinateSequence'\nimport Dimension from './Dimension'\nexport default class LinearRing extends LineString {\n  constructor () {\n    super()\n    LinearRing.constructor_.apply(this, arguments)\n  }\n\n  getBoundaryDimension () {\n    return Dimension.FALSE\n  }\n\n  isClosed () {\n    if (this.isEmpty()) {\n      return true\n    }\n    return super.isClosed.call(this)\n  }\n\n  getTypeCode () {\n    return Geometry.TYPECODE_LINEARRING\n  }\n\n  reverse () {\n    const seq = this._points.copy()\n    CoordinateSequences.reverse(seq)\n    const rev = this.getFactory().createLinearRing(seq)\n    return rev\n  }\n\n  validateConstruction () {\n    if (!this.isEmpty() && !super.isClosed.call(this)) {\n      throw new IllegalArgumentException('Points of LinearRing do not form a closed linestring')\n    }\n    if (this.getCoordinateSequence().size() >= 1 && this.getCoordinateSequence().size() < LinearRing.MINIMUM_VALID_SIZE) {\n      throw new IllegalArgumentException('Invalid number of points in LinearRing (found ' + this.getCoordinateSequence().size() + ' - must be 0 or >= 4)')\n    }\n  }\n\n  getGeometryType () {\n    return Geometry.TYPENAME_LINEARRING\n  }\n\n  copy () {\n    return new LinearRing(this._points.copy(), this._factory)\n  }\n\n  getClass () {\n    return LinearRing\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nLinearRing.constructor_ = function () {\n  if (arguments[0] instanceof Array && arguments[1] instanceof GeometryFactory) {\n    const points = arguments[0]; const factory = arguments[1]\n    LinearRing.constructor_.call(this, factory.getCoordinateSequenceFactory().create(points), factory)\n  } else if (hasInterface(arguments[0], CoordinateSequence) && arguments[1] instanceof GeometryFactory) {\n    const points = arguments[0]; const factory = arguments[1]\n    LineString.constructor_.call(this, points, factory)\n    this.validateConstruction()\n  }\n}\nLinearRing.MINIMUM_VALID_SIZE = 4\nLinearRing.serialVersionUID = -4261142084085851829\n","import Geometry from './Geometry'\nimport GeometryCollection from './GeometryCollection'\nimport Polygonal from './Polygonal'\nimport ArrayList from '../../../../java/util/ArrayList'\nexport default class MultiPolygon extends GeometryCollection {\n  constructor () {\n    super()\n    MultiPolygon.constructor_.apply(this, arguments)\n  }\n\n  equalsExact () {\n    if (arguments.length === 2 && (typeof arguments[1] === 'number' && arguments[0] instanceof Geometry)) {\n      const other = arguments[0]; const tolerance = arguments[1]\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return super.equalsExact.call(this, other, tolerance)\n    } else return super.equalsExact.apply(this, arguments)\n  }\n\n  getBoundaryDimension () {\n    return 1\n  }\n\n  getTypeCode () {\n    return Geometry.TYPECODE_MULTIPOLYGON\n  }\n\n  getDimension () {\n    return 2\n  }\n\n  reverse () {\n    const n = this._geometries.length\n    const revGeoms = new Array(n).fill(null)\n    for (let i = 0; i < this._geometries.length; i++) {\n      revGeoms[i] = this._geometries[i].reverse()\n    }\n    return this.getFactory().createMultiPolygon(revGeoms)\n  }\n\n  getBoundary () {\n    if (this.isEmpty()) {\n      return this.getFactory().createMultiLineString()\n    }\n    const allRings = new ArrayList()\n    for (let i = 0; i < this._geometries.length; i++) {\n      const polygon = this._geometries[i]\n      const rings = polygon.getBoundary()\n      for (let j = 0; j < rings.getNumGeometries(); j++) {\n        allRings.add(rings.getGeometryN(j))\n      }\n    }\n    const allRingsArray = new Array(allRings.size()).fill(null)\n    return this.getFactory().createMultiLineString(allRings.toArray(allRingsArray))\n  }\n\n  getGeometryType () {\n    return Geometry.TYPENAME_MULTIPOLYGON\n  }\n\n  copy () {\n    const polygons = new Array(this._geometries.length).fill(null)\n    for (let i = 0; i < polygons.length; i++) {\n      polygons[i] = this._geometries[i].copy()\n    }\n    return new MultiPolygon(polygons, this._factory)\n  }\n\n  getClass () {\n    return MultiPolygon\n  }\n\n  get interfaces_ () {\n    return [Polygonal]\n  }\n}\nMultiPolygon.constructor_ = function () {\n  const polygons = arguments[0]; const factory = arguments[1]\n  GeometryCollection.constructor_.call(this, polygons, factory)\n}\nMultiPolygon.serialVersionUID = -551033529766975875\n","import LineString from '../LineString'\nimport Point from '../Point'\nimport Polygon from '../Polygon'\nimport MultiPoint from '../MultiPoint'\nimport LinearRing from '../LinearRing'\nimport MultiPolygon from '../MultiPolygon'\nimport GeometryCollection from '../GeometryCollection'\nimport ArrayList from '../../../../../java/util/ArrayList'\nimport Assert from '../../util/Assert'\nimport MultiLineString from '../MultiLineString'\nexport default class GeometryEditor {\n  constructor () {\n    GeometryEditor.constructor_.apply(this, arguments)\n  }\n\n  setCopyUserData (isUserDataCopied) {\n    this._isUserDataCopied = isUserDataCopied\n  }\n\n  edit (geometry, operation) {\n    if (geometry === null) return null\n    const result = this.editInternal(geometry, operation)\n    if (this._isUserDataCopied) {\n      result.setUserData(geometry.getUserData())\n    }\n    return result\n  }\n\n  editInternal (geometry, operation) {\n    if (this._factory === null) this._factory = geometry.getFactory()\n    if (geometry instanceof GeometryCollection) {\n      return this.editGeometryCollection(geometry, operation)\n    }\n    if (geometry instanceof Polygon) {\n      return this.editPolygon(geometry, operation)\n    }\n    if (geometry instanceof Point) {\n      return operation.edit(geometry, this._factory)\n    }\n    if (geometry instanceof LineString) {\n      return operation.edit(geometry, this._factory)\n    }\n    Assert.shouldNeverReachHere('Unsupported Geometry class: ' + geometry.getClass().getName())\n    return null\n  }\n\n  editGeometryCollection (collection, operation) {\n    const collectionForType = operation.edit(collection, this._factory)\n    const geometries = new ArrayList()\n    for (let i = 0; i < collectionForType.getNumGeometries(); i++) {\n      const geometry = this.edit(collectionForType.getGeometryN(i), operation)\n      if (geometry === null || geometry.isEmpty()) {\n        continue\n      }\n      geometries.add(geometry)\n    }\n    if (collectionForType.getClass() === MultiPoint) {\n      return this._factory.createMultiPoint(geometries.toArray([]))\n    }\n    if (collectionForType.getClass() === MultiLineString) {\n      return this._factory.createMultiLineString(geometries.toArray([]))\n    }\n    if (collectionForType.getClass() === MultiPolygon) {\n      return this._factory.createMultiPolygon(geometries.toArray([]))\n    }\n    return this._factory.createGeometryCollection(geometries.toArray([]))\n  }\n\n  editPolygon (polygon, operation) {\n    let newPolygon = operation.edit(polygon, this._factory)\n    if (newPolygon === null) newPolygon = this._factory.createPolygon()\n    if (newPolygon.isEmpty()) {\n      return newPolygon\n    }\n    const shell = this.edit(newPolygon.getExteriorRing(), operation)\n    if (shell === null || shell.isEmpty()) {\n      return this._factory.createPolygon()\n    }\n    const holes = new ArrayList()\n    for (let i = 0; i < newPolygon.getNumInteriorRing(); i++) {\n      const hole = this.edit(newPolygon.getInteriorRingN(i), operation)\n      if (hole === null || hole.isEmpty()) {\n        continue\n      }\n      holes.add(hole)\n    }\n    return this._factory.createPolygon(shell, holes.toArray([]))\n  }\n\n  getClass () {\n    return GeometryEditor\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nfunction GeometryEditorOperation () {}\nGeometryEditor.GeometryEditorOperation = GeometryEditorOperation\nclass NoOpGeometryOperation {\n  constructor () {\n    NoOpGeometryOperation.constructor_.apply(this, arguments)\n  }\n\n  edit (geometry, factory) {\n    return geometry\n  }\n\n  getClass () {\n    return NoOpGeometryOperation\n  }\n\n  get interfaces_ () {\n    return [GeometryEditorOperation]\n  }\n}\nNoOpGeometryOperation.constructor_ = function () {}\nclass CoordinateOperation {\n  constructor () {\n    CoordinateOperation.constructor_.apply(this, arguments)\n  }\n\n  edit (geometry, factory) {\n    const coordinates = this.edit(geometry.getCoordinates(), geometry)\n    if (geometry instanceof LinearRing) {\n      if (coordinates === null) return factory.createLinearRing(); else return factory.createLinearRing(coordinates)\n    }\n    if (geometry instanceof LineString) {\n      if (coordinates === null) return factory.createLineString(); else return factory.createLineString(coordinates)\n    }\n    if (geometry instanceof Point) {\n      if (coordinates === null || coordinates.length === 0) return factory.createPoint(); else return factory.createPoint(coordinates[0])\n    }\n    return geometry\n  }\n\n  getClass () {\n    return CoordinateOperation\n  }\n\n  get interfaces_ () {\n    return [GeometryEditorOperation]\n  }\n}\nCoordinateOperation.constructor_ = function () {}\nclass CoordinateSequenceOperation {\n  constructor () {\n    CoordinateSequenceOperation.constructor_.apply(this, arguments)\n  }\n\n  edit (geometry, factory) {\n    if (geometry instanceof LinearRing) {\n      return factory.createLinearRing(this.edit(geometry.getCoordinateSequence(), geometry))\n    }\n    if (geometry instanceof LineString) {\n      return factory.createLineString(this.edit(geometry.getCoordinateSequence(), geometry))\n    }\n    if (geometry instanceof Point) {\n      return factory.createPoint(this.edit(geometry.getCoordinateSequence(), geometry))\n    }\n    return geometry\n  }\n\n  getClass () {\n    return CoordinateSequenceOperation\n  }\n\n  get interfaces_ () {\n    return [GeometryEditorOperation]\n  }\n}\nCoordinateSequenceOperation.constructor_ = function () {}\nGeometryEditor.NoOpGeometryOperation = NoOpGeometryOperation\nGeometryEditor.CoordinateOperation = CoordinateOperation\nGeometryEditor.CoordinateSequenceOperation = CoordinateSequenceOperation\nGeometryEditor.constructor_ = function () {\n  this._factory = null\n  this._isUserDataCopied = false\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    const factory = arguments[0]\n    this._factory = factory\n  }\n}\n","import hasInterface from '../../../../../hasInterface'\nimport Coordinate from '../Coordinate'\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException'\nimport Double from '../../../../../java/lang/Double'\nimport CoordinateSequence from '../CoordinateSequence'\nimport Serializable from '../../../../../java/io/Serializable'\nimport StringBuilder from '../../../../../java/lang/StringBuilder'\nexport default class CoordinateArraySequence {\n  constructor () {\n    CoordinateArraySequence.constructor_.apply(this, arguments)\n  }\n\n  setOrdinate (index, ordinateIndex, value) {\n    switch (ordinateIndex) {\n      case CoordinateSequence.X:\n        this._coordinates[index].x = value\n        break\n      case CoordinateSequence.Y:\n        this._coordinates[index].y = value\n        break\n      case CoordinateSequence.Z:\n        this._coordinates[index].z = value\n        break\n      default:\n        throw new IllegalArgumentException('invalid ordinateIndex')\n    }\n  }\n\n  size () {\n    return this._coordinates.length\n  }\n\n  getOrdinate (index, ordinateIndex) {\n    switch (ordinateIndex) {\n      case CoordinateSequence.X:\n        return this._coordinates[index].x\n      case CoordinateSequence.Y:\n        return this._coordinates[index].y\n      case CoordinateSequence.Z:\n        return this._coordinates[index].z\n    }\n    return Double.NaN\n  }\n\n  getCoordinate () {\n    if (arguments.length === 1) {\n      const i = arguments[0]\n      return this._coordinates[i]\n    } else if (arguments.length === 2) {\n      const index = arguments[0]; const coord = arguments[1]\n      coord.x = this._coordinates[index].x\n      coord.y = this._coordinates[index].y\n      coord.z = this._coordinates[index].z\n    }\n  }\n\n  getCoordinateCopy (i) {\n    return new Coordinate(this._coordinates[i])\n  }\n\n  getDimension () {\n    return this._dimension\n  }\n\n  getX (index) {\n    return this._coordinates[index].x\n  }\n\n  expandEnvelope (env) {\n    for (let i = 0; i < this._coordinates.length; i++) {\n      env.expandToInclude(this._coordinates[i])\n    }\n    return env\n  }\n\n  copy () {\n    const cloneCoordinates = new Array(this.size()).fill(null)\n    for (let i = 0; i < this._coordinates.length; i++) {\n      cloneCoordinates[i] = this._coordinates[i].copy()\n    }\n    return new CoordinateArraySequence(cloneCoordinates, this._dimension)\n  }\n\n  toString () {\n    if (this._coordinates.length > 0) {\n      const strBuilder = new StringBuilder(17 * this._coordinates.length)\n      strBuilder.append('(')\n      strBuilder.append(this._coordinates[0])\n      for (let i = 1; i < this._coordinates.length; i++) {\n        strBuilder.append(', ')\n        strBuilder.append(this._coordinates[i])\n      }\n      strBuilder.append(')')\n      return strBuilder.toString()\n    } else {\n      return '()'\n    }\n  }\n\n  getY (index) {\n    return this._coordinates[index].y\n  }\n\n  toCoordinateArray () {\n    return this._coordinates\n  }\n\n  getClass () {\n    return CoordinateArraySequence\n  }\n\n  get interfaces_ () {\n    return [CoordinateSequence, Serializable]\n  }\n}\nCoordinateArraySequence.constructor_ = function () {\n  this._dimension = 3\n  this._coordinates = null\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      const coordinates = arguments[0]\n      CoordinateArraySequence.constructor_.call(this, coordinates, 3)\n    } else if (Number.isInteger(arguments[0])) {\n      const size = arguments[0]\n      this._coordinates = new Array(size).fill(null)\n      for (let i = 0; i < size; i++) {\n        this._coordinates[i] = new Coordinate()\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      const coordSeq = arguments[0]\n      if (coordSeq === null) {\n        this._coordinates = new Array(0).fill(null)\n        return null\n      }\n      this._dimension = coordSeq.getDimension()\n      this._coordinates = new Array(coordSeq.size()).fill(null)\n      for (let i = 0; i < this._coordinates.length; i++) {\n        this._coordinates[i] = coordSeq.getCoordinateCopy(i)\n      }\n    }\n  } else if (arguments.length === 2) {\n    if (arguments[0] instanceof Array && Number.isInteger(arguments[1])) {\n      const coordinates = arguments[0]; const dimension = arguments[1]\n      this._coordinates = coordinates\n      this._dimension = dimension\n      if (coordinates === null) this._coordinates = new Array(0).fill(null)\n    } else if (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1])) {\n      const size = arguments[0]; const dimension = arguments[1]\n      this._coordinates = new Array(size).fill(null)\n      this._dimension = dimension\n      for (let i = 0; i < size; i++) {\n        this._coordinates[i] = new Coordinate()\n      }\n    }\n  }\n}\nCoordinateArraySequence.serialVersionUID = -915438501601840650\n","import CoordinateSequenceFactory from '../CoordinateSequenceFactory'\nimport hasInterface from '../../../../../hasInterface'\nimport CoordinateArraySequence from './CoordinateArraySequence'\nimport CoordinateSequence from '../CoordinateSequence'\nimport Serializable from '../../../../../java/io/Serializable'\nexport default class CoordinateArraySequenceFactory {\n  constructor () {\n    CoordinateArraySequenceFactory.constructor_.apply(this, arguments)\n  }\n\n  static instance () {\n    return CoordinateArraySequenceFactory.instanceObject\n  }\n\n  readResolve () {\n    return CoordinateArraySequenceFactory.instance()\n  }\n\n  create () {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Array) {\n        const coordinates = arguments[0]\n        return new CoordinateArraySequence(coordinates)\n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        const coordSeq = arguments[0]\n        return new CoordinateArraySequence(coordSeq)\n      }\n    } else if (arguments.length === 2) {\n      const size = arguments[0]; let dimension = arguments[1]\n      if (dimension > 3) dimension = 3\n      if (dimension < 2) return new CoordinateArraySequence(size)\n      return new CoordinateArraySequence(size, dimension)\n    }\n  }\n\n  getClass () {\n    return CoordinateArraySequenceFactory\n  }\n\n  get interfaces_ () {\n    return [CoordinateSequenceFactory, Serializable]\n  }\n}\nCoordinateArraySequenceFactory.constructor_ = function () {}\nCoordinateArraySequenceFactory.serialVersionUID = -4099577099607551657\nCoordinateArraySequenceFactory.instanceObject = new CoordinateArraySequenceFactory()\n","import ArrayList from './ArrayList'\nimport MapInterface from './Map'\nimport HashSet from './HashSet'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html\n *\n * @extends {javascript.util.Map}\n * @constructor\n * @private\n */\nexport default function HashMap () {\n  /**\n   * @type {Object}\n   * @private\n  */\n  this.map_ = new Map()\n}\nHashMap.prototype = new MapInterface()\n\n/**\n * @override\n */\nHashMap.prototype.get = function (key) {\n  return this.map_.get(key) || null\n}\n\n/**\n * @override\n */\nHashMap.prototype.put = function (key, value) {\n  this.map_.set(key, value)\n  return value\n}\n\n/**\n * @override\n */\nHashMap.prototype.values = function () {\n  const arrayList = new ArrayList()\n  const it = this.map_.values()\n  let o = it.next()\n  while (!o.done) {\n    arrayList.add(o.value)\n    o = it.next()\n  }\n  return arrayList\n}\n\n/**\n * @override\n */\nHashMap.prototype.entrySet = function () {\n  const hashSet = new HashSet()\n  this.map_.entries().forEach(entry => hashSet.add(entry))\n  return hashSet\n}\n\n/**\n * @override\n */\nHashMap.prototype.size = function () {\n  return this.map_.size()\n}\n","import HashMap from '../../../../java/util/HashMap'\nimport Coordinate from './Coordinate'\nimport Double from '../../../../java/lang/Double'\nimport Integer from '../../../../java/lang/Integer'\nimport Comparable from '../../../../java/lang/Comparable'\nimport Serializable from '../../../../java/io/Serializable'\nexport default class PrecisionModel {\n  constructor () {\n    PrecisionModel.constructor_.apply(this, arguments)\n  }\n\n  static mostPrecise (pm1, pm2) {\n    if (pm1.compareTo(pm2) >= 0) return pm1\n    return pm2\n  }\n\n  equals (other) {\n    if (!(other instanceof PrecisionModel)) {\n      return false\n    }\n    const otherPrecisionModel = other\n    return this._modelType === otherPrecisionModel._modelType && this._scale === otherPrecisionModel._scale\n  }\n\n  compareTo (o) {\n    const other = o\n    const sigDigits = this.getMaximumSignificantDigits()\n    const otherSigDigits = other.getMaximumSignificantDigits()\n    return new Integer(sigDigits).compareTo(new Integer(otherSigDigits))\n  }\n\n  getScale () {\n    return this._scale\n  }\n\n  isFloating () {\n    return this._modelType === PrecisionModel.FLOATING || this._modelType === PrecisionModel.FLOATING_SINGLE\n  }\n\n  getType () {\n    return this._modelType\n  }\n\n  toString () {\n    let description = 'UNKNOWN'\n    if (this._modelType === PrecisionModel.FLOATING) {\n      description = 'Floating'\n    } else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n      description = 'Floating-Single'\n    } else if (this._modelType === PrecisionModel.FIXED) {\n      description = 'Fixed (Scale=' + this.getScale() + ')'\n    }\n    return description\n  }\n\n  makePrecise () {\n    if (typeof arguments[0] === 'number') {\n      const val = arguments[0]\n      if (Double.isNaN(val)) return val\n      if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n        const floatSingleVal = val\n        return floatSingleVal\n      }\n      if (this._modelType === PrecisionModel.FIXED) {\n        return Math.round(val * this._scale) / this._scale\n      }\n      return val\n    } else if (arguments[0] instanceof Coordinate) {\n      const coord = arguments[0]\n      if (this._modelType === PrecisionModel.FLOATING) return null\n      coord.x = this.makePrecise(coord.x)\n      coord.y = this.makePrecise(coord.y)\n    }\n  }\n\n  getMaximumSignificantDigits () {\n    let maxSigDigits = 16\n    if (this._modelType === PrecisionModel.FLOATING) {\n      maxSigDigits = 16\n    } else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n      maxSigDigits = 6\n    } else if (this._modelType === PrecisionModel.FIXED) {\n      maxSigDigits = 1 + Math.trunc(Math.ceil(Math.log(this.getScale()) / Math.log(10)))\n    }\n    return maxSigDigits\n  }\n\n  setScale (scale) {\n    this._scale = Math.abs(scale)\n  }\n\n  getClass () {\n    return PrecisionModel\n  }\n\n  get interfaces_ () {\n    return [Serializable, Comparable]\n  }\n}\nclass Type {\n  constructor () {\n    Type.constructor_.apply(this, arguments)\n  }\n\n  readResolve () {\n    return Type.nameToTypeMap.get(this._name)\n  }\n\n  toString () {\n    return this._name\n  }\n\n  getClass () {\n    return Type\n  }\n\n  get interfaces_ () {\n    return [Serializable]\n  }\n}\nType.constructor_ = function () {\n  this._name = null\n  const name = arguments[0]\n  this._name = name\n  Type.nameToTypeMap.put(name, this)\n}\nType.serialVersionUID = -5528602631731589822\nType.nameToTypeMap = new HashMap()\nPrecisionModel.Type = Type\nPrecisionModel.constructor_ = function () {\n  this._modelType = null\n  this._scale = null\n  if (arguments.length === 0) {\n    this._modelType = PrecisionModel.FLOATING\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Type) {\n      const modelType = arguments[0]\n      this._modelType = modelType\n      if (modelType === PrecisionModel.FIXED) {\n        this.setScale(1.0)\n      }\n    } else if (typeof arguments[0] === 'number') {\n      const scale = arguments[0]\n      this._modelType = PrecisionModel.FIXED\n      this.setScale(scale)\n    } else if (arguments[0] instanceof PrecisionModel) {\n      const pm = arguments[0]\n      this._modelType = pm._modelType\n      this._scale = pm._scale\n    }\n  }\n}\nPrecisionModel.serialVersionUID = 7777263578777803835\nPrecisionModel.FIXED = new Type('FIXED')\nPrecisionModel.FLOATING = new Type('FLOATING')\nPrecisionModel.FLOATING_SINGLE = new Type('FLOATING SINGLE')\nPrecisionModel.maximumPreciseValue = 9007199254740992.0\n","import CoordinateSequenceFactory from './CoordinateSequenceFactory'\nimport LineString from './LineString'\nimport Geometry from './Geometry'\nimport hasInterface from '../../../../hasInterface'\nimport Coordinate from './Coordinate'\nimport Point from './Point'\nimport Polygon from './Polygon'\nimport MultiPoint from './MultiPoint'\nimport GeometryEditor from './util/GeometryEditor'\nimport LinearRing from './LinearRing'\nimport CoordinateArraySequenceFactory from './impl/CoordinateArraySequenceFactory'\nimport MultiPolygon from './MultiPolygon'\nimport CoordinateSequences from './CoordinateSequences'\nimport CoordinateSequence from './CoordinateSequence'\nimport GeometryCollection from './GeometryCollection'\nimport PrecisionModel from './PrecisionModel'\nimport Serializable from '../../../../java/io/Serializable'\nimport Assert from '../util/Assert'\nimport MultiLineString from './MultiLineString'\nexport default class GeometryFactory {\n  constructor () {\n    GeometryFactory.constructor_.apply(this, arguments)\n  }\n\n  static toMultiPolygonArray (multiPolygons) {\n    const multiPolygonArray = new Array(multiPolygons.size()).fill(null)\n    return multiPolygons.toArray(multiPolygonArray)\n  }\n\n  static toGeometryArray (geometries) {\n    if (geometries === null) return null\n    const geometryArray = new Array(geometries.size()).fill(null)\n    return geometries.toArray(geometryArray)\n  }\n\n  static getDefaultCoordinateSequenceFactory () {\n    return CoordinateArraySequenceFactory.instance()\n  }\n\n  static toMultiLineStringArray (multiLineStrings) {\n    const multiLineStringArray = new Array(multiLineStrings.size()).fill(null)\n    return multiLineStrings.toArray(multiLineStringArray)\n  }\n\n  static toLineStringArray (lineStrings) {\n    const lineStringArray = new Array(lineStrings.size()).fill(null)\n    return lineStrings.toArray(lineStringArray)\n  }\n\n  static toMultiPointArray (multiPoints) {\n    const multiPointArray = new Array(multiPoints.size()).fill(null)\n    return multiPoints.toArray(multiPointArray)\n  }\n\n  static toLinearRingArray (linearRings) {\n    const linearRingArray = new Array(linearRings.size()).fill(null)\n    return linearRings.toArray(linearRingArray)\n  }\n\n  static toPointArray (points) {\n    const pointArray = new Array(points.size()).fill(null)\n    return points.toArray(pointArray)\n  }\n\n  static toPolygonArray (polygons) {\n    const polygonArray = new Array(polygons.size()).fill(null)\n    return polygons.toArray(polygonArray)\n  }\n\n  static createPointFromInternalCoord (coord, exemplar) {\n    exemplar.getPrecisionModel().makePrecise(coord)\n    return exemplar.getFactory().createPoint(coord)\n  }\n\n  toGeometry (envelope) {\n    if (envelope.isNull()) {\n      return this.createPoint()\n    }\n    if (envelope.getMinX() === envelope.getMaxX() && envelope.getMinY() === envelope.getMaxY()) {\n      return this.createPoint(new Coordinate(envelope.getMinX(), envelope.getMinY()))\n    }\n    if (envelope.getMinX() === envelope.getMaxX() || envelope.getMinY() === envelope.getMaxY()) {\n      return this.createLineString([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY())])\n    }\n    return this.createPolygon(this.createLinearRing([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMinY())]), null)\n  }\n\n  createLineString () {\n    if (arguments.length === 0) {\n      return this.createLineString(this.getCoordinateSequenceFactory().create([]))\n    } else if (arguments.length === 1) {\n      if (arguments[0] instanceof Array) {\n        const coordinates = arguments[0]\n        return this.createLineString(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        const coordinates = arguments[0]\n        return new LineString(coordinates, this)\n      }\n    }\n  }\n\n  createMultiLineString () {\n    if (arguments.length === 0) {\n      return new MultiLineString(null, this)\n    } else if (arguments.length === 1) {\n      const lineStrings = arguments[0]\n      return new MultiLineString(lineStrings, this)\n    }\n  }\n\n  buildGeometry (geomList) {\n    let geomClass = null\n    let isHeterogeneous = false\n    let hasGeometryCollection = false\n    for (let i = geomList.iterator(); i.hasNext();) {\n      const geom = i.next()\n      const partClass = geom.getClass()\n      if (geomClass === null) {\n        geomClass = partClass\n      }\n      if (partClass !== geomClass) {\n        isHeterogeneous = true\n      }\n      if (geom instanceof GeometryCollection) hasGeometryCollection = true\n    }\n    if (geomClass === null) {\n      return this.createGeometryCollection()\n    }\n    if (isHeterogeneous || hasGeometryCollection) {\n      return this.createGeometryCollection(GeometryFactory.toGeometryArray(geomList))\n    }\n    const geom0 = geomList.iterator().next()\n    const isCollection = geomList.size() > 1\n    if (isCollection) {\n      if (geom0 instanceof Polygon) {\n        return this.createMultiPolygon(GeometryFactory.toPolygonArray(geomList))\n      } else if (geom0 instanceof LineString) {\n        return this.createMultiLineString(GeometryFactory.toLineStringArray(geomList))\n      } else if (geom0 instanceof Point) {\n        return this.createMultiPoint(GeometryFactory.toPointArray(geomList))\n      }\n      Assert.shouldNeverReachHere('Unhandled class: ' + geom0.getClass().getName())\n    }\n    return geom0\n  }\n\n  createMultiPointFromCoords (coordinates) {\n    return this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n  }\n\n  createPoint () {\n    if (arguments.length === 0) {\n      return this.createPoint(this.getCoordinateSequenceFactory().create([]))\n    } else if (arguments.length === 1) {\n      if (arguments[0] instanceof Coordinate) {\n        const coordinate = arguments[0]\n        return this.createPoint(coordinate !== null ? this.getCoordinateSequenceFactory().create([coordinate]) : null)\n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        const coordinates = arguments[0]\n        return new Point(coordinates, this)\n      }\n    }\n  }\n\n  getCoordinateSequenceFactory () {\n    return this._coordinateSequenceFactory\n  }\n\n  createPolygon () {\n    if (arguments.length === 0) {\n      return this.createPolygon(null, null)\n    } else if (arguments.length === 1) {\n      if (hasInterface(arguments[0], CoordinateSequence)) {\n        const shell = arguments[0]\n        return this.createPolygon(this.createLinearRing(shell))\n      } else if (arguments[0] instanceof Array) {\n        const shell = arguments[0]\n        return this.createPolygon(this.createLinearRing(shell))\n      } else if (arguments[0] instanceof LinearRing) {\n        const shell = arguments[0]\n        return this.createPolygon(shell, null)\n      }\n    } else if (arguments.length === 2) {\n      const shell = arguments[0]; const holes = arguments[1]\n      return new Polygon(shell, holes, this)\n    }\n  }\n\n  getSRID () {\n    return this._SRID\n  }\n\n  createGeometryCollection () {\n    if (arguments.length === 0) {\n      return new GeometryCollection(null, this)\n    } else if (arguments.length === 1) {\n      const geometries = arguments[0]\n      return new GeometryCollection(geometries, this)\n    }\n  }\n\n  createGeometry (g) {\n    const editor = new GeometryEditor(this)\n    return editor.edit(g, new CloneOp(this._coordinateSequenceFactory))\n  }\n\n  getPrecisionModel () {\n    return this._precisionModel\n  }\n\n  createLinearRing () {\n    if (arguments.length === 0) {\n      return this.createLinearRing(this.getCoordinateSequenceFactory().create([]))\n    } else if (arguments.length === 1) {\n      if (arguments[0] instanceof Array) {\n        const coordinates = arguments[0]\n        return this.createLinearRing(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        const coordinates = arguments[0]\n        return new LinearRing(coordinates, this)\n      }\n    }\n  }\n\n  createMultiPolygon () {\n    if (arguments.length === 0) {\n      return new MultiPolygon(null, this)\n    } else if (arguments.length === 1) {\n      const polygons = arguments[0]\n      return new MultiPolygon(polygons, this)\n    }\n  }\n\n  createMultiPoint () {\n    if (arguments.length === 0) {\n      return new MultiPoint(null, this)\n    } else if (arguments.length === 1) {\n      if (arguments[0] instanceof Array) {\n        const point = arguments[0]\n        return new MultiPoint(point, this)\n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        const coordinates = arguments[0]\n        if (coordinates === null) {\n          return this.createMultiPoint(new Array(0).fill(null))\n        }\n        const points = new Array(coordinates.size()).fill(null)\n        for (let i = 0; i < coordinates.size(); i++) {\n          const ptSeq = this.getCoordinateSequenceFactory().create(1, coordinates.getDimension())\n          CoordinateSequences.copy(coordinates, i, ptSeq, 0, 1)\n          points[i] = this.createPoint(ptSeq)\n        }\n        return this.createMultiPoint(points)\n      }\n    }\n  }\n\n  getClass () {\n    return GeometryFactory\n  }\n\n  get interfaces_ () {\n    return [Serializable]\n  }\n}\nclass CloneOp extends GeometryEditor.CoordinateSequenceOperation {\n  constructor () {\n    super()\n    CloneOp.constructor_.apply(this, arguments)\n  }\n\n  edit () {\n    if (arguments.length === 2 && (arguments[1] instanceof Geometry && hasInterface(arguments[0], CoordinateSequence))) {\n      const coordSeq = arguments[0]; const geometry = arguments[1]\n      return this.coordinateSequenceFactory.create(coordSeq)\n    } else return super.edit.apply(this, arguments)\n  }\n\n  getClass () {\n    return CloneOp\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nCloneOp.constructor_ = function () {\n  this.coordinateSequenceFactory = null\n  const coordinateSequenceFactory = arguments[0]\n  this.coordinateSequenceFactory = coordinateSequenceFactory\n}\nGeometryFactory.CloneOp = CloneOp\nGeometryFactory.constructor_ = function () {\n  this._precisionModel = null\n  this._coordinateSequenceFactory = null\n  this._SRID = null\n  if (arguments.length === 0) {\n    GeometryFactory.constructor_.call(this, new PrecisionModel(), 0)\n  } else if (arguments.length === 1) {\n    if (hasInterface(arguments[0], CoordinateSequenceFactory)) {\n      const coordinateSequenceFactory = arguments[0]\n      GeometryFactory.constructor_.call(this, new PrecisionModel(), 0, coordinateSequenceFactory)\n    } else if (arguments[0] instanceof PrecisionModel) {\n      const precisionModel = arguments[0]\n      GeometryFactory.constructor_.call(this, precisionModel, 0, GeometryFactory.getDefaultCoordinateSequenceFactory())\n    }\n  } else if (arguments.length === 2) {\n    const precisionModel = arguments[0]; const SRID = arguments[1]\n    GeometryFactory.constructor_.call(this, precisionModel, SRID, GeometryFactory.getDefaultCoordinateSequenceFactory())\n  } else if (arguments.length === 3) {\n    const precisionModel = arguments[0]; const SRID = arguments[1]; const coordinateSequenceFactory = arguments[2]\n    this._precisionModel = precisionModel\n    this._coordinateSequenceFactory = coordinateSequenceFactory\n    this._SRID = SRID\n  }\n}\nGeometryFactory.serialVersionUID = -6820524753094095635\n","import Coordinate from '../geom/Coordinate'\nimport GeometryFactory from '../geom/GeometryFactory'\n\nconst regExes = {\n  typeStr: /^\\s*(\\w+)\\s*\\(\\s*(.*)\\s*\\)\\s*$/,\n  emptyTypeStr: /^\\s*(\\w+)\\s*EMPTY\\s*$/,\n  spaces: /\\s+/,\n  parenComma: /\\)\\s*,\\s*\\(/,\n  doubleParenComma: /\\)\\s*\\)\\s*,\\s*\\(\\s*\\(/, // can't use {2} here\n  trimParens: /^\\s*\\(?(.*?)\\)?\\s*$/\n}\n\n/**\n * Class for reading and writing Well-Known Text.\n *\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\nexport default class WKTParser {\n  /** Create a new parser for WKT\n   *\n   * @param {GeometryFactory} geometryFactory\n   * @return An instance of WKTParser.\n   * @private\n   */\n  constructor (geometryFactory) {\n    this.geometryFactory = geometryFactory || new GeometryFactory()\n    this.precisionModel = this.geometryFactory.getPrecisionModel()\n  }\n\n  /**\n   * Deserialize a WKT string and return a geometry. Supports WKT for POINT,\n   * MULTIPOINT, LINESTRING, LINEARRING, MULTILINESTRING, POLYGON, MULTIPOLYGON,\n   * and GEOMETRYCOLLECTION.\n   *\n   * @param {String} wkt A WKT string.\n   * @return {Geometry} A geometry instance.\n   * @private\n   */\n  read (wkt) {\n    var geometry, type, str\n    wkt = wkt.replace(/[\\n\\r]/g, ' ')\n    var matches = regExes.typeStr.exec(wkt)\n    if (wkt.search('EMPTY') !== -1) {\n      matches = regExes.emptyTypeStr.exec(wkt)\n      matches[2] = undefined\n    }\n    if (matches) {\n      type = matches[1].toLowerCase()\n      str = matches[2]\n      if (parse[type]) {\n        geometry = parse[type].call(this, str)\n      }\n    }\n\n    if (geometry === undefined) throw new Error('Could not parse WKT ' + wkt)\n\n    return geometry\n  }\n\n  /**\n   * Serialize a geometry into a WKT string.\n   *\n   * @param {Geometry} geometry A feature or array of features.\n   * @return {String} The WKT string representation of the input geometries.\n   * @private\n   */\n  write (geometry) {\n    return this.extractGeometry(geometry)\n  }\n\n  /**\n   * Entry point to construct the WKT for a single Geometry object.\n   *\n   * @param {Geometry} geometry\n   * @return {String} A WKT string of representing the geometry.\n   * @private\n   */\n  extractGeometry (geometry) {\n    var type = geometry.getGeometryType().toLowerCase()\n    if (!extract[type]) {\n      return null\n    }\n    var wktType = type.toUpperCase()\n    var data\n    if (geometry.isEmpty()) {\n      data = wktType + ' EMPTY'\n    } else {\n      data = wktType + '(' + extract[type].call(this, geometry) + ')'\n    }\n    return data\n  }\n}\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual data extraction.\n * @private\n */\nconst extract = {\n  coordinate (coordinate) {\n    this.precisionModel.makePrecise(coordinate)\n    return coordinate.x + ' ' + coordinate.y\n  },\n\n  /**\n   * Return a space delimited string of point coordinates.\n   *\n   * @param {Point}\n   *          point\n   * @return {String} A string of coordinates representing the point.\n   */\n  point (point) {\n    return extract.coordinate.call(this, point._coordinates._coordinates[0])\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a multipoint.\n   *\n   * @param {MultiPoint}\n   *          multipoint\n   * @return {String} A string of point coordinate strings representing the\n   *         multipoint.\n   */\n  multipoint (multipoint) {\n    var array = []\n    for (let i = 0, len = multipoint._geometries.length; i < len; ++i) {\n      array.push('(' + extract.point.call(this, multipoint._geometries[i]) + ')')\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a line.\n   *\n   * @param {LineString} linestring\n   * @return {String} A string of point coordinate strings representing the linestring.\n   */\n  linestring (linestring) {\n    var array = []\n    for (let i = 0, len = linestring._points._coordinates.length; i < len; ++i) {\n      array.push(extract.coordinate.call(this, linestring._points._coordinates[i]))\n    }\n    return array.join(',')\n  },\n\n  linearring (linearring) {\n    var array = []\n    for (let i = 0, len = linearring._points._coordinates.length; i < len; ++i) {\n      array.push(extract.coordinate.call(this, linearring._points._coordinates[i]))\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linestring strings from a\n   * multilinestring.\n   *\n   * @param {MultiLineString} multilinestring\n   * @return {String} A string of of linestring strings representing the multilinestring.\n   */\n  multilinestring (multilinestring) {\n    var array = []\n    for (let i = 0, len = multilinestring._geometries.length; i < len; ++i) {\n      array.push('(' +\n        extract.linestring.call(this, multilinestring._geometries[i]) +\n        ')')\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linear ring arrays from a polygon.\n   *\n   * @param {Polygon} polygon\n   * @return {String} An array of linear ring arrays representing the polygon.\n   */\n  polygon (polygon) {\n    var array = []\n    array.push('(' + extract.linestring.call(this, polygon._shell) + ')')\n    for (let i = 0, len = polygon._holes.length; i < len; ++i) {\n      array.push('(' + extract.linestring.call(this, polygon._holes[i]) + ')')\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return an array of polygon arrays from a multipolygon.\n   *\n   * @param {MultiPolygon} multipolygon\n   * @return {String} An array of polygon arrays representing the multipolygon.\n   */\n  multipolygon (multipolygon) {\n    var array = []\n    for (let i = 0, len = multipolygon._geometries.length; i < len; ++i) {\n      array.push('(' + extract.polygon.call(this, multipolygon._geometries[i]) + ')')\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return the WKT portion between 'GEOMETRYCOLLECTION(' and ')' for an\n   * geometrycollection.\n   *\n   * @param {GeometryCollection} collection\n   * @return {String} internal WKT representation of the collection.\n   */\n  geometrycollection (collection) {\n    var array = []\n    for (let i = 0, len = collection._geometries.length; i < len; ++i) {\n      array.push(this.extractGeometry(collection._geometries[i]))\n    }\n    return array.join(',')\n  }\n}\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual parsing.\n * @private\n */\nconst parse = {\n\n  coord (str) {\n    var coords = str.trim().split(regExes.spaces)\n    var coord = new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1]))\n    this.precisionModel.makePrecise(coord)\n    return coord\n  },\n\n  /**\n   * Return point geometry given a point WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the point.\n   * @return {Point} A point geometry.\n   * @private\n   */\n  point (str) {\n    if (str === undefined) { return this.geometryFactory.createPoint() }\n    return this.geometryFactory.createPoint(parse.coord.call(this, str))\n  },\n\n  /**\n   * Return a multipoint geometry given a multipoint WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipoint.\n   * @return {Point} A multipoint feature.\n   * @private\n   */\n  multipoint (str) {\n    if (str === undefined) { return this.geometryFactory.createMultiPoint() }\n    var point\n    var points = str.trim().split(',')\n    var components = []\n    for (let i = 0, len = points.length; i < len; ++i) {\n      point = points[i].replace(regExes.trimParens, '$1')\n      components.push(parse.point.call(this, point))\n    }\n    return this.geometryFactory.createMultiPoint(components)\n  },\n\n  /**\n   * Return a linestring geometry given a linestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linestring.\n   * @return {LineString} A linestring geometry.\n   * @private\n   */\n  linestring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLineString()\n    }\n\n    var points = str.trim().split(',')\n    var components = []\n    var coords\n    for (let i = 0, len = points.length; i < len; ++i) {\n      components.push(parse.coord.call(this, points[i]))\n    }\n    return this.geometryFactory.createLineString(components)\n  },\n\n  /**\n   * Return a linearring geometry given a linearring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linearring.\n   * @return {LinearRing} A linearring geometry.\n   * @private\n   */\n  linearring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLinearRing()\n    }\n\n    var points = str.trim().split(',')\n    var components = []\n    var coords\n    for (let i = 0, len = points.length; i < len; ++i) {\n      components.push(parse.coord.call(this, points[i]))\n    }\n    return this.geometryFactory.createLinearRing(components)\n  },\n\n  /**\n   * Return a multilinestring geometry given a multilinestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multilinestring.\n   * @return {MultiLineString} A multilinestring geometry.\n   * @private\n   */\n  multilinestring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createMultiLineString()\n    }\n\n    var line\n    var lines = str.trim().split(regExes.parenComma)\n    var components = []\n    for (let i = 0, len = lines.length; i < len; ++i) {\n      line = lines[i].replace(regExes.trimParens, '$1')\n      components.push(parse.linestring.call(this, line))\n    }\n    return this.geometryFactory.createMultiLineString(components)\n  },\n\n  /**\n   * Return a polygon geometry given a polygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the polygon.\n   * @return {Polygon} A polygon geometry.\n   * @private\n   */\n  polygon (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createPolygon()\n    }\n\n    var ring, linestring, linearring\n    var rings = str.trim().split(regExes.parenComma)\n    var shell\n    var holes = []\n    for (let i = 0, len = rings.length; i < len; ++i) {\n      ring = rings[i].replace(regExes.trimParens, '$1')\n      linestring = parse.linestring.call(this, ring)\n      linearring = this.geometryFactory.createLinearRing(linestring._points)\n      if (i === 0) {\n        shell = linearring\n      } else {\n        holes.push(linearring)\n      }\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Return a multipolygon geometry given a multipolygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipolygon.\n   * @return {MultiPolygon} A multipolygon geometry.\n   * @private\n   */\n  multipolygon (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPolygon()\n    }\n\n    var polygon\n    var polygons = str.trim().split(regExes.doubleParenComma)\n    var components = []\n    for (let i = 0, len = polygons.length; i < len; ++i) {\n      polygon = polygons[i].replace(regExes.trimParens, '$1')\n      components.push(parse.polygon.call(this, polygon))\n    }\n    return this.geometryFactory.createMultiPolygon(components)\n  },\n\n  /**\n   * Return a geometrycollection given a geometrycollection WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the geometrycollection.\n   * @return {GeometryCollection}\n   * @private\n   */\n  geometrycollection (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createGeometryCollection()\n    }\n\n    // separate components of the collection with |\n    str = str.replace(/,\\s*([A-Za-z])/g, '|$1')\n    var wktArray = str.trim().split('|')\n    var components = []\n    for (let i = 0, len = wktArray.length; i < len; ++i) {\n      components.push(this.read(wktArray[i]))\n    }\n    return this.geometryFactory.createGeometryCollection(components)\n  }\n}\n","/**\n * @module org/locationtech/jts/io/WKTWriter\n */\n\nimport WKTParser from './WKTParser'\n\n/**\n * Writes the Well-Known Text representation of a {@link Geometry}. The\n * Well-Known Text format is defined in the <A\n * HREF=\"http://www.opengis.org/techno/specs.htm\"> OGC Simple Features\n * Specification for SQL</A>.\n * <p>\n * The <code>WKTWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n * <p>\n * The SFS WKT spec does not define a special tag for {@link LinearRing}s.\n * Under the spec, rings are output as <code>LINESTRING</code>s.\n */\nexport default class WKTWriter {\n  /**\n   * @param {GeometryFactory} geometryFactory\n   */\n  constructor (geometryFactory) {\n    this.parser = new WKTParser(geometryFactory)\n  }\n\n  /**\n   * Converts a <code>Geometry</code> to its Well-known Text representation.\n   *\n   * @param {Geometry} geometry a <code>Geometry</code> to process.\n   * @return {string} a <Geometry Tagged Text> string (see the OpenGIS Simple\n   *         Features Specification).\n   * @memberof module:org/locationtech/jts/io/WKTWriter#\n   */\n  write (geometry) {\n    return this.parser.write(geometry)\n  }\n\n  /**\n   * Generates the WKT for a <tt>LINESTRING</tt> specified by two\n   * {@link Coordinate}s.\n   *\n   * @param p0 the first coordinate.\n   * @param p1 the second coordinate.\n   *\n   * @return the WKT.\n   * @private\n   */\n  static toLineString (p0, p1) {\n    if (arguments.length !== 2) {\n      throw new Error('Not implemented')\n    }\n\n    return 'LINESTRING ( ' + p0.x + ' ' + p0.y + ', ' + p1.x + ' ' + p1.y + ' )'\n  }\n}\n","import WKTWriter from '../io/WKTWriter'\nimport Coordinate from '../geom/Coordinate'\nimport Assert from '../util/Assert'\nimport StringBuilder from '../../../../java/lang/StringBuilder'\nexport default class LineIntersector {\n  constructor () {\n    LineIntersector.constructor_.apply(this, arguments)\n  }\n\n  static computeEdgeDistance (p, p0, p1) {\n    const dx = Math.abs(p1.x - p0.x)\n    const dy = Math.abs(p1.y - p0.y)\n    let dist = -1.0\n    if (p.equals(p0)) {\n      dist = 0.0\n    } else if (p.equals(p1)) {\n      if (dx > dy) dist = dx; else dist = dy\n    } else {\n      const pdx = Math.abs(p.x - p0.x)\n      const pdy = Math.abs(p.y - p0.y)\n      if (dx > dy) dist = pdx; else dist = pdy\n      if (dist === 0.0 && !p.equals(p0)) {\n        dist = Math.max(pdx, pdy)\n      }\n    }\n    Assert.isTrue(!(dist === 0.0 && !p.equals(p0)), 'Bad distance calculation')\n    return dist\n  }\n\n  static nonRobustComputeEdgeDistance (p, p1, p2) {\n    const dx = p.x - p1.x\n    const dy = p.y - p1.y\n    const dist = Math.sqrt(dx * dx + dy * dy)\n    Assert.isTrue(!(dist === 0.0 && !p.equals(p1)), 'Invalid distance calculation')\n    return dist\n  }\n\n  getIndexAlongSegment (segmentIndex, intIndex) {\n    this.computeIntLineIndex()\n    return this._intLineIndex[segmentIndex][intIndex]\n  }\n\n  getTopologySummary () {\n    const catBuilder = new StringBuilder()\n    if (this.isEndPoint()) catBuilder.append(' endpoint')\n    if (this._isProper) catBuilder.append(' proper')\n    if (this.isCollinear()) catBuilder.append(' collinear')\n    return catBuilder.toString()\n  }\n\n  computeIntersection (p1, p2, p3, p4) {\n    this._inputLines[0][0] = p1\n    this._inputLines[0][1] = p2\n    this._inputLines[1][0] = p3\n    this._inputLines[1][1] = p4\n    this._result = this.computeIntersect(p1, p2, p3, p4)\n  }\n\n  getIntersectionNum () {\n    return this._result\n  }\n\n  computeIntLineIndex () {\n    if (arguments.length === 0) {\n      if (this._intLineIndex === null) {\n        this._intLineIndex = Array(2).fill().map(() => Array(2))\n        this.computeIntLineIndex(0)\n        this.computeIntLineIndex(1)\n      }\n    } else if (arguments.length === 1) {\n      const segmentIndex = arguments[0]\n      const dist0 = this.getEdgeDistance(segmentIndex, 0)\n      const dist1 = this.getEdgeDistance(segmentIndex, 1)\n      if (dist0 > dist1) {\n        this._intLineIndex[segmentIndex][0] = 0\n        this._intLineIndex[segmentIndex][1] = 1\n      } else {\n        this._intLineIndex[segmentIndex][0] = 1\n        this._intLineIndex[segmentIndex][1] = 0\n      }\n    }\n  }\n\n  isProper () {\n    return this.hasIntersection() && this._isProper\n  }\n\n  setPrecisionModel (precisionModel) {\n    this._precisionModel = precisionModel\n  }\n\n  isInteriorIntersection () {\n    if (arguments.length === 0) {\n      if (this.isInteriorIntersection(0)) return true\n      if (this.isInteriorIntersection(1)) return true\n      return false\n    } else if (arguments.length === 1) {\n      const inputLineIndex = arguments[0]\n      for (let i = 0; i < this._result; i++) {\n        if (!(this._intPt[i].equals2D(this._inputLines[inputLineIndex][0]) || this._intPt[i].equals2D(this._inputLines[inputLineIndex][1]))) {\n          return true\n        }\n      }\n      return false\n    }\n  }\n\n  getIntersection (intIndex) {\n    return this._intPt[intIndex]\n  }\n\n  isEndPoint () {\n    return this.hasIntersection() && !this._isProper\n  }\n\n  hasIntersection () {\n    return this._result !== LineIntersector.NO_INTERSECTION\n  }\n\n  getEdgeDistance (segmentIndex, intIndex) {\n    const dist = LineIntersector.computeEdgeDistance(this._intPt[intIndex], this._inputLines[segmentIndex][0], this._inputLines[segmentIndex][1])\n    return dist\n  }\n\n  isCollinear () {\n    return this._result === LineIntersector.COLLINEAR_INTERSECTION\n  }\n\n  toString () {\n    return WKTWriter.toLineString(this._inputLines[0][0], this._inputLines[0][1]) + ' - ' + WKTWriter.toLineString(this._inputLines[1][0], this._inputLines[1][1]) + this.getTopologySummary()\n  }\n\n  getEndpoint (segmentIndex, ptIndex) {\n    return this._inputLines[segmentIndex][ptIndex]\n  }\n\n  isIntersection (pt) {\n    for (let i = 0; i < this._result; i++) {\n      if (this._intPt[i].equals2D(pt)) {\n        return true\n      }\n    }\n    return false\n  }\n\n  getIntersectionAlongSegment (segmentIndex, intIndex) {\n    this.computeIntLineIndex()\n    return this._intPt[this._intLineIndex[segmentIndex][intIndex]]\n  }\n\n  getClass () {\n    return LineIntersector\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nLineIntersector.constructor_ = function () {\n  this._result = null\n  this._inputLines = Array(2).fill().map(() => Array(2))\n  this._intPt = new Array(2).fill(null)\n  this._intLineIndex = null\n  this._isProper = null\n  this._pa = null\n  this._pb = null\n  this._precisionModel = null\n  this._intPt[0] = new Coordinate()\n  this._intPt[1] = new Coordinate()\n  this._pa = this._intPt[0]\n  this._pb = this._intPt[1]\n  this._result = 0\n}\nLineIntersector.DONT_INTERSECT = 0\nLineIntersector.DO_INTERSECT = 1\nLineIntersector.COLLINEAR = 2\nLineIntersector.NO_INTERSECTION = 0\nLineIntersector.POINT_INTERSECTION = 1\nLineIntersector.COLLINEAR_INTERSECTION = 2\n","import NotRepresentableException from './NotRepresentableException'\nimport Coordinate from '../geom/Coordinate'\nimport Orientation from './Orientation'\nimport CGAlgorithmsDD from './CGAlgorithmsDD'\nimport System from '../../../../java/lang/System'\nimport HCoordinate from './HCoordinate'\nimport Envelope from '../geom/Envelope'\nimport Distance from './Distance'\nimport LineIntersector from './LineIntersector'\nexport default class RobustLineIntersector extends LineIntersector {\n  constructor () {\n    super()\n    RobustLineIntersector.constructor_.apply(this, arguments)\n  }\n\n  static nearestEndpoint (p1, p2, q1, q2) {\n    let nearestPt = p1\n    let minDist = Distance.pointToSegment(p1, q1, q2)\n    let dist = Distance.pointToSegment(p2, q1, q2)\n    if (dist < minDist) {\n      minDist = dist\n      nearestPt = p2\n    }\n    dist = Distance.pointToSegment(q1, p1, p2)\n    if (dist < minDist) {\n      minDist = dist\n      nearestPt = q1\n    }\n    dist = Distance.pointToSegment(q2, p1, p2)\n    if (dist < minDist) {\n      minDist = dist\n      nearestPt = q2\n    }\n    return nearestPt\n  }\n\n  isInSegmentEnvelopes (intPt) {\n    const env0 = new Envelope(this._inputLines[0][0], this._inputLines[0][1])\n    const env1 = new Envelope(this._inputLines[1][0], this._inputLines[1][1])\n    return env0.contains(intPt) && env1.contains(intPt)\n  }\n\n  computeIntersection () {\n    if (arguments.length === 3) {\n      const p = arguments[0]; const p1 = arguments[1]; const p2 = arguments[2]\n      this._isProper = false\n      if (Envelope.intersects(p1, p2, p)) {\n        if (Orientation.index(p1, p2, p) === 0 && Orientation.index(p2, p1, p) === 0) {\n          this._isProper = true\n          if (p.equals(p1) || p.equals(p2)) {\n            this._isProper = false\n          }\n          this._result = LineIntersector.POINT_INTERSECTION\n          return null\n        }\n      }\n      this._result = LineIntersector.NO_INTERSECTION\n    } else return super.computeIntersection.apply(this, arguments)\n  }\n\n  normalizeToMinimum (n1, n2, n3, n4, normPt) {\n    normPt.x = this.smallestInAbsValue(n1.x, n2.x, n3.x, n4.x)\n    normPt.y = this.smallestInAbsValue(n1.y, n2.y, n3.y, n4.y)\n    n1.x -= normPt.x\n    n1.y -= normPt.y\n    n2.x -= normPt.x\n    n2.y -= normPt.y\n    n3.x -= normPt.x\n    n3.y -= normPt.y\n    n4.x -= normPt.x\n    n4.y -= normPt.y\n  }\n\n  safeHCoordinateIntersection (p1, p2, q1, q2) {\n    let intPt = null\n    try {\n      intPt = HCoordinate.intersection(p1, p2, q1, q2)\n    } catch (e) {\n      if (e instanceof NotRepresentableException) {\n        intPt = RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2)\n      } else throw e\n    } finally {}\n    return intPt\n  }\n\n  intersection (p1, p2, q1, q2) {\n    let intPt = this.intersectionWithNormalization(p1, p2, q1, q2)\n    if (!this.isInSegmentEnvelopes(intPt)) {\n      intPt = new Coordinate(RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2))\n    }\n    if (this._precisionModel !== null) {\n      this._precisionModel.makePrecise(intPt)\n    }\n    return intPt\n  }\n\n  smallestInAbsValue (x1, x2, x3, x4) {\n    let x = x1\n    let xabs = Math.abs(x)\n    if (Math.abs(x2) < xabs) {\n      x = x2\n      xabs = Math.abs(x2)\n    }\n    if (Math.abs(x3) < xabs) {\n      x = x3\n      xabs = Math.abs(x3)\n    }\n    if (Math.abs(x4) < xabs) {\n      x = x4\n    }\n    return x\n  }\n\n  checkDD (p1, p2, q1, q2, intPt) {\n    const intPtDD = CGAlgorithmsDD.intersection(p1, p2, q1, q2)\n    const isIn = this.isInSegmentEnvelopes(intPtDD)\n    System.out.println('DD in env = ' + isIn + '  --------------------- ' + intPtDD)\n    if (intPt.distance(intPtDD) > 0.0001) {\n      System.out.println('Distance = ' + intPt.distance(intPtDD))\n    }\n  }\n\n  intersectionWithNormalization (p1, p2, q1, q2) {\n    const n1 = new Coordinate(p1)\n    const n2 = new Coordinate(p2)\n    const n3 = new Coordinate(q1)\n    const n4 = new Coordinate(q2)\n    const normPt = new Coordinate()\n    this.normalizeToEnvCentre(n1, n2, n3, n4, normPt)\n    const intPt = this.safeHCoordinateIntersection(n1, n2, n3, n4)\n    intPt.x += normPt.x\n    intPt.y += normPt.y\n    return intPt\n  }\n\n  computeCollinearIntersection (p1, p2, q1, q2) {\n    const p1q1p2 = Envelope.intersects(p1, p2, q1)\n    const p1q2p2 = Envelope.intersects(p1, p2, q2)\n    const q1p1q2 = Envelope.intersects(q1, q2, p1)\n    const q1p2q2 = Envelope.intersects(q1, q2, p2)\n    if (p1q1p2 && p1q2p2) {\n      this._intPt[0] = q1\n      this._intPt[1] = q2\n      return LineIntersector.COLLINEAR_INTERSECTION\n    }\n    if (q1p1q2 && q1p2q2) {\n      this._intPt[0] = p1\n      this._intPt[1] = p2\n      return LineIntersector.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p1q2) {\n      this._intPt[0] = q1\n      this._intPt[1] = p1\n      return q1.equals(p1) && !p1q2p2 && !q1p2q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p2q2) {\n      this._intPt[0] = q1\n      this._intPt[1] = p2\n      return q1.equals(p2) && !p1q2p2 && !q1p1q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p1q2) {\n      this._intPt[0] = q2\n      this._intPt[1] = p1\n      return q2.equals(p1) && !p1q1p2 && !q1p2q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p2q2) {\n      this._intPt[0] = q2\n      this._intPt[1] = p2\n      return q2.equals(p2) && !p1q1p2 && !q1p1q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION\n    }\n    return LineIntersector.NO_INTERSECTION\n  }\n\n  normalizeToEnvCentre (n00, n01, n10, n11, normPt) {\n    const minX0 = n00.x < n01.x ? n00.x : n01.x\n    const minY0 = n00.y < n01.y ? n00.y : n01.y\n    const maxX0 = n00.x > n01.x ? n00.x : n01.x\n    const maxY0 = n00.y > n01.y ? n00.y : n01.y\n    const minX1 = n10.x < n11.x ? n10.x : n11.x\n    const minY1 = n10.y < n11.y ? n10.y : n11.y\n    const maxX1 = n10.x > n11.x ? n10.x : n11.x\n    const maxY1 = n10.y > n11.y ? n10.y : n11.y\n    const intMinX = minX0 > minX1 ? minX0 : minX1\n    const intMaxX = maxX0 < maxX1 ? maxX0 : maxX1\n    const intMinY = minY0 > minY1 ? minY0 : minY1\n    const intMaxY = maxY0 < maxY1 ? maxY0 : maxY1\n    const intMidX = (intMinX + intMaxX) / 2.0\n    const intMidY = (intMinY + intMaxY) / 2.0\n    normPt.x = intMidX\n    normPt.y = intMidY\n    n00.x -= normPt.x\n    n00.y -= normPt.y\n    n01.x -= normPt.x\n    n01.y -= normPt.y\n    n10.x -= normPt.x\n    n10.y -= normPt.y\n    n11.x -= normPt.x\n    n11.y -= normPt.y\n  }\n\n  computeIntersect (p1, p2, q1, q2) {\n    this._isProper = false\n    if (!Envelope.intersects(p1, p2, q1, q2)) return LineIntersector.NO_INTERSECTION\n    const Pq1 = Orientation.index(p1, p2, q1)\n    const Pq2 = Orientation.index(p1, p2, q2)\n    if (Pq1 > 0 && Pq2 > 0 || Pq1 < 0 && Pq2 < 0) {\n      return LineIntersector.NO_INTERSECTION\n    }\n    const Qp1 = Orientation.index(q1, q2, p1)\n    const Qp2 = Orientation.index(q1, q2, p2)\n    if (Qp1 > 0 && Qp2 > 0 || Qp1 < 0 && Qp2 < 0) {\n      return LineIntersector.NO_INTERSECTION\n    }\n    const collinear = Pq1 === 0 && Pq2 === 0 && Qp1 === 0 && Qp2 === 0\n    if (collinear) {\n      return this.computeCollinearIntersection(p1, p2, q1, q2)\n    }\n    if (Pq1 === 0 || Pq2 === 0 || Qp1 === 0 || Qp2 === 0) {\n      this._isProper = false\n      if (p1.equals2D(q1) || p1.equals2D(q2)) {\n        this._intPt[0] = p1\n      } else if (p2.equals2D(q1) || p2.equals2D(q2)) {\n        this._intPt[0] = p2\n      } else if (Pq1 === 0) {\n        this._intPt[0] = new Coordinate(q1)\n      } else if (Pq2 === 0) {\n        this._intPt[0] = new Coordinate(q2)\n      } else if (Qp1 === 0) {\n        this._intPt[0] = new Coordinate(p1)\n      } else if (Qp2 === 0) {\n        this._intPt[0] = new Coordinate(p2)\n      }\n    } else {\n      this._isProper = true\n      this._intPt[0] = this.intersection(p1, p2, q1, q2)\n    }\n    return LineIntersector.POINT_INTERSECTION\n  }\n\n  getClass () {\n    return RobustLineIntersector\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nRobustLineIntersector.constructor_ = function () {}\n","import NotRepresentableException from '../algorithm/NotRepresentableException'\nimport Coordinate from './Coordinate'\nimport Double from '../../../../java/lang/Double'\nimport Orientation from '../algorithm/Orientation'\nimport Comparable from '../../../../java/lang/Comparable'\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector'\nimport HCoordinate from '../algorithm/HCoordinate'\nimport Serializable from '../../../../java/io/Serializable'\nimport Distance from '../algorithm/Distance'\nexport default class LineSegment {\n  constructor () {\n    LineSegment.constructor_.apply(this, arguments)\n  }\n\n  static midPoint (p0, p1) {\n    return new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2)\n  }\n\n  minX () {\n    return Math.min(this.p0.x, this.p1.x)\n  }\n\n  orientationIndex () {\n    if (arguments[0] instanceof LineSegment) {\n      const seg = arguments[0]\n      const orient0 = Orientation.index(this.p0, this.p1, seg.p0)\n      const orient1 = Orientation.index(this.p0, this.p1, seg.p1)\n      if (orient0 >= 0 && orient1 >= 0) return Math.max(orient0, orient1)\n      if (orient0 <= 0 && orient1 <= 0) return Math.max(orient0, orient1)\n      return 0\n    } else if (arguments[0] instanceof Coordinate) {\n      const p = arguments[0]\n      return Orientation.index(this.p0, this.p1, p)\n    }\n  }\n\n  toGeometry (geomFactory) {\n    return geomFactory.createLineString([this.p0, this.p1])\n  }\n\n  isVertical () {\n    return this.p0.x === this.p1.x\n  }\n\n  equals (o) {\n    if (!(o instanceof LineSegment)) {\n      return false\n    }\n    const other = o\n    return this.p0.equals(other.p0) && this.p1.equals(other.p1)\n  }\n\n  intersection (line) {\n    const li = new RobustLineIntersector()\n    li.computeIntersection(this.p0, this.p1, line.p0, line.p1)\n    if (li.hasIntersection()) return li.getIntersection(0)\n    return null\n  }\n\n  project () {\n    if (arguments[0] instanceof Coordinate) {\n      const p = arguments[0]\n      if (p.equals(this.p0) || p.equals(this.p1)) return new Coordinate(p)\n      const r = this.projectionFactor(p)\n      const coord = new Coordinate()\n      coord.x = this.p0.x + r * (this.p1.x - this.p0.x)\n      coord.y = this.p0.y + r * (this.p1.y - this.p0.y)\n      return coord\n    } else if (arguments[0] instanceof LineSegment) {\n      const seg = arguments[0]\n      const pf0 = this.projectionFactor(seg.p0)\n      const pf1 = this.projectionFactor(seg.p1)\n      if (pf0 >= 1.0 && pf1 >= 1.0) return null\n      if (pf0 <= 0.0 && pf1 <= 0.0) return null\n      let newp0 = this.project(seg.p0)\n      if (pf0 < 0.0) newp0 = this.p0\n      if (pf0 > 1.0) newp0 = this.p1\n      let newp1 = this.project(seg.p1)\n      if (pf1 < 0.0) newp1 = this.p0\n      if (pf1 > 1.0) newp1 = this.p1\n      return new LineSegment(newp0, newp1)\n    }\n  }\n\n  normalize () {\n    if (this.p1.compareTo(this.p0) < 0) this.reverse()\n  }\n\n  angle () {\n    return Math.atan2(this.p1.y - this.p0.y, this.p1.x - this.p0.x)\n  }\n\n  getCoordinate (i) {\n    if (i === 0) return this.p0\n    return this.p1\n  }\n\n  distancePerpendicular (p) {\n    return Distance.pointToLinePerpendicular(p, this.p0, this.p1)\n  }\n\n  minY () {\n    return Math.min(this.p0.y, this.p1.y)\n  }\n\n  midPoint () {\n    return LineSegment.midPoint(this.p0, this.p1)\n  }\n\n  projectionFactor (p) {\n    if (p.equals(this.p0)) return 0.0\n    if (p.equals(this.p1)) return 1.0\n    const dx = this.p1.x - this.p0.x\n    const dy = this.p1.y - this.p0.y\n    const len = dx * dx + dy * dy\n    if (len <= 0.0) return Double.NaN\n    const r = ((p.x - this.p0.x) * dx + (p.y - this.p0.y) * dy) / len\n    return r\n  }\n\n  closestPoints (line) {\n    const intPt = this.intersection(line)\n    if (intPt !== null) {\n      return [intPt, intPt]\n    }\n    const closestPt = new Array(2).fill(null)\n    let minDistance = Double.MAX_VALUE\n    let dist = null\n    const close00 = this.closestPoint(line.p0)\n    minDistance = close00.distance(line.p0)\n    closestPt[0] = close00\n    closestPt[1] = line.p0\n    const close01 = this.closestPoint(line.p1)\n    dist = close01.distance(line.p1)\n    if (dist < minDistance) {\n      minDistance = dist\n      closestPt[0] = close01\n      closestPt[1] = line.p1\n    }\n    const close10 = line.closestPoint(this.p0)\n    dist = close10.distance(this.p0)\n    if (dist < minDistance) {\n      minDistance = dist\n      closestPt[0] = this.p0\n      closestPt[1] = close10\n    }\n    const close11 = line.closestPoint(this.p1)\n    dist = close11.distance(this.p1)\n    if (dist < minDistance) {\n      minDistance = dist\n      closestPt[0] = this.p1\n      closestPt[1] = close11\n    }\n    return closestPt\n  }\n\n  closestPoint (p) {\n    const factor = this.projectionFactor(p)\n    if (factor > 0 && factor < 1) {\n      return this.project(p)\n    }\n    const dist0 = this.p0.distance(p)\n    const dist1 = this.p1.distance(p)\n    if (dist0 < dist1) return this.p0\n    return this.p1\n  }\n\n  maxX () {\n    return Math.max(this.p0.x, this.p1.x)\n  }\n\n  getLength () {\n    return this.p0.distance(this.p1)\n  }\n\n  compareTo (o) {\n    const other = o\n    const comp0 = this.p0.compareTo(other.p0)\n    if (comp0 !== 0) return comp0\n    return this.p1.compareTo(other.p1)\n  }\n\n  reverse () {\n    const temp = this.p0\n    this.p0 = this.p1\n    this.p1 = temp\n  }\n\n  equalsTopo (other) {\n    return this.p0.equals(other.p0) && this.p1.equals(other.p1) || this.p0.equals(other.p1) && this.p1.equals(other.p0)\n  }\n\n  lineIntersection (line) {\n    try {\n      const intPt = HCoordinate.intersection(this.p0, this.p1, line.p0, line.p1)\n      return intPt\n    } catch (ex) {\n      if (ex instanceof NotRepresentableException) {} else throw ex\n    } finally {}\n    return null\n  }\n\n  maxY () {\n    return Math.max(this.p0.y, this.p1.y)\n  }\n\n  pointAlongOffset (segmentLengthFraction, offsetDistance) {\n    const segx = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x)\n    const segy = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y)\n    const dx = this.p1.x - this.p0.x\n    const dy = this.p1.y - this.p0.y\n    const len = Math.sqrt(dx * dx + dy * dy)\n    let ux = 0.0\n    let uy = 0.0\n    if (offsetDistance !== 0.0) {\n      if (len <= 0.0) throw new IllegalStateException('Cannot compute offset from zero-length line segment')\n      ux = offsetDistance * dx / len\n      uy = offsetDistance * dy / len\n    }\n    const offsetx = segx - uy\n    const offsety = segy + ux\n    const coord = new Coordinate(offsetx, offsety)\n    return coord\n  }\n\n  setCoordinates () {\n    if (arguments.length === 1) {\n      const ls = arguments[0]\n      this.setCoordinates(ls.p0, ls.p1)\n    } else if (arguments.length === 2) {\n      const p0 = arguments[0]; const p1 = arguments[1]\n      this.p0.x = p0.x\n      this.p0.y = p0.y\n      this.p1.x = p1.x\n      this.p1.y = p1.y\n    }\n  }\n\n  segmentFraction (inputPt) {\n    let segFrac = this.projectionFactor(inputPt)\n    if (segFrac < 0.0) segFrac = 0.0; else if (segFrac > 1.0 || Double.isNaN(segFrac)) segFrac = 1.0\n    return segFrac\n  }\n\n  toString () {\n    return 'LINESTRING( ' + this.p0.x + ' ' + this.p0.y + ', ' + this.p1.x + ' ' + this.p1.y + ')'\n  }\n\n  isHorizontal () {\n    return this.p0.y === this.p1.y\n  }\n\n  distance () {\n    if (arguments[0] instanceof LineSegment) {\n      const ls = arguments[0]\n      return Distance.segmentToSegment(this.p0, this.p1, ls.p0, ls.p1)\n    } else if (arguments[0] instanceof Coordinate) {\n      const p = arguments[0]\n      return Distance.pointToSegment(p, this.p0, this.p1)\n    }\n  }\n\n  pointAlong (segmentLengthFraction) {\n    const coord = new Coordinate()\n    coord.x = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x)\n    coord.y = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y)\n    return coord\n  }\n\n  hashCode () {\n    let bits0 = java.lang.Double.doubleToLongBits(this.p0.x)\n    bits0 ^= java.lang.Double.doubleToLongBits(this.p0.y) * 31\n    const hash0 = Math.trunc(bits0) ^ Math.trunc(bits0 >> 32)\n    let bits1 = java.lang.Double.doubleToLongBits(this.p1.x)\n    bits1 ^= java.lang.Double.doubleToLongBits(this.p1.y) * 31\n    const hash1 = Math.trunc(bits1) ^ Math.trunc(bits1 >> 32)\n    return hash0 ^ hash1\n  }\n\n  getClass () {\n    return LineSegment\n  }\n\n  get interfaces_ () {\n    return [Comparable, Serializable]\n  }\n}\nLineSegment.constructor_ = function () {\n  this.p0 = null\n  this.p1 = null\n  if (arguments.length === 0) {\n    LineSegment.constructor_.call(this, new Coordinate(), new Coordinate())\n  } else if (arguments.length === 1) {\n    const ls = arguments[0]\n    LineSegment.constructor_.call(this, ls.p0, ls.p1)\n  } else if (arguments.length === 2) {\n    const p0 = arguments[0]; const p1 = arguments[1]\n    this.p0 = p0\n    this.p1 = p1\n  } else if (arguments.length === 4) {\n    const x0 = arguments[0]; const y0 = arguments[1]; const x1 = arguments[2]; const y1 = arguments[3]\n    LineSegment.constructor_.call(this, new Coordinate(x0, y0), new Coordinate(x1, y1))\n  }\n}\nLineSegment.serialVersionUID = 3252005833466256227\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException'\nexport default class Location {\n  constructor () {\n    Location.constructor_.apply(this, arguments)\n  }\n\n  static toLocationSymbol (locationValue) {\n    switch (locationValue) {\n      case Location.EXTERIOR:\n        return 'e'\n      case Location.BOUNDARY:\n        return 'b'\n      case Location.INTERIOR:\n        return 'i'\n      case Location.NONE:\n        return '-'\n    }\n    throw new IllegalArgumentException('Unknown location value: ' + locationValue)\n  }\n\n  getClass () {\n    return Location\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nLocation.constructor_ = function () {}\nLocation.INTERIOR = 0\nLocation.BOUNDARY = 1\nLocation.EXTERIOR = 2\nLocation.NONE = -1\n","import Location from './Location'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException'\nimport Dimension from './Dimension'\nimport Cloneable from '../../../../java/lang/Cloneable'\nimport StringBuilder from '../../../../java/lang/StringBuilder'\nexport default class IntersectionMatrix {\n  constructor () {\n    IntersectionMatrix.constructor_.apply(this, arguments)\n  }\n\n  static matches () {\n    if (Number.isInteger(arguments[0]) && typeof arguments[1] === 'string') {\n      const actualDimensionValue = arguments[0]; const requiredDimensionSymbol = arguments[1]\n      if (requiredDimensionSymbol === Dimension.SYM_DONTCARE) {\n        return true\n      }\n      if (requiredDimensionSymbol === Dimension.SYM_TRUE && (actualDimensionValue >= 0 || actualDimensionValue === Dimension.TRUE)) {\n        return true\n      }\n      if (requiredDimensionSymbol === Dimension.SYM_FALSE && actualDimensionValue === Dimension.FALSE) {\n        return true\n      }\n      if (requiredDimensionSymbol === Dimension.SYM_P && actualDimensionValue === Dimension.P) {\n        return true\n      }\n      if (requiredDimensionSymbol === Dimension.SYM_L && actualDimensionValue === Dimension.L) {\n        return true\n      }\n      if (requiredDimensionSymbol === Dimension.SYM_A && actualDimensionValue === Dimension.A) {\n        return true\n      }\n      return false\n    } else if (typeof arguments[0] === 'string' && typeof arguments[1] === 'string') {\n      const actualDimensionSymbols = arguments[0]; const requiredDimensionSymbols = arguments[1]\n      const m = new IntersectionMatrix(actualDimensionSymbols)\n      return m.matches(requiredDimensionSymbols)\n    }\n  }\n\n  static isTrue (actualDimensionValue) {\n    if (actualDimensionValue >= 0 || actualDimensionValue === Dimension.TRUE) {\n      return true\n    }\n    return false\n  }\n\n  isIntersects () {\n    return !this.isDisjoint()\n  }\n\n  isCovers () {\n    const hasPointInCommon = IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.BOUNDARY])\n    return hasPointInCommon && this._matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE\n  }\n\n  isCoveredBy () {\n    const hasPointInCommon = IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.BOUNDARY])\n    return hasPointInCommon && this._matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE\n  }\n\n  set () {\n    if (arguments.length === 1) {\n      const dimensionSymbols = arguments[0]\n      for (let i = 0; i < dimensionSymbols.length; i++) {\n        const row = Math.trunc(i / 3)\n        const col = i % 3\n        this._matrix[row][col] = Dimension.toDimensionValue(dimensionSymbols.charAt(i))\n      }\n    } else if (arguments.length === 3) {\n      const row = arguments[0]; const column = arguments[1]; const dimensionValue = arguments[2]\n      this._matrix[row][column] = dimensionValue\n    }\n  }\n\n  isContains () {\n    return IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && this._matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE\n  }\n\n  setAtLeast () {\n    if (arguments.length === 1) {\n      const minimumDimensionSymbols = arguments[0]\n      for (let i = 0; i < minimumDimensionSymbols.length; i++) {\n        const row = Math.trunc(i / 3)\n        const col = i % 3\n        this.setAtLeast(row, col, Dimension.toDimensionValue(minimumDimensionSymbols.charAt(i)))\n      }\n    } else if (arguments.length === 3) {\n      const row = arguments[0]; const column = arguments[1]; const minimumDimensionValue = arguments[2]\n      if (this._matrix[row][column] < minimumDimensionValue) {\n        this._matrix[row][column] = minimumDimensionValue\n      }\n    }\n  }\n\n  setAtLeastIfValid (row, column, minimumDimensionValue) {\n    if (row >= 0 && column >= 0) {\n      this.setAtLeast(row, column, minimumDimensionValue)\n    }\n  }\n\n  isWithin () {\n    return IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && this._matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE\n  }\n\n  isTouches (dimensionOfGeometryA, dimensionOfGeometryB) {\n    if (dimensionOfGeometryA > dimensionOfGeometryB) {\n      return this.isTouches(dimensionOfGeometryB, dimensionOfGeometryA)\n    }\n    if (dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.L) {\n      return this._matrix[Location.INTERIOR][Location.INTERIOR] === Dimension.FALSE && (IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.BOUNDARY]))\n    }\n    return false\n  }\n\n  isOverlaps (dimensionOfGeometryA, dimensionOfGeometryB) {\n    if (dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.A) {\n      return IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.EXTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.EXTERIOR][Location.INTERIOR])\n    }\n    if (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L) {\n      return this._matrix[Location.INTERIOR][Location.INTERIOR] === 1 && IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.EXTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.EXTERIOR][Location.INTERIOR])\n    }\n    return false\n  }\n\n  isEquals (dimensionOfGeometryA, dimensionOfGeometryB) {\n    if (dimensionOfGeometryA !== dimensionOfGeometryB) {\n      return false\n    }\n    return IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && this._matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE\n  }\n\n  toString () {\n    const builder = new StringBuilder('123456789')\n    for (let ai = 0; ai < 3; ai++) {\n      for (let bi = 0; bi < 3; bi++) {\n        builder.setCharAt(3 * ai + bi, Dimension.toDimensionSymbol(this._matrix[ai][bi]))\n      }\n    }\n    return builder.toString()\n  }\n\n  setAll (dimensionValue) {\n    for (let ai = 0; ai < 3; ai++) {\n      for (let bi = 0; bi < 3; bi++) {\n        this._matrix[ai][bi] = dimensionValue\n      }\n    }\n  }\n\n  get (row, column) {\n    return this._matrix[row][column]\n  }\n\n  transpose () {\n    let temp = this._matrix[1][0]\n    this._matrix[1][0] = this._matrix[0][1]\n    this._matrix[0][1] = temp\n    temp = this._matrix[2][0]\n    this._matrix[2][0] = this._matrix[0][2]\n    this._matrix[0][2] = temp\n    temp = this._matrix[2][1]\n    this._matrix[2][1] = this._matrix[1][2]\n    this._matrix[1][2] = temp\n    return this\n  }\n\n  matches (requiredDimensionSymbols) {\n    if (requiredDimensionSymbols.length !== 9) {\n      throw new IllegalArgumentException('Should be length 9: ' + requiredDimensionSymbols)\n    }\n    for (let ai = 0; ai < 3; ai++) {\n      for (let bi = 0; bi < 3; bi++) {\n        if (!IntersectionMatrix.matches(this._matrix[ai][bi], requiredDimensionSymbols.charAt(3 * ai + bi))) {\n          return false\n        }\n      }\n    }\n    return true\n  }\n\n  add (im) {\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 3; j++) {\n        this.setAtLeast(i, j, im.get(i, j))\n      }\n    }\n  }\n\n  isDisjoint () {\n    return this._matrix[Location.INTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.INTERIOR][Location.BOUNDARY] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.BOUNDARY] === Dimension.FALSE\n  }\n\n  isCrosses (dimensionOfGeometryA, dimensionOfGeometryB) {\n    if (dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.L || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.A) {\n      return IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.EXTERIOR])\n    }\n    if (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.L) {\n      return IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.EXTERIOR][Location.INTERIOR])\n    }\n    if (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L) {\n      return this._matrix[Location.INTERIOR][Location.INTERIOR] === 0\n    }\n    return false\n  }\n\n  getClass () {\n    return IntersectionMatrix\n  }\n\n  get interfaces_ () {\n    return [Cloneable]\n  }\n}\nIntersectionMatrix.constructor_ = function () {\n  this._matrix = null\n  if (arguments.length === 0) {\n    this._matrix = Array(3).fill().map(() => Array(3))\n    this.setAll(Dimension.FALSE)\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'string') {\n      const elements = arguments[0]\n      IntersectionMatrix.constructor_.call(this)\n      this.set(elements)\n    } else if (arguments[0] instanceof IntersectionMatrix) {\n      const other = arguments[0]\n      IntersectionMatrix.constructor_.call(this)\n      this._matrix[Location.INTERIOR][Location.INTERIOR] = other._matrix[Location.INTERIOR][Location.INTERIOR]\n      this._matrix[Location.INTERIOR][Location.BOUNDARY] = other._matrix[Location.INTERIOR][Location.BOUNDARY]\n      this._matrix[Location.INTERIOR][Location.EXTERIOR] = other._matrix[Location.INTERIOR][Location.EXTERIOR]\n      this._matrix[Location.BOUNDARY][Location.INTERIOR] = other._matrix[Location.BOUNDARY][Location.INTERIOR]\n      this._matrix[Location.BOUNDARY][Location.BOUNDARY] = other._matrix[Location.BOUNDARY][Location.BOUNDARY]\n      this._matrix[Location.BOUNDARY][Location.EXTERIOR] = other._matrix[Location.BOUNDARY][Location.EXTERIOR]\n      this._matrix[Location.EXTERIOR][Location.INTERIOR] = other._matrix[Location.EXTERIOR][Location.INTERIOR]\n      this._matrix[Location.EXTERIOR][Location.BOUNDARY] = other._matrix[Location.EXTERIOR][Location.BOUNDARY]\n      this._matrix[Location.EXTERIOR][Location.EXTERIOR] = other._matrix[Location.EXTERIOR][Location.EXTERIOR]\n    }\n  }\n}\n","import Orientation from './Orientation'\nexport default class Angle {\n  constructor () {\n    Angle.constructor_.apply(this, arguments)\n  }\n\n  static toDegrees (radians) {\n    return radians * 180 / Math.PI\n  }\n\n  static normalize (angle) {\n    while (angle > Math.PI) angle -= Angle.PI_TIMES_2\n    while (angle <= -Math.PI) angle += Angle.PI_TIMES_2\n    return angle\n  }\n\n  static angle () {\n    if (arguments.length === 1) {\n      const p = arguments[0]\n      return Math.atan2(p.y, p.x)\n    } else if (arguments.length === 2) {\n      const p0 = arguments[0]; const p1 = arguments[1]\n      const dx = p1.x - p0.x\n      const dy = p1.y - p0.y\n      return Math.atan2(dy, dx)\n    }\n  }\n\n  static isAcute (p0, p1, p2) {\n    const dx0 = p0.x - p1.x\n    const dy0 = p0.y - p1.y\n    const dx1 = p2.x - p1.x\n    const dy1 = p2.y - p1.y\n    const dotprod = dx0 * dx1 + dy0 * dy1\n    return dotprod > 0\n  }\n\n  static isObtuse (p0, p1, p2) {\n    const dx0 = p0.x - p1.x\n    const dy0 = p0.y - p1.y\n    const dx1 = p2.x - p1.x\n    const dy1 = p2.y - p1.y\n    const dotprod = dx0 * dx1 + dy0 * dy1\n    return dotprod < 0\n  }\n\n  static interiorAngle (p0, p1, p2) {\n    const anglePrev = Angle.angle(p1, p0)\n    const angleNext = Angle.angle(p1, p2)\n    return Math.abs(angleNext - anglePrev)\n  }\n\n  static normalizePositive (angle) {\n    if (angle < 0.0) {\n      while (angle < 0.0) angle += Angle.PI_TIMES_2\n      if (angle >= Angle.PI_TIMES_2) angle = 0.0\n    } else {\n      while (angle >= Angle.PI_TIMES_2) angle -= Angle.PI_TIMES_2\n      if (angle < 0.0) angle = 0.0\n    }\n    return angle\n  }\n\n  static angleBetween (tip1, tail, tip2) {\n    const a1 = Angle.angle(tail, tip1)\n    const a2 = Angle.angle(tail, tip2)\n    return Angle.diff(a1, a2)\n  }\n\n  static diff (ang1, ang2) {\n    let delAngle = null\n    if (ang1 < ang2) {\n      delAngle = ang2 - ang1\n    } else {\n      delAngle = ang1 - ang2\n    }\n    if (delAngle > Math.PI) {\n      delAngle = 2 * Math.PI - delAngle\n    }\n    return delAngle\n  }\n\n  static toRadians (angleDegrees) {\n    return angleDegrees * Math.PI / 180.0\n  }\n\n  static getTurn (ang1, ang2) {\n    const crossproduct = Math.sin(ang2 - ang1)\n    if (crossproduct > 0) {\n      return Angle.COUNTERCLOCKWISE\n    }\n    if (crossproduct < 0) {\n      return Angle.CLOCKWISE\n    }\n    return Angle.NONE\n  }\n\n  static angleBetweenOriented (tip1, tail, tip2) {\n    const a1 = Angle.angle(tail, tip1)\n    const a2 = Angle.angle(tail, tip2)\n    const angDel = a2 - a1\n    if (angDel <= -Math.PI) return angDel + Angle.PI_TIMES_2\n    if (angDel > Math.PI) return angDel - Angle.PI_TIMES_2\n    return angDel\n  }\n\n  getClass () {\n    return Angle\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nAngle.constructor_ = function () {}\nAngle.PI_TIMES_2 = 2.0 * Math.PI\nAngle.PI_OVER_2 = Math.PI / 2.0\nAngle.PI_OVER_4 = Math.PI / 4.0\nAngle.COUNTERCLOCKWISE = Orientation.COUNTERCLOCKWISE\nAngle.CLOCKWISE = Orientation.CLOCKWISE\nAngle.NONE = Orientation.COLLINEAR\n","import Coordinate from './Coordinate'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException'\nimport Angle from '../algorithm/Angle'\nimport HCoordinate from '../algorithm/HCoordinate'\nexport default class Triangle {\n  constructor () {\n    Triangle.constructor_.apply(this, arguments)\n  }\n\n  static area (a, b, c) {\n    return Math.abs(((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2)\n  }\n\n  static signedArea (a, b, c) {\n    return ((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2\n  }\n\n  static det (m00, m01, m10, m11) {\n    return m00 * m11 - m01 * m10\n  }\n\n  static interpolateZ (p, v0, v1, v2) {\n    const x0 = v0.x\n    const y0 = v0.y\n    const a = v1.x - x0\n    const b = v2.x - x0\n    const c = v1.y - y0\n    const d = v2.y - y0\n    const det = a * d - b * c\n    const dx = p.x - x0\n    const dy = p.y - y0\n    const t = (d * dx - b * dy) / det\n    const u = (-c * dx + a * dy) / det\n    const z = v0.z + t * (v1.z - v0.z) + u * (v2.z - v0.z)\n    return z\n  }\n\n  static longestSideLength (a, b, c) {\n    const lenAB = a.distance(b)\n    const lenBC = b.distance(c)\n    const lenCA = c.distance(a)\n    let maxLen = lenAB\n    if (lenBC > maxLen) maxLen = lenBC\n    if (lenCA > maxLen) maxLen = lenCA\n    return maxLen\n  }\n\n  static isAcute (a, b, c) {\n    if (!Angle.isAcute(a, b, c)) return false\n    if (!Angle.isAcute(b, c, a)) return false\n    if (!Angle.isAcute(c, a, b)) return false\n    return true\n  }\n\n  static circumcentre (a, b, c) {\n    const cx = c.x\n    const cy = c.y\n    const ax = a.x - cx\n    const ay = a.y - cy\n    const bx = b.x - cx\n    const by = b.y - cy\n    const denom = 2 * Triangle.det(ax, ay, bx, by)\n    const numx = Triangle.det(ay, ax * ax + ay * ay, by, bx * bx + by * by)\n    const numy = Triangle.det(ax, ax * ax + ay * ay, bx, bx * bx + by * by)\n    const ccx = cx - numx / denom\n    const ccy = cy + numy / denom\n    return new Coordinate(ccx, ccy)\n  }\n\n  static perpendicularBisector (a, b) {\n    const dx = b.x - a.x\n    const dy = b.y - a.y\n    const l1 = new HCoordinate(a.x + dx / 2.0, a.y + dy / 2.0, 1.0)\n    const l2 = new HCoordinate(a.x - dy + dx / 2.0, a.y + dx + dy / 2.0, 1.0)\n    return new HCoordinate(l1, l2)\n  }\n\n  static angleBisector (a, b, c) {\n    const len0 = b.distance(a)\n    const len2 = b.distance(c)\n    const frac = len0 / (len0 + len2)\n    const dx = c.x - a.x\n    const dy = c.y - a.y\n    const splitPt = new Coordinate(a.x + frac * dx, a.y + frac * dy)\n    return splitPt\n  }\n\n  static area3D (a, b, c) {\n    const ux = b.x - a.x\n    const uy = b.y - a.y\n    const uz = b.z - a.z\n    const vx = c.x - a.x\n    const vy = c.y - a.y\n    const vz = c.z - a.z\n    const crossx = uy * vz - uz * vy\n    const crossy = uz * vx - ux * vz\n    const crossz = ux * vy - uy * vx\n    const absSq = crossx * crossx + crossy * crossy + crossz * crossz\n    const area3D = Math.sqrt(absSq) / 2\n    return area3D\n  }\n\n  static centroid (a, b, c) {\n    const x = (a.x + b.x + c.x) / 3\n    const y = (a.y + b.y + c.y) / 3\n    return new Coordinate(x, y)\n  }\n\n  static inCentre (a, b, c) {\n    const len0 = b.distance(c)\n    const len1 = a.distance(c)\n    const len2 = a.distance(b)\n    const circum = len0 + len1 + len2\n    const inCentreX = (len0 * a.x + len1 * b.x + len2 * c.x) / circum\n    const inCentreY = (len0 * a.y + len1 * b.y + len2 * c.y) / circum\n    return new Coordinate(inCentreX, inCentreY)\n  }\n\n  area () {\n    return Triangle.area(this.p0, this.p1, this.p2)\n  }\n\n  signedArea () {\n    return Triangle.signedArea(this.p0, this.p1, this.p2)\n  }\n\n  interpolateZ (p) {\n    if (p === null) throw new IllegalArgumentException('Supplied point is null.')\n    return Triangle.interpolateZ(p, this.p0, this.p1, this.p2)\n  }\n\n  longestSideLength () {\n    return Triangle.longestSideLength(this.p0, this.p1, this.p2)\n  }\n\n  isAcute () {\n    return Triangle.isAcute(this.p0, this.p1, this.p2)\n  }\n\n  circumcentre () {\n    return Triangle.circumcentre(this.p0, this.p1, this.p2)\n  }\n\n  area3D () {\n    return Triangle.area3D(this.p0, this.p1, this.p2)\n  }\n\n  centroid () {\n    return Triangle.centroid(this.p0, this.p1, this.p2)\n  }\n\n  inCentre () {\n    return Triangle.inCentre(this.p0, this.p1, this.p2)\n  }\n\n  getClass () {\n    return Triangle\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nTriangle.constructor_ = function () {\n  this.p0 = null\n  this.p1 = null\n  this.p2 = null\n  const p0 = arguments[0]; const p1 = arguments[1]; const p2 = arguments[2]\n  this.p0 = p0\n  this.p1 = p1\n  this.p2 = p2\n}\n","import Exception from '../../../../../java/lang/Exception'\nexport default class NoninvertibleTransformationException extends Exception {\n  constructor () {\n    super()\n    NoninvertibleTransformationException.constructor_.apply(this, arguments)\n  }\n\n  getClass () {\n    return NoninvertibleTransformationException\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nNoninvertibleTransformationException.constructor_ = function () {\n  if (arguments.length === 0) {\n    Exception.constructor_.call(this)\n  } else if (arguments.length === 1) {\n    const msg = arguments[0]\n    Exception.constructor_.call(this, msg)\n  }\n}\n","import NoninvertibleTransformationException from './NoninvertibleTransformationException'\nimport hasInterface from '../../../../../hasInterface'\nimport Coordinate from '../Coordinate'\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException'\nimport Exception from '../../../../../java/lang/Exception'\nimport CoordinateSequence from '../CoordinateSequence'\nimport Cloneable from '../../../../../java/lang/Cloneable'\nimport CoordinateSequenceFilter from '../CoordinateSequenceFilter'\nimport Assert from '../../util/Assert'\nexport default class AffineTransformation {\n  constructor () {\n    AffineTransformation.constructor_.apply(this, arguments)\n  }\n\n  static translationInstance (x, y) {\n    const trans = new AffineTransformation()\n    trans.setToTranslation(x, y)\n    return trans\n  }\n\n  static shearInstance (xShear, yShear) {\n    const trans = new AffineTransformation()\n    trans.setToShear(xShear, yShear)\n    return trans\n  }\n\n  static reflectionInstance () {\n    if (arguments.length === 2) {\n      const x = arguments[0]; const y = arguments[1]\n      const trans = new AffineTransformation()\n      trans.setToReflection(x, y)\n      return trans\n    } else if (arguments.length === 4) {\n      const x0 = arguments[0]; const y0 = arguments[1]; const x1 = arguments[2]; const y1 = arguments[3]\n      const trans = new AffineTransformation()\n      trans.setToReflection(x0, y0, x1, y1)\n      return trans\n    }\n  }\n\n  static rotationInstance () {\n    if (arguments.length === 1) {\n      const theta = arguments[0]\n      return AffineTransformation.rotationInstance(Math.sin(theta), Math.cos(theta))\n    } else if (arguments.length === 2) {\n      const sinTheta = arguments[0]; const cosTheta = arguments[1]\n      const trans = new AffineTransformation()\n      trans.setToRotation(sinTheta, cosTheta)\n      return trans\n    } else if (arguments.length === 3) {\n      const theta = arguments[0]; const x = arguments[1]; const y = arguments[2]\n      return AffineTransformation.rotationInstance(Math.sin(theta), Math.cos(theta), x, y)\n    } else if (arguments.length === 4) {\n      const sinTheta = arguments[0]; const cosTheta = arguments[1]; const x = arguments[2]; const y = arguments[3]\n      const trans = new AffineTransformation()\n      trans.setToRotation(sinTheta, cosTheta, x, y)\n      return trans\n    }\n  }\n\n  static scaleInstance () {\n    if (arguments.length === 2) {\n      const xScale = arguments[0]; const yScale = arguments[1]\n      const trans = new AffineTransformation()\n      trans.setToScale(xScale, yScale)\n      return trans\n    } else if (arguments.length === 4) {\n      const xScale = arguments[0]; const yScale = arguments[1]; const x = arguments[2]; const y = arguments[3]\n      const trans = new AffineTransformation()\n      trans.translate(-x, -y)\n      trans.scale(xScale, yScale)\n      trans.translate(x, y)\n      return trans\n    }\n  }\n\n  setToReflectionBasic (x0, y0, x1, y1) {\n    if (x0 === x1 && y0 === y1) {\n      throw new IllegalArgumentException('Reflection line points must be distinct')\n    }\n    const dx = x1 - x0\n    const dy = y1 - y0\n    const d = Math.sqrt(dx * dx + dy * dy)\n    const sin = dy / d\n    const cos = dx / d\n    const cs2 = 2 * sin * cos\n    const c2s2 = cos * cos - sin * sin\n    this._m00 = c2s2\n    this._m01 = cs2\n    this._m02 = 0.0\n    this._m10 = cs2\n    this._m11 = -c2s2\n    this._m12 = 0.0\n    return this\n  }\n\n  getInverse () {\n    const det = this.getDeterminant()\n    if (det === 0) throw new NoninvertibleTransformationException('Transformation is non-invertible')\n    const im00 = this._m11 / det\n    const im10 = -this._m10 / det\n    const im01 = -this._m01 / det\n    const im11 = this._m00 / det\n    const im02 = (this._m01 * this._m12 - this._m02 * this._m11) / det\n    const im12 = (-this._m00 * this._m12 + this._m10 * this._m02) / det\n    return new AffineTransformation(im00, im01, im02, im10, im11, im12)\n  }\n\n  compose (trans) {\n    const mp00 = trans._m00 * this._m00 + trans._m01 * this._m10\n    const mp01 = trans._m00 * this._m01 + trans._m01 * this._m11\n    const mp02 = trans._m00 * this._m02 + trans._m01 * this._m12 + trans._m02\n    const mp10 = trans._m10 * this._m00 + trans._m11 * this._m10\n    const mp11 = trans._m10 * this._m01 + trans._m11 * this._m11\n    const mp12 = trans._m10 * this._m02 + trans._m11 * this._m12 + trans._m12\n    this._m00 = mp00\n    this._m01 = mp01\n    this._m02 = mp02\n    this._m10 = mp10\n    this._m11 = mp11\n    this._m12 = mp12\n    return this\n  }\n\n  equals (obj) {\n    if (obj === null) return false\n    if (!(obj instanceof AffineTransformation)) return false\n    const trans = obj\n    return this._m00 === trans._m00 && this._m01 === trans._m01 && this._m02 === trans._m02 && this._m10 === trans._m10 && this._m11 === trans._m11 && this._m12 === trans._m12\n  }\n\n  setToScale (xScale, yScale) {\n    this._m00 = xScale\n    this._m01 = 0.0\n    this._m02 = 0.0\n    this._m10 = 0.0\n    this._m11 = yScale\n    this._m12 = 0.0\n    return this\n  }\n\n  isIdentity () {\n    return this._m00 === 1 && this._m01 === 0 && this._m02 === 0 && this._m10 === 0 && this._m11 === 1 && this._m12 === 0\n  }\n\n  scale (xScale, yScale) {\n    this.compose(AffineTransformation.scaleInstance(xScale, yScale))\n    return this\n  }\n\n  setToIdentity () {\n    this._m00 = 1.0\n    this._m01 = 0.0\n    this._m02 = 0.0\n    this._m10 = 0.0\n    this._m11 = 1.0\n    this._m12 = 0.0\n    return this\n  }\n\n  isGeometryChanged () {\n    return true\n  }\n\n  setTransformation () {\n    if (arguments.length === 1) {\n      const trans = arguments[0]\n      this._m00 = trans._m00\n      this._m01 = trans._m01\n      this._m02 = trans._m02\n      this._m10 = trans._m10\n      this._m11 = trans._m11\n      this._m12 = trans._m12\n      return this\n    } else if (arguments.length === 6) {\n      const m00 = arguments[0]; const m01 = arguments[1]; const m02 = arguments[2]; const m10 = arguments[3]; const m11 = arguments[4]; const m12 = arguments[5]\n      this._m00 = m00\n      this._m01 = m01\n      this._m02 = m02\n      this._m10 = m10\n      this._m11 = m11\n      this._m12 = m12\n      return this\n    }\n  }\n\n  setToRotation () {\n    if (arguments.length === 1) {\n      const theta = arguments[0]\n      this.setToRotation(Math.sin(theta), Math.cos(theta))\n      return this\n    } else if (arguments.length === 2) {\n      const sinTheta = arguments[0]; const cosTheta = arguments[1]\n      this._m00 = cosTheta\n      this._m01 = -sinTheta\n      this._m02 = 0.0\n      this._m10 = sinTheta\n      this._m11 = cosTheta\n      this._m12 = 0.0\n      return this\n    } else if (arguments.length === 3) {\n      const theta = arguments[0]; const x = arguments[1]; const y = arguments[2]\n      this.setToRotation(Math.sin(theta), Math.cos(theta), x, y)\n      return this\n    } else if (arguments.length === 4) {\n      const sinTheta = arguments[0]; const cosTheta = arguments[1]; const x = arguments[2]; const y = arguments[3]\n      this._m00 = cosTheta\n      this._m01 = -sinTheta\n      this._m02 = x - x * cosTheta + y * sinTheta\n      this._m10 = sinTheta\n      this._m11 = cosTheta\n      this._m12 = y - x * sinTheta - y * cosTheta\n      return this\n    }\n  }\n\n  getMatrixEntries () {\n    return [this._m00, this._m01, this._m02, this._m10, this._m11, this._m12]\n  }\n\n  filter (seq, i) {\n    this.transform(seq, i)\n  }\n\n  rotate () {\n    if (arguments.length === 1) {\n      const theta = arguments[0]\n      this.compose(AffineTransformation.rotationInstance(theta))\n      return this\n    } else if (arguments.length === 2) {\n      const sinTheta = arguments[0]; const cosTheta = arguments[1]\n      this.compose(AffineTransformation.rotationInstance(sinTheta, cosTheta))\n      return this\n    } else if (arguments.length === 3) {\n      const theta = arguments[0]; const x = arguments[1]; const y = arguments[2]\n      this.compose(AffineTransformation.rotationInstance(theta, x, y))\n      return this\n    } else if (arguments.length === 4) {\n      const sinTheta = arguments[0]; const cosTheta = arguments[1]; const x = arguments[2]; const y = arguments[3]\n      this.compose(AffineTransformation.rotationInstance(sinTheta, cosTheta))\n      return this\n    }\n  }\n\n  getDeterminant () {\n    return this._m00 * this._m11 - this._m01 * this._m10\n  }\n\n  composeBefore (trans) {\n    const mp00 = this._m00 * trans._m00 + this._m01 * trans._m10\n    const mp01 = this._m00 * trans._m01 + this._m01 * trans._m11\n    const mp02 = this._m00 * trans._m02 + this._m01 * trans._m12 + this._m02\n    const mp10 = this._m10 * trans._m00 + this._m11 * trans._m10\n    const mp11 = this._m10 * trans._m01 + this._m11 * trans._m11\n    const mp12 = this._m10 * trans._m02 + this._m11 * trans._m12 + this._m12\n    this._m00 = mp00\n    this._m01 = mp01\n    this._m02 = mp02\n    this._m10 = mp10\n    this._m11 = mp11\n    this._m12 = mp12\n    return this\n  }\n\n  setToShear (xShear, yShear) {\n    this._m00 = 1.0\n    this._m01 = xShear\n    this._m02 = 0.0\n    this._m10 = yShear\n    this._m11 = 1.0\n    this._m12 = 0.0\n    return this\n  }\n\n  isDone () {\n    return false\n  }\n\n  clone () {\n    try {\n      return null\n    } catch (ex) {\n      if (ex instanceof Exception) {\n        Assert.shouldNeverReachHere()\n      } else throw ex\n    } finally {}\n    return null\n  }\n\n  translate (x, y) {\n    this.compose(AffineTransformation.translationInstance(x, y))\n    return this\n  }\n\n  setToReflection () {\n    if (arguments.length === 2) {\n      const x = arguments[0]; const y = arguments[1]\n      if (x === 0.0 && y === 0.0) {\n        throw new IllegalArgumentException('Reflection vector must be non-zero')\n      }\n      if (x === y) {\n        this._m00 = 0.0\n        this._m01 = 1.0\n        this._m02 = 0.0\n        this._m10 = 1.0\n        this._m11 = 0.0\n        this._m12 = 0.0\n        return this\n      }\n      const d = Math.sqrt(x * x + y * y)\n      const sin = y / d\n      const cos = x / d\n      this.rotate(-sin, cos)\n      this.scale(1, -1)\n      this.rotate(sin, cos)\n      return this\n    } else if (arguments.length === 4) {\n      const x0 = arguments[0]; const y0 = arguments[1]; const x1 = arguments[2]; const y1 = arguments[3]\n      if (x0 === x1 && y0 === y1) {\n        throw new IllegalArgumentException('Reflection line points must be distinct')\n      }\n      this.setToTranslation(-x0, -y0)\n      const dx = x1 - x0\n      const dy = y1 - y0\n      const d = Math.sqrt(dx * dx + dy * dy)\n      const sin = dy / d\n      const cos = dx / d\n      this.rotate(-sin, cos)\n      this.scale(1, -1)\n      this.rotate(sin, cos)\n      this.translate(x0, y0)\n      return this\n    }\n  }\n\n  toString () {\n    return 'AffineTransformation[[' + this._m00 + ', ' + this._m01 + ', ' + this._m02 + '], [' + this._m10 + ', ' + this._m11 + ', ' + this._m12 + ']]'\n  }\n\n  setToTranslation (dx, dy) {\n    this._m00 = 1.0\n    this._m01 = 0.0\n    this._m02 = dx\n    this._m10 = 0.0\n    this._m11 = 1.0\n    this._m12 = dy\n    return this\n  }\n\n  shear (xShear, yShear) {\n    this.compose(AffineTransformation.shearInstance(xShear, yShear))\n    return this\n  }\n\n  transform () {\n    if (arguments.length === 1) {\n      const g = arguments[0]\n      const g2 = g.copy()\n      g2.apply(this)\n      return g2\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n        const src = arguments[0]; const dest = arguments[1]\n        const xp = this._m00 * src.x + this._m01 * src.y + this._m02\n        const yp = this._m10 * src.x + this._m11 * src.y + this._m12\n        dest.x = xp\n        dest.y = yp\n        return dest\n      } else if (hasInterface(arguments[0], CoordinateSequence) && Number.isInteger(arguments[1])) {\n        const seq = arguments[0]; const i = arguments[1]\n        const xp = this._m00 * seq.getOrdinate(i, 0) + this._m01 * seq.getOrdinate(i, 1) + this._m02\n        const yp = this._m10 * seq.getOrdinate(i, 0) + this._m11 * seq.getOrdinate(i, 1) + this._m12\n        seq.setOrdinate(i, 0, xp)\n        seq.setOrdinate(i, 1, yp)\n      }\n    }\n  }\n\n  reflect () {\n    if (arguments.length === 2) {\n      const x = arguments[0]; const y = arguments[1]\n      this.compose(AffineTransformation.reflectionInstance(x, y))\n      return this\n    } else if (arguments.length === 4) {\n      const x0 = arguments[0]; const y0 = arguments[1]; const x1 = arguments[2]; const y1 = arguments[3]\n      this.compose(AffineTransformation.reflectionInstance(x0, y0, x1, y1))\n      return this\n    }\n  }\n\n  getClass () {\n    return AffineTransformation\n  }\n\n  get interfaces_ () {\n    return [Cloneable, CoordinateSequenceFilter]\n  }\n}\nAffineTransformation.constructor_ = function () {\n  this._m00 = null\n  this._m01 = null\n  this._m02 = null\n  this._m10 = null\n  this._m11 = null\n  this._m12 = null\n  if (arguments.length === 0) {\n    this.setToIdentity()\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      const matrix = arguments[0]\n      this._m00 = matrix[0]\n      this._m01 = matrix[1]\n      this._m02 = matrix[2]\n      this._m10 = matrix[3]\n      this._m11 = matrix[4]\n      this._m12 = matrix[5]\n    } else if (arguments[0] instanceof AffineTransformation) {\n      const trans = arguments[0]\n      this.setTransformation(trans)\n    }\n  } else if (arguments.length === 6) {\n    if (typeof arguments[5] === 'number' && (typeof arguments[4] === 'number' && (typeof arguments[3] === 'number' && (typeof arguments[2] === 'number' && (typeof arguments[0] === 'number' && typeof arguments[1] === 'number'))))) {\n      const m00 = arguments[0]; const m01 = arguments[1]; const m02 = arguments[2]; const m10 = arguments[3]; const m11 = arguments[4]; const m12 = arguments[5]\n      this.setTransformation(m00, m01, m02, m10, m11, m12)\n    } else if (arguments[5] instanceof Coordinate && (arguments[4] instanceof Coordinate && (arguments[3] instanceof Coordinate && (arguments[2] instanceof Coordinate && (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate))))) {\n      const src0 = arguments[0]; const src1 = arguments[1]; const src2 = arguments[2]; const dest0 = arguments[3]; const dest1 = arguments[4]; const dest2 = arguments[5]\n    }\n  }\n}\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException'\nexport default class Matrix {\n  constructor () {\n    Matrix.constructor_.apply(this, arguments)\n  }\n\n  static solve (a, b) {\n    const n = b.length\n    if (a.length !== n || a[0].length !== n) throw new IllegalArgumentException('Matrix A is incorrectly sized')\n    for (let i = 0; i < n; i++) {\n      let maxElementRow = i\n      for (let j = i + 1; j < n; j++) if (Math.abs(a[j][i]) > Math.abs(a[maxElementRow][i])) maxElementRow = j\n      if (a[maxElementRow][i] === 0.0) return null\n      Matrix.swapRows(a, i, maxElementRow)\n      Matrix.swapRows(b, i, maxElementRow)\n      for (let j = i + 1; j < n; j++) {\n        const rowFactor = a[j][i] / a[i][i]\n        for (let k = n - 1; k >= i; k--) a[j][k] -= a[i][k] * rowFactor\n        b[j] -= b[i] * rowFactor\n      }\n    }\n    const solution = new Array(n).fill(null)\n    for (let j = n - 1; j >= 0; j--) {\n      let t = 0.0\n      for (let k = j + 1; k < n; k++) t += a[j][k] * solution[k]\n      solution[j] = (b[j] - t) / a[j][j]\n    }\n    return solution\n  }\n\n  static swapRows () {\n    if (Number.isInteger(arguments[2]) && (arguments[0] instanceof Array && Number.isInteger(arguments[1]))) {\n      const m = arguments[0]; const i = arguments[1]; const j = arguments[2]\n      if (i === j) return null\n      for (let col = 0; col < m[0].length; col++) {\n        const temp = m[i][col]\n        m[i][col] = m[j][col]\n        m[j][col] = temp\n      }\n    } else if (Number.isInteger(arguments[2]) && (arguments[0] instanceof Array && Number.isInteger(arguments[1]))) {\n      const m = arguments[0]; const i = arguments[1]; const j = arguments[2]\n      if (i === j) return null\n      const temp = m[i]\n      m[i] = m[j]\n      m[j] = temp\n    }\n  }\n\n  getClass () {\n    return Matrix\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nMatrix.constructor_ = function () {}\n","import AffineTransformation from './AffineTransformation'\nimport Matrix from '../../math/Matrix'\nexport default class AffineTransformationBuilder {\n  constructor () {\n    AffineTransformationBuilder.constructor_.apply(this, arguments)\n  }\n\n  solve (b) {\n    const a = [[this._src0.x, this._src0.y, 1], [this._src1.x, this._src1.y, 1], [this._src2.x, this._src2.y, 1]]\n    return Matrix.solve(a, b)\n  }\n\n  compute () {\n    const bx = [this._dest0.x, this._dest1.x, this._dest2.x]\n    const row0 = this.solve(bx)\n    if (row0 === null) return false\n    this._m00 = row0[0]\n    this._m01 = row0[1]\n    this._m02 = row0[2]\n    const by = [this._dest0.y, this._dest1.y, this._dest2.y]\n    const row1 = this.solve(by)\n    if (row1 === null) return false\n    this._m10 = row1[0]\n    this._m11 = row1[1]\n    this._m12 = row1[2]\n    return true\n  }\n\n  getTransformation () {\n    const isSolvable = this.compute()\n    if (isSolvable) return new AffineTransformation(this._m00, this._m01, this._m02, this._m10, this._m11, this._m12)\n    return null\n  }\n\n  getClass () {\n    return AffineTransformationBuilder\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nAffineTransformationBuilder.constructor_ = function () {\n  this._src0 = null\n  this._src1 = null\n  this._src2 = null\n  this._dest0 = null\n  this._dest1 = null\n  this._dest2 = null\n  this._m00 = null\n  this._m01 = null\n  this._m02 = null\n  this._m10 = null\n  this._m11 = null\n  this._m12 = null\n  const src0 = arguments[0]; const src1 = arguments[1]; const src2 = arguments[2]; const dest0 = arguments[3]; const dest1 = arguments[4]; const dest2 = arguments[5]\n  this._src0 = src0\n  this._src1 = src1\n  this._src2 = src2\n  this._dest0 = dest0\n  this._dest1 = dest1\n  this._dest2 = dest2\n}\n","import Coordinate from '../Coordinate'\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException'\nimport AffineTransformation from './AffineTransformation'\nimport AffineTransformationBuilder from './AffineTransformationBuilder'\nimport Angle from '../../algorithm/Angle'\nexport default class AffineTransformationFactory {\n  constructor () {\n    AffineTransformationFactory.constructor_.apply(this, arguments)\n  }\n\n  static createFromBaseLines (src0, src1, dest0, dest1) {\n    const rotPt = new Coordinate(src0.x + dest1.x - dest0.x, src0.y + dest1.y - dest0.y)\n    const ang = Angle.angleBetweenOriented(src1, src0, rotPt)\n    const srcDist = src1.distance(src0)\n    const destDist = dest1.distance(dest0)\n    if (srcDist === 0.0) return new AffineTransformation()\n    const scale = destDist / srcDist\n    const trans = AffineTransformation.translationInstance(-src0.x, -src0.y)\n    trans.rotate(ang)\n    trans.scale(scale, scale)\n    trans.translate(dest0.x, dest0.y)\n    return trans\n  }\n\n  static createFromControlVectors () {\n    if (arguments.length === 2) {\n      if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n        const src0 = arguments[0]; const dest0 = arguments[1]\n        const dx = dest0.x - src0.x\n        const dy = dest0.y - src0.y\n        return AffineTransformation.translationInstance(dx, dy)\n      } else if (arguments[0] instanceof Array && arguments[1] instanceof Array) {\n        const src = arguments[0]; const dest = arguments[1]\n        if (src.length !== dest.length) throw new IllegalArgumentException('Src and Dest arrays are not the same length')\n        if (src.length <= 0) throw new IllegalArgumentException('Too few control points')\n        if (src.length > 3) throw new IllegalArgumentException('Too many control points')\n        if (src.length === 1) return AffineTransformationFactory.createFromControlVectors(src[0], dest[0])\n        if (src.length === 2) return AffineTransformationFactory.createFromControlVectors(src[0], src[1], dest[0], dest[1])\n        return AffineTransformationFactory.createFromControlVectors(src[0], src[1], src[2], dest[0], dest[1], dest[2])\n      }\n    } else if (arguments.length === 4) {\n      const src0 = arguments[0]; const src1 = arguments[1]; const dest0 = arguments[2]; const dest1 = arguments[3]\n      const rotPt = new Coordinate(dest1.x - dest0.x, dest1.y - dest0.y)\n      const ang = Angle.angleBetweenOriented(src1, src0, rotPt)\n      const srcDist = src1.distance(src0)\n      const destDist = dest1.distance(dest0)\n      if (srcDist === 0.0) return null\n      const scale = destDist / srcDist\n      const trans = AffineTransformation.translationInstance(-src0.x, -src0.y)\n      trans.rotate(ang)\n      trans.scale(scale, scale)\n      trans.translate(dest0.x, dest0.y)\n      return trans\n    } else if (arguments.length === 6) {\n      const src0 = arguments[0]; const src1 = arguments[1]; const src2 = arguments[2]; const dest0 = arguments[3]; const dest1 = arguments[4]; const dest2 = arguments[5]\n      const builder = new AffineTransformationBuilder(src0, src1, src2, dest0, dest1, dest2)\n      return builder.getTransformation()\n    }\n  }\n\n  getClass () {\n    return AffineTransformationFactory\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nAffineTransformationFactory.constructor_ = function () {}\n","import LineString from '../LineString'\nimport Point from '../Point'\nimport GeometryComponentFilter from '../GeometryComponentFilter'\nimport ArrayList from '../../../../../java/util/ArrayList'\nexport default class ComponentCoordinateExtracter {\n  constructor () {\n    ComponentCoordinateExtracter.constructor_.apply(this, arguments)\n  }\n\n  static getCoordinates (geom) {\n    const coords = new ArrayList()\n    geom.apply(new ComponentCoordinateExtracter(coords))\n    return coords\n  }\n\n  filter (geom) {\n    if (geom instanceof LineString || geom instanceof Point) this._coords.add(geom.getCoordinate())\n  }\n\n  getClass () {\n    return ComponentCoordinateExtracter\n  }\n\n  get interfaces_ () {\n    return [GeometryComponentFilter]\n  }\n}\nComponentCoordinateExtracter.constructor_ = function () {\n  this._coords = null\n  const coords = arguments[0]\n  this._coords = coords\n}\n","import GeometryFactory from '../GeometryFactory'\nimport ArrayList from '../../../../../java/util/ArrayList'\nexport default class GeometryCollectionMapper {\n  constructor () {\n    GeometryCollectionMapper.constructor_.apply(this, arguments)\n  }\n\n  static map (gc, op) {\n    const mapper = new GeometryCollectionMapper(op)\n    return mapper.map(gc)\n  }\n\n  map (gc) {\n    const mapped = new ArrayList()\n    for (let i = 0; i < gc.getNumGeometries(); i++) {\n      const g = this._mapOp.map(gc.getGeometryN(i))\n      if (!g.isEmpty()) mapped.add(g)\n    }\n    return gc.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(mapped))\n  }\n\n  getClass () {\n    return GeometryCollectionMapper\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nGeometryCollectionMapper.constructor_ = function () {\n  this._mapOp = null\n  const mapOp = arguments[0]\n  this._mapOp = mapOp\n}\n","import ArrayList from '../../../../../java/util/ArrayList'\nexport default class GeometryCombiner {\n  constructor () {\n    GeometryCombiner.constructor_.apply(this, arguments)\n  }\n\n  static combine () {\n    if (arguments.length === 1) {\n      const geoms = arguments[0]\n      const combiner = new GeometryCombiner(geoms)\n      return combiner.combine()\n    } else if (arguments.length === 2) {\n      const g0 = arguments[0]; const g1 = arguments[1]\n      const combiner = new GeometryCombiner(GeometryCombiner.createList(g0, g1))\n      return combiner.combine()\n    } else if (arguments.length === 3) {\n      const g0 = arguments[0]; const g1 = arguments[1]; const g2 = arguments[2]\n      const combiner = new GeometryCombiner(GeometryCombiner.createList(g0, g1, g2))\n      return combiner.combine()\n    }\n  }\n\n  static extractFactory (geoms) {\n    if (geoms.isEmpty()) return null\n    return geoms.iterator().next().getFactory()\n  }\n\n  static createList () {\n    if (arguments.length === 2) {\n      const obj0 = arguments[0]; const obj1 = arguments[1]\n      const list = new ArrayList()\n      list.add(obj0)\n      list.add(obj1)\n      return list\n    } else if (arguments.length === 3) {\n      const obj0 = arguments[0]; const obj1 = arguments[1]; const obj2 = arguments[2]\n      const list = new ArrayList()\n      list.add(obj0)\n      list.add(obj1)\n      list.add(obj2)\n      return list\n    }\n  }\n\n  extractElements (geom, elems) {\n    if (geom === null) return null\n    for (let i = 0; i < geom.getNumGeometries(); i++) {\n      const elemGeom = geom.getGeometryN(i)\n      if (this._skipEmpty && elemGeom.isEmpty()) continue\n      elems.add(elemGeom)\n    }\n  }\n\n  combine () {\n    const elems = new ArrayList()\n    for (let i = this._inputGeoms.iterator(); i.hasNext();) {\n      const g = i.next()\n      this.extractElements(g, elems)\n    }\n    if (elems.size() === 0) {\n      if (this._geomFactory !== null) {\n        return this._geomFactory.createGeometryCollection()\n      }\n      return null\n    }\n    return this._geomFactory.buildGeometry(elems)\n  }\n\n  getClass () {\n    return GeometryCombiner\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nGeometryCombiner.constructor_ = function () {\n  this._geomFactory = null\n  this._skipEmpty = false\n  this._inputGeoms = null\n  const geoms = arguments[0]\n  this._geomFactory = GeometryCombiner.extractFactory(geoms)\n  this._inputGeoms = geoms\n}\n","import Geometry from '../Geometry'\nimport hasInterface from '../../../../../hasInterface'\nimport GeometryCollection from '../GeometryCollection'\nimport ArrayList from '../../../../../java/util/ArrayList'\nimport GeometryFilter from '../GeometryFilter'\nimport List from '../../../../../java/util/List'\nexport default class GeometryExtracter {\n  constructor () {\n    GeometryExtracter.constructor_.apply(this, arguments)\n  }\n\n  static isOfType (geom, geometryType) {\n    if (geom.getGeometryType() === geometryType) return true\n    if (geometryType === Geometry.TYPENAME_LINESTRING && geom.getGeometryType() === Geometry.TYPENAME_LINEARRING) return true\n    return false\n  }\n\n  static extract () {\n    if (arguments.length === 2) {\n      const geom = arguments[0]; const geometryType = arguments[1]\n      return GeometryExtracter.extract(geom, geometryType, new ArrayList())\n    } else if (arguments.length === 3) {\n      if (hasInterface(arguments[2], List) && (arguments[0] instanceof Geometry && typeof arguments[1] === 'string')) {\n        const geom = arguments[0]; const geometryType = arguments[1]; const list = arguments[2]\n        if (geom.getGeometryType() === geometryType) {\n          list.add(geom)\n        } else if (geom instanceof GeometryCollection) {\n          geom.apply(new GeometryExtracter(geometryType, list))\n        }\n        return list\n      } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Geometry && arguments[1] instanceof Class)) {\n        const geom = arguments[0]; const clz = arguments[1]; const list = arguments[2]\n        return GeometryExtracter.extract(geom, GeometryExtracter.toGeometryType(clz), list)\n      }\n    }\n  }\n\n  filter (geom) {\n    if (this._geometryType === null || GeometryExtracter.isOfType(geom, this._geometryType)) this._comps.add(geom)\n  }\n\n  getClass () {\n    return GeometryExtracter\n  }\n\n  get interfaces_ () {\n    return [GeometryFilter]\n  }\n}\nGeometryExtracter.constructor_ = function () {\n  this._geometryType = null\n  this._comps = null\n  const geometryType = arguments[0]; const comps = arguments[1]\n  this._geometryType = geometryType\n  this._comps = comps\n}\n","export default class MapOp {\n  constructor () {\n    MapOp.constructor_.apply(this, arguments)\n  }\n\n  map (g) {}\n  getClass () {\n    return MapOp\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nMapOp.constructor_ = function () {}\n","import Geometry from '../Geometry'\nimport hasInterface from '../../../../../hasInterface'\nimport Collection from '../../../../../java/util/Collection'\nimport MapOp from './MapOp'\nimport ArrayList from '../../../../../java/util/ArrayList'\nexport default class GeometryMapper {\n  constructor () {\n    GeometryMapper.constructor_.apply(this, arguments)\n  }\n\n  static map () {\n    if (arguments[0] instanceof Geometry && hasInterface(arguments[1], MapOp)) {\n      const geom = arguments[0]; const op = arguments[1]\n      const mapped = new ArrayList()\n      for (let i = 0; i < geom.getNumGeometries(); i++) {\n        const g = op.map(geom.getGeometryN(i))\n        if (g !== null) mapped.add(g)\n      }\n      return geom.getFactory().buildGeometry(mapped)\n    } else if (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], MapOp)) {\n      const geoms = arguments[0]; const op = arguments[1]\n      const mapped = new ArrayList()\n      for (let i = geoms.iterator(); i.hasNext();) {\n        const g = i.next()\n        const gr = op.map(g)\n        if (gr !== null) mapped.add(gr)\n      }\n      return mapped\n    }\n  }\n\n  getClass () {\n    return GeometryMapper\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nGeometryMapper.constructor_ = function () {}\n","import LineString from '../LineString'\nimport GeometryFactory from '../GeometryFactory'\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException'\nimport Point from '../Point'\nimport Polygon from '../Polygon'\nimport MultiPoint from '../MultiPoint'\nimport LinearRing from '../LinearRing'\nimport MultiPolygon from '../MultiPolygon'\nimport GeometryCollection from '../GeometryCollection'\nimport ArrayList from '../../../../../java/util/ArrayList'\nimport MultiLineString from '../MultiLineString'\nexport default class GeometryTransformer {\n  constructor () {\n    GeometryTransformer.constructor_.apply(this, arguments)\n  }\n\n  transformPoint (geom, parent) {\n    return this._factory.createPoint(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n  }\n\n  transformPolygon (geom, parent) {\n    let isAllValidLinearRings = true\n    const shell = this.transformLinearRing(geom.getExteriorRing(), geom)\n    if (shell === null || !(shell instanceof LinearRing) || shell.isEmpty()) isAllValidLinearRings = false\n    const holes = new ArrayList()\n    for (let i = 0; i < geom.getNumInteriorRing(); i++) {\n      const hole = this.transformLinearRing(geom.getInteriorRingN(i), geom)\n      if (hole === null || hole.isEmpty()) {\n        continue\n      }\n      if (!(hole instanceof LinearRing)) isAllValidLinearRings = false\n      holes.add(hole)\n    }\n    if (isAllValidLinearRings) return this._factory.createPolygon(shell, holes.toArray([])); else {\n      const components = new ArrayList()\n      if (shell !== null) components.add(shell)\n      components.addAll(holes)\n      return this._factory.buildGeometry(components)\n    }\n  }\n\n  createCoordinateSequence (coords) {\n    return this._factory.getCoordinateSequenceFactory().create(coords)\n  }\n\n  getInputGeometry () {\n    return this._inputGeom\n  }\n\n  transformMultiLineString (geom, parent) {\n    const transGeomList = new ArrayList()\n    for (let i = 0; i < geom.getNumGeometries(); i++) {\n      const transformGeom = this.transformLineString(geom.getGeometryN(i), geom)\n      if (transformGeom === null) continue\n      if (transformGeom.isEmpty()) continue\n      transGeomList.add(transformGeom)\n    }\n    return this._factory.buildGeometry(transGeomList)\n  }\n\n  transformCoordinates (coords, parent) {\n    return this.copy(coords)\n  }\n\n  transformLineString (geom, parent) {\n    return this._factory.createLineString(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n  }\n\n  transformMultiPoint (geom, parent) {\n    const transGeomList = new ArrayList()\n    for (let i = 0; i < geom.getNumGeometries(); i++) {\n      const transformGeom = this.transformPoint(geom.getGeometryN(i), geom)\n      if (transformGeom === null) continue\n      if (transformGeom.isEmpty()) continue\n      transGeomList.add(transformGeom)\n    }\n    return this._factory.buildGeometry(transGeomList)\n  }\n\n  transformMultiPolygon (geom, parent) {\n    const transGeomList = new ArrayList()\n    for (let i = 0; i < geom.getNumGeometries(); i++) {\n      const transformGeom = this.transformPolygon(geom.getGeometryN(i), geom)\n      if (transformGeom === null) continue\n      if (transformGeom.isEmpty()) continue\n      transGeomList.add(transformGeom)\n    }\n    return this._factory.buildGeometry(transGeomList)\n  }\n\n  copy (seq) {\n    return seq.copy()\n  }\n\n  transformGeometryCollection (geom, parent) {\n    const transGeomList = new ArrayList()\n    for (let i = 0; i < geom.getNumGeometries(); i++) {\n      const transformGeom = this.transform(geom.getGeometryN(i))\n      if (transformGeom === null) continue\n      if (this._pruneEmptyGeometry && transformGeom.isEmpty()) continue\n      transGeomList.add(transformGeom)\n    }\n    if (this._preserveGeometryCollectionType) return this._factory.createGeometryCollection(GeometryFactory.toGeometryArray(transGeomList))\n    return this._factory.buildGeometry(transGeomList)\n  }\n\n  transform (inputGeom) {\n    this._inputGeom = inputGeom\n    this._factory = inputGeom.getFactory()\n    if (inputGeom instanceof Point) return this.transformPoint(inputGeom, null)\n    if (inputGeom instanceof MultiPoint) return this.transformMultiPoint(inputGeom, null)\n    if (inputGeom instanceof LinearRing) return this.transformLinearRing(inputGeom, null)\n    if (inputGeom instanceof LineString) return this.transformLineString(inputGeom, null)\n    if (inputGeom instanceof MultiLineString) return this.transformMultiLineString(inputGeom, null)\n    if (inputGeom instanceof Polygon) return this.transformPolygon(inputGeom, null)\n    if (inputGeom instanceof MultiPolygon) return this.transformMultiPolygon(inputGeom, null)\n    if (inputGeom instanceof GeometryCollection) return this.transformGeometryCollection(inputGeom, null)\n    throw new IllegalArgumentException('Unknown Geometry subtype: ' + inputGeom.getClass().getName())\n  }\n\n  transformLinearRing (geom, parent) {\n    const seq = this.transformCoordinates(geom.getCoordinateSequence(), geom)\n    if (seq === null) return this._factory.createLinearRing(null)\n    const seqSize = seq.size()\n    if (seqSize > 0 && seqSize < 4 && !this._preserveType) return this._factory.createLineString(seq)\n    return this._factory.createLinearRing(seq)\n  }\n\n  getClass () {\n    return GeometryTransformer\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nGeometryTransformer.constructor_ = function () {\n  this._inputGeom = null\n  this._factory = null\n  this._pruneEmptyGeometry = true\n  this._preserveGeometryCollectionType = true\n  this._preserveCollections = false\n  this._preserveType = false\n}\n","import LineString from '../LineString'\nimport GeometryCollection from '../GeometryCollection'\nimport ArrayList from '../../../../../java/util/ArrayList'\nimport GeometryFilter from '../GeometryFilter'\nexport default class LineStringExtracter {\n  constructor () {\n    LineStringExtracter.constructor_.apply(this, arguments)\n  }\n\n  static getGeometry (geom) {\n    return geom.getFactory().buildGeometry(LineStringExtracter.getLines(geom))\n  }\n\n  static getLines () {\n    if (arguments.length === 1) {\n      const geom = arguments[0]\n      return LineStringExtracter.getLines(geom, new ArrayList())\n    } else if (arguments.length === 2) {\n      const geom = arguments[0]; const lines = arguments[1]\n      if (geom instanceof LineString) {\n        lines.add(geom)\n      } else if (geom instanceof GeometryCollection) {\n        geom.apply(new LineStringExtracter(lines))\n      }\n      return lines\n    }\n  }\n\n  filter (geom) {\n    if (geom instanceof LineString) this._comps.add(geom)\n  }\n\n  getClass () {\n    return LineStringExtracter\n  }\n\n  get interfaces_ () {\n    return [GeometryFilter]\n  }\n}\nLineStringExtracter.constructor_ = function () {\n  this._comps = null\n  const comps = arguments[0]\n  this._comps = comps\n}\n","import LineString from '../LineString'\nimport Geometry from '../Geometry'\nimport hasInterface from '../../../../../hasInterface'\nimport Collection from '../../../../../java/util/Collection'\nimport LinearRing from '../LinearRing'\nimport GeometryComponentFilter from '../GeometryComponentFilter'\nimport ArrayList from '../../../../../java/util/ArrayList'\nexport default class LinearComponentExtracter {\n  constructor () {\n    LinearComponentExtracter.constructor_.apply(this, arguments)\n  }\n\n  static getGeometry () {\n    if (arguments.length === 1) {\n      const geom = arguments[0]\n      return geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom))\n    } else if (arguments.length === 2) {\n      const geom = arguments[0]; const forceToLineString = arguments[1]\n      return geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom, forceToLineString))\n    }\n  }\n\n  static getLines () {\n    if (arguments.length === 1) {\n      const geom = arguments[0]\n      return LinearComponentExtracter.getLines(geom, false)\n    } else if (arguments.length === 2) {\n      if (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection)) {\n        const geoms = arguments[0]; const lines = arguments[1]\n        for (let i = geoms.iterator(); i.hasNext();) {\n          const g = i.next()\n          LinearComponentExtracter.getLines(g, lines)\n        }\n        return lines\n      } else if (arguments[0] instanceof Geometry && typeof arguments[1] === 'boolean') {\n        const geom = arguments[0]; const forceToLineString = arguments[1]\n        const lines = new ArrayList()\n        geom.apply(new LinearComponentExtracter(lines, forceToLineString))\n        return lines\n      } else if (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection)) {\n        const geom = arguments[0]; const lines = arguments[1]\n        if (geom instanceof LineString) {\n          lines.add(geom)\n        } else {\n          geom.apply(new LinearComponentExtracter(lines))\n        }\n        return lines\n      }\n    } else if (arguments.length === 3) {\n      if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection))) {\n        const geoms = arguments[0]; const lines = arguments[1]; const forceToLineString = arguments[2]\n        for (let i = geoms.iterator(); i.hasNext();) {\n          const g = i.next()\n          LinearComponentExtracter.getLines(g, lines, forceToLineString)\n        }\n        return lines\n      } else if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection))) {\n        const geom = arguments[0]; const lines = arguments[1]; const forceToLineString = arguments[2]\n        geom.apply(new LinearComponentExtracter(lines, forceToLineString))\n        return lines\n      }\n    }\n  }\n\n  filter (geom) {\n    if (this._isForcedToLineString && geom instanceof LinearRing) {\n      const line = geom.getFactory().createLineString(geom.getCoordinateSequence())\n      this._lines.add(line)\n      return null\n    }\n    if (geom instanceof LineString) this._lines.add(geom)\n  }\n\n  setForceToLineString (isForcedToLineString) {\n    this._isForcedToLineString = isForcedToLineString\n  }\n\n  getClass () {\n    return LinearComponentExtracter\n  }\n\n  get interfaces_ () {\n    return [GeometryComponentFilter]\n  }\n}\nLinearComponentExtracter.constructor_ = function () {\n  this._lines = null\n  this._isForcedToLineString = false\n  if (arguments.length === 1) {\n    const lines = arguments[0]\n    this._lines = lines\n  } else if (arguments.length === 2) {\n    const lines = arguments[0]; const isForcedToLineString = arguments[1]\n    this._lines = lines\n    this._isForcedToLineString = isForcedToLineString\n  }\n}\n","import Arrays from './Arrays'\nimport ArrayList from './ArrayList'\n\nconst Collections = {\n  reverseOrder: function () {\n    return {\n      compare (a, b) {\n        return b.compareTo(a)\n      }\n    }\n  },\n  min: function (l) {\n    Collections.sort(l)\n    return l.get(0)\n  },\n  sort: function (l, c) {\n    const a = l.toArray()\n    if (c) {\n      Arrays.sort(a, c)\n    } else {\n      Arrays.sort(a)\n    }\n    const i = l.iterator()\n    for (let pos = 0, alen = a.length; pos < alen; pos++) {\n      i.next()\n      i.set(a[pos])\n    }\n  },\n  singletonList: function (o) {\n    const arrayList = new ArrayList()\n    arrayList.add(o)\n    return arrayList\n  }\n}\n\nexport default Collections\n","import Point from '../Point'\nimport Collections from '../../../../../java/util/Collections'\nimport GeometryCollection from '../GeometryCollection'\nimport ArrayList from '../../../../../java/util/ArrayList'\nimport GeometryFilter from '../GeometryFilter'\nexport default class PointExtracter {\n  constructor () {\n    PointExtracter.constructor_.apply(this, arguments)\n  }\n\n  static getPoints () {\n    if (arguments.length === 1) {\n      const geom = arguments[0]\n      if (geom instanceof Point) {\n        return Collections.singletonList(geom)\n      }\n      return PointExtracter.getPoints(geom, new ArrayList())\n    } else if (arguments.length === 2) {\n      const geom = arguments[0]; const list = arguments[1]\n      if (geom instanceof Point) {\n        list.add(geom)\n      } else if (geom instanceof GeometryCollection) {\n        geom.apply(new PointExtracter(list))\n      }\n      return list\n    }\n  }\n\n  filter (geom) {\n    if (geom instanceof Point) this._pts.add(geom)\n  }\n\n  getClass () {\n    return PointExtracter\n  }\n\n  get interfaces_ () {\n    return [GeometryFilter]\n  }\n}\nPointExtracter.constructor_ = function () {\n  this._pts = null\n  const pts = arguments[0]\n  this._pts = pts\n}\n","import Polygon from '../Polygon'\nimport GeometryCollection from '../GeometryCollection'\nimport ArrayList from '../../../../../java/util/ArrayList'\nimport GeometryFilter from '../GeometryFilter'\nexport default class PolygonExtracter {\n  constructor () {\n    PolygonExtracter.constructor_.apply(this, arguments)\n  }\n\n  static getPolygons () {\n    if (arguments.length === 1) {\n      const geom = arguments[0]\n      return PolygonExtracter.getPolygons(geom, new ArrayList())\n    } else if (arguments.length === 2) {\n      const geom = arguments[0]; const list = arguments[1]\n      if (geom instanceof Polygon) {\n        list.add(geom)\n      } else if (geom instanceof GeometryCollection) {\n        geom.apply(new PolygonExtracter(list))\n      }\n      return list\n    }\n  }\n\n  filter (geom) {\n    if (geom instanceof Polygon) this._comps.add(geom)\n  }\n\n  getClass () {\n    return PolygonExtracter\n  }\n\n  get interfaces_ () {\n    return [GeometryFilter]\n  }\n}\nPolygonExtracter.constructor_ = function () {\n  this._comps = null\n  const comps = arguments[0]\n  this._comps = comps\n}\n","import GeometryCollection from '../GeometryCollection'\nexport default class ShortCircuitedGeometryVisitor {\n  constructor () {\n    ShortCircuitedGeometryVisitor.constructor_.apply(this, arguments)\n  }\n\n  applyTo (geom) {\n    for (let i = 0; i < geom.getNumGeometries() && !this._isDone; i++) {\n      const element = geom.getGeometryN(i)\n      if (!(element instanceof GeometryCollection)) {\n        this.visit(element)\n        if (this.isDone()) {\n          this._isDone = true\n          return null\n        }\n      } else this.applyTo(element)\n    }\n  }\n\n  getClass () {\n    return ShortCircuitedGeometryVisitor\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nShortCircuitedGeometryVisitor.constructor_ = function () {\n  this._isDone = false\n}\n","import GeometryFactory from '../geom/GeometryFactory'\nimport Coordinate from '../geom/Coordinate'\nimport AffineTransformation from '../geom/util/AffineTransformation'\nimport Envelope from '../geom/Envelope'\nexport default class GeometricShapeFactory {\n  constructor () {\n    GeometricShapeFactory.constructor_.apply(this, arguments)\n  }\n\n  createSupercircle (power) {\n    const recipPow = 1.0 / power\n    const radius = this._dim.getMinSize() / 2\n    const centre = this._dim.getCentre()\n    const r4 = Math.pow(radius, power)\n    const y0 = radius\n    const xyInt = Math.pow(r4 / 2, recipPow)\n    const nSegsInOct = Math.trunc(this._nPts / 8)\n    const totPts = nSegsInOct * 8 + 1\n    const pts = new Array(totPts).fill(null)\n    const xInc = xyInt / nSegsInOct\n    for (let i = 0; i <= nSegsInOct; i++) {\n      let x = 0.0\n      let y = y0\n      if (i !== 0) {\n        x = xInc * i\n        const x4 = Math.pow(x, power)\n        y = Math.pow(r4 - x4, recipPow)\n      }\n      pts[i] = this.coordTrans(x, y, centre)\n      pts[2 * nSegsInOct - i] = this.coordTrans(y, x, centre)\n      pts[2 * nSegsInOct + i] = this.coordTrans(y, -x, centre)\n      pts[4 * nSegsInOct - i] = this.coordTrans(x, -y, centre)\n      pts[4 * nSegsInOct + i] = this.coordTrans(-x, -y, centre)\n      pts[6 * nSegsInOct - i] = this.coordTrans(-y, -x, centre)\n      pts[6 * nSegsInOct + i] = this.coordTrans(-y, x, centre)\n      pts[8 * nSegsInOct - i] = this.coordTrans(-x, y, centre)\n    }\n    pts[pts.length - 1] = new Coordinate(pts[0])\n    const ring = this._geomFact.createLinearRing(pts)\n    const poly = this._geomFact.createPolygon(ring)\n    return this.rotate(poly)\n  }\n\n  setNumPoints (nPts) {\n    this._nPts = nPts\n  }\n\n  setBase (base) {\n    this._dim.setBase(base)\n  }\n\n  setRotation (radians) {\n    this._rotationAngle = radians\n  }\n\n  setWidth (width) {\n    this._dim.setWidth(width)\n  }\n\n  createEllipse () {\n    const env = this._dim.getEnvelope()\n    const xRadius = env.getWidth() / 2.0\n    const yRadius = env.getHeight() / 2.0\n    const centreX = env.getMinX() + xRadius\n    const centreY = env.getMinY() + yRadius\n    const pts = new Array(this._nPts + 1).fill(null)\n    let iPt = 0\n    for (let i = 0; i < this._nPts; i++) {\n      const ang = i * (2 * Math.PI / this._nPts)\n      const x = xRadius * Math.cos(ang) + centreX\n      const y = yRadius * Math.sin(ang) + centreY\n      pts[iPt++] = this.coord(x, y)\n    }\n    pts[iPt] = new Coordinate(pts[0])\n    const ring = this._geomFact.createLinearRing(pts)\n    const poly = this._geomFact.createPolygon(ring)\n    return this.rotate(poly)\n  }\n\n  coordTrans (x, y, trans) {\n    return this.coord(x + trans.x, y + trans.y)\n  }\n\n  createSquircle () {\n    return this.createSupercircle(4)\n  }\n\n  setEnvelope (env) {\n    this._dim.setEnvelope(env)\n  }\n\n  setCentre (centre) {\n    this._dim.setCentre(centre)\n  }\n\n  createArc (startAng, angExtent) {\n    const env = this._dim.getEnvelope()\n    const xRadius = env.getWidth() / 2.0\n    const yRadius = env.getHeight() / 2.0\n    const centreX = env.getMinX() + xRadius\n    const centreY = env.getMinY() + yRadius\n    let angSize = angExtent\n    if (angSize <= 0.0 || angSize > 2 * Math.PI) angSize = 2 * Math.PI\n    const angInc = angSize / (this._nPts - 1)\n    const pts = new Array(this._nPts).fill(null)\n    let iPt = 0\n    for (let i = 0; i < this._nPts; i++) {\n      const ang = startAng + i * angInc\n      const x = xRadius * Math.cos(ang) + centreX\n      const y = yRadius * Math.sin(ang) + centreY\n      pts[iPt++] = this.coord(x, y)\n    }\n    const line = this._geomFact.createLineString(pts)\n    return this.rotate(line)\n  }\n\n  rotate (geom) {\n    if (this._rotationAngle !== 0.0) {\n      const trans = AffineTransformation.rotationInstance(this._rotationAngle, this._dim.getCentre().x, this._dim.getCentre().y)\n      geom.apply(trans)\n    }\n    return geom\n  }\n\n  coord (x, y) {\n    const pt = new Coordinate(x, y)\n    this._precModel.makePrecise(pt)\n    return pt\n  }\n\n  createArcPolygon (startAng, angExtent) {\n    const env = this._dim.getEnvelope()\n    const xRadius = env.getWidth() / 2.0\n    const yRadius = env.getHeight() / 2.0\n    const centreX = env.getMinX() + xRadius\n    const centreY = env.getMinY() + yRadius\n    let angSize = angExtent\n    if (angSize <= 0.0 || angSize > 2 * Math.PI) angSize = 2 * Math.PI\n    const angInc = angSize / (this._nPts - 1)\n    const pts = new Array(this._nPts + 2).fill(null)\n    let iPt = 0\n    pts[iPt++] = this.coord(centreX, centreY)\n    for (let i = 0; i < this._nPts; i++) {\n      const ang = startAng + angInc * i\n      const x = xRadius * Math.cos(ang) + centreX\n      const y = yRadius * Math.sin(ang) + centreY\n      pts[iPt++] = this.coord(x, y)\n    }\n    pts[iPt++] = this.coord(centreX, centreY)\n    const ring = this._geomFact.createLinearRing(pts)\n    const poly = this._geomFact.createPolygon(ring)\n    return this.rotate(poly)\n  }\n\n  createRectangle () {\n    let i = null\n    let ipt = 0\n    let nSide = Math.trunc(this._nPts / 4)\n    if (nSide < 1) nSide = 1\n    const XsegLen = this._dim.getEnvelope().getWidth() / nSide\n    const YsegLen = this._dim.getEnvelope().getHeight() / nSide\n    const pts = new Array(4 * nSide + 1).fill(null)\n    const env = this._dim.getEnvelope()\n    for ((i = 0); i < nSide; i++) {\n      const x = env.getMinX() + i * XsegLen\n      const y = env.getMinY()\n      pts[ipt++] = this.coord(x, y)\n    }\n    for ((i = 0); i < nSide; i++) {\n      const x = env.getMaxX()\n      const y = env.getMinY() + i * YsegLen\n      pts[ipt++] = this.coord(x, y)\n    }\n    for ((i = 0); i < nSide; i++) {\n      const x = env.getMaxX() - i * XsegLen\n      const y = env.getMaxY()\n      pts[ipt++] = this.coord(x, y)\n    }\n    for ((i = 0); i < nSide; i++) {\n      const x = env.getMinX()\n      const y = env.getMaxY() - i * YsegLen\n      pts[ipt++] = this.coord(x, y)\n    }\n    pts[ipt++] = new Coordinate(pts[0])\n    const ring = this._geomFact.createLinearRing(pts)\n    const poly = this._geomFact.createPolygon(ring)\n    return this.rotate(poly)\n  }\n\n  createCircle () {\n    return this.createEllipse()\n  }\n\n  setHeight (height) {\n    this._dim.setHeight(height)\n  }\n\n  setSize (size) {\n    this._dim.setSize(size)\n  }\n\n  getClass () {\n    return GeometricShapeFactory\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nclass Dimensions {\n  constructor () {\n    Dimensions.constructor_.apply(this, arguments)\n  }\n\n  setBase (base) {\n    this.base = base\n  }\n\n  setWidth (width) {\n    this.width = width\n  }\n\n  getBase () {\n    return this.base\n  }\n\n  getWidth () {\n    return this.width\n  }\n\n  setEnvelope (env) {\n    this.width = env.getWidth()\n    this.height = env.getHeight()\n    this.base = new Coordinate(env.getMinX(), env.getMinY())\n    this.centre = new Coordinate(env.centre())\n  }\n\n  setCentre (centre) {\n    this.centre = centre\n  }\n\n  getMinSize () {\n    return Math.min(this.width, this.height)\n  }\n\n  getEnvelope () {\n    if (this.base !== null) {\n      return new Envelope(this.base.x, this.base.x + this.width, this.base.y, this.base.y + this.height)\n    }\n    if (this.centre !== null) {\n      return new Envelope(this.centre.x - this.width / 2, this.centre.x + this.width / 2, this.centre.y - this.height / 2, this.centre.y + this.height / 2)\n    }\n    return new Envelope(0, this.width, 0, this.height)\n  }\n\n  getCentre () {\n    if (this.centre === null) {\n      this.centre = new Coordinate(this.base.x + this.width / 2, this.base.y + this.height / 2)\n    }\n    return this.centre\n  }\n\n  getHeight () {\n    return this.height\n  }\n\n  setHeight (height) {\n    this.height = height\n  }\n\n  setSize (size) {\n    this.height = size\n    this.width = size\n  }\n\n  getClass () {\n    return Dimensions\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nDimensions.constructor_ = function () {\n  this.base = null\n  this.centre = null\n  this.width = null\n  this.height = null\n}\nGeometricShapeFactory.Dimensions = Dimensions\nGeometricShapeFactory.constructor_ = function () {\n  this._geomFact = null\n  this._precModel = null\n  this._dim = new Dimensions()\n  this._nPts = 100\n  this._rotationAngle = 0.0\n  if (arguments.length === 0) {\n    GeometricShapeFactory.constructor_.call(this, new GeometryFactory())\n  } else if (arguments.length === 1) {\n    const geomFact = arguments[0]\n    this._geomFact = geomFact\n    this._precModel = geomFact.getPrecisionModel()\n  }\n}\n","import Coordinate from '../Coordinate'\nimport GeometricShapeFactory from '../../util/GeometricShapeFactory'\nexport default class SineStarFactory extends GeometricShapeFactory {\n  constructor () {\n    super()\n    SineStarFactory.constructor_.apply(this, arguments)\n  }\n\n  setNumArms (numArms) {\n    this._numArms = numArms\n  }\n\n  setArmLengthRatio (armLengthRatio) {\n    this._armLengthRatio = armLengthRatio\n  }\n\n  createSineStar () {\n    const env = this._dim.getEnvelope()\n    const radius = env.getWidth() / 2.0\n    let armRatio = this._armLengthRatio\n    if (armRatio < 0.0) armRatio = 0.0\n    if (armRatio > 1.0) armRatio = 1.0\n    const armMaxLen = armRatio * radius\n    const insideRadius = (1 - armRatio) * radius\n    const centreX = env.getMinX() + radius\n    const centreY = env.getMinY() + radius\n    const pts = new Array(this._nPts + 1).fill(null)\n    let iPt = 0\n    for (let i = 0; i < this._nPts; i++) {\n      const ptArcFrac = i / this._nPts * this._numArms\n      const armAngFrac = ptArcFrac - Math.floor(ptArcFrac)\n      const armAng = 2 * Math.PI * armAngFrac\n      const armLenFrac = (Math.cos(armAng) + 1.0) / 2.0\n      const curveRadius = insideRadius + armMaxLen * armLenFrac\n      const ang = i * (2 * Math.PI / this._nPts)\n      const x = curveRadius * Math.cos(ang) + centreX\n      const y = curveRadius * Math.sin(ang) + centreY\n      pts[iPt++] = this.coord(x, y)\n    }\n    pts[iPt] = new Coordinate(pts[0])\n    const ring = this._geomFact.createLinearRing(pts)\n    const poly = this._geomFact.createPolygon(ring)\n    return poly\n  }\n\n  getClass () {\n    return SineStarFactory\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nSineStarFactory.constructor_ = function () {\n  this._numArms = 8\n  this._armLengthRatio = 0.5\n  if (arguments.length === 0) {\n    GeometricShapeFactory.constructor_.call(this)\n  } else if (arguments.length === 1) {\n    const geomFact = arguments[0]\n    GeometricShapeFactory.constructor_.call(this, geomFact)\n  }\n}\n","import WKTWriter from '../../io/WKTWriter'\nimport Coordinate from '../../geom/Coordinate'\nimport Double from '../../../../../java/lang/Double'\nexport default class PointPairDistance {\n  constructor () {\n    PointPairDistance.constructor_.apply(this, arguments)\n  }\n\n  getCoordinates () {\n    return this._pt\n  }\n\n  getCoordinate (i) {\n    return this._pt[i]\n  }\n\n  setMinimum () {\n    if (arguments.length === 1) {\n      const ptDist = arguments[0]\n      this.setMinimum(ptDist._pt[0], ptDist._pt[1])\n    } else if (arguments.length === 2) {\n      const p0 = arguments[0]; const p1 = arguments[1]\n      if (this._isNull) {\n        this.initialize(p0, p1)\n        return null\n      }\n      const dist = p0.distance(p1)\n      if (dist < this._distance) this.initialize(p0, p1, dist)\n    }\n  }\n\n  initialize () {\n    if (arguments.length === 0) {\n      this._isNull = true\n    } else if (arguments.length === 2) {\n      const p0 = arguments[0]; const p1 = arguments[1]\n      this._pt[0].setCoordinate(p0)\n      this._pt[1].setCoordinate(p1)\n      this._distance = p0.distance(p1)\n      this._isNull = false\n    } else if (arguments.length === 3) {\n      const p0 = arguments[0]; const p1 = arguments[1]; const distance = arguments[2]\n      this._pt[0].setCoordinate(p0)\n      this._pt[1].setCoordinate(p1)\n      this._distance = distance\n      this._isNull = false\n    }\n  }\n\n  toString () {\n    return WKTWriter.toLineString(this._pt[0], this._pt[1])\n  }\n\n  getDistance () {\n    return this._distance\n  }\n\n  setMaximum () {\n    if (arguments.length === 1) {\n      const ptDist = arguments[0]\n      this.setMaximum(ptDist._pt[0], ptDist._pt[1])\n    } else if (arguments.length === 2) {\n      const p0 = arguments[0]; const p1 = arguments[1]\n      if (this._isNull) {\n        this.initialize(p0, p1)\n        return null\n      }\n      const dist = p0.distance(p1)\n      if (dist > this._distance) this.initialize(p0, p1, dist)\n    }\n  }\n\n  getClass () {\n    return PointPairDistance\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nPointPairDistance.constructor_ = function () {\n  this._pt = [new Coordinate(), new Coordinate()]\n  this._distance = Double.NaN\n  this._isNull = true\n}\n","import LineString from '../../geom/LineString'\nimport Geometry from '../../geom/Geometry'\nimport Coordinate from '../../geom/Coordinate'\nimport Polygon from '../../geom/Polygon'\nimport LineSegment from '../../geom/LineSegment'\nimport PointPairDistance from './PointPairDistance'\nimport GeometryCollection from '../../geom/GeometryCollection'\nexport default class DistanceToPoint {\n  constructor () {\n    DistanceToPoint.constructor_.apply(this, arguments)\n  }\n\n  static computeDistance () {\n    if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineString && arguments[1] instanceof Coordinate)) {\n      const line = arguments[0]; const pt = arguments[1]; const ptDist = arguments[2]\n      const tempSegment = new LineSegment()\n      const coords = line.getCoordinates()\n      for (let i = 0; i < coords.length - 1; i++) {\n        tempSegment.setCoordinates(coords[i], coords[i + 1])\n        const closestPt = tempSegment.closestPoint(pt)\n        ptDist.setMinimum(closestPt, pt)\n      }\n    } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Polygon && arguments[1] instanceof Coordinate)) {\n      const poly = arguments[0]; const pt = arguments[1]; const ptDist = arguments[2]\n      DistanceToPoint.computeDistance(poly.getExteriorRing(), pt, ptDist)\n      for (let i = 0; i < poly.getNumInteriorRing(); i++) {\n        DistanceToPoint.computeDistance(poly.getInteriorRingN(i), pt, ptDist)\n      }\n    } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Geometry && arguments[1] instanceof Coordinate)) {\n      const geom = arguments[0]; const pt = arguments[1]; const ptDist = arguments[2]\n      if (geom instanceof LineString) {\n        DistanceToPoint.computeDistance(geom, pt, ptDist)\n      } else if (geom instanceof Polygon) {\n        DistanceToPoint.computeDistance(geom, pt, ptDist)\n      } else if (geom instanceof GeometryCollection) {\n        const gc = geom\n        for (let i = 0; i < gc.getNumGeometries(); i++) {\n          const g = gc.getGeometryN(i)\n          DistanceToPoint.computeDistance(g, pt, ptDist)\n        }\n      } else {\n        ptDist.setMinimum(geom.getCoordinate(), pt)\n      }\n    } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineSegment && arguments[1] instanceof Coordinate)) {\n      const segment = arguments[0]; const pt = arguments[1]; const ptDist = arguments[2]\n      const closestPt = segment.closestPoint(pt)\n      ptDist.setMinimum(closestPt, pt)\n    }\n  }\n\n  getClass () {\n    return DistanceToPoint\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nDistanceToPoint.constructor_ = function () {}\n","import DistanceToPoint from './DistanceToPoint'\nimport CoordinateFilter from '../../geom/CoordinateFilter'\nimport Coordinate from '../../geom/Coordinate'\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException'\nimport PointPairDistance from './PointPairDistance'\nimport CoordinateSequenceFilter from '../../geom/CoordinateSequenceFilter'\nexport default class DiscreteHausdorffDistance {\n  constructor () {\n    DiscreteHausdorffDistance.constructor_.apply(this, arguments)\n  }\n\n  static distance () {\n    if (arguments.length === 2) {\n      const g0 = arguments[0]; const g1 = arguments[1]\n      const dist = new DiscreteHausdorffDistance(g0, g1)\n      return dist.distance()\n    } else if (arguments.length === 3) {\n      const g0 = arguments[0]; const g1 = arguments[1]; const densifyFrac = arguments[2]\n      const dist = new DiscreteHausdorffDistance(g0, g1)\n      dist.setDensifyFraction(densifyFrac)\n      return dist.distance()\n    }\n  }\n\n  getCoordinates () {\n    return this._ptDist.getCoordinates()\n  }\n\n  setDensifyFraction (densifyFrac) {\n    if (densifyFrac > 1.0 || densifyFrac <= 0.0) throw new IllegalArgumentException('Fraction is not in range (0.0 - 1.0]')\n    this._densifyFrac = densifyFrac\n  }\n\n  compute (g0, g1) {\n    this.computeOrientedDistance(g0, g1, this._ptDist)\n    this.computeOrientedDistance(g1, g0, this._ptDist)\n  }\n\n  distance () {\n    this.compute(this._g0, this._g1)\n    return this._ptDist.getDistance()\n  }\n\n  computeOrientedDistance (discreteGeom, geom, ptDist) {\n    const distFilter = new MaxPointDistanceFilter(geom)\n    discreteGeom.apply(distFilter)\n    ptDist.setMaximum(distFilter.getMaxPointDistance())\n    if (this._densifyFrac > 0) {\n      const fracFilter = new MaxDensifiedByFractionDistanceFilter(geom, this._densifyFrac)\n      discreteGeom.apply(fracFilter)\n      ptDist.setMaximum(fracFilter.getMaxPointDistance())\n    }\n  }\n\n  orientedDistance () {\n    this.computeOrientedDistance(this._g0, this._g1, this._ptDist)\n    return this._ptDist.getDistance()\n  }\n\n  getClass () {\n    return DiscreteHausdorffDistance\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nclass MaxPointDistanceFilter {\n  constructor () {\n    MaxPointDistanceFilter.constructor_.apply(this, arguments)\n  }\n\n  filter (pt) {\n    this._minPtDist.initialize()\n    DistanceToPoint.computeDistance(this._geom, pt, this._minPtDist)\n    this._maxPtDist.setMaximum(this._minPtDist)\n  }\n\n  getMaxPointDistance () {\n    return this._maxPtDist\n  }\n\n  getClass () {\n    return MaxPointDistanceFilter\n  }\n\n  get interfaces_ () {\n    return [CoordinateFilter]\n  }\n}\nMaxPointDistanceFilter.constructor_ = function () {\n  this._maxPtDist = new PointPairDistance()\n  this._minPtDist = new PointPairDistance()\n  this._euclideanDist = new DistanceToPoint()\n  this._geom = null\n  const geom = arguments[0]\n  this._geom = geom\n}\nclass MaxDensifiedByFractionDistanceFilter {\n  constructor () {\n    MaxDensifiedByFractionDistanceFilter.constructor_.apply(this, arguments)\n  }\n\n  filter (seq, index) {\n    if (index === 0) return null\n    const p0 = seq.getCoordinate(index - 1)\n    const p1 = seq.getCoordinate(index)\n    const delx = (p1.x - p0.x) / this._numSubSegs\n    const dely = (p1.y - p0.y) / this._numSubSegs\n    for (let i = 0; i < this._numSubSegs; i++) {\n      const x = p0.x + i * delx\n      const y = p0.y + i * dely\n      const pt = new Coordinate(x, y)\n      this._minPtDist.initialize()\n      DistanceToPoint.computeDistance(this._geom, pt, this._minPtDist)\n      this._maxPtDist.setMaximum(this._minPtDist)\n    }\n  }\n\n  isDone () {\n    return false\n  }\n\n  isGeometryChanged () {\n    return false\n  }\n\n  getMaxPointDistance () {\n    return this._maxPtDist\n  }\n\n  getClass () {\n    return MaxDensifiedByFractionDistanceFilter\n  }\n\n  get interfaces_ () {\n    return [CoordinateSequenceFilter]\n  }\n}\nMaxDensifiedByFractionDistanceFilter.constructor_ = function () {\n  this._maxPtDist = new PointPairDistance()\n  this._minPtDist = new PointPairDistance()\n  this._geom = null\n  this._numSubSegs = 0\n  const geom = arguments[0]; const fraction = arguments[1]\n  this._geom = geom\n  this._numSubSegs = Math.trunc(Math.round(1.0 / fraction))\n}\nDiscreteHausdorffDistance.MaxPointDistanceFilter = MaxPointDistanceFilter\nDiscreteHausdorffDistance.MaxDensifiedByFractionDistanceFilter = MaxDensifiedByFractionDistanceFilter\nDiscreteHausdorffDistance.constructor_ = function () {\n  this._g0 = null\n  this._g1 = null\n  this._ptDist = new PointPairDistance()\n  this._densifyFrac = 0.0\n  const g0 = arguments[0]; const g1 = arguments[1]\n  this._g0 = g0\n  this._g1 = g1\n}\n","export default class ItemVisitor {\n  constructor () {\n    ItemVisitor.constructor_.apply(this, arguments)\n  }\n\n  visitItem (item) {}\n  getClass () {\n    return ItemVisitor\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nItemVisitor.constructor_ = function () {}\n","export default class PointOnGeometryLocator {\n  constructor () {\n    PointOnGeometryLocator.constructor_.apply(this, arguments)\n  }\n\n  locate (p) {}\n  getClass () {\n    return PointOnGeometryLocator\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nPointOnGeometryLocator.constructor_ = function () {}\n","import WKTWriter from '../../io/WKTWriter'\nimport Coordinate from '../../geom/Coordinate'\nimport Double from '../../../../../java/lang/Double'\nimport Comparator from '../../../../../java/util/Comparator'\nexport default class IntervalRTreeNode {\n  constructor () {\n    IntervalRTreeNode.constructor_.apply(this, arguments)\n  }\n\n  getMin () {\n    return this._min\n  }\n\n  intersects (queryMin, queryMax) {\n    if (this._min > queryMax || this._max < queryMin) return false\n    return true\n  }\n\n  getMax () {\n    return this._max\n  }\n\n  toString () {\n    return WKTWriter.toLineString(new Coordinate(this._min, 0), new Coordinate(this._max, 0))\n  }\n\n  getClass () {\n    return IntervalRTreeNode\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nclass NodeComparator {\n  constructor () {\n    NodeComparator.constructor_.apply(this, arguments)\n  }\n\n  compare (o1, o2) {\n    const n1 = o1\n    const n2 = o2\n    const mid1 = (n1._min + n1._max) / 2\n    const mid2 = (n2._min + n2._max) / 2\n    if (mid1 < mid2) return -1\n    if (mid1 > mid2) return 1\n    return 0\n  }\n\n  getClass () {\n    return NodeComparator\n  }\n\n  get interfaces_ () {\n    return [Comparator]\n  }\n}\nNodeComparator.constructor_ = function () {}\nIntervalRTreeNode.NodeComparator = NodeComparator\nIntervalRTreeNode.constructor_ = function () {\n  this._min = Double.POSITIVE_INFINITY\n  this._max = Double.NEGATIVE_INFINITY\n}\n","import IntervalRTreeNode from './IntervalRTreeNode'\nexport default class IntervalRTreeLeafNode extends IntervalRTreeNode {\n  constructor () {\n    super()\n    IntervalRTreeLeafNode.constructor_.apply(this, arguments)\n  }\n\n  query (queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) return null\n    visitor.visitItem(this._item)\n  }\n\n  getClass () {\n    return IntervalRTreeLeafNode\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nIntervalRTreeLeafNode.constructor_ = function () {\n  this._item = null\n  const min = arguments[0]; const max = arguments[1]; const item = arguments[2]\n  this._min = min\n  this._max = max\n  this._item = item\n}\n","import IntervalRTreeNode from './IntervalRTreeNode'\nexport default class IntervalRTreeBranchNode extends IntervalRTreeNode {\n  constructor () {\n    super()\n    IntervalRTreeBranchNode.constructor_.apply(this, arguments)\n  }\n\n  buildExtent (n1, n2) {\n    this._min = Math.min(n1._min, n2._min)\n    this._max = Math.max(n1._max, n2._max)\n  }\n\n  query (queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) {\n      return null\n    }\n    if (this._node1 !== null) this._node1.query(queryMin, queryMax, visitor)\n    if (this._node2 !== null) this._node2.query(queryMin, queryMax, visitor)\n  }\n\n  getClass () {\n    return IntervalRTreeBranchNode\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nIntervalRTreeBranchNode.constructor_ = function () {\n  this._node1 = null\n  this._node2 = null\n  const n1 = arguments[0]; const n2 = arguments[1]\n  this._node1 = n1\n  this._node2 = n2\n  this.buildExtent(this._node1, this._node2)\n}\n","import WKTWriter from '../../io/WKTWriter'\nimport Coordinate from '../../geom/Coordinate'\nimport IntervalRTreeLeafNode from './IntervalRTreeLeafNode'\nimport IntervalRTreeNode from './IntervalRTreeNode'\nimport Collections from '../../../../../java/util/Collections'\nimport System from '../../../../../java/lang/System'\nimport ArrayList from '../../../../../java/util/ArrayList'\nimport IntervalRTreeBranchNode from './IntervalRTreeBranchNode'\nexport default class SortedPackedIntervalRTree {\n  constructor () {\n    SortedPackedIntervalRTree.constructor_.apply(this, arguments)\n  }\n\n  buildTree () {\n    Collections.sort(this._leaves, new IntervalRTreeNode.NodeComparator())\n    let src = this._leaves\n    let temp = null\n    let dest = new ArrayList()\n    while (true) {\n      this.buildLevel(src, dest)\n      if (dest.size() === 1) return dest.get(0)\n      temp = src\n      src = dest\n      dest = temp\n    }\n  }\n\n  insert (min, max, item) {\n    if (this._root !== null) throw new IllegalStateException('Index cannot be added to once it has been queried')\n    this._leaves.add(new IntervalRTreeLeafNode(min, max, item))\n  }\n\n  query (min, max, visitor) {\n    this.init()\n    this._root.query(min, max, visitor)\n  }\n\n  buildRoot () {\n    if (this._root !== null) return null\n    this._root = this.buildTree()\n  }\n\n  printNode (node) {\n    System.out.println(WKTWriter.toLineString(new Coordinate(node._min, this._level), new Coordinate(node._max, this._level)))\n  }\n\n  init () {\n    if (this._root !== null) return null\n    this.buildRoot()\n  }\n\n  buildLevel (src, dest) {\n    this._level++\n    dest.clear()\n    for (let i = 0; i < src.size(); i += 2) {\n      const n1 = src.get(i)\n      const n2 = i + 1 < src.size() ? src.get(i) : null\n      if (n2 === null) {\n        dest.add(n1)\n      } else {\n        const node = new IntervalRTreeBranchNode(src.get(i), src.get(i + 1))\n        dest.add(node)\n      }\n    }\n  }\n\n  getClass () {\n    return SortedPackedIntervalRTree\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nSortedPackedIntervalRTree.constructor_ = function () {\n  this._leaves = new ArrayList()\n  this._root = null\n  this._level = 0\n}\n","import ItemVisitor from './ItemVisitor'\nimport ArrayList from '../../../../java/util/ArrayList'\nexport default class ArrayListVisitor {\n  constructor () {\n    ArrayListVisitor.constructor_.apply(this, arguments)\n  }\n\n  visitItem (item) {\n    this._items.add(item)\n  }\n\n  getItems () {\n    return this._items\n  }\n\n  getClass () {\n    return ArrayListVisitor\n  }\n\n  get interfaces_ () {\n    return [ItemVisitor]\n  }\n}\nArrayListVisitor.constructor_ = function () {\n  this._items = new ArrayList()\n}\n","import Location from '../geom/Location'\nimport hasInterface from '../../../../hasInterface'\nimport Coordinate from '../geom/Coordinate'\nimport Orientation from './Orientation'\nimport CoordinateSequence from '../geom/CoordinateSequence'\nexport default class RayCrossingCounter {\n  constructor () {\n    RayCrossingCounter.constructor_.apply(this, arguments)\n  }\n\n  static locatePointInRing () {\n    if (arguments[0] instanceof Coordinate && hasInterface(arguments[1], CoordinateSequence)) {\n      const p = arguments[0]; const ring = arguments[1]\n      const counter = new RayCrossingCounter(p)\n      const p1 = new Coordinate()\n      const p2 = new Coordinate()\n      for (let i = 1; i < ring.size(); i++) {\n        ring.getCoordinate(i, p1)\n        ring.getCoordinate(i - 1, p2)\n        counter.countSegment(p1, p2)\n        if (counter.isOnSegment()) return counter.getLocation()\n      }\n      return counter.getLocation()\n    } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Array) {\n      const p = arguments[0]; const ring = arguments[1]\n      const counter = new RayCrossingCounter(p)\n      for (let i = 1; i < ring.length; i++) {\n        const p1 = ring[i]\n        const p2 = ring[i - 1]\n        counter.countSegment(p1, p2)\n        if (counter.isOnSegment()) return counter.getLocation()\n      }\n      return counter.getLocation()\n    }\n  }\n\n  countSegment (p1, p2) {\n    if (p1.x < this._p.x && p2.x < this._p.x) return null\n    if (this._p.x === p2.x && this._p.y === p2.y) {\n      this._isPointOnSegment = true\n      return null\n    }\n    if (p1.y === this._p.y && p2.y === this._p.y) {\n      let minx = p1.x\n      let maxx = p2.x\n      if (minx > maxx) {\n        minx = p2.x\n        maxx = p1.x\n      }\n      if (this._p.x >= minx && this._p.x <= maxx) {\n        this._isPointOnSegment = true\n      }\n      return null\n    }\n    if (p1.y > this._p.y && p2.y <= this._p.y || p2.y > this._p.y && p1.y <= this._p.y) {\n      let orient = Orientation.index(p1, p2, this._p)\n      if (orient === Orientation.COLLINEAR) {\n        this._isPointOnSegment = true\n        return null\n      }\n      if (p2.y < p1.y) {\n        orient = -orient\n      }\n      if (orient === Orientation.LEFT) {\n        this._crossingCount++\n      }\n    }\n  }\n\n  isPointInPolygon () {\n    return this.getLocation() !== Location.EXTERIOR\n  }\n\n  getLocation () {\n    if (this._isPointOnSegment) return Location.BOUNDARY\n    if (this._crossingCount % 2 === 1) {\n      return Location.INTERIOR\n    }\n    return Location.EXTERIOR\n  }\n\n  isOnSegment () {\n    return this._isPointOnSegment\n  }\n\n  getClass () {\n    return RayCrossingCounter\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nRayCrossingCounter.constructor_ = function () {\n  this._p = null\n  this._crossingCount = 0\n  this._isPointOnSegment = false\n  const p = arguments[0]\n  this._p = p\n}\n","import hasInterface from '../../../../../hasInterface'\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException'\nimport ItemVisitor from '../../index/ItemVisitor'\nimport PointOnGeometryLocator from './PointOnGeometryLocator'\nimport LinearRing from '../../geom/LinearRing'\nimport SortedPackedIntervalRTree from '../../index/intervalrtree/SortedPackedIntervalRTree'\nimport LineSegment from '../../geom/LineSegment'\nimport Polygonal from '../../geom/Polygonal'\nimport LinearComponentExtracter from '../../geom/util/LinearComponentExtracter'\nimport ArrayListVisitor from '../../index/ArrayListVisitor'\nimport RayCrossingCounter from '../RayCrossingCounter'\nexport default class IndexedPointInAreaLocator {\n  constructor () {\n    IndexedPointInAreaLocator.constructor_.apply(this, arguments)\n  }\n\n  locate (p) {\n    const rcc = new RayCrossingCounter(p)\n    const visitor = new SegmentVisitor(rcc)\n    this._index.query(p.y, p.y, visitor)\n    return rcc.getLocation()\n  }\n\n  getClass () {\n    return IndexedPointInAreaLocator\n  }\n\n  get interfaces_ () {\n    return [PointOnGeometryLocator]\n  }\n}\nclass SegmentVisitor {\n  constructor () {\n    SegmentVisitor.constructor_.apply(this, arguments)\n  }\n\n  visitItem (item) {\n    const seg = item\n    this._counter.countSegment(seg.getCoordinate(0), seg.getCoordinate(1))\n  }\n\n  getClass () {\n    return SegmentVisitor\n  }\n\n  get interfaces_ () {\n    return [ItemVisitor]\n  }\n}\nSegmentVisitor.constructor_ = function () {\n  this._counter = null\n  const counter = arguments[0]\n  this._counter = counter\n}\nclass IntervalIndexedGeometry {\n  constructor () {\n    IntervalIndexedGeometry.constructor_.apply(this, arguments)\n  }\n\n  init (geom) {\n    const lines = LinearComponentExtracter.getLines(geom)\n    for (let i = lines.iterator(); i.hasNext();) {\n      const line = i.next()\n      const pts = line.getCoordinates()\n      this.addLine(pts)\n    }\n  }\n\n  addLine (pts) {\n    for (let i = 1; i < pts.length; i++) {\n      const seg = new LineSegment(pts[i - 1], pts[i])\n      const min = Math.min(seg.p0.y, seg.p1.y)\n      const max = Math.max(seg.p0.y, seg.p1.y)\n      this._index.insert(min, max, seg)\n    }\n  }\n\n  query () {\n    if (arguments.length === 2) {\n      const min = arguments[0]; const max = arguments[1]\n      const visitor = new ArrayListVisitor()\n      this._index.query(min, max, visitor)\n      return visitor.getItems()\n    } else if (arguments.length === 3) {\n      const min = arguments[0]; const max = arguments[1]; const visitor = arguments[2]\n      this._index.query(min, max, visitor)\n    }\n  }\n\n  getClass () {\n    return IntervalIndexedGeometry\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nIntervalIndexedGeometry.constructor_ = function () {\n  this._index = new SortedPackedIntervalRTree()\n  const geom = arguments[0]\n  this.init(geom)\n}\nIndexedPointInAreaLocator.SegmentVisitor = SegmentVisitor\nIndexedPointInAreaLocator.IntervalIndexedGeometry = IntervalIndexedGeometry\nIndexedPointInAreaLocator.constructor_ = function () {\n  this._index = null\n  const g = arguments[0]\n  if (!(hasInterface(g, Polygonal) || g instanceof LinearRing)) throw new IllegalArgumentException('Argument must be Polygonal or LinearRing')\n  this._index = new IntervalIndexedGeometry(g)\n}\n","import Location from '../geom/Location'\nimport hasInterface from '../../../../hasInterface'\nimport Coordinate from '../geom/Coordinate'\nimport CoordinateSequence from '../geom/CoordinateSequence'\nimport RobustLineIntersector from './RobustLineIntersector'\nimport RayCrossingCounter from './RayCrossingCounter'\nexport default class PointLocation {\n  constructor () {\n    PointLocation.constructor_.apply(this, arguments)\n  }\n\n  static isOnLine () {\n    if (arguments[0] instanceof Coordinate && hasInterface(arguments[1], CoordinateSequence)) {\n      const p = arguments[0]; const line = arguments[1]\n      const lineIntersector = new RobustLineIntersector()\n      const p0 = new Coordinate()\n      const p1 = new Coordinate()\n      const n = line.size()\n      for (let i = 1; i < n; i++) {\n        line.getCoordinate(i - 1, p0)\n        line.getCoordinate(i, p1)\n        lineIntersector.computeIntersection(p, p0, p1)\n        if (lineIntersector.hasIntersection()) {\n          return true\n        }\n      }\n      return false\n    } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Array) {\n      const p = arguments[0]; const line = arguments[1]\n      const lineIntersector = new RobustLineIntersector()\n      for (let i = 1; i < line.length; i++) {\n        const p0 = line[i - 1]\n        const p1 = line[i]\n        lineIntersector.computeIntersection(p, p0, p1)\n        if (lineIntersector.hasIntersection()) {\n          return true\n        }\n      }\n      return false\n    }\n  }\n\n  static locateInRing (p, ring) {\n    return RayCrossingCounter.locatePointInRing(p, ring)\n  }\n\n  static isInRing (p, ring) {\n    return PointLocation.locateInRing(p, ring) !== Location.EXTERIOR\n  }\n\n  getClass () {\n    return PointLocation\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nPointLocation.constructor_ = function () {}\n","/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Iterator.html\n * @constructor\n * @private\n */\nexport default function Iterator () {};\n\n/**\n * Returns true if the iteration has more elements.\n * @return {boolean}\n */\nIterator.prototype.hasNext = function () {}\n\n/**\n * Returns the next element in the iteration.\n * @return {Object}\n */\nIterator.prototype.next = function () {}\n\n/**\n * Removes from the underlying collection the last element returned by the\n * iterator (optional operation).\n */\nIterator.prototype.remove = function () {}\n","import Iterator from '../../../../java/util/Iterator'\nimport NoSuchElementException from '../../../../java/util/NoSuchElementException'\nimport GeometryCollection from './GeometryCollection'\nimport UnsupportedOperationException from '../../../../java/lang/UnsupportedOperationException'\nexport default class GeometryCollectionIterator {\n  constructor () {\n    GeometryCollectionIterator.constructor_.apply(this, arguments)\n  }\n\n  static isAtomic (geom) {\n    return !(geom instanceof GeometryCollection)\n  }\n\n  next () {\n    if (this._atStart) {\n      this._atStart = false\n      if (GeometryCollectionIterator.isAtomic(this._parent)) this._index++\n      return this._parent\n    }\n    if (this._subcollectionIterator !== null) {\n      if (this._subcollectionIterator.hasNext()) {\n        return this._subcollectionIterator.next()\n      } else {\n        this._subcollectionIterator = null\n      }\n    }\n    if (this._index >= this._max) {\n      throw new NoSuchElementException()\n    }\n    const obj = this._parent.getGeometryN(this._index++)\n    if (obj instanceof GeometryCollection) {\n      this._subcollectionIterator = new GeometryCollectionIterator(obj)\n      return this._subcollectionIterator.next()\n    }\n    return obj\n  }\n\n  remove () {\n    throw new UnsupportedOperationException(this.getClass().getName())\n  }\n\n  hasNext () {\n    if (this._atStart) {\n      return true\n    }\n    if (this._subcollectionIterator !== null) {\n      if (this._subcollectionIterator.hasNext()) {\n        return true\n      }\n      this._subcollectionIterator = null\n    }\n    if (this._index >= this._max) {\n      return false\n    }\n    return true\n  }\n\n  getClass () {\n    return GeometryCollectionIterator\n  }\n\n  get interfaces_ () {\n    return [Iterator]\n  }\n}\nGeometryCollectionIterator.constructor_ = function () {\n  this._parent = null\n  this._atStart = null\n  this._max = null\n  this._index = null\n  this._subcollectionIterator = null\n  const parent = arguments[0]\n  this._parent = parent\n  this._atStart = true\n  this._index = 0\n  this._max = parent.getNumGeometries()\n}\n","import Location from '../../geom/Location'\nimport Polygon from '../../geom/Polygon'\nimport PointLocation from '../PointLocation'\nimport PointOnGeometryLocator from './PointOnGeometryLocator'\nimport GeometryCollectionIterator from '../../geom/GeometryCollectionIterator'\nimport GeometryCollection from '../../geom/GeometryCollection'\nexport default class SimplePointInAreaLocator {\n  constructor () {\n    SimplePointInAreaLocator.constructor_.apply(this, arguments)\n  }\n\n  static locatePointInPolygon (p, poly) {\n    if (poly.isEmpty()) return Location.EXTERIOR\n    const shell = poly.getExteriorRing()\n    const shellLoc = SimplePointInAreaLocator.locatePointInRing(p, shell)\n    if (shellLoc !== Location.INTERIOR) return shellLoc\n    for (let i = 0; i < poly.getNumInteriorRing(); i++) {\n      const hole = poly.getInteriorRingN(i)\n      const holeLoc = SimplePointInAreaLocator.locatePointInRing(p, hole)\n      if (holeLoc === Location.BOUNDARY) return Location.BOUNDARY\n      if (holeLoc === Location.INTERIOR) return Location.EXTERIOR\n    }\n    return Location.INTERIOR\n  }\n\n  static locatePointInRing (p, ring) {\n    if (!ring.getEnvelopeInternal().intersects(p)) return Location.EXTERIOR\n    return PointLocation.locateInRing(p, ring.getCoordinates())\n  }\n\n  static containsPointInPolygon (p, poly) {\n    return Location.EXTERIOR !== SimplePointInAreaLocator.locatePointInPolygon(p, poly)\n  }\n\n  static locateInGeometry (p, geom) {\n    if (geom instanceof Polygon) {\n      return SimplePointInAreaLocator.locatePointInPolygon(p, geom)\n    } else if (geom instanceof GeometryCollection) {\n      const geomi = new GeometryCollectionIterator(geom)\n      while (geomi.hasNext()) {\n        const g2 = geomi.next()\n        if (g2 !== geom) {\n          const loc = SimplePointInAreaLocator.locateInGeometry(p, g2)\n          if (loc !== Location.EXTERIOR) return loc\n        }\n      }\n    }\n    return Location.EXTERIOR\n  }\n\n  static locate (p, geom) {\n    if (geom.isEmpty()) return Location.EXTERIOR\n    return SimplePointInAreaLocator.locateInGeometry(p, geom)\n  }\n\n  locate (p) {\n    return SimplePointInAreaLocator.locate(p, this._geom)\n  }\n\n  getClass () {\n    return SimplePointInAreaLocator\n  }\n\n  get interfaces_ () {\n    return [PointOnGeometryLocator]\n  }\n}\nSimplePointInAreaLocator.constructor_ = function () {\n  this._geom = null\n  const geom = arguments[0]\n  this._geom = geom\n}\n","export default class SimilarityMeasure {\n  constructor () {\n    SimilarityMeasure.constructor_.apply(this, arguments)\n  }\n\n  measure (g1, g2) {}\n  getClass () {\n    return SimilarityMeasure\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nSimilarityMeasure.constructor_ = function () {}\n","import SimilarityMeasure from './SimilarityMeasure'\nexport default class AreaSimilarityMeasure {\n  constructor () {\n    AreaSimilarityMeasure.constructor_.apply(this, arguments)\n  }\n\n  measure (g1, g2) {\n    const areaInt = g1.intersection(g2).getArea()\n    const areaUnion = g1.union(g2).getArea()\n    return areaInt / areaUnion\n  }\n\n  getClass () {\n    return AreaSimilarityMeasure\n  }\n\n  get interfaces_ () {\n    return [SimilarityMeasure]\n  }\n}\nAreaSimilarityMeasure.constructor_ = function () {}\n","import SimilarityMeasure from './SimilarityMeasure'\nimport Envelope from '../../geom/Envelope'\nimport DiscreteHausdorffDistance from '../distance/DiscreteHausdorffDistance'\nexport default class HausdorffSimilarityMeasure {\n  constructor () {\n    HausdorffSimilarityMeasure.constructor_.apply(this, arguments)\n  }\n\n  static diagonalSize (env) {\n    if (env.isNull()) return 0.0\n    const width = env.getWidth()\n    const hgt = env.getHeight()\n    return Math.sqrt(width * width + hgt * hgt)\n  }\n\n  measure (g1, g2) {\n    const distance = DiscreteHausdorffDistance.distance(g1, g2, HausdorffSimilarityMeasure.DENSIFY_FRACTION)\n    const env = new Envelope(g1.getEnvelopeInternal())\n    env.expandToInclude(g2.getEnvelopeInternal())\n    const envSize = HausdorffSimilarityMeasure.diagonalSize(env)\n    const measure = 1 - distance / envSize\n    return measure\n  }\n\n  getClass () {\n    return HausdorffSimilarityMeasure\n  }\n\n  get interfaces_ () {\n    return [SimilarityMeasure]\n  }\n}\nHausdorffSimilarityMeasure.constructor_ = function () {}\nHausdorffSimilarityMeasure.DENSIFY_FRACTION = 0.25\n","export default class SimilarityMeasureCombiner {\n  constructor () {\n    SimilarityMeasureCombiner.constructor_.apply(this, arguments)\n  }\n\n  static combine (measure1, measure2) {\n    return Math.min(measure1, measure2)\n  }\n\n  getClass () {\n    return SimilarityMeasureCombiner\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nSimilarityMeasureCombiner.constructor_ = function () {}\n","import LineString from '../geom/LineString'\nimport Geometry from '../geom/Geometry'\nimport Coordinate from '../geom/Coordinate'\nimport Point from '../geom/Point'\nimport Polygon from '../geom/Polygon'\nimport Orientation from './Orientation'\nimport GeometryCollection from '../geom/GeometryCollection'\nexport default class Centroid {\n  constructor () {\n    Centroid.constructor_.apply(this, arguments)\n  }\n\n  static area2 (p1, p2, p3) {\n    return (p2.x - p1.x) * (p3.y - p1.y) - (p3.x - p1.x) * (p2.y - p1.y)\n  }\n\n  static centroid3 (p1, p2, p3, c) {\n    c.x = p1.x + p2.x + p3.x\n    c.y = p1.y + p2.y + p3.y\n    return null\n  }\n\n  static getCentroid (geom) {\n    const cent = new Centroid(geom)\n    return cent.getCentroid()\n  }\n\n  setAreaBasePoint (basePt) {\n    this._areaBasePt = basePt\n  }\n\n  addPoint (pt) {\n    this._ptCount += 1\n    this._ptCentSum.x += pt.x\n    this._ptCentSum.y += pt.y\n  }\n\n  addLineSegments (pts) {\n    let lineLen = 0.0\n    for (let i = 0; i < pts.length - 1; i++) {\n      const segmentLen = pts[i].distance(pts[i + 1])\n      if (segmentLen === 0.0) continue\n      lineLen += segmentLen\n      const midx = (pts[i].x + pts[i + 1].x) / 2\n      this._lineCentSum.x += segmentLen * midx\n      const midy = (pts[i].y + pts[i + 1].y) / 2\n      this._lineCentSum.y += segmentLen * midy\n    }\n    this._totalLength += lineLen\n    if (lineLen === 0.0 && pts.length > 0) this.addPoint(pts[0])\n  }\n\n  addHole (pts) {\n    const isPositiveArea = Orientation.isCCW(pts)\n    for (let i = 0; i < pts.length - 1; i++) {\n      this.addTriangle(this._areaBasePt, pts[i], pts[i + 1], isPositiveArea)\n    }\n    this.addLineSegments(pts)\n  }\n\n  getCentroid () {\n    const cent = new Coordinate()\n    if (Math.abs(this._areasum2) > 0.0) {\n      cent.x = this._cg3.x / 3 / this._areasum2\n      cent.y = this._cg3.y / 3 / this._areasum2\n    } else if (this._totalLength > 0.0) {\n      cent.x = this._lineCentSum.x / this._totalLength\n      cent.y = this._lineCentSum.y / this._totalLength\n    } else if (this._ptCount > 0) {\n      cent.x = this._ptCentSum.x / this._ptCount\n      cent.y = this._ptCentSum.y / this._ptCount\n    } else {\n      return null\n    }\n    return cent\n  }\n\n  addShell (pts) {\n    if (pts.length > 0) this.setAreaBasePoint(pts[0])\n    const isPositiveArea = !Orientation.isCCW(pts)\n    for (let i = 0; i < pts.length - 1; i++) {\n      this.addTriangle(this._areaBasePt, pts[i], pts[i + 1], isPositiveArea)\n    }\n    this.addLineSegments(pts)\n  }\n\n  addTriangle (p0, p1, p2, isPositiveArea) {\n    const sign = isPositiveArea ? 1.0 : -1.0\n    Centroid.centroid3(p0, p1, p2, this._triangleCent3)\n    const area2 = Centroid.area2(p0, p1, p2)\n    this._cg3.x += sign * area2 * this._triangleCent3.x\n    this._cg3.y += sign * area2 * this._triangleCent3.y\n    this._areasum2 += sign * area2\n  }\n\n  add () {\n    if (arguments[0] instanceof Polygon) {\n      const poly = arguments[0]\n      this.addShell(poly.getExteriorRing().getCoordinates())\n      for (let i = 0; i < poly.getNumInteriorRing(); i++) {\n        this.addHole(poly.getInteriorRingN(i).getCoordinates())\n      }\n    } else if (arguments[0] instanceof Geometry) {\n      const geom = arguments[0]\n      if (geom.isEmpty()) return null\n      if (geom instanceof Point) {\n        this.addPoint(geom.getCoordinate())\n      } else if (geom instanceof LineString) {\n        this.addLineSegments(geom.getCoordinates())\n      } else if (geom instanceof Polygon) {\n        const poly = geom\n        this.add(poly)\n      } else if (geom instanceof GeometryCollection) {\n        const gc = geom\n        for (let i = 0; i < gc.getNumGeometries(); i++) {\n          this.add(gc.getGeometryN(i))\n        }\n      }\n    }\n  }\n\n  getClass () {\n    return Centroid\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nCentroid.constructor_ = function () {\n  this._areaBasePt = null\n  this._triangleCent3 = new Coordinate()\n  this._areasum2 = 0\n  this._cg3 = new Coordinate()\n  this._lineCentSum = new Coordinate()\n  this._totalLength = 0.0\n  this._ptCount = 0\n  this._ptCentSum = new Coordinate()\n  const geom = arguments[0]\n  this._areaBasePt = null\n  this.add(geom)\n}\n","/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nexport default function EmptyStackException (message) {\n  this.message = message || ''\n};\nEmptyStackException.prototype = new Error()\n\n/**\n * @type {string}\n */\nEmptyStackException.prototype.name = 'EmptyStackException'\n","import EmptyStackException from './EmptyStackException'\nimport IndexOutOfBoundsException from '../lang/IndexOutOfBoundsException'\nimport List from './List'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Stack.html\n *\n * @extends {List}\n * @constructor\n * @private\n */\nexport default function Stack () {\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.array_ = []\n};\nStack.prototype = new List()\n\n/**\n * @override\n */\nStack.prototype.add = function (e) {\n  this.array_.push(e)\n  return true\n}\n\n/**\n * @override\n */\nStack.prototype.get = function (index) {\n  if (index < 0 || index >= this.size()) {\n    throw new IndexOutOfBoundsException()\n  }\n\n  return this.array_[index]\n}\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.push = function (e) {\n  this.array_.push(e)\n  return e\n}\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.pop = function (e) {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException()\n  }\n\n  return this.array_.pop()\n}\n\n/**\n * Looks at the object at the top of this stack without removing it from the\n * stack.\n * @return {Object}\n */\nStack.prototype.peek = function () {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException()\n  }\n\n  return this.array_[this.array_.length - 1]\n}\n\n/**\n * Tests if this stack is empty.\n * @return {boolean} true if and only if this stack contains no items; false\n *         otherwise.\n */\nStack.prototype.empty = function () {\n  if (this.array_.length === 0) {\n    return true\n  } else {\n    return false\n  }\n}\n\n/**\n * @return {boolean}\n */\nStack.prototype.isEmpty = function () {\n  return this.empty()\n}\n\n/**\n * Returns the 1-based position where an object is on this stack. If the object\n * o occurs as an item in this stack, this method returns the distance from the\n * top of the stack of the occurrence nearest the top of the stack; the topmost\n * item on the stack is considered to be at distance 1. The equals method is\n * used to compare o to the items in this stack.\n *\n * NOTE: does not currently actually use equals. (=== is used)\n *\n * @param {Object} o\n * @return {number} the 1-based position from the top of the stack where the\n *         object is located; the return value -1 indicates that the object is\n *         not on the stack.\n */\nStack.prototype.search = function (o) {\n  return this.array_.indexOf(o)\n}\n\n/**\n * @return {number}\n * @export\n */\nStack.prototype.size = function () {\n  return this.array_.length\n}\n\n/**\n * @return {Array}\n */\nStack.prototype.toArray = function () {\n  var array = []\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this.array_[i])\n  }\n\n  return array\n}\n","import TreeSet from '../../../../java/util/TreeSet'\nimport CoordinateFilter from '../geom/CoordinateFilter'\nimport ArrayList from '../../../../java/util/ArrayList'\nexport default class UniqueCoordinateArrayFilter {\n  constructor () {\n    UniqueCoordinateArrayFilter.constructor_.apply(this, arguments)\n  }\n\n  static filterCoordinates (coords) {\n    const filter = new UniqueCoordinateArrayFilter()\n    for (let i = 0; i < coords.length; i++) {\n      filter.filter(coords[i])\n    }\n    return filter.getCoordinates()\n  }\n\n  filter (coord) {\n    if (!this.treeSet.contains(coord)) {\n      this.list.add(coord)\n      this.treeSet.add(coord)\n    }\n  }\n\n  getCoordinates () {\n    const coordinates = new Array(this.list.size()).fill(null)\n    return this.list.toArray(coordinates)\n  }\n\n  getClass () {\n    return UniqueCoordinateArrayFilter\n  }\n\n  get interfaces_ () {\n    return [CoordinateFilter]\n  }\n}\nUniqueCoordinateArrayFilter.constructor_ = function () {\n  this.treeSet = new TreeSet()\n  this.list = new ArrayList()\n}\n","import TreeSet from '../../../../java/util/TreeSet'\nimport CoordinateList from '../geom/CoordinateList'\nimport Arrays from '../../../../java/util/Arrays'\nimport PointLocation from './PointLocation'\nimport Stack from '../../../../java/util/Stack'\nimport Orientation from './Orientation'\nimport CoordinateArrays from '../geom/CoordinateArrays'\nimport ArrayList from '../../../../java/util/ArrayList'\nimport Comparator from '../../../../java/util/Comparator'\nimport UniqueCoordinateArrayFilter from '../util/UniqueCoordinateArrayFilter'\nimport Assert from '../util/Assert'\nexport default class ConvexHull {\n  constructor () {\n    ConvexHull.constructor_.apply(this, arguments)\n  }\n\n  static extractCoordinates (geom) {\n    const filter = new UniqueCoordinateArrayFilter()\n    geom.apply(filter)\n    return filter.getCoordinates()\n  }\n\n  preSort (pts) {\n    let t = null\n    for (let i = 1; i < pts.length; i++) {\n      if (pts[i].y < pts[0].y || pts[i].y === pts[0].y && pts[i].x < pts[0].x) {\n        t = pts[0]\n        pts[0] = pts[i]\n        pts[i] = t\n      }\n    }\n    Arrays.sort(pts, 1, pts.length, new RadialComparator(pts[0]))\n    return pts\n  }\n\n  computeOctRing (inputPts) {\n    const octPts = this.computeOctPts(inputPts)\n    const coordList = new CoordinateList()\n    coordList.add(octPts, false)\n    if (coordList.size() < 3) {\n      return null\n    }\n    coordList.closeRing()\n    return coordList.toCoordinateArray()\n  }\n\n  lineOrPolygon (coordinates) {\n    coordinates = this.cleanRing(coordinates)\n    if (coordinates.length === 3) {\n      return this._geomFactory.createLineString([coordinates[0], coordinates[1]])\n    }\n    const linearRing = this._geomFactory.createLinearRing(coordinates)\n    return this._geomFactory.createPolygon(linearRing)\n  }\n\n  cleanRing (original) {\n    Assert.equals(original[0], original[original.length - 1])\n    const cleanedRing = new ArrayList()\n    let previousDistinctCoordinate = null\n    for (let i = 0; i <= original.length - 2; i++) {\n      const currentCoordinate = original[i]\n      const nextCoordinate = original[i + 1]\n      if (currentCoordinate.equals(nextCoordinate)) {\n        continue\n      }\n      if (previousDistinctCoordinate !== null && this.isBetween(previousDistinctCoordinate, currentCoordinate, nextCoordinate)) {\n        continue\n      }\n      cleanedRing.add(currentCoordinate)\n      previousDistinctCoordinate = currentCoordinate\n    }\n    cleanedRing.add(original[original.length - 1])\n    const cleanedRingCoordinates = new Array(cleanedRing.size()).fill(null)\n    return cleanedRing.toArray(cleanedRingCoordinates)\n  }\n\n  isBetween (c1, c2, c3) {\n    if (Orientation.index(c1, c2, c3) !== 0) {\n      return false\n    }\n    if (c1.x !== c3.x) {\n      if (c1.x <= c2.x && c2.x <= c3.x) {\n        return true\n      }\n      if (c3.x <= c2.x && c2.x <= c1.x) {\n        return true\n      }\n    }\n    if (c1.y !== c3.y) {\n      if (c1.y <= c2.y && c2.y <= c3.y) {\n        return true\n      }\n      if (c3.y <= c2.y && c2.y <= c1.y) {\n        return true\n      }\n    }\n    return false\n  }\n\n  reduce (inputPts) {\n    const polyPts = this.computeOctRing(inputPts)\n    if (polyPts === null) return inputPts\n    const reducedSet = new TreeSet()\n    for (let i = 0; i < polyPts.length; i++) {\n      reducedSet.add(polyPts[i])\n    }\n    for (let i = 0; i < inputPts.length; i++) {\n      if (!PointLocation.isInRing(inputPts[i], polyPts)) {\n        reducedSet.add(inputPts[i])\n      }\n    }\n    const reducedPts = CoordinateArrays.toCoordinateArray(reducedSet)\n    if (reducedPts.length < 3) return this.padArray3(reducedPts)\n    return reducedPts\n  }\n\n  getConvexHull () {\n    if (this._inputPts.length === 0) {\n      return this._geomFactory.createGeometryCollection()\n    }\n    if (this._inputPts.length === 1) {\n      return this._geomFactory.createPoint(this._inputPts[0])\n    }\n    if (this._inputPts.length === 2) {\n      return this._geomFactory.createLineString(this._inputPts)\n    }\n    let reducedPts = this._inputPts\n    if (this._inputPts.length > 50) {\n      reducedPts = this.reduce(this._inputPts)\n    }\n    const sortedPts = this.preSort(reducedPts)\n    const cHS = this.grahamScan(sortedPts)\n    const cH = this.toCoordinateArray(cHS)\n    return this.lineOrPolygon(cH)\n  }\n\n  padArray3 (pts) {\n    const pad = new Array(3).fill(null)\n    for (let i = 0; i < pad.length; i++) {\n      if (i < pts.length) {\n        pad[i] = pts[i]\n      } else pad[i] = pts[0]\n    }\n    return pad\n  }\n\n  computeOctPts (inputPts) {\n    const pts = new Array(8).fill(null)\n    for (let j = 0; j < pts.length; j++) {\n      pts[j] = inputPts[0]\n    }\n    for (let i = 1; i < inputPts.length; i++) {\n      if (inputPts[i].x < pts[0].x) {\n        pts[0] = inputPts[i]\n      }\n      if (inputPts[i].x - inputPts[i].y < pts[1].x - pts[1].y) {\n        pts[1] = inputPts[i]\n      }\n      if (inputPts[i].y > pts[2].y) {\n        pts[2] = inputPts[i]\n      }\n      if (inputPts[i].x + inputPts[i].y > pts[3].x + pts[3].y) {\n        pts[3] = inputPts[i]\n      }\n      if (inputPts[i].x > pts[4].x) {\n        pts[4] = inputPts[i]\n      }\n      if (inputPts[i].x - inputPts[i].y > pts[5].x - pts[5].y) {\n        pts[5] = inputPts[i]\n      }\n      if (inputPts[i].y < pts[6].y) {\n        pts[6] = inputPts[i]\n      }\n      if (inputPts[i].x + inputPts[i].y < pts[7].x + pts[7].y) {\n        pts[7] = inputPts[i]\n      }\n    }\n    return pts\n  }\n\n  toCoordinateArray (stack) {\n    const coordinates = new Array(stack.size()).fill(null)\n    for (let i = 0; i < stack.size(); i++) {\n      const coordinate = stack.get(i)\n      coordinates[i] = coordinate\n    }\n    return coordinates\n  }\n\n  grahamScan (c) {\n    let p = null\n    const ps = new Stack()\n    ps.push(c[0])\n    ps.push(c[1])\n    ps.push(c[2])\n    for (let i = 3; i < c.length; i++) {\n      p = ps.pop()\n      while (!ps.empty() && Orientation.index(ps.peek(), p, c[i]) > 0) {\n        p = ps.pop()\n      }\n      ps.push(p)\n      ps.push(c[i])\n    }\n    ps.push(c[0])\n    return ps\n  }\n\n  getClass () {\n    return ConvexHull\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nclass RadialComparator {\n  constructor () {\n    RadialComparator.constructor_.apply(this, arguments)\n  }\n\n  static polarCompare (o, p, q) {\n    const dxp = p.x - o.x\n    const dyp = p.y - o.y\n    const dxq = q.x - o.x\n    const dyq = q.y - o.y\n    const orient = Orientation.index(o, p, q)\n    if (orient === Orientation.COUNTERCLOCKWISE) return 1\n    if (orient === Orientation.CLOCKWISE) return -1\n    const op = dxp * dxp + dyp * dyp\n    const oq = dxq * dxq + dyq * dyq\n    if (op < oq) {\n      return -1\n    }\n    if (op > oq) {\n      return 1\n    }\n    return 0\n  }\n\n  compare (o1, o2) {\n    const p1 = o1\n    const p2 = o2\n    return RadialComparator.polarCompare(this._origin, p1, p2)\n  }\n\n  getClass () {\n    return RadialComparator\n  }\n\n  get interfaces_ () {\n    return [Comparator]\n  }\n}\nRadialComparator.constructor_ = function () {\n  this._origin = null\n  const origin = arguments[0]\n  this._origin = origin\n}\nConvexHull.RadialComparator = RadialComparator\nConvexHull.constructor_ = function () {\n  this._geomFactory = null\n  this._inputPts = null\n  if (arguments.length === 1) {\n    const geometry = arguments[0]\n    ConvexHull.constructor_.call(this, ConvexHull.extractCoordinates(geometry), geometry.getFactory())\n  } else if (arguments.length === 2) {\n    const pts = arguments[0]; const geomFactory = arguments[1]\n    this._inputPts = UniqueCoordinateArrayFilter.filterCoordinates(pts)\n    this._geomFactory = geomFactory\n  }\n}\n","import Geometry from '../geom/Geometry'\nimport Coordinate from '../geom/Coordinate'\nimport Polygon from '../geom/Polygon'\nimport Double from '../../../../java/lang/Double'\nimport GeometryCollection from '../geom/GeometryCollection'\nexport default class InteriorPointArea {\n  constructor () {\n    InteriorPointArea.constructor_.apply(this, arguments)\n  }\n\n  static centre (envelope) {\n    return new Coordinate(InteriorPointArea.avg(envelope.getMinX(), envelope.getMaxX()), InteriorPointArea.avg(envelope.getMinY(), envelope.getMaxY()))\n  }\n\n  static avg (a, b) {\n    return (a + b) / 2.0\n  }\n\n  addPolygon (geometry) {\n    if (geometry.isEmpty()) return null\n    let intPt = null\n    let width = null\n    const bisector = this.horizontalBisector(geometry)\n    if (bisector.getLength() === 0.0) {\n      width = 0\n      intPt = bisector.getCoordinate()\n    } else {\n      const intersections = bisector.intersection(geometry)\n      const widestIntersection = this.widestGeometry(intersections)\n      width = widestIntersection.getEnvelopeInternal().getWidth()\n      intPt = InteriorPointArea.centre(widestIntersection.getEnvelopeInternal())\n    }\n    if (this._interiorPoint === null || width > this._maxWidth) {\n      this._interiorPoint = intPt\n      this._maxWidth = width\n    }\n  }\n\n  getInteriorPoint () {\n    return this._interiorPoint\n  }\n\n  widestGeometry () {\n    if (arguments[0] instanceof GeometryCollection) {\n      const gc = arguments[0]\n      if (gc.isEmpty()) {\n        return gc\n      }\n      let widestGeometry = gc.getGeometryN(0)\n      for (let i = 1; i < gc.getNumGeometries(); i++) {\n        if (gc.getGeometryN(i).getEnvelopeInternal().getWidth() > widestGeometry.getEnvelopeInternal().getWidth()) {\n          widestGeometry = gc.getGeometryN(i)\n        }\n      }\n      return widestGeometry\n    } else if (arguments[0] instanceof Geometry) {\n      const geometry = arguments[0]\n      if (!(geometry instanceof GeometryCollection)) {\n        return geometry\n      }\n      return this.widestGeometry(geometry)\n    }\n  }\n\n  horizontalBisector (geometry) {\n    const envelope = geometry.getEnvelopeInternal()\n    const bisectY = SafeBisectorFinder.getBisectorY(geometry)\n    return this._factory.createLineString([new Coordinate(envelope.getMinX(), bisectY), new Coordinate(envelope.getMaxX(), bisectY)])\n  }\n\n  add (geom) {\n    if (geom instanceof Polygon) {\n      this.addPolygon(geom)\n    } else if (geom instanceof GeometryCollection) {\n      const gc = geom\n      for (let i = 0; i < gc.getNumGeometries(); i++) {\n        this.add(gc.getGeometryN(i))\n      }\n    }\n  }\n\n  getClass () {\n    return InteriorPointArea\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nclass SafeBisectorFinder {\n  constructor () {\n    SafeBisectorFinder.constructor_.apply(this, arguments)\n  }\n\n  static getBisectorY (poly) {\n    const finder = new SafeBisectorFinder(poly)\n    return finder.getBisectorY()\n  }\n\n  updateInterval (y) {\n    if (y <= this._centreY) {\n      if (y > this._loY) this._loY = y\n    } else if (y > this._centreY) {\n      if (y < this._hiY) {\n        this._hiY = y\n      }\n    }\n  }\n\n  getBisectorY () {\n    this.process(this._poly.getExteriorRing())\n    for (let i = 0; i < this._poly.getNumInteriorRing(); i++) {\n      this.process(this._poly.getInteriorRingN(i))\n    }\n    const bisectY = InteriorPointArea.avg(this._hiY, this._loY)\n    return bisectY\n  }\n\n  process (line) {\n    const seq = line.getCoordinateSequence()\n    for (let i = 0; i < seq.size(); i++) {\n      const y = seq.getY(i)\n      this.updateInterval(y)\n    }\n  }\n\n  getClass () {\n    return SafeBisectorFinder\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nSafeBisectorFinder.constructor_ = function () {\n  this._poly = null\n  this._centreY = null\n  this._hiY = Double.MAX_VALUE\n  this._loY = -Double.MAX_VALUE\n  const poly = arguments[0]\n  this._poly = poly\n  this._hiY = poly.getEnvelopeInternal().getMaxY()\n  this._loY = poly.getEnvelopeInternal().getMinY()\n  this._centreY = InteriorPointArea.avg(this._loY, this._hiY)\n}\nInteriorPointArea.SafeBisectorFinder = SafeBisectorFinder\nInteriorPointArea.constructor_ = function () {\n  this._factory = null\n  this._interiorPoint = null\n  this._maxWidth = 0.0\n  const g = arguments[0]\n  this._factory = g.getFactory()\n  this.add(g)\n}\n","import LineString from '../geom/LineString'\nimport Geometry from '../geom/Geometry'\nimport Coordinate from '../geom/Coordinate'\nimport Double from '../../../../java/lang/Double'\nimport Centroid from './Centroid'\nimport GeometryCollection from '../geom/GeometryCollection'\nexport default class InteriorPointLine {\n  constructor () {\n    InteriorPointLine.constructor_.apply(this, arguments)\n  }\n\n  addEndpoints () {\n    if (arguments[0] instanceof Geometry) {\n      const geom = arguments[0]\n      if (geom instanceof LineString) {\n        this.addEndpoints(geom.getCoordinates())\n      } else if (geom instanceof GeometryCollection) {\n        const gc = geom\n        for (let i = 0; i < gc.getNumGeometries(); i++) {\n          this.addEndpoints(gc.getGeometryN(i))\n        }\n      }\n    } else if (arguments[0] instanceof Array) {\n      const pts = arguments[0]\n      this.add(pts[0])\n      this.add(pts[pts.length - 1])\n    }\n  }\n\n  getInteriorPoint () {\n    return this._interiorPoint\n  }\n\n  addInterior () {\n    if (arguments[0] instanceof Geometry) {\n      const geom = arguments[0]\n      if (geom instanceof LineString) {\n        this.addInterior(geom.getCoordinates())\n      } else if (geom instanceof GeometryCollection) {\n        const gc = geom\n        for (let i = 0; i < gc.getNumGeometries(); i++) {\n          this.addInterior(gc.getGeometryN(i))\n        }\n      }\n    } else if (arguments[0] instanceof Array) {\n      const pts = arguments[0]\n      for (let i = 1; i < pts.length - 1; i++) {\n        this.add(pts[i])\n      }\n    }\n  }\n\n  add (point) {\n    const dist = point.distance(this._centroid)\n    if (dist < this._minDistance) {\n      this._interiorPoint = new Coordinate(point)\n      this._minDistance = dist\n    }\n  }\n\n  getClass () {\n    return InteriorPointLine\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nInteriorPointLine.constructor_ = function () {\n  this._centroid = null\n  this._minDistance = Double.MAX_VALUE\n  this._interiorPoint = null\n  const g = arguments[0]\n  if (g.isEmpty()) {\n    this._centroid = new Coordinate()\n  } else {\n    this._centroid = Centroid.getCentroid(g)\n  }\n  this.addInterior(g)\n  if (this._interiorPoint === null) this.addEndpoints(g)\n}\n","import Geometry from '../geom/Geometry'\nimport Coordinate from '../geom/Coordinate'\nimport Point from '../geom/Point'\nimport Double from '../../../../java/lang/Double'\nimport GeometryCollection from '../geom/GeometryCollection'\nexport default class InteriorPointPoint {\n  constructor () {\n    InteriorPointPoint.constructor_.apply(this, arguments)\n  }\n\n  getInteriorPoint () {\n    return this._interiorPoint\n  }\n\n  add () {\n    if (arguments[0] instanceof Geometry) {\n      const geom = arguments[0]\n      if (geom instanceof Point) {\n        this.add(geom.getCoordinate())\n      } else if (geom instanceof GeometryCollection) {\n        const gc = geom\n        for (let i = 0; i < gc.getNumGeometries(); i++) {\n          this.add(gc.getGeometryN(i))\n        }\n      }\n    } else if (arguments[0] instanceof Coordinate) {\n      const point = arguments[0]\n      const dist = point.distance(this._centroid)\n      if (dist < this._minDistance) {\n        this._interiorPoint = new Coordinate(point)\n        this._minDistance = dist\n      }\n    }\n  }\n\n  getClass () {\n    return InteriorPointPoint\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nInteriorPointPoint.constructor_ = function () {\n  this._centroid = null\n  this._minDistance = Double.MAX_VALUE\n  this._interiorPoint = null\n  const g = arguments[0]\n  this._centroid = g.getCentroid().getCoordinate()\n  this.add(g)\n}\n","import Location from '../geom/Location'\nimport LineString from '../geom/LineString'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException'\nimport Point from '../geom/Point'\nimport Polygon from '../geom/Polygon'\nimport PointLocation from './PointLocation'\nimport BoundaryNodeRule from './BoundaryNodeRule'\nimport MultiPolygon from '../geom/MultiPolygon'\nimport GeometryCollectionIterator from '../geom/GeometryCollectionIterator'\nimport GeometryCollection from '../geom/GeometryCollection'\nimport MultiLineString from '../geom/MultiLineString'\nexport default class PointLocator {\n  constructor () {\n    PointLocator.constructor_.apply(this, arguments)\n  }\n\n  locateInPolygonRing (p, ring) {\n    if (!ring.getEnvelopeInternal().intersects(p)) return Location.EXTERIOR\n    return PointLocation.locateInRing(p, ring.getCoordinates())\n  }\n\n  intersects (p, geom) {\n    return this.locate(p, geom) !== Location.EXTERIOR\n  }\n\n  updateLocationInfo (loc) {\n    if (loc === Location.INTERIOR) this._isIn = true\n    if (loc === Location.BOUNDARY) this._numBoundaries++\n  }\n\n  computeLocation (p, geom) {\n    if (geom instanceof Point) {\n      this.updateLocationInfo(this.locateOnPoint(p, geom))\n    }\n    if (geom instanceof LineString) {\n      this.updateLocationInfo(this.locateOnLineString(p, geom))\n    } else if (geom instanceof Polygon) {\n      this.updateLocationInfo(this.locateInPolygon(p, geom))\n    } else if (geom instanceof MultiLineString) {\n      const ml = geom\n      for (let i = 0; i < ml.getNumGeometries(); i++) {\n        const l = ml.getGeometryN(i)\n        this.updateLocationInfo(this.locateOnLineString(p, l))\n      }\n    } else if (geom instanceof MultiPolygon) {\n      const mpoly = geom\n      for (let i = 0; i < mpoly.getNumGeometries(); i++) {\n        const poly = mpoly.getGeometryN(i)\n        this.updateLocationInfo(this.locateInPolygon(p, poly))\n      }\n    } else if (geom instanceof GeometryCollection) {\n      const geomi = new GeometryCollectionIterator(geom)\n      while (geomi.hasNext()) {\n        const g2 = geomi.next()\n        if (g2 !== geom) this.computeLocation(p, g2)\n      }\n    }\n  }\n\n  locateOnPoint (p, pt) {\n    const ptCoord = pt.getCoordinate()\n    if (ptCoord.equals2D(p)) return Location.INTERIOR\n    return Location.EXTERIOR\n  }\n\n  locateOnLineString (p, l) {\n    if (!l.getEnvelopeInternal().intersects(p)) return Location.EXTERIOR\n    const seq = l.getCoordinateSequence()\n    if (!l.isClosed()) {\n      if (p.equals(seq.getCoordinate(0)) || p.equals(seq.getCoordinate(seq.size() - 1))) {\n        return Location.BOUNDARY\n      }\n    }\n    if (PointLocation.isOnLine(p, seq)) {\n      return Location.INTERIOR\n    }\n    return Location.EXTERIOR\n  }\n\n  locateInPolygon (p, poly) {\n    if (poly.isEmpty()) return Location.EXTERIOR\n    const shell = poly.getExteriorRing()\n    const shellLoc = this.locateInPolygonRing(p, shell)\n    if (shellLoc === Location.EXTERIOR) return Location.EXTERIOR\n    if (shellLoc === Location.BOUNDARY) return Location.BOUNDARY\n    for (let i = 0; i < poly.getNumInteriorRing(); i++) {\n      const hole = poly.getInteriorRingN(i)\n      const holeLoc = this.locateInPolygonRing(p, hole)\n      if (holeLoc === Location.INTERIOR) return Location.EXTERIOR\n      if (holeLoc === Location.BOUNDARY) return Location.BOUNDARY\n    }\n    return Location.INTERIOR\n  }\n\n  locate (p, geom) {\n    if (geom.isEmpty()) return Location.EXTERIOR\n    if (geom instanceof LineString) {\n      return this.locateOnLineString(p, geom)\n    } else if (geom instanceof Polygon) {\n      return this.locateInPolygon(p, geom)\n    }\n    this._isIn = false\n    this._numBoundaries = 0\n    this.computeLocation(p, geom)\n    if (this._boundaryRule.isInBoundary(this._numBoundaries)) return Location.BOUNDARY\n    if (this._numBoundaries > 0 || this._isIn) return Location.INTERIOR\n    return Location.EXTERIOR\n  }\n\n  getClass () {\n    return PointLocator\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nPointLocator.constructor_ = function () {\n  this._boundaryRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE\n  this._isIn = null\n  this._numBoundaries = null\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    const boundaryRule = arguments[0]\n    if (boundaryRule === null) throw new IllegalArgumentException('Rule must be non-null')\n    this._boundaryRule = boundaryRule\n  }\n}\n","import Coordinate from '../geom/Coordinate'\nimport Double from '../../../../java/lang/Double'\nimport CoordinateArrays from '../geom/CoordinateArrays'\nimport Angle from './Angle'\nimport Assert from '../util/Assert'\nimport Triangle from '../geom/Triangle'\nexport default class MinimumBoundingCircle {\n  constructor () {\n    MinimumBoundingCircle.constructor_.apply(this, arguments)\n  }\n\n  static pointWitMinAngleWithX (pts, P) {\n    let minSin = Double.MAX_VALUE\n    let minAngPt = null\n    for (let i = 0; i < pts.length; i++) {\n      const p = pts[i]\n      if (p === P) continue\n      const dx = p.x - P.x\n      let dy = p.y - P.y\n      if (dy < 0) dy = -dy\n      const len = Math.sqrt(dx * dx + dy * dy)\n      const sin = dy / len\n      if (sin < minSin) {\n        minSin = sin\n        minAngPt = p\n      }\n    }\n    return minAngPt\n  }\n\n  static lowestPoint (pts) {\n    let min = pts[0]\n    for (let i = 1; i < pts.length; i++) {\n      if (pts[i].y < min.y) min = pts[i]\n    }\n    return min\n  }\n\n  static pointWithMinAngleWithSegment (pts, P, Q) {\n    let minAng = Double.MAX_VALUE\n    let minAngPt = null\n    for (let i = 0; i < pts.length; i++) {\n      const p = pts[i]\n      if (p === P) continue\n      if (p === Q) continue\n      const ang = Angle.angleBetween(P, p, Q)\n      if (ang < minAng) {\n        minAng = ang\n        minAngPt = p\n      }\n    }\n    return minAngPt\n  }\n\n  getRadius () {\n    this.compute()\n    return this._radius\n  }\n\n  getDiameter () {\n    this.compute()\n    switch (this._extremalPts.length) {\n      case 0:\n        return this._input.getFactory().createLineString()\n      case 1:\n        return this._input.getFactory().createPoint(this._centre)\n    }\n    const p0 = this._extremalPts[0]\n    const p1 = this._extremalPts[1]\n    return this._input.getFactory().createLineString([p0, p1])\n  }\n\n  getExtremalPoints () {\n    this.compute()\n    return this._extremalPts\n  }\n\n  computeCirclePoints () {\n    if (this._input.isEmpty()) {\n      this._extremalPts = new Array(0).fill(null)\n      return null\n    }\n    if (this._input.getNumPoints() === 1) {\n      const pts = this._input.getCoordinates()\n      this._extremalPts = [new Coordinate(pts[0])]\n      return null\n    }\n    const convexHull = this._input.convexHull()\n    const hullPts = convexHull.getCoordinates()\n    let pts = hullPts\n    if (hullPts[0].equals2D(hullPts[hullPts.length - 1])) {\n      pts = new Array(hullPts.length - 1).fill(null)\n      CoordinateArrays.copyDeep(hullPts, 0, pts, 0, hullPts.length - 1)\n    }\n    if (pts.length <= 2) {\n      this._extremalPts = CoordinateArrays.copyDeep(pts)\n      return null\n    }\n    let P = MinimumBoundingCircle.lowestPoint(pts)\n    let Q = MinimumBoundingCircle.pointWitMinAngleWithX(pts, P)\n    for (let i = 0; i < pts.length; i++) {\n      const R = MinimumBoundingCircle.pointWithMinAngleWithSegment(pts, P, Q)\n      if (Angle.isObtuse(P, R, Q)) {\n        this._extremalPts = [new Coordinate(P), new Coordinate(Q)]\n        return null\n      }\n      if (Angle.isObtuse(R, P, Q)) {\n        P = R\n        continue\n      }\n      if (Angle.isObtuse(R, Q, P)) {\n        Q = R\n        continue\n      }\n      this._extremalPts = [new Coordinate(P), new Coordinate(Q), new Coordinate(R)]\n      return null\n    }\n    Assert.shouldNeverReachHere('Logic failure in Minimum Bounding Circle algorithm!')\n  }\n\n  compute () {\n    if (this._extremalPts !== null) return null\n    this.computeCirclePoints()\n    this.computeCentre()\n    if (this._centre !== null) this._radius = this._centre.distance(this._extremalPts[0])\n  }\n\n  getFarthestPoints () {\n    this.compute()\n    switch (this._extremalPts.length) {\n      case 0:\n        return this._input.getFactory().createLineString()\n      case 1:\n        return this._input.getFactory().createPoint(this._centre)\n    }\n    const p0 = this._extremalPts[0]\n    const p1 = this._extremalPts[this._extremalPts.length - 1]\n    return this._input.getFactory().createLineString([p0, p1])\n  }\n\n  getCircle () {\n    this.compute()\n    if (this._centre === null) return this._input.getFactory().createPolygon()\n    const centrePoint = this._input.getFactory().createPoint(this._centre)\n    if (this._radius === 0.0) return centrePoint\n    return centrePoint.buffer(this._radius)\n  }\n\n  getCentre () {\n    this.compute()\n    return this._centre\n  }\n\n  computeCentre () {\n    switch (this._extremalPts.length) {\n      case 0:\n        this._centre = null\n        break\n      case 1:\n        this._centre = this._extremalPts[0]\n        break\n      case 2:\n        this._centre = new Coordinate((this._extremalPts[0].x + this._extremalPts[1].x) / 2.0, (this._extremalPts[0].y + this._extremalPts[1].y) / 2.0)\n        break\n      case 3:\n        this._centre = Triangle.circumcentre(this._extremalPts[0], this._extremalPts[1], this._extremalPts[2])\n        break\n    }\n  }\n\n  getClass () {\n    return MinimumBoundingCircle\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nMinimumBoundingCircle.constructor_ = function () {\n  this._input = null\n  this._extremalPts = null\n  this._centre = null\n  this._radius = 0.0\n  const geom = arguments[0]\n  this._input = geom\n}\n","import Coordinate from '../geom/Coordinate'\nimport Polygon from '../geom/Polygon'\nimport Double from '../../../../java/lang/Double'\nimport LineSegment from '../geom/LineSegment'\nimport ConvexHull from './ConvexHull'\nexport default class MinimumDiameter {\n  constructor () {\n    MinimumDiameter.constructor_.apply(this, arguments)\n  }\n\n  static nextIndex (pts, index) {\n    index++\n    if (index >= pts.length) index = 0\n    return index\n  }\n\n  static computeC (a, b, p) {\n    return a * p.y - b * p.x\n  }\n\n  static getMinimumDiameter (geom) {\n    return new MinimumDiameter(geom).getDiameter()\n  }\n\n  static getMinimumRectangle (geom) {\n    return new MinimumDiameter(geom).getMinimumRectangle()\n  }\n\n  static computeSegmentForLine (a, b, c) {\n    let p0 = null\n    let p1 = null\n    if (Math.abs(b) > Math.abs(a)) {\n      p0 = new Coordinate(0.0, c / b)\n      p1 = new Coordinate(1.0, c / b - a / b)\n    } else {\n      p0 = new Coordinate(c / a, 0.0)\n      p1 = new Coordinate(c / a - b / a, 1.0)\n    }\n    return new LineSegment(p0, p1)\n  }\n\n  getWidthCoordinate () {\n    this.computeMinimumDiameter()\n    return this._minWidthPt\n  }\n\n  getSupportingSegment () {\n    this.computeMinimumDiameter()\n    return this._inputGeom.getFactory().createLineString([this._minBaseSeg.p0, this._minBaseSeg.p1])\n  }\n\n  getDiameter () {\n    this.computeMinimumDiameter()\n    if (this._minWidthPt === null) return this._inputGeom.getFactory().createLineString()\n    const basePt = this._minBaseSeg.project(this._minWidthPt)\n    return this._inputGeom.getFactory().createLineString([basePt, this._minWidthPt])\n  }\n\n  computeWidthConvex (convexGeom) {\n    if (convexGeom instanceof Polygon) this._convexHullPts = convexGeom.getExteriorRing().getCoordinates(); else this._convexHullPts = convexGeom.getCoordinates()\n    if (this._convexHullPts.length === 0) {\n      this._minWidth = 0.0\n      this._minWidthPt = null\n      this._minBaseSeg = null\n    } else if (this._convexHullPts.length === 1) {\n      this._minWidth = 0.0\n      this._minWidthPt = this._convexHullPts[0]\n      this._minBaseSeg.p0 = this._convexHullPts[0]\n      this._minBaseSeg.p1 = this._convexHullPts[0]\n    } else if (this._convexHullPts.length === 2 || this._convexHullPts.length === 3) {\n      this._minWidth = 0.0\n      this._minWidthPt = this._convexHullPts[0]\n      this._minBaseSeg.p0 = this._convexHullPts[0]\n      this._minBaseSeg.p1 = this._convexHullPts[1]\n    } else this.computeConvexRingMinDiameter(this._convexHullPts)\n  }\n\n  computeConvexRingMinDiameter (pts) {\n    this._minWidth = Double.MAX_VALUE\n    let currMaxIndex = 1\n    const seg = new LineSegment()\n    for (let i = 0; i < pts.length - 1; i++) {\n      seg.p0 = pts[i]\n      seg.p1 = pts[i + 1]\n      currMaxIndex = this.findMaxPerpDistance(pts, seg, currMaxIndex)\n    }\n  }\n\n  computeMinimumDiameter () {\n    if (this._minWidthPt !== null) return null\n    if (this._isConvex) this.computeWidthConvex(this._inputGeom); else {\n      const convexGeom = new ConvexHull(this._inputGeom).getConvexHull()\n      this.computeWidthConvex(convexGeom)\n    }\n  }\n\n  getLength () {\n    this.computeMinimumDiameter()\n    return this._minWidth\n  }\n\n  findMaxPerpDistance (pts, seg, startIndex) {\n    let maxPerpDistance = seg.distancePerpendicular(pts[startIndex])\n    let nextPerpDistance = maxPerpDistance\n    let maxIndex = startIndex\n    let nextIndex = maxIndex\n    while (nextPerpDistance >= maxPerpDistance) {\n      maxPerpDistance = nextPerpDistance\n      maxIndex = nextIndex\n      nextIndex = MinimumDiameter.nextIndex(pts, maxIndex)\n      nextPerpDistance = seg.distancePerpendicular(pts[nextIndex])\n    }\n    if (maxPerpDistance < this._minWidth) {\n      this._minPtIndex = maxIndex\n      this._minWidth = maxPerpDistance\n      this._minWidthPt = pts[this._minPtIndex]\n      this._minBaseSeg = new LineSegment(seg)\n    }\n    return maxIndex\n  }\n\n  getMinimumRectangle () {\n    this.computeMinimumDiameter()\n    if (this._minWidth === 0.0) {\n      if (this._minBaseSeg.p0.equals2D(this._minBaseSeg.p1)) {\n        return this._inputGeom.getFactory().createPoint(this._minBaseSeg.p0)\n      }\n      return this._minBaseSeg.toGeometry(this._inputGeom.getFactory())\n    }\n    const dx = this._minBaseSeg.p1.x - this._minBaseSeg.p0.x\n    const dy = this._minBaseSeg.p1.y - this._minBaseSeg.p0.y\n    let minPara = Double.MAX_VALUE\n    let maxPara = -Double.MAX_VALUE\n    let minPerp = Double.MAX_VALUE\n    let maxPerp = -Double.MAX_VALUE\n    for (let i = 0; i < this._convexHullPts.length; i++) {\n      const paraC = MinimumDiameter.computeC(dx, dy, this._convexHullPts[i])\n      if (paraC > maxPara) maxPara = paraC\n      if (paraC < minPara) minPara = paraC\n      const perpC = MinimumDiameter.computeC(-dy, dx, this._convexHullPts[i])\n      if (perpC > maxPerp) maxPerp = perpC\n      if (perpC < minPerp) minPerp = perpC\n    }\n    const maxPerpLine = MinimumDiameter.computeSegmentForLine(-dx, -dy, maxPerp)\n    const minPerpLine = MinimumDiameter.computeSegmentForLine(-dx, -dy, minPerp)\n    const maxParaLine = MinimumDiameter.computeSegmentForLine(-dy, dx, maxPara)\n    const minParaLine = MinimumDiameter.computeSegmentForLine(-dy, dx, minPara)\n    const p0 = maxParaLine.lineIntersection(maxPerpLine)\n    const p1 = minParaLine.lineIntersection(maxPerpLine)\n    const p2 = minParaLine.lineIntersection(minPerpLine)\n    const p3 = maxParaLine.lineIntersection(minPerpLine)\n    const shell = this._inputGeom.getFactory().createLinearRing([p0, p1, p2, p3, p0])\n    return this._inputGeom.getFactory().createPolygon(shell)\n  }\n\n  getClass () {\n    return MinimumDiameter\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nMinimumDiameter.constructor_ = function () {\n  this._inputGeom = null\n  this._isConvex = null\n  this._convexHullPts = null\n  this._minBaseSeg = new LineSegment()\n  this._minWidthPt = null\n  this._minPtIndex = null\n  this._minWidth = 0.0\n  if (arguments.length === 1) {\n    const inputGeom = arguments[0]\n    MinimumDiameter.constructor_.call(this, inputGeom, false)\n  } else if (arguments.length === 2) {\n    const inputGeom = arguments[0]; const isConvex = arguments[1]\n    this._inputGeom = inputGeom\n    this._isConvex = isConvex\n  }\n}\n","import LineString from '../geom/LineString'\nimport CoordinateList from '../geom/CoordinateList'\nimport GeometryTransformer from '../geom/util/GeometryTransformer'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException'\nimport MultiPolygon from '../geom/MultiPolygon'\nimport LineSegment from '../geom/LineSegment'\nexport default class Densifier {\n  constructor () {\n    Densifier.constructor_.apply(this, arguments)\n  }\n\n  static densifyPoints (pts, distanceTolerance, precModel) {\n    const seg = new LineSegment()\n    const coordList = new CoordinateList()\n    for (let i = 0; i < pts.length - 1; i++) {\n      seg.p0 = pts[i]\n      seg.p1 = pts[i + 1]\n      coordList.add(seg.p0, false)\n      const len = seg.getLength()\n      const densifiedSegCount = Math.trunc(len / distanceTolerance) + 1\n      if (densifiedSegCount > 1) {\n        const densifiedSegLen = len / densifiedSegCount\n        for (let j = 1; j < densifiedSegCount; j++) {\n          const segFract = j * densifiedSegLen / len\n          const p = seg.pointAlong(segFract)\n          precModel.makePrecise(p)\n          coordList.add(p, false)\n        }\n      }\n    }\n    coordList.add(pts[pts.length - 1], false)\n    return coordList.toCoordinateArray()\n  }\n\n  static densify (geom, distanceTolerance) {\n    const densifier = new Densifier(geom)\n    densifier.setDistanceTolerance(distanceTolerance)\n    return densifier.getResultGeometry()\n  }\n\n  getResultGeometry () {\n    return new DensifyTransformer(this._distanceTolerance).transform(this._inputGeom)\n  }\n\n  setDistanceTolerance (distanceTolerance) {\n    if (distanceTolerance <= 0.0) throw new IllegalArgumentException('Tolerance must be positive')\n    this._distanceTolerance = distanceTolerance\n  }\n\n  getClass () {\n    return Densifier\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nclass DensifyTransformer extends GeometryTransformer {\n  constructor () {\n    super()\n    DensifyTransformer.constructor_.apply(this, arguments)\n  }\n\n  transformMultiPolygon (geom, parent) {\n    const roughGeom = super.transformMultiPolygon.call(this, geom, parent)\n    return this.createValidArea(roughGeom)\n  }\n\n  transformPolygon (geom, parent) {\n    const roughGeom = super.transformPolygon.call(this, geom, parent)\n    if (parent instanceof MultiPolygon) {\n      return roughGeom\n    }\n    return this.createValidArea(roughGeom)\n  }\n\n  transformCoordinates (coords, parent) {\n    const inputPts = coords.toCoordinateArray()\n    let newPts = Densifier.densifyPoints(inputPts, this.distanceTolerance, parent.getPrecisionModel())\n    if (parent instanceof LineString && newPts.length === 1) {\n      newPts = new Array(0).fill(null)\n    }\n    return this._factory.getCoordinateSequenceFactory().create(newPts)\n  }\n\n  createValidArea (roughAreaGeom) {\n    return roughAreaGeom.buffer(0.0)\n  }\n\n  getClass () {\n    return DensifyTransformer\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nDensifyTransformer.constructor_ = function () {\n  this.distanceTolerance = null\n  const distanceTolerance = arguments[0]\n  this.distanceTolerance = distanceTolerance\n}\nDensifier.DensifyTransformer = DensifyTransformer\nDensifier.constructor_ = function () {\n  this._inputGeom = null\n  this._distanceTolerance = null\n  const inputGeom = arguments[0]\n  this._inputGeom = inputGeom\n}\n","import Coordinate from '../geom/Coordinate'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException'\nexport default class Quadrant {\n  constructor () {\n    Quadrant.constructor_.apply(this, arguments)\n  }\n\n  static isNorthern (quad) {\n    return quad === Quadrant.NE || quad === Quadrant.NW\n  }\n\n  static isOpposite (quad1, quad2) {\n    if (quad1 === quad2) return false\n    const diff = (quad1 - quad2 + 4) % 4\n    if (diff === 2) return true\n    return false\n  }\n\n  static commonHalfPlane (quad1, quad2) {\n    if (quad1 === quad2) return quad1\n    const diff = (quad1 - quad2 + 4) % 4\n    if (diff === 2) return -1\n    const min = quad1 < quad2 ? quad1 : quad2\n    const max = quad1 > quad2 ? quad1 : quad2\n    if (min === 0 && max === 3) return 3\n    return min\n  }\n\n  static isInHalfPlane (quad, halfPlane) {\n    if (halfPlane === Quadrant.SE) {\n      return quad === Quadrant.SE || quad === Quadrant.SW\n    }\n    return quad === halfPlane || quad === halfPlane + 1\n  }\n\n  static quadrant () {\n    if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n      const dx = arguments[0]; const dy = arguments[1]\n      if (dx === 0.0 && dy === 0.0) throw new IllegalArgumentException('Cannot compute the quadrant for point ( ' + dx + ', ' + dy + ' )')\n      if (dx >= 0.0) {\n        if (dy >= 0.0) return Quadrant.NE; else return Quadrant.SE\n      } else {\n        if (dy >= 0.0) return Quadrant.NW; else return Quadrant.SW\n      }\n    } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n      const p0 = arguments[0]; const p1 = arguments[1]\n      if (p1.x === p0.x && p1.y === p0.y) throw new IllegalArgumentException('Cannot compute the quadrant for two identical points ' + p0)\n      if (p1.x >= p0.x) {\n        if (p1.y >= p0.y) return Quadrant.NE; else return Quadrant.SE\n      } else {\n        if (p1.y >= p0.y) return Quadrant.NW; else return Quadrant.SW\n      }\n    }\n  }\n\n  getClass () {\n    return Quadrant\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nQuadrant.constructor_ = function () {}\nQuadrant.NE = 0\nQuadrant.NW = 1\nQuadrant.SW = 2\nQuadrant.SE = 3\n","import Coordinate from '../geom/Coordinate'\nimport Orientation from '../algorithm/Orientation'\nimport Quadrant from '../geomgraph/Quadrant'\nimport Assert from '../util/Assert'\nexport default class HalfEdge {\n  constructor () {\n    HalfEdge.constructor_.apply(this, arguments)\n  }\n\n  static init (e0, e1) {\n    if (e0._sym !== null || e1._sym !== null || e0._next !== null || e1._next !== null) throw new IllegalStateException('Edges are already initialized')\n    e0.init(e1)\n    return e0\n  }\n\n  static create (p0, p1) {\n    const e0 = new HalfEdge(p0)\n    const e1 = new HalfEdge(p1)\n    e0.init(e1)\n    return e0\n  }\n\n  find (dest) {\n    let oNext = this\n    do {\n      if (oNext === null) return null\n      if (oNext.dest().equals2D(dest)) return oNext\n      oNext = oNext.oNext()\n    } while (oNext !== this)\n    return null\n  }\n\n  dest () {\n    return this._sym._orig\n  }\n\n  oNext () {\n    return this._sym._next\n  }\n\n  insert (e) {\n    if (this.oNext() === this) {\n      this.insertAfter(e)\n      return null\n    }\n    const ecmp = this.compareTo(e)\n    let ePrev = this\n    do {\n      const oNext = ePrev.oNext()\n      const cmp = oNext.compareTo(e)\n      if (cmp !== ecmp || oNext === this) {\n        ePrev.insertAfter(e)\n        return null\n      }\n      ePrev = oNext\n    } while (ePrev !== this)\n    Assert.shouldNeverReachHere()\n  }\n\n  insertAfter (e) {\n    Assert.equals(this._orig, e.orig())\n    const save = this.oNext()\n    this._sym.setNext(e)\n    e.sym().setNext(save)\n  }\n\n  degree () {\n    let degree = 0\n    let e = this\n    do {\n      degree++\n      e = e.oNext()\n    } while (e !== this)\n    return degree\n  }\n\n  equals () {\n    if (arguments.length === 2 && (arguments[1] instanceof Coordinate && arguments[0] instanceof Coordinate)) {\n      const p0 = arguments[0]; const p1 = arguments[1]\n      return this._orig.equals2D(p0) && this._sym._orig.equals(p1)\n    }\n  }\n\n  deltaY () {\n    return this._sym._orig.y - this._orig.y\n  }\n\n  sym () {\n    return this._sym\n  }\n\n  prev () {\n    return this._sym.next()._sym\n  }\n\n  compareAngularDirection (e) {\n    const dx = this.deltaX()\n    const dy = this.deltaY()\n    const dx2 = e.deltaX()\n    const dy2 = e.deltaY()\n    if (dx === dx2 && dy === dy2) return 0\n    const quadrant = Quadrant.quadrant(dx, dy)\n    const quadrant2 = Quadrant.quadrant(dx2, dy2)\n    if (quadrant > quadrant2) return 1\n    if (quadrant < quadrant2) return -1\n    return Orientation.index(e._orig, e.dest(), this.dest())\n  }\n\n  prevNode () {\n    let e = this\n    while (e.degree() === 2) {\n      e = e.prev()\n      if (e === this) return null\n    }\n    return e\n  }\n\n  compareTo (obj) {\n    const e = obj\n    const comp = this.compareAngularDirection(e)\n    return comp\n  }\n\n  next () {\n    return this._next\n  }\n\n  setSym (e) {\n    this._sym = e\n  }\n\n  orig () {\n    return this._orig\n  }\n\n  toString () {\n    return 'HE(' + this._orig.x + ' ' + this._orig.y + ', ' + this._sym._orig.x + ' ' + this._sym._orig.y + ')'\n  }\n\n  setNext (e) {\n    this._next = e\n  }\n\n  init (e) {\n    this.setSym(e)\n    e.setSym(this)\n    this.setNext(e)\n    e.setNext(this)\n  }\n\n  deltaX () {\n    return this._sym._orig.x - this._orig.x\n  }\n\n  getClass () {\n    return HalfEdge\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nHalfEdge.constructor_ = function () {\n  this._orig = null\n  this._sym = null\n  this._next = null\n  const orig = arguments[0]\n  this._orig = orig\n}\n","import HalfEdge from './HalfEdge'\nexport default class MarkHalfEdge extends HalfEdge {\n  constructor () {\n    super()\n    MarkHalfEdge.constructor_.apply(this, arguments)\n  }\n\n  static setMarkBoth (e, isMarked) {\n    e.setMark(isMarked)\n    e.sym().setMark(isMarked)\n  }\n\n  static isMarked (e) {\n    return e.isMarked()\n  }\n\n  static setMark (e, isMarked) {\n    e.setMark(isMarked)\n  }\n\n  static markBoth (e) {\n    e.mark()\n    e.sym().mark()\n  }\n\n  static mark (e) {\n    e.mark()\n  }\n\n  mark () {\n    this._isMarked = true\n  }\n\n  setMark (isMarked) {\n    this._isMarked = isMarked\n  }\n\n  isMarked () {\n    return this._isMarked\n  }\n\n  getClass () {\n    return MarkHalfEdge\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nMarkHalfEdge.constructor_ = function () {\n  this._isMarked = false\n  const orig = arguments[0]\n  HalfEdge.constructor_.call(this, orig)\n}\n","import HashMap from '../../../../java/util/HashMap'\nimport HalfEdge from './HalfEdge'\nexport default class EdgeGraph {\n  constructor () {\n    EdgeGraph.constructor_.apply(this, arguments)\n  }\n\n  static isValidEdge (orig, dest) {\n    const cmp = dest.compareTo(orig)\n    return cmp !== 0\n  }\n\n  insert (orig, dest, eAdj) {\n    const e = this.create(orig, dest)\n    if (eAdj !== null) {\n      eAdj.insert(e)\n    } else {\n      this._vertexMap.put(orig, e)\n    }\n    const eAdjDest = this._vertexMap.get(dest)\n    if (eAdjDest !== null) {\n      eAdjDest.insert(e.sym())\n    } else {\n      this._vertexMap.put(dest, e.sym())\n    }\n    return e\n  }\n\n  create (p0, p1) {\n    const e0 = this.createEdge(p0)\n    const e1 = this.createEdge(p1)\n    HalfEdge.init(e0, e1)\n    return e0\n  }\n\n  createEdge (orig) {\n    return new HalfEdge(orig)\n  }\n\n  addEdge (orig, dest) {\n    if (!EdgeGraph.isValidEdge(orig, dest)) return null\n    const eAdj = this._vertexMap.get(orig)\n    let eSame = null\n    if (eAdj !== null) {\n      eSame = eAdj.find(dest)\n    }\n    if (eSame !== null) {\n      return eSame\n    }\n    const e = this.insert(orig, dest, eAdj)\n    return e\n  }\n\n  getVertexEdges () {\n    return this._vertexMap.values()\n  }\n\n  findEdge (orig, dest) {\n    const e = this._vertexMap.get(orig)\n    if (e === null) return null\n    return e.find(dest)\n  }\n\n  getClass () {\n    return EdgeGraph\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nEdgeGraph.constructor_ = function () {\n  this._vertexMap = new HashMap()\n}\n","import MarkHalfEdge from '../edgegraph/MarkHalfEdge'\nexport default class DissolveHalfEdge extends MarkHalfEdge {\n  constructor () {\n    super()\n    DissolveHalfEdge.constructor_.apply(this, arguments)\n  }\n\n  setStart () {\n    this._isStart = true\n  }\n\n  isStart () {\n    return this._isStart\n  }\n\n  getClass () {\n    return DissolveHalfEdge\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nDissolveHalfEdge.constructor_ = function () {\n  this._isStart = false\n  const orig = arguments[0]\n  MarkHalfEdge.constructor_.call(this, orig)\n}\n","import EdgeGraph from '../edgegraph/EdgeGraph'\nimport DissolveHalfEdge from './DissolveHalfEdge'\nexport default class DissolveEdgeGraph extends EdgeGraph {\n  constructor () {\n    super()\n    DissolveEdgeGraph.constructor_.apply(this, arguments)\n  }\n\n  createEdge (p0) {\n    return new DissolveHalfEdge(p0)\n  }\n\n  getClass () {\n    return DissolveEdgeGraph\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nDissolveEdgeGraph.constructor_ = function () {}\n","import LineString from '../geom/LineString'\nimport CoordinateList from '../geom/CoordinateList'\nimport Geometry from '../geom/Geometry'\nimport hasInterface from '../../../../hasInterface'\nimport Collection from '../../../../java/util/Collection'\nimport Stack from '../../../../java/util/Stack'\nimport MarkHalfEdge from '../edgegraph/MarkHalfEdge'\nimport DissolveEdgeGraph from './DissolveEdgeGraph'\nimport GeometryComponentFilter from '../geom/GeometryComponentFilter'\nimport ArrayList from '../../../../java/util/ArrayList'\nexport default class LineDissolver {\n  constructor () {\n    LineDissolver.constructor_.apply(this, arguments)\n  }\n\n  static dissolve (g) {\n    const d = new LineDissolver()\n    d.add(g)\n    return d.getResult()\n  }\n\n  addLine (line) {\n    this._lines.add(this._factory.createLineString(line.toCoordinateArray()))\n  }\n\n  updateRingStartEdge (e) {\n    if (!e.isStart()) {\n      e = e.sym()\n      if (!e.isStart()) return null\n    }\n    if (this._ringStartEdge === null) {\n      this._ringStartEdge = e\n      return null\n    }\n    if (e.orig().compareTo(this._ringStartEdge.orig()) < 0) {\n      this._ringStartEdge = e\n    }\n  }\n\n  getResult () {\n    if (this._result === null) this.computeResult()\n    return this._result\n  }\n\n  process (e) {\n    let eNode = e.prevNode()\n    if (eNode === null) eNode = e\n    this.stackEdges(eNode)\n    this.buildLines()\n  }\n\n  buildRing (eStartRing) {\n    const line = new CoordinateList()\n    let e = eStartRing\n    line.add(e.orig().copy(), false)\n    while (e.sym().degree() === 2) {\n      const eNext = e.next()\n      if (eNext === eStartRing) break\n      line.add(eNext.orig().copy(), false)\n      e = eNext\n    }\n    line.add(e.dest().copy(), false)\n    this.addLine(line)\n  }\n\n  buildLine (eStart) {\n    const line = new CoordinateList()\n    let e = eStart\n    this._ringStartEdge = null\n    MarkHalfEdge.markBoth(e)\n    line.add(e.orig().copy(), false)\n    while (e.sym().degree() === 2) {\n      this.updateRingStartEdge(e)\n      const eNext = e.next()\n      if (eNext === eStart) {\n        this.buildRing(this._ringStartEdge)\n        return null\n      }\n      line.add(eNext.orig().copy(), false)\n      e = eNext\n      MarkHalfEdge.markBoth(e)\n    }\n    line.add(e.dest().clone(), false)\n    this.stackEdges(e.sym())\n    this.addLine(line)\n  }\n\n  stackEdges (node) {\n    let e = node\n    do {\n      if (!MarkHalfEdge.isMarked(e)) this._nodeEdgeStack.add(e)\n      e = e.oNext()\n    } while (e !== node)\n  }\n\n  computeResult () {\n    const edges = this._graph.getVertexEdges()\n    for (let i = edges.iterator(); i.hasNext();) {\n      const e = i.next()\n      if (MarkHalfEdge.isMarked(e)) continue\n      this.process(e)\n    }\n    this._result = this._factory.buildGeometry(this._lines)\n  }\n\n  buildLines () {\n    while (!this._nodeEdgeStack.empty()) {\n      const e = this._nodeEdgeStack.pop()\n      if (MarkHalfEdge.isMarked(e)) continue\n      this.buildLine(e)\n    }\n  }\n\n  add () {\n    if (arguments[0] instanceof Geometry) {\n      const geometry = arguments[0]\n      geometry.apply(new (class {\n        get interfaces_ () {\n          return [GeometryComponentFilter]\n        }\n\n        filter (component) {\n          if (component instanceof LineString) {\n            this.add(component)\n          }\n        }\n      })())\n    } else if (hasInterface(arguments[0], Collection)) {\n      const geometries = arguments[0]\n      for (let i = geometries.iterator(); i.hasNext();) {\n        const geometry = i.next()\n        this.add(geometry)\n      }\n    } else if (arguments[0] instanceof LineString) {\n      const lineString = arguments[0]\n      if (this._factory === null) {\n        this._factory = lineString.getFactory()\n      }\n      const seq = lineString.getCoordinateSequence()\n      let doneStart = false\n      for (let i = 1; i < seq.size(); i++) {\n        const e = this._graph.addEdge(seq.getCoordinate(i - 1), seq.getCoordinate(i))\n        if (e === null) continue\n        if (!doneStart) {\n          e.setStart()\n          doneStart = true\n        }\n      }\n    }\n  }\n\n  getClass () {\n    return LineDissolver\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nLineDissolver.constructor_ = function () {\n  this._result = null\n  this._factory = null\n  this._graph = null\n  this._lines = new ArrayList()\n  this._nodeEdgeStack = new Stack()\n  this._ringStartEdge = null\n  this._graph = new DissolveEdgeGraph()\n}\n","export default class Position {\n  constructor () {\n    Position.constructor_.apply(this, arguments)\n  }\n\n  static opposite (position) {\n    if (position === Position.LEFT) return Position.RIGHT\n    if (position === Position.RIGHT) return Position.LEFT\n    return position\n  }\n\n  getClass () {\n    return Position\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nPosition.constructor_ = function () {}\nPosition.ON = 0\nPosition.LEFT = 1\nPosition.RIGHT = 2\n","export default class MonotoneChain {\n  constructor () {\n    MonotoneChain.constructor_.apply(this, arguments)\n  }\n\n  computeIntersections (mc, si) {\n    this.mce.computeIntersectsForChain(this.chainIndex, mc.mce, mc.chainIndex, si)\n  }\n\n  getClass () {\n    return MonotoneChain\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nMonotoneChain.constructor_ = function () {\n  this.mce = null\n  this.chainIndex = null\n  const mce = arguments[0]; const chainIndex = arguments[1]\n  this.mce = mce\n  this.chainIndex = chainIndex\n}\n","import Comparable from '../../../../../java/lang/Comparable'\nexport default class SweepLineEvent {\n  constructor () {\n    SweepLineEvent.constructor_.apply(this, arguments)\n  }\n\n  isDelete () {\n    return this._eventType === SweepLineEvent.DELETE\n  }\n\n  setDeleteEventIndex (deleteEventIndex) {\n    this._deleteEventIndex = deleteEventIndex\n  }\n\n  getObject () {\n    return this._obj\n  }\n\n  compareTo (o) {\n    const pe = o\n    if (this._xValue < pe._xValue) return -1\n    if (this._xValue > pe._xValue) return 1\n    if (this._eventType < pe._eventType) return -1\n    if (this._eventType > pe._eventType) return 1\n    return 0\n  }\n\n  getInsertEvent () {\n    return this._insertEvent\n  }\n\n  isInsert () {\n    return this._eventType === SweepLineEvent.INSERT\n  }\n\n  isSameLabel (ev) {\n    if (this._label === null) return false\n    return this._label === ev._label\n  }\n\n  getDeleteEventIndex () {\n    return this._deleteEventIndex\n  }\n\n  getClass () {\n    return SweepLineEvent\n  }\n\n  get interfaces_ () {\n    return [Comparable]\n  }\n}\nSweepLineEvent.constructor_ = function () {\n  this._label = null\n  this._xValue = null\n  this._eventType = null\n  this._insertEvent = null\n  this._deleteEventIndex = null\n  this._obj = null\n  if (arguments.length === 2) {\n    const x = arguments[0]; const insertEvent = arguments[1]\n    this._eventType = SweepLineEvent.DELETE\n    this._xValue = x\n    this._insertEvent = insertEvent\n  } else if (arguments.length === 3) {\n    const label = arguments[0]; const x = arguments[1]; const obj = arguments[2]\n    this._eventType = SweepLineEvent.INSERT\n    this._label = label\n    this._xValue = x\n    this._obj = obj\n  }\n}\nSweepLineEvent.INSERT = 1\nSweepLineEvent.DELETE = 2\n","export default class EdgeSetIntersector {\n  constructor () {\n    EdgeSetIntersector.constructor_.apply(this, arguments)\n  }\n\n  getClass () {\n    return EdgeSetIntersector\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nEdgeSetIntersector.constructor_ = function () {}\n","export default class SegmentIntersector {\n  constructor () {\n    SegmentIntersector.constructor_.apply(this, arguments)\n  }\n\n  static isAdjacentSegments (i1, i2) {\n    return Math.abs(i1 - i2) === 1\n  }\n\n  isTrivialIntersection (e0, segIndex0, e1, segIndex1) {\n    if (e0 === e1) {\n      if (this._li.getIntersectionNum() === 1) {\n        if (SegmentIntersector.isAdjacentSegments(segIndex0, segIndex1)) return true\n        if (e0.isClosed()) {\n          const maxSegIndex = e0.getNumPoints() - 1\n          if (segIndex0 === 0 && segIndex1 === maxSegIndex || segIndex1 === 0 && segIndex0 === maxSegIndex) {\n            return true\n          }\n        }\n      }\n    }\n    return false\n  }\n\n  getProperIntersectionPoint () {\n    return this._properIntersectionPoint\n  }\n\n  setIsDoneIfProperInt (isDoneWhenProperInt) {\n    this._isDoneWhenProperInt = isDoneWhenProperInt\n  }\n\n  hasProperInteriorIntersection () {\n    return this._hasProperInterior\n  }\n\n  isBoundaryPointInternal (li, bdyNodes) {\n    for (let i = bdyNodes.iterator(); i.hasNext();) {\n      const node = i.next()\n      const pt = node.getCoordinate()\n      if (li.isIntersection(pt)) return true\n    }\n    return false\n  }\n\n  hasProperIntersection () {\n    return this._hasProper\n  }\n\n  hasIntersection () {\n    return this._hasIntersection\n  }\n\n  isDone () {\n    return this._isDone\n  }\n\n  isBoundaryPoint (li, bdyNodes) {\n    if (bdyNodes === null) return false\n    if (this.isBoundaryPointInternal(li, bdyNodes[0])) return true\n    if (this.isBoundaryPointInternal(li, bdyNodes[1])) return true\n    return false\n  }\n\n  setBoundaryNodes (bdyNodes0, bdyNodes1) {\n    this._bdyNodes = new Array(2).fill(null)\n    this._bdyNodes[0] = bdyNodes0\n    this._bdyNodes[1] = bdyNodes1\n  }\n\n  addIntersections (e0, segIndex0, e1, segIndex1) {\n    if (e0 === e1 && segIndex0 === segIndex1) return null\n    this.numTests++\n    const p00 = e0.getCoordinates()[segIndex0]\n    const p01 = e0.getCoordinates()[segIndex0 + 1]\n    const p10 = e1.getCoordinates()[segIndex1]\n    const p11 = e1.getCoordinates()[segIndex1 + 1]\n    this._li.computeIntersection(p00, p01, p10, p11)\n    if (this._li.hasIntersection()) {\n      if (this._recordIsolated) {\n        e0.setIsolated(false)\n        e1.setIsolated(false)\n      }\n      this._numIntersections++\n      if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n        this._hasIntersection = true\n        if (this._includeProper || !this._li.isProper()) {\n          e0.addIntersections(this._li, segIndex0, 0)\n          e1.addIntersections(this._li, segIndex1, 1)\n        }\n        if (this._li.isProper()) {\n          this._properIntersectionPoint = this._li.getIntersection(0).copy()\n          this._hasProper = true\n          if (this._isDoneWhenProperInt) {\n            this._isDone = true\n          }\n          if (!this.isBoundaryPoint(this._li, this._bdyNodes)) this._hasProperInterior = true\n        }\n      }\n    }\n  }\n\n  getClass () {\n    return SegmentIntersector\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nSegmentIntersector.constructor_ = function () {\n  this._hasIntersection = false\n  this._hasProper = false\n  this._hasProperInterior = false\n  this._properIntersectionPoint = null\n  this._li = null\n  this._includeProper = null\n  this._recordIsolated = null\n  this._isSelfIntersection = null\n  this._numIntersections = 0\n  this.numTests = 0\n  this._bdyNodes = null\n  this._isDone = false\n  this._isDoneWhenProperInt = false\n  const li = arguments[0]; const includeProper = arguments[1]; const recordIsolated = arguments[2]\n  this._li = li\n  this._includeProper = includeProper\n  this._recordIsolated = recordIsolated\n}\n","import hasInterface from '../../../../../hasInterface'\nimport MonotoneChain from './MonotoneChain'\nimport SweepLineEvent from './SweepLineEvent'\nimport EdgeSetIntersector from './EdgeSetIntersector'\nimport Collections from '../../../../../java/util/Collections'\nimport SegmentIntersector from './SegmentIntersector'\nimport ArrayList from '../../../../../java/util/ArrayList'\nimport List from '../../../../../java/util/List'\nexport default class SimpleMCSweepLineIntersector extends EdgeSetIntersector {\n  constructor () {\n    super()\n    SimpleMCSweepLineIntersector.constructor_.apply(this, arguments)\n  }\n\n  prepareEvents () {\n    Collections.sort(this.events)\n    for (let i = 0; i < this.events.size(); i++) {\n      const ev = this.events.get(i)\n      if (ev.isDelete()) {\n        ev.getInsertEvent().setDeleteEventIndex(i)\n      }\n    }\n  }\n\n  computeIntersections () {\n    if (arguments.length === 1) {\n      const si = arguments[0]\n      this.nOverlaps = 0\n      this.prepareEvents()\n      for (let i = 0; i < this.events.size(); i++) {\n        const ev = this.events.get(i)\n        if (ev.isInsert()) {\n          this.processOverlaps(i, ev.getDeleteEventIndex(), ev, si)\n        }\n        if (si.isDone()) {\n          break\n        }\n      }\n    } else if (arguments.length === 3) {\n      if (arguments[2] instanceof SegmentIntersector && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n        const edges0 = arguments[0]; const edges1 = arguments[1]; const si = arguments[2]\n        this.addEdges(edges0, edges0)\n        this.addEdges(edges1, edges1)\n        this.computeIntersections(si)\n      } else if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], List) && arguments[1] instanceof SegmentIntersector)) {\n        const edges = arguments[0]; const si = arguments[1]; const testAllSegments = arguments[2]\n        if (testAllSegments) this.addEdges(edges, null); else this.addEdges(edges)\n        this.computeIntersections(si)\n      }\n    }\n  }\n\n  addEdge (edge, edgeSet) {\n    const mce = edge.getMonotoneChainEdge()\n    const startIndex = mce.getStartIndexes()\n    for (let i = 0; i < startIndex.length - 1; i++) {\n      const mc = new MonotoneChain(mce, i)\n      const insertEvent = new SweepLineEvent(edgeSet, mce.getMinX(i), mc)\n      this.events.add(insertEvent)\n      this.events.add(new SweepLineEvent(mce.getMaxX(i), insertEvent))\n    }\n  }\n\n  processOverlaps (start, end, ev0, si) {\n    const mc0 = ev0.getObject()\n    for (let i = start; i < end; i++) {\n      const ev1 = this.events.get(i)\n      if (ev1.isInsert()) {\n        const mc1 = ev1.getObject()\n        if (!ev0.isSameLabel(ev1)) {\n          mc0.computeIntersections(mc1, si)\n          this.nOverlaps++\n        }\n      }\n    }\n  }\n\n  addEdges () {\n    if (arguments.length === 1) {\n      const edges = arguments[0]\n      for (let i = edges.iterator(); i.hasNext();) {\n        const edge = i.next()\n        this.addEdge(edge, edge)\n      }\n    } else if (arguments.length === 2) {\n      const edges = arguments[0]; const edgeSet = arguments[1]\n      for (let i = edges.iterator(); i.hasNext();) {\n        const edge = i.next()\n        this.addEdge(edge, edgeSet)\n      }\n    }\n  }\n\n  getClass () {\n    return SimpleMCSweepLineIntersector\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nSimpleMCSweepLineIntersector.constructor_ = function () {\n  this.events = new ArrayList()\n  this.nOverlaps = null\n}\n","import StringBuffer from '../../../../java/lang/StringBuffer'\nimport Location from '../geom/Location'\nimport Position from './Position'\nexport default class TopologyLocation {\n  constructor () {\n    TopologyLocation.constructor_.apply(this, arguments)\n  }\n\n  setAllLocations (locValue) {\n    for (let i = 0; i < this.location.length; i++) {\n      this.location[i] = locValue\n    }\n  }\n\n  isNull () {\n    for (let i = 0; i < this.location.length; i++) {\n      if (this.location[i] !== Location.NONE) return false\n    }\n    return true\n  }\n\n  setAllLocationsIfNull (locValue) {\n    for (let i = 0; i < this.location.length; i++) {\n      if (this.location[i] === Location.NONE) this.location[i] = locValue\n    }\n  }\n\n  isLine () {\n    return this.location.length === 1\n  }\n\n  merge (gl) {\n    if (gl.location.length > this.location.length) {\n      const newLoc = new Array(3).fill(null)\n      newLoc[Position.ON] = this.location[Position.ON]\n      newLoc[Position.LEFT] = Location.NONE\n      newLoc[Position.RIGHT] = Location.NONE\n      this.location = newLoc\n    }\n    for (let i = 0; i < this.location.length; i++) {\n      if (this.location[i] === Location.NONE && i < gl.location.length) this.location[i] = gl.location[i]\n    }\n  }\n\n  getLocations () {\n    return this.location\n  }\n\n  flip () {\n    if (this.location.length <= 1) return null\n    const temp = this.location[Position.LEFT]\n    this.location[Position.LEFT] = this.location[Position.RIGHT]\n    this.location[Position.RIGHT] = temp\n  }\n\n  toString () {\n    const buf = new StringBuffer()\n    if (this.location.length > 1) buf.append(Location.toLocationSymbol(this.location[Position.LEFT]))\n    buf.append(Location.toLocationSymbol(this.location[Position.ON]))\n    if (this.location.length > 1) buf.append(Location.toLocationSymbol(this.location[Position.RIGHT]))\n    return buf.toString()\n  }\n\n  setLocations (on, left, right) {\n    this.location[Position.ON] = on\n    this.location[Position.LEFT] = left\n    this.location[Position.RIGHT] = right\n  }\n\n  get (posIndex) {\n    if (posIndex < this.location.length) return this.location[posIndex]\n    return Location.NONE\n  }\n\n  isArea () {\n    return this.location.length > 1\n  }\n\n  isAnyNull () {\n    for (let i = 0; i < this.location.length; i++) {\n      if (this.location[i] === Location.NONE) return true\n    }\n    return false\n  }\n\n  setLocation () {\n    if (arguments.length === 1) {\n      const locValue = arguments[0]\n      this.setLocation(Position.ON, locValue)\n    } else if (arguments.length === 2) {\n      const locIndex = arguments[0]; const locValue = arguments[1]\n      this.location[locIndex] = locValue\n    }\n  }\n\n  init (size) {\n    this.location = new Array(size).fill(null)\n    this.setAllLocations(Location.NONE)\n  }\n\n  isEqualOnSide (le, locIndex) {\n    return this.location[locIndex] === le.location[locIndex]\n  }\n\n  allPositionsEqual (loc) {\n    for (let i = 0; i < this.location.length; i++) {\n      if (this.location[i] !== loc) return false\n    }\n    return true\n  }\n\n  getClass () {\n    return TopologyLocation\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nTopologyLocation.constructor_ = function () {\n  this.location = null\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      const location = arguments[0]\n      this.init(location.length)\n    } else if (Number.isInteger(arguments[0])) {\n      const on = arguments[0]\n      this.init(1)\n      this.location[Position.ON] = on\n    } else if (arguments[0] instanceof TopologyLocation) {\n      const gl = arguments[0]\n      this.init(gl.location.length)\n      if (gl !== null) {\n        for (let i = 0; i < this.location.length; i++) {\n          this.location[i] = gl.location[i]\n        }\n      }\n    }\n  } else if (arguments.length === 3) {\n    const on = arguments[0]; const left = arguments[1]; const right = arguments[2]\n    this.init(3)\n    this.location[Position.ON] = on\n    this.location[Position.LEFT] = left\n    this.location[Position.RIGHT] = right\n  }\n}\n","import StringBuffer from '../../../../java/lang/StringBuffer'\nimport Location from '../geom/Location'\nimport Position from './Position'\nimport TopologyLocation from './TopologyLocation'\nexport default class Label {\n  constructor () {\n    Label.constructor_.apply(this, arguments)\n  }\n\n  static toLineLabel (label) {\n    const lineLabel = new Label(Location.NONE)\n    for (let i = 0; i < 2; i++) {\n      lineLabel.setLocation(i, label.getLocation(i))\n    }\n    return lineLabel\n  }\n\n  getGeometryCount () {\n    let count = 0\n    if (!this.elt[0].isNull()) count++\n    if (!this.elt[1].isNull()) count++\n    return count\n  }\n\n  setAllLocations (geomIndex, location) {\n    this.elt[geomIndex].setAllLocations(location)\n  }\n\n  isNull (geomIndex) {\n    return this.elt[geomIndex].isNull()\n  }\n\n  setAllLocationsIfNull () {\n    if (arguments.length === 1) {\n      const location = arguments[0]\n      this.setAllLocationsIfNull(0, location)\n      this.setAllLocationsIfNull(1, location)\n    } else if (arguments.length === 2) {\n      const geomIndex = arguments[0]; const location = arguments[1]\n      this.elt[geomIndex].setAllLocationsIfNull(location)\n    }\n  }\n\n  isLine (geomIndex) {\n    return this.elt[geomIndex].isLine()\n  }\n\n  merge (lbl) {\n    for (let i = 0; i < 2; i++) {\n      if (this.elt[i] === null && lbl.elt[i] !== null) {\n        this.elt[i] = new TopologyLocation(lbl.elt[i])\n      } else {\n        this.elt[i].merge(lbl.elt[i])\n      }\n    }\n  }\n\n  flip () {\n    this.elt[0].flip()\n    this.elt[1].flip()\n  }\n\n  getLocation () {\n    if (arguments.length === 1) {\n      const geomIndex = arguments[0]\n      return this.elt[geomIndex].get(Position.ON)\n    } else if (arguments.length === 2) {\n      const geomIndex = arguments[0]; const posIndex = arguments[1]\n      return this.elt[geomIndex].get(posIndex)\n    }\n  }\n\n  toString () {\n    const buf = new StringBuffer()\n    if (this.elt[0] !== null) {\n      buf.append('A:')\n      buf.append(this.elt[0].toString())\n    }\n    if (this.elt[1] !== null) {\n      buf.append(' B:')\n      buf.append(this.elt[1].toString())\n    }\n    return buf.toString()\n  }\n\n  isArea () {\n    if (arguments.length === 0) {\n      return this.elt[0].isArea() || this.elt[1].isArea()\n    } else if (arguments.length === 1) {\n      const geomIndex = arguments[0]\n      return this.elt[geomIndex].isArea()\n    }\n  }\n\n  isAnyNull (geomIndex) {\n    return this.elt[geomIndex].isAnyNull()\n  }\n\n  setLocation () {\n    if (arguments.length === 2) {\n      const geomIndex = arguments[0]; const location = arguments[1]\n      this.elt[geomIndex].setLocation(Position.ON, location)\n    } else if (arguments.length === 3) {\n      const geomIndex = arguments[0]; const posIndex = arguments[1]; const location = arguments[2]\n      this.elt[geomIndex].setLocation(posIndex, location)\n    }\n  }\n\n  isEqualOnSide (lbl, side) {\n    return this.elt[0].isEqualOnSide(lbl.elt[0], side) && this.elt[1].isEqualOnSide(lbl.elt[1], side)\n  }\n\n  allPositionsEqual (geomIndex, loc) {\n    return this.elt[geomIndex].allPositionsEqual(loc)\n  }\n\n  toLine (geomIndex) {\n    if (this.elt[geomIndex].isArea()) this.elt[geomIndex] = new TopologyLocation(this.elt[geomIndex].location[0])\n  }\n\n  getClass () {\n    return Label\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nLabel.constructor_ = function () {\n  this.elt = new Array(2).fill(null)\n  if (arguments.length === 1) {\n    if (Number.isInteger(arguments[0])) {\n      const onLoc = arguments[0]\n      this.elt[0] = new TopologyLocation(onLoc)\n      this.elt[1] = new TopologyLocation(onLoc)\n    } else if (arguments[0] instanceof Label) {\n      const lbl = arguments[0]\n      this.elt[0] = new TopologyLocation(lbl.elt[0])\n      this.elt[1] = new TopologyLocation(lbl.elt[1])\n    }\n  } else if (arguments.length === 2) {\n    const geomIndex = arguments[0]; const onLoc = arguments[1]\n    this.elt[0] = new TopologyLocation(Location.NONE)\n    this.elt[1] = new TopologyLocation(Location.NONE)\n    this.elt[geomIndex].setLocation(onLoc)\n  } else if (arguments.length === 3) {\n    const onLoc = arguments[0]; const leftLoc = arguments[1]; const rightLoc = arguments[2]\n    this.elt[0] = new TopologyLocation(onLoc, leftLoc, rightLoc)\n    this.elt[1] = new TopologyLocation(onLoc, leftLoc, rightLoc)\n  } else if (arguments.length === 4) {\n    const geomIndex = arguments[0]; const onLoc = arguments[1]; const leftLoc = arguments[2]; const rightLoc = arguments[3]\n    this.elt[0] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE)\n    this.elt[1] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE)\n    this.elt[geomIndex].setLocations(onLoc, leftLoc, rightLoc)\n  }\n}\n","import Coordinate from '../geom/Coordinate'\nimport Comparable from '../../../../java/lang/Comparable'\nexport default class EdgeIntersection {\n  constructor () {\n    EdgeIntersection.constructor_.apply(this, arguments)\n  }\n\n  getSegmentIndex () {\n    return this.segmentIndex\n  }\n\n  getCoordinate () {\n    return this.coord\n  }\n\n  print (out) {\n    out.print(this.coord)\n    out.print(' seg # = ' + this.segmentIndex)\n    out.println(' dist = ' + this.dist)\n  }\n\n  compareTo (obj) {\n    const other = obj\n    return this.compare(other.segmentIndex, other.dist)\n  }\n\n  isEndPoint (maxSegmentIndex) {\n    if (this.segmentIndex === 0 && this.dist === 0.0) return true\n    if (this.segmentIndex === maxSegmentIndex) return true\n    return false\n  }\n\n  toString () {\n    return this.coord + ' seg # = ' + this.segmentIndex + ' dist = ' + this.dist\n  }\n\n  getDistance () {\n    return this.dist\n  }\n\n  compare (segmentIndex, dist) {\n    if (this.segmentIndex < segmentIndex) return -1\n    if (this.segmentIndex > segmentIndex) return 1\n    if (this.dist < dist) return -1\n    if (this.dist > dist) return 1\n    return 0\n  }\n\n  getClass () {\n    return EdgeIntersection\n  }\n\n  get interfaces_ () {\n    return [Comparable]\n  }\n}\nEdgeIntersection.constructor_ = function () {\n  this.coord = null\n  this.segmentIndex = null\n  this.dist = null\n  const coord = arguments[0]; const segmentIndex = arguments[1]; const dist = arguments[2]\n  this.coord = new Coordinate(coord)\n  this.segmentIndex = segmentIndex\n  this.dist = dist\n}\n","import EdgeIntersection from './EdgeIntersection'\nimport Coordinate from '../geom/Coordinate'\nimport Label from './Label'\nimport Edge from './Edge'\nimport TreeMap from '../../../../java/util/TreeMap'\nexport default class EdgeIntersectionList {\n  constructor () {\n    EdgeIntersectionList.constructor_.apply(this, arguments)\n  }\n\n  print (out) {\n    out.println('Intersections:')\n    for (let it = this.iterator(); it.hasNext();) {\n      const ei = it.next()\n      ei.print(out)\n    }\n  }\n\n  iterator () {\n    return this._nodeMap.values().iterator()\n  }\n\n  addSplitEdges (edgeList) {\n    this.addEndpoints()\n    const it = this.iterator()\n    let eiPrev = it.next()\n    while (it.hasNext()) {\n      const ei = it.next()\n      const newEdge = this.createSplitEdge(eiPrev, ei)\n      edgeList.add(newEdge)\n      eiPrev = ei\n    }\n  }\n\n  addEndpoints () {\n    const maxSegIndex = this.edge.pts.length - 1\n    this.add(this.edge.pts[0], 0, 0.0)\n    this.add(this.edge.pts[maxSegIndex], maxSegIndex, 0.0)\n  }\n\n  createSplitEdge (ei0, ei1) {\n    let npts = ei1.segmentIndex - ei0.segmentIndex + 2\n    const lastSegStartPt = this.edge.pts[ei1.segmentIndex]\n    const useIntPt1 = ei1.dist > 0.0 || !ei1.coord.equals2D(lastSegStartPt)\n    if (!useIntPt1) {\n      npts--\n    }\n    const pts = new Array(npts).fill(null)\n    let ipt = 0\n    pts[ipt++] = new Coordinate(ei0.coord)\n    for (let i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n      pts[ipt++] = this.edge.pts[i]\n    }\n    if (useIntPt1) pts[ipt] = ei1.coord\n    return new Edge(pts, new Label(this.edge._label))\n  }\n\n  add (intPt, segmentIndex, dist) {\n    const eiNew = new EdgeIntersection(intPt, segmentIndex, dist)\n    const ei = this._nodeMap.get(eiNew)\n    if (ei !== null) {\n      return ei\n    }\n    this._nodeMap.put(eiNew, eiNew)\n    return eiNew\n  }\n\n  isIntersection (pt) {\n    for (let it = this.iterator(); it.hasNext();) {\n      const ei = it.next()\n      if (ei.coord.equals(pt)) return true\n    }\n    return false\n  }\n\n  getClass () {\n    return EdgeIntersectionList\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nEdgeIntersectionList.constructor_ = function () {\n  this._nodeMap = new TreeMap()\n  this.edge = null\n  const edge = arguments[0]\n  this.edge = edge\n}\n","import Integer from '../../../../../java/lang/Integer'\nimport ArrayList from '../../../../../java/util/ArrayList'\nimport Quadrant from '../Quadrant'\nexport default class MonotoneChainIndexer {\n  constructor () {\n    MonotoneChainIndexer.constructor_.apply(this, arguments)\n  }\n\n  static toIntArray (list) {\n    const array = new Array(list.size()).fill(null)\n    for (let i = 0; i < array.length; i++) {\n      array[i] = list.get(i).intValue()\n    }\n    return array\n  }\n\n  getChainStartIndices (pts) {\n    let start = 0\n    const startIndexList = new ArrayList()\n    startIndexList.add(new Integer(start))\n    do {\n      const last = this.findChainEnd(pts, start)\n      startIndexList.add(new Integer(last))\n      start = last\n    } while (start < pts.length - 1)\n    const startIndex = MonotoneChainIndexer.toIntArray(startIndexList)\n    return startIndex\n  }\n\n  findChainEnd (pts, start) {\n    const chainQuad = Quadrant.quadrant(pts[start], pts[start + 1])\n    let last = start + 1\n    while (last < pts.length) {\n      const quad = Quadrant.quadrant(pts[last - 1], pts[last])\n      if (quad !== chainQuad) break\n      last++\n    }\n    return last - 1\n  }\n\n  getClass () {\n    return MonotoneChainIndexer\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nMonotoneChainIndexer.constructor_ = function () {}\n","import MonotoneChainIndexer from './MonotoneChainIndexer'\nimport Envelope from '../../geom/Envelope'\nexport default class MonotoneChainEdge {\n  constructor () {\n    MonotoneChainEdge.constructor_.apply(this, arguments)\n  }\n\n  getCoordinates () {\n    return this.pts\n  }\n\n  getMaxX (chainIndex) {\n    const x1 = this.pts[this.startIndex[chainIndex]].x\n    const x2 = this.pts[this.startIndex[chainIndex + 1]].x\n    return x1 > x2 ? x1 : x2\n  }\n\n  getMinX (chainIndex) {\n    const x1 = this.pts[this.startIndex[chainIndex]].x\n    const x2 = this.pts[this.startIndex[chainIndex + 1]].x\n    return x1 < x2 ? x1 : x2\n  }\n\n  computeIntersectsForChain () {\n    if (arguments.length === 4) {\n      const chainIndex0 = arguments[0]; const mce = arguments[1]; const chainIndex1 = arguments[2]; const si = arguments[3]\n      this.computeIntersectsForChain(this.startIndex[chainIndex0], this.startIndex[chainIndex0 + 1], mce, mce.startIndex[chainIndex1], mce.startIndex[chainIndex1 + 1], si)\n    } else if (arguments.length === 6) {\n      const start0 = arguments[0]; const end0 = arguments[1]; const mce = arguments[2]; const start1 = arguments[3]; const end1 = arguments[4]; const ei = arguments[5]\n      if (end0 - start0 === 1 && end1 - start1 === 1) {\n        ei.addIntersections(this.e, start0, mce.e, start1)\n        return null\n      }\n      if (!this.overlaps(start0, end0, mce, start1, end1)) return null\n      const mid0 = Math.trunc((start0 + end0) / 2)\n      const mid1 = Math.trunc((start1 + end1) / 2)\n      if (start0 < mid0) {\n        if (start1 < mid1) this.computeIntersectsForChain(start0, mid0, mce, start1, mid1, ei)\n        if (mid1 < end1) this.computeIntersectsForChain(start0, mid0, mce, mid1, end1, ei)\n      }\n      if (mid0 < end0) {\n        if (start1 < mid1) this.computeIntersectsForChain(mid0, end0, mce, start1, mid1, ei)\n        if (mid1 < end1) this.computeIntersectsForChain(mid0, end0, mce, mid1, end1, ei)\n      }\n    }\n  }\n\n  overlaps (start0, end0, mce, start1, end1) {\n    return Envelope.intersects(this.pts[start0], this.pts[end0], mce.pts[start1], mce.pts[end1])\n  }\n\n  getStartIndexes () {\n    return this.startIndex\n  }\n\n  computeIntersects (mce, si) {\n    for (let i = 0; i < this.startIndex.length - 1; i++) {\n      for (let j = 0; j < mce.startIndex.length - 1; j++) {\n        this.computeIntersectsForChain(i, mce, j, si)\n      }\n    }\n  }\n\n  getClass () {\n    return MonotoneChainEdge\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nMonotoneChainEdge.constructor_ = function () {\n  this.e = null\n  this.pts = null\n  this.startIndex = null\n  const e = arguments[0]\n  this.e = e\n  this.pts = e.getCoordinates()\n  const mcb = new MonotoneChainIndexer()\n  this.startIndex = mcb.getChainStartIndices(this.pts)\n}\n","import Location from '../geom/Location'\nimport Position from './Position'\nexport default class Depth {\n  constructor () {\n    Depth.constructor_.apply(this, arguments)\n  }\n\n  static depthAtLocation (location) {\n    if (location === Location.EXTERIOR) return 0\n    if (location === Location.INTERIOR) return 1\n    return Depth.NULL_VALUE\n  }\n\n  getDepth (geomIndex, posIndex) {\n    return this._depth[geomIndex][posIndex]\n  }\n\n  setDepth (geomIndex, posIndex, depthValue) {\n    this._depth[geomIndex][posIndex] = depthValue\n  }\n\n  isNull () {\n    if (arguments.length === 0) {\n      for (let i = 0; i < 2; i++) {\n        for (let j = 0; j < 3; j++) {\n          if (this._depth[i][j] !== Depth.NULL_VALUE) return false\n        }\n      }\n      return true\n    } else if (arguments.length === 1) {\n      const geomIndex = arguments[0]\n      return this._depth[geomIndex][1] === Depth.NULL_VALUE\n    } else if (arguments.length === 2) {\n      const geomIndex = arguments[0]; const posIndex = arguments[1]\n      return this._depth[geomIndex][posIndex] === Depth.NULL_VALUE\n    }\n  }\n\n  normalize () {\n    for (let i = 0; i < 2; i++) {\n      if (!this.isNull(i)) {\n        let minDepth = this._depth[i][1]\n        if (this._depth[i][2] < minDepth) minDepth = this._depth[i][2]\n        if (minDepth < 0) minDepth = 0\n        for (let j = 1; j < 3; j++) {\n          let newValue = 0\n          if (this._depth[i][j] > minDepth) newValue = 1\n          this._depth[i][j] = newValue\n        }\n      }\n    }\n  }\n\n  getDelta (geomIndex) {\n    return this._depth[geomIndex][Position.RIGHT] - this._depth[geomIndex][Position.LEFT]\n  }\n\n  getLocation (geomIndex, posIndex) {\n    if (this._depth[geomIndex][posIndex] <= 0) return Location.EXTERIOR\n    return Location.INTERIOR\n  }\n\n  toString () {\n    return 'A: ' + this._depth[0][1] + ',' + this._depth[0][2] + ' B: ' + this._depth[1][1] + ',' + this._depth[1][2]\n  }\n\n  add () {\n    if (arguments.length === 1) {\n      const lbl = arguments[0]\n      for (let i = 0; i < 2; i++) {\n        for (let j = 1; j < 3; j++) {\n          const loc = lbl.getLocation(i, j)\n          if (loc === Location.EXTERIOR || loc === Location.INTERIOR) {\n            if (this.isNull(i, j)) {\n              this._depth[i][j] = Depth.depthAtLocation(loc)\n            } else this._depth[i][j] += Depth.depthAtLocation(loc)\n          }\n        }\n      }\n    } else if (arguments.length === 3) {\n      const geomIndex = arguments[0]; const posIndex = arguments[1]; const location = arguments[2]\n      if (location === Location.INTERIOR) this._depth[geomIndex][posIndex]++\n    }\n  }\n\n  getClass () {\n    return Depth\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nDepth.constructor_ = function () {\n  this._depth = Array(2).fill().map(() => Array(3))\n  for (let i = 0; i < 2; i++) {\n    for (let j = 0; j < 3; j++) {\n      this._depth[i][j] = Depth.NULL_VALUE\n    }\n  }\n}\nDepth.NULL_VALUE = -1\n","import Assert from '../util/Assert'\nexport default class GraphComponent {\n  constructor () {\n    GraphComponent.constructor_.apply(this, arguments)\n  }\n\n  setVisited (isVisited) {\n    this._isVisited = isVisited\n  }\n\n  setInResult (isInResult) {\n    this._isInResult = isInResult\n  }\n\n  isCovered () {\n    return this._isCovered\n  }\n\n  isCoveredSet () {\n    return this._isCoveredSet\n  }\n\n  setLabel (label) {\n    this._label = label\n  }\n\n  getLabel () {\n    return this._label\n  }\n\n  setCovered (isCovered) {\n    this._isCovered = isCovered\n    this._isCoveredSet = true\n  }\n\n  updateIM (im) {\n    Assert.isTrue(this._label.getGeometryCount() >= 2, 'found partial label')\n    this.computeIM(im)\n  }\n\n  isInResult () {\n    return this._isInResult\n  }\n\n  isVisited () {\n    return this._isVisited\n  }\n\n  getClass () {\n    return GraphComponent\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nGraphComponent.constructor_ = function () {\n  this._label = null\n  this._isInResult = false\n  this._isCovered = false\n  this._isCoveredSet = false\n  this._isVisited = false\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    const label = arguments[0]\n    this._label = label\n  }\n}\n","import EdgeIntersectionList from './EdgeIntersectionList'\nimport IntersectionMatrix from '../geom/IntersectionMatrix'\nimport MonotoneChainEdge from './index/MonotoneChainEdge'\nimport Position from './Position'\nimport Coordinate from '../geom/Coordinate'\nimport Label from './Label'\nimport Envelope from '../geom/Envelope'\nimport StringBuilder from '../../../../java/lang/StringBuilder'\nimport Depth from './Depth'\nimport GraphComponent from './GraphComponent'\nexport default class Edge extends GraphComponent {\n  constructor () {\n    super()\n    Edge.constructor_.apply(this, arguments)\n  }\n\n  static updateIM () {\n    if (arguments.length === 2 && (arguments[1] instanceof IntersectionMatrix && arguments[0] instanceof Label)) {\n      const label = arguments[0]; const im = arguments[1]\n      im.setAtLeastIfValid(label.getLocation(0, Position.ON), label.getLocation(1, Position.ON), 1)\n      if (label.isArea()) {\n        im.setAtLeastIfValid(label.getLocation(0, Position.LEFT), label.getLocation(1, Position.LEFT), 2)\n        im.setAtLeastIfValid(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), 2)\n      }\n    } else return super.updateIM.apply(this, arguments)\n  }\n\n  getDepth () {\n    return this._depth\n  }\n\n  getCollapsedEdge () {\n    const newPts = new Array(2).fill(null)\n    newPts[0] = this.pts[0]\n    newPts[1] = this.pts[1]\n    const newe = new Edge(newPts, Label.toLineLabel(this._label))\n    return newe\n  }\n\n  isIsolated () {\n    return this._isIsolated\n  }\n\n  getCoordinates () {\n    return this.pts\n  }\n\n  setIsolated (isIsolated) {\n    this._isIsolated = isIsolated\n  }\n\n  setName (name) {\n    this._name = name\n  }\n\n  equals (o) {\n    if (!(o instanceof Edge)) return false\n    const e = o\n    if (this.pts.length !== e.pts.length) return false\n    let isEqualForward = true\n    let isEqualReverse = true\n    let iRev = this.pts.length\n    for (let i = 0; i < this.pts.length; i++) {\n      if (!this.pts[i].equals2D(e.pts[i])) {\n        isEqualForward = false\n      }\n      if (!this.pts[i].equals2D(e.pts[--iRev])) {\n        isEqualReverse = false\n      }\n      if (!isEqualForward && !isEqualReverse) return false\n    }\n    return true\n  }\n\n  getCoordinate () {\n    if (arguments.length === 0) {\n      if (this.pts.length > 0) return this.pts[0]\n      return null\n    } else if (arguments.length === 1) {\n      const i = arguments[0]\n      return this.pts[i]\n    }\n  }\n\n  print (out) {\n    out.print('edge ' + this._name + ': ')\n    out.print('LINESTRING (')\n    for (let i = 0; i < this.pts.length; i++) {\n      if (i > 0) out.print(',')\n      out.print(this.pts[i].x + ' ' + this.pts[i].y)\n    }\n    out.print(')  ' + this._label + ' ' + this._depthDelta)\n  }\n\n  computeIM (im) {\n    Edge.updateIM(this._label, im)\n  }\n\n  isCollapsed () {\n    if (!this._label.isArea()) return false\n    if (this.pts.length !== 3) return false\n    if (this.pts[0].equals(this.pts[2])) return true\n    return false\n  }\n\n  isClosed () {\n    return this.pts[0].equals(this.pts[this.pts.length - 1])\n  }\n\n  getMaximumSegmentIndex () {\n    return this.pts.length - 1\n  }\n\n  getDepthDelta () {\n    return this._depthDelta\n  }\n\n  getNumPoints () {\n    return this.pts.length\n  }\n\n  printReverse (out) {\n    out.print('edge ' + this._name + ': ')\n    for (let i = this.pts.length - 1; i >= 0; i--) {\n      out.print(this.pts[i] + ' ')\n    }\n    out.println('')\n  }\n\n  getMonotoneChainEdge () {\n    if (this._mce === null) this._mce = new MonotoneChainEdge(this)\n    return this._mce\n  }\n\n  getEnvelope () {\n    if (this._env === null) {\n      this._env = new Envelope()\n      for (let i = 0; i < this.pts.length; i++) {\n        this._env.expandToInclude(this.pts[i])\n      }\n    }\n    return this._env\n  }\n\n  addIntersection (li, segmentIndex, geomIndex, intIndex) {\n    const intPt = new Coordinate(li.getIntersection(intIndex))\n    let normalizedSegmentIndex = segmentIndex\n    let dist = li.getEdgeDistance(geomIndex, intIndex)\n    const nextSegIndex = normalizedSegmentIndex + 1\n    if (nextSegIndex < this.pts.length) {\n      const nextPt = this.pts[nextSegIndex]\n      if (intPt.equals2D(nextPt)) {\n        normalizedSegmentIndex = nextSegIndex\n        dist = 0.0\n      }\n    }\n    const ei = this.eiList.add(intPt, normalizedSegmentIndex, dist)\n  }\n\n  toString () {\n    const builder = new StringBuilder()\n    builder.append('edge ' + this._name + ': ')\n    builder.append('LINESTRING (')\n    for (let i = 0; i < this.pts.length; i++) {\n      if (i > 0) builder.append(',')\n      builder.append(this.pts[i].x + ' ' + this.pts[i].y)\n    }\n    builder.append(')  ' + this._label + ' ' + this._depthDelta)\n    return builder.toString()\n  }\n\n  isPointwiseEqual (e) {\n    if (this.pts.length !== e.pts.length) return false\n    for (let i = 0; i < this.pts.length; i++) {\n      if (!this.pts[i].equals2D(e.pts[i])) {\n        return false\n      }\n    }\n    return true\n  }\n\n  setDepthDelta (depthDelta) {\n    this._depthDelta = depthDelta\n  }\n\n  getEdgeIntersectionList () {\n    return this.eiList\n  }\n\n  addIntersections (li, segmentIndex, geomIndex) {\n    for (let i = 0; i < li.getIntersectionNum(); i++) {\n      this.addIntersection(li, segmentIndex, geomIndex, i)\n    }\n  }\n\n  getClass () {\n    return Edge\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nEdge.constructor_ = function () {\n  this.pts = null\n  this._env = null\n  this.eiList = new EdgeIntersectionList(this)\n  this._name = null\n  this._mce = null\n  this._isIsolated = true\n  this._depth = new Depth()\n  this._depthDelta = 0\n  if (arguments.length === 1) {\n    const pts = arguments[0]\n    Edge.constructor_.call(this, pts, null)\n  } else if (arguments.length === 2) {\n    const pts = arguments[0]; const label = arguments[1]\n    this.pts = pts\n    this._label = label\n  }\n}\n","import Location from '../geom/Location'\nimport Label from './Label'\nimport GraphComponent from './GraphComponent'\nexport default class Node extends GraphComponent {\n  constructor () {\n    super()\n    Node.constructor_.apply(this, arguments)\n  }\n\n  isIncidentEdgeInResult () {\n    for (let it = this.getEdges().getEdges().iterator(); it.hasNext();) {\n      const de = it.next()\n      if (de.getEdge().isInResult()) return true\n    }\n    return false\n  }\n\n  isIsolated () {\n    return this._label.getGeometryCount() === 1\n  }\n\n  getCoordinate () {\n    return this._coord\n  }\n\n  print (out) {\n    out.println('node ' + this._coord + ' lbl: ' + this._label)\n  }\n\n  computeIM (im) {}\n  computeMergedLocation (label2, eltIndex) {\n    let loc = Location.NONE\n    loc = this._label.getLocation(eltIndex)\n    if (!label2.isNull(eltIndex)) {\n      const nLoc = label2.getLocation(eltIndex)\n      if (loc !== Location.BOUNDARY) loc = nLoc\n    }\n    return loc\n  }\n\n  setLabel () {\n    if (arguments.length === 2 && (Number.isInteger(arguments[1]) && Number.isInteger(arguments[0]))) {\n      const argIndex = arguments[0]; const onLocation = arguments[1]\n      if (this._label === null) {\n        this._label = new Label(argIndex, onLocation)\n      } else this._label.setLocation(argIndex, onLocation)\n    } else return super.setLabel.apply(this, arguments)\n  }\n\n  getEdges () {\n    return this._edges\n  }\n\n  mergeLabel () {\n    if (arguments[0] instanceof Node) {\n      const n = arguments[0]\n      this.mergeLabel(n._label)\n    } else if (arguments[0] instanceof Label) {\n      const label2 = arguments[0]\n      for (let i = 0; i < 2; i++) {\n        const loc = this.computeMergedLocation(label2, i)\n        const thisLoc = this._label.getLocation(i)\n        if (thisLoc === Location.NONE) this._label.setLocation(i, loc)\n      }\n    }\n  }\n\n  add (e) {\n    this._edges.insert(e)\n    e.setNode(this)\n  }\n\n  setLabelBoundary (argIndex) {\n    if (this._label === null) return null\n    let loc = Location.NONE\n    if (this._label !== null) loc = this._label.getLocation(argIndex)\n    let newLoc = null\n    switch (loc) {\n      case Location.BOUNDARY:\n        newLoc = Location.INTERIOR\n        break\n      case Location.INTERIOR:\n        newLoc = Location.BOUNDARY\n        break\n      default:\n        newLoc = Location.BOUNDARY\n        break\n    }\n    this._label.setLocation(argIndex, newLoc)\n  }\n\n  getClass () {\n    return Node\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nNode.constructor_ = function () {\n  this._coord = null\n  this._edges = null\n  const coord = arguments[0]; const edges = arguments[1]\n  this._coord = coord\n  this._edges = edges\n  this._label = new Label(0, Location.NONE)\n}\n","import Location from '../geom/Location'\nimport Coordinate from '../geom/Coordinate'\nimport Node from './Node'\nimport ArrayList from '../../../../java/util/ArrayList'\nimport TreeMap from '../../../../java/util/TreeMap'\nexport default class NodeMap {\n  constructor () {\n    NodeMap.constructor_.apply(this, arguments)\n  }\n\n  find (coord) {\n    return this.nodeMap.get(coord)\n  }\n\n  addNode () {\n    if (arguments[0] instanceof Coordinate) {\n      const coord = arguments[0]\n      let node = this.nodeMap.get(coord)\n      if (node === null) {\n        node = this.nodeFact.createNode(coord)\n        this.nodeMap.put(coord, node)\n      }\n      return node\n    } else if (arguments[0] instanceof Node) {\n      const n = arguments[0]\n      const node = this.nodeMap.get(n.getCoordinate())\n      if (node === null) {\n        this.nodeMap.put(n.getCoordinate(), n)\n        return n\n      }\n      node.mergeLabel(n)\n      return node\n    }\n  }\n\n  print (out) {\n    for (let it = this.iterator(); it.hasNext();) {\n      const n = it.next()\n      n.print(out)\n    }\n  }\n\n  iterator () {\n    return this.nodeMap.values().iterator()\n  }\n\n  values () {\n    return this.nodeMap.values()\n  }\n\n  getBoundaryNodes (geomIndex) {\n    const bdyNodes = new ArrayList()\n    for (let i = this.iterator(); i.hasNext();) {\n      const node = i.next()\n      if (node.getLabel().getLocation(geomIndex) === Location.BOUNDARY) bdyNodes.add(node)\n    }\n    return bdyNodes\n  }\n\n  add (e) {\n    const p = e.getCoordinate()\n    const n = this.addNode(p)\n    n.add(e)\n  }\n\n  getClass () {\n    return NodeMap\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nNodeMap.constructor_ = function () {\n  this.nodeMap = new TreeMap()\n  this.nodeFact = null\n  const nodeFact = arguments[0]\n  this.nodeFact = nodeFact\n}\n","import Orientation from '../algorithm/Orientation'\nimport Comparable from '../../../../java/lang/Comparable'\nimport Quadrant from './Quadrant'\nimport Assert from '../util/Assert'\nexport default class EdgeEnd {\n  constructor () {\n    EdgeEnd.constructor_.apply(this, arguments)\n  }\n\n  compareDirection (e) {\n    if (this._dx === e._dx && this._dy === e._dy) return 0\n    if (this._quadrant > e._quadrant) return 1\n    if (this._quadrant < e._quadrant) return -1\n    return Orientation.index(e._p0, e._p1, this._p1)\n  }\n\n  getDy () {\n    return this._dy\n  }\n\n  getCoordinate () {\n    return this._p0\n  }\n\n  setNode (node) {\n    this._node = node\n  }\n\n  print (out) {\n    const angle = Math.atan2(this._dy, this._dx)\n    const className = this.getClass().getName()\n    const lastDotPos = className.lastIndexOf('.')\n    const name = className.substring(lastDotPos + 1)\n    out.print('  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label)\n  }\n\n  compareTo (obj) {\n    const e = obj\n    return this.compareDirection(e)\n  }\n\n  getDirectedCoordinate () {\n    return this._p1\n  }\n\n  getDx () {\n    return this._dx\n  }\n\n  getLabel () {\n    return this._label\n  }\n\n  getEdge () {\n    return this._edge\n  }\n\n  getQuadrant () {\n    return this._quadrant\n  }\n\n  getNode () {\n    return this._node\n  }\n\n  toString () {\n    const angle = Math.atan2(this._dy, this._dx)\n    const className = this.getClass().getName()\n    const lastDotPos = className.lastIndexOf('.')\n    const name = className.substring(lastDotPos + 1)\n    return '  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label\n  }\n\n  computeLabel (boundaryNodeRule) {}\n  init (p0, p1) {\n    this._p0 = p0\n    this._p1 = p1\n    this._dx = p1.x - p0.x\n    this._dy = p1.y - p0.y\n    this._quadrant = Quadrant.quadrant(this._dx, this._dy)\n    Assert.isTrue(!(this._dx === 0 && this._dy === 0), 'EdgeEnd with identical endpoints found')\n  }\n\n  getClass () {\n    return EdgeEnd\n  }\n\n  get interfaces_ () {\n    return [Comparable]\n  }\n}\nEdgeEnd.constructor_ = function () {\n  this._edge = null\n  this._label = null\n  this._node = null\n  this._p0 = null\n  this._p1 = null\n  this._dx = null\n  this._dy = null\n  this._quadrant = null\n  if (arguments.length === 1) {\n    const edge = arguments[0]\n    this._edge = edge\n  } else if (arguments.length === 3) {\n    const edge = arguments[0]; const p0 = arguments[1]; const p1 = arguments[2]\n    EdgeEnd.constructor_.call(this, edge, p0, p1, null)\n  } else if (arguments.length === 4) {\n    const edge = arguments[0]; const p0 = arguments[1]; const p1 = arguments[2]; const label = arguments[3]\n    EdgeEnd.constructor_.call(this, edge)\n    this.init(p0, p1)\n    this._label = label\n  }\n}\n","import Coordinate from './Coordinate'\nimport RuntimeException from '../../../../java/lang/RuntimeException'\nexport default class TopologyException extends RuntimeException {\n  constructor () {\n    if (arguments.length === 1) {\n      const msg = arguments[0]\n      super(msg)\n      RuntimeException.call(this, msg)\n    } else if (arguments.length === 2) {\n      const msg = arguments[0]; const pt = arguments[1]\n      super(TopologyException.msgWithCoord(msg, pt))\n      this.name = 'TopologyException'\n      this.pt = new Coordinate(pt)\n    } else {\n      throw Error()\n    }\n  }\n\n  getCoordinate () {\n    return this.pt\n  }\n\n  get interfaces_ () {\n    return []\n  }\n\n  getClass () {\n    return TopologyException\n  }\n\n  static msgWithCoord (msg, pt) {\n    if (pt !== null) return msg + ' [ ' + pt + ' ]'\n    return msg\n  }\n}\n","import Location from '../geom/Location'\nimport EdgeEnd from './EdgeEnd'\nimport Position from './Position'\nimport TopologyException from '../geom/TopologyException'\nimport Label from './Label'\nexport default class DirectedEdge extends EdgeEnd {\n  constructor () {\n    super()\n    DirectedEdge.constructor_.apply(this, arguments)\n  }\n\n  static depthFactor (currLocation, nextLocation) {\n    if (currLocation === Location.EXTERIOR && nextLocation === Location.INTERIOR) return 1; else if (currLocation === Location.INTERIOR && nextLocation === Location.EXTERIOR) return -1\n    return 0\n  }\n\n  getNextMin () {\n    return this._nextMin\n  }\n\n  getDepth (position) {\n    return this._depth[position]\n  }\n\n  setVisited (isVisited) {\n    this._isVisited = isVisited\n  }\n\n  computeDirectedLabel () {\n    this._label = new Label(this._edge.getLabel())\n    if (!this._isForward) this._label.flip()\n  }\n\n  getNext () {\n    return this._next\n  }\n\n  setDepth (position, depthVal) {\n    if (this._depth[position] !== -999) {\n      if (this._depth[position] !== depthVal) throw new TopologyException('assigned depths do not match', this.getCoordinate())\n    }\n    this._depth[position] = depthVal\n  }\n\n  isInteriorAreaEdge () {\n    let isInteriorAreaEdge = true\n    for (let i = 0; i < 2; i++) {\n      if (!(this._label.isArea(i) && this._label.getLocation(i, Position.LEFT) === Location.INTERIOR && this._label.getLocation(i, Position.RIGHT) === Location.INTERIOR)) {\n        isInteriorAreaEdge = false\n      }\n    }\n    return isInteriorAreaEdge\n  }\n\n  setNextMin (nextMin) {\n    this._nextMin = nextMin\n  }\n\n  print (out) {\n    super.print.call(this, out)\n    out.print(' ' + this._depth[Position.LEFT] + '/' + this._depth[Position.RIGHT])\n    out.print(' (' + this.getDepthDelta() + ')')\n    if (this._isInResult) out.print(' inResult')\n  }\n\n  setMinEdgeRing (minEdgeRing) {\n    this._minEdgeRing = minEdgeRing\n  }\n\n  isLineEdge () {\n    const isLine = this._label.isLine(0) || this._label.isLine(1)\n    const isExteriorIfArea0 = !this._label.isArea(0) || this._label.allPositionsEqual(0, Location.EXTERIOR)\n    const isExteriorIfArea1 = !this._label.isArea(1) || this._label.allPositionsEqual(1, Location.EXTERIOR)\n    return isLine && isExteriorIfArea0 && isExteriorIfArea1\n  }\n\n  setEdgeRing (edgeRing) {\n    this._edgeRing = edgeRing\n  }\n\n  getMinEdgeRing () {\n    return this._minEdgeRing\n  }\n\n  getDepthDelta () {\n    let depthDelta = this._edge.getDepthDelta()\n    if (!this._isForward) depthDelta = -depthDelta\n    return depthDelta\n  }\n\n  setInResult (isInResult) {\n    this._isInResult = isInResult\n  }\n\n  getSym () {\n    return this._sym\n  }\n\n  isForward () {\n    return this._isForward\n  }\n\n  getEdge () {\n    return this._edge\n  }\n\n  printEdge (out) {\n    this.print(out)\n    out.print(' ')\n    if (this._isForward) this._edge.print(out); else this._edge.printReverse(out)\n  }\n\n  setSym (de) {\n    this._sym = de\n  }\n\n  setVisitedEdge (isVisited) {\n    this.setVisited(isVisited)\n    this._sym.setVisited(isVisited)\n  }\n\n  setEdgeDepths (position, depth) {\n    let depthDelta = this.getEdge().getDepthDelta()\n    if (!this._isForward) depthDelta = -depthDelta\n    let directionFactor = 1\n    if (position === Position.LEFT) directionFactor = -1\n    const oppositePos = Position.opposite(position)\n    const delta = depthDelta * directionFactor\n    const oppositeDepth = depth + delta\n    this.setDepth(position, depth)\n    this.setDepth(oppositePos, oppositeDepth)\n  }\n\n  getEdgeRing () {\n    return this._edgeRing\n  }\n\n  isInResult () {\n    return this._isInResult\n  }\n\n  setNext (next) {\n    this._next = next\n  }\n\n  isVisited () {\n    return this._isVisited\n  }\n\n  getClass () {\n    return DirectedEdge\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nDirectedEdge.constructor_ = function () {\n  this._isForward = null\n  this._isInResult = false\n  this._isVisited = false\n  this._sym = null\n  this._next = null\n  this._nextMin = null\n  this._edgeRing = null\n  this._minEdgeRing = null\n  this._depth = [0, -999, -999]\n  const edge = arguments[0]; const isForward = arguments[1]\n  EdgeEnd.constructor_.call(this, edge)\n  this._isForward = isForward\n  if (isForward) {\n    this.init(edge.getCoordinate(0), edge.getCoordinate(1))\n  } else {\n    const n = edge.getNumPoints() - 1\n    this.init(edge.getCoordinate(n), edge.getCoordinate(n - 1))\n  }\n  this.computeDirectedLabel()\n}\n","import Node from './Node'\nexport default class NodeFactory {\n  constructor () {\n    NodeFactory.constructor_.apply(this, arguments)\n  }\n\n  createNode (coord) {\n    return new Node(coord, null)\n  }\n\n  getClass () {\n    return NodeFactory\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nNodeFactory.constructor_ = function () {}\n","import Location from '../geom/Location'\nimport Coordinate from '../geom/Coordinate'\nimport Node from './Node'\nimport NodeMap from './NodeMap'\nimport Orientation from '../algorithm/Orientation'\nimport DirectedEdge from './DirectedEdge'\nimport System from '../../../../java/lang/System'\nimport ArrayList from '../../../../java/util/ArrayList'\nimport Quadrant from './Quadrant'\nimport NodeFactory from './NodeFactory'\nexport default class PlanarGraph {\n  constructor () {\n    PlanarGraph.constructor_.apply(this, arguments)\n  }\n\n  static linkResultDirectedEdges (nodes) {\n    for (let nodeit = nodes.iterator(); nodeit.hasNext();) {\n      const node = nodeit.next()\n      node.getEdges().linkResultDirectedEdges()\n    }\n  }\n\n  printEdges (out) {\n    out.println('Edges:')\n    for (let i = 0; i < this._edges.size(); i++) {\n      out.println('edge ' + i + ':')\n      const e = this._edges.get(i)\n      e.print(out)\n      e.eiList.print(out)\n    }\n  }\n\n  find (coord) {\n    return this._nodes.find(coord)\n  }\n\n  addNode () {\n    if (arguments[0] instanceof Node) {\n      const node = arguments[0]\n      return this._nodes.addNode(node)\n    } else if (arguments[0] instanceof Coordinate) {\n      const coord = arguments[0]\n      return this._nodes.addNode(coord)\n    }\n  }\n\n  getNodeIterator () {\n    return this._nodes.iterator()\n  }\n\n  linkResultDirectedEdges () {\n    for (let nodeit = this._nodes.iterator(); nodeit.hasNext();) {\n      const node = nodeit.next()\n      node.getEdges().linkResultDirectedEdges()\n    }\n  }\n\n  debugPrintln (o) {\n    System.out.println(o)\n  }\n\n  isBoundaryNode (geomIndex, coord) {\n    const node = this._nodes.find(coord)\n    if (node === null) return false\n    const label = node.getLabel()\n    if (label !== null && label.getLocation(geomIndex) === Location.BOUNDARY) return true\n    return false\n  }\n\n  linkAllDirectedEdges () {\n    for (let nodeit = this._nodes.iterator(); nodeit.hasNext();) {\n      const node = nodeit.next()\n      node.getEdges().linkAllDirectedEdges()\n    }\n  }\n\n  matchInSameDirection (p0, p1, ep0, ep1) {\n    if (!p0.equals(ep0)) return false\n    if (Orientation.index(p0, p1, ep1) === Orientation.COLLINEAR && Quadrant.quadrant(p0, p1) === Quadrant.quadrant(ep0, ep1)) return true\n    return false\n  }\n\n  getEdgeEnds () {\n    return this._edgeEndList\n  }\n\n  debugPrint (o) {\n    System.out.print(o)\n  }\n\n  getEdgeIterator () {\n    return this._edges.iterator()\n  }\n\n  findEdgeInSameDirection (p0, p1) {\n    for (let i = 0; i < this._edges.size(); i++) {\n      const e = this._edges.get(i)\n      const eCoord = e.getCoordinates()\n      if (this.matchInSameDirection(p0, p1, eCoord[0], eCoord[1])) return e\n      if (this.matchInSameDirection(p0, p1, eCoord[eCoord.length - 1], eCoord[eCoord.length - 2])) return e\n    }\n    return null\n  }\n\n  insertEdge (e) {\n    this._edges.add(e)\n  }\n\n  findEdgeEnd (e) {\n    for (let i = this.getEdgeEnds().iterator(); i.hasNext();) {\n      const ee = i.next()\n      if (ee.getEdge() === e) return ee\n    }\n    return null\n  }\n\n  addEdges (edgesToAdd) {\n    for (let it = edgesToAdd.iterator(); it.hasNext();) {\n      const e = it.next()\n      this._edges.add(e)\n      const de1 = new DirectedEdge(e, true)\n      const de2 = new DirectedEdge(e, false)\n      de1.setSym(de2)\n      de2.setSym(de1)\n      this.add(de1)\n      this.add(de2)\n    }\n  }\n\n  add (e) {\n    this._nodes.add(e)\n    this._edgeEndList.add(e)\n  }\n\n  getNodes () {\n    return this._nodes.values()\n  }\n\n  findEdge (p0, p1) {\n    for (let i = 0; i < this._edges.size(); i++) {\n      const e = this._edges.get(i)\n      const eCoord = e.getCoordinates()\n      if (p0.equals(eCoord[0]) && p1.equals(eCoord[1])) return e\n    }\n    return null\n  }\n\n  getClass () {\n    return PlanarGraph\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nPlanarGraph.constructor_ = function () {\n  this._edges = new ArrayList()\n  this._nodes = null\n  this._edgeEndList = new ArrayList()\n  if (arguments.length === 0) {\n    this._nodes = new NodeMap(new NodeFactory())\n  } else if (arguments.length === 1) {\n    const nodeFact = arguments[0]\n    this._nodes = new NodeMap(nodeFact)\n  }\n}\n","import PointLocator from '../algorithm/PointLocator'\nimport Location from '../geom/Location'\nimport LineString from '../geom/LineString'\nimport HashMap from '../../../../java/util/HashMap'\nimport Geometry from '../geom/Geometry'\nimport hasInterface from '../../../../hasInterface'\nimport Position from './Position'\nimport Coordinate from '../geom/Coordinate'\nimport Point from '../geom/Point'\nimport Polygon from '../geom/Polygon'\nimport MultiPoint from '../geom/MultiPoint'\nimport SimpleMCSweepLineIntersector from './index/SimpleMCSweepLineIntersector'\nimport LinearRing from '../geom/LinearRing'\nimport BoundaryNodeRule from '../algorithm/BoundaryNodeRule'\nimport Orientation from '../algorithm/Orientation'\nimport SegmentIntersector from './index/SegmentIntersector'\nimport MultiPolygon from '../geom/MultiPolygon'\nimport Label from './Label'\nimport GeometryCollection from '../geom/GeometryCollection'\nimport UnsupportedOperationException from '../../../../java/lang/UnsupportedOperationException'\nimport CoordinateArrays from '../geom/CoordinateArrays'\nimport Polygonal from '../geom/Polygonal'\nimport IndexedPointInAreaLocator from '../algorithm/locate/IndexedPointInAreaLocator'\nimport Assert from '../util/Assert'\nimport Edge from './Edge'\nimport MultiLineString from '../geom/MultiLineString'\nimport PlanarGraph from './PlanarGraph'\nexport default class GeometryGraph extends PlanarGraph {\n  constructor () {\n    super()\n    GeometryGraph.constructor_.apply(this, arguments)\n  }\n\n  static determineBoundary (boundaryNodeRule, boundaryCount) {\n    return boundaryNodeRule.isInBoundary(boundaryCount) ? Location.BOUNDARY : Location.INTERIOR\n  }\n\n  insertBoundaryPoint (argIndex, coord) {\n    const n = this._nodes.addNode(coord)\n    const lbl = n.getLabel()\n    let boundaryCount = 1\n    let loc = Location.NONE\n    loc = lbl.getLocation(argIndex, Position.ON)\n    if (loc === Location.BOUNDARY) boundaryCount++\n    const newLoc = GeometryGraph.determineBoundary(this._boundaryNodeRule, boundaryCount)\n    lbl.setLocation(argIndex, newLoc)\n  }\n\n  computeSelfNodes () {\n    if (arguments.length === 2) {\n      const li = arguments[0]; const computeRingSelfNodes = arguments[1]\n      return this.computeSelfNodes(li, computeRingSelfNodes, false)\n    } else if (arguments.length === 3) {\n      const li = arguments[0]; const computeRingSelfNodes = arguments[1]; const isDoneIfProperInt = arguments[2]\n      const si = new SegmentIntersector(li, true, false)\n      si.setIsDoneIfProperInt(isDoneIfProperInt)\n      const esi = this.createEdgeSetIntersector()\n      const isRings = this._parentGeom instanceof LinearRing || this._parentGeom instanceof Polygon || this._parentGeom instanceof MultiPolygon\n      const computeAllSegments = computeRingSelfNodes || !isRings\n      esi.computeIntersections(this._edges, si, computeAllSegments)\n      this.addSelfIntersectionNodes(this._argIndex)\n      return si\n    }\n  }\n\n  computeSplitEdges (edgelist) {\n    for (let i = this._edges.iterator(); i.hasNext();) {\n      const e = i.next()\n      e.eiList.addSplitEdges(edgelist)\n    }\n  }\n\n  computeEdgeIntersections (g, li, includeProper) {\n    const si = new SegmentIntersector(li, includeProper, true)\n    si.setBoundaryNodes(this.getBoundaryNodes(), g.getBoundaryNodes())\n    const esi = this.createEdgeSetIntersector()\n    esi.computeIntersections(this._edges, g._edges, si)\n    return si\n  }\n\n  getGeometry () {\n    return this._parentGeom\n  }\n\n  getBoundaryNodeRule () {\n    return this._boundaryNodeRule\n  }\n\n  hasTooFewPoints () {\n    return this._hasTooFewPoints\n  }\n\n  addPoint () {\n    if (arguments[0] instanceof Point) {\n      const p = arguments[0]\n      const coord = p.getCoordinate()\n      this.insertPoint(this._argIndex, coord, Location.INTERIOR)\n    } else if (arguments[0] instanceof Coordinate) {\n      const pt = arguments[0]\n      this.insertPoint(this._argIndex, pt, Location.INTERIOR)\n    }\n  }\n\n  addPolygon (p) {\n    this.addPolygonRing(p.getExteriorRing(), Location.EXTERIOR, Location.INTERIOR)\n    for (let i = 0; i < p.getNumInteriorRing(); i++) {\n      const hole = p.getInteriorRingN(i)\n      this.addPolygonRing(hole, Location.INTERIOR, Location.EXTERIOR)\n    }\n  }\n\n  addEdge (e) {\n    this.insertEdge(e)\n    const coord = e.getCoordinates()\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY)\n    this.insertPoint(this._argIndex, coord[coord.length - 1], Location.BOUNDARY)\n  }\n\n  addLineString (line) {\n    const coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates())\n    if (coord.length < 2) {\n      this._hasTooFewPoints = true\n      this._invalidPoint = coord[0]\n      return null\n    }\n    const e = new Edge(coord, new Label(this._argIndex, Location.INTERIOR))\n    this._lineEdgeMap.put(line, e)\n    this.insertEdge(e)\n    Assert.isTrue(coord.length >= 2, 'found LineString with single point')\n    this.insertBoundaryPoint(this._argIndex, coord[0])\n    this.insertBoundaryPoint(this._argIndex, coord[coord.length - 1])\n  }\n\n  getInvalidPoint () {\n    return this._invalidPoint\n  }\n\n  getBoundaryPoints () {\n    const coll = this.getBoundaryNodes()\n    const pts = new Array(coll.size()).fill(null)\n    let i = 0\n    for (let it = coll.iterator(); it.hasNext();) {\n      const node = it.next()\n      pts[i++] = node.getCoordinate().copy()\n    }\n    return pts\n  }\n\n  getBoundaryNodes () {\n    if (this._boundaryNodes === null) this._boundaryNodes = this._nodes.getBoundaryNodes(this._argIndex)\n    return this._boundaryNodes\n  }\n\n  addSelfIntersectionNode (argIndex, coord, loc) {\n    if (this.isBoundaryNode(argIndex, coord)) return null\n    if (loc === Location.BOUNDARY && this._useBoundaryDeterminationRule) this.insertBoundaryPoint(argIndex, coord); else this.insertPoint(argIndex, coord, loc)\n  }\n\n  addPolygonRing (lr, cwLeft, cwRight) {\n    if (lr.isEmpty()) return null\n    const coord = CoordinateArrays.removeRepeatedPoints(lr.getCoordinates())\n    if (coord.length < 4) {\n      this._hasTooFewPoints = true\n      this._invalidPoint = coord[0]\n      return null\n    }\n    let left = cwLeft\n    let right = cwRight\n    if (Orientation.isCCW(coord)) {\n      left = cwRight\n      right = cwLeft\n    }\n    const e = new Edge(coord, new Label(this._argIndex, Location.BOUNDARY, left, right))\n    this._lineEdgeMap.put(lr, e)\n    this.insertEdge(e)\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY)\n  }\n\n  insertPoint (argIndex, coord, onLocation) {\n    const n = this._nodes.addNode(coord)\n    const lbl = n.getLabel()\n    if (lbl === null) {\n      n._label = new Label(argIndex, onLocation)\n    } else lbl.setLocation(argIndex, onLocation)\n  }\n\n  createEdgeSetIntersector () {\n    return new SimpleMCSweepLineIntersector()\n  }\n\n  addSelfIntersectionNodes (argIndex) {\n    for (let i = this._edges.iterator(); i.hasNext();) {\n      const e = i.next()\n      const eLoc = e.getLabel().getLocation(argIndex)\n      for (let eiIt = e.eiList.iterator(); eiIt.hasNext();) {\n        const ei = eiIt.next()\n        this.addSelfIntersectionNode(argIndex, ei.coord, eLoc)\n      }\n    }\n  }\n\n  add () {\n    if (arguments.length === 1 && arguments[0] instanceof Geometry) {\n      const g = arguments[0]\n      if (g.isEmpty()) return null\n      if (g instanceof MultiPolygon) this._useBoundaryDeterminationRule = false\n      if (g instanceof Polygon) this.addPolygon(g); else if (g instanceof LineString) this.addLineString(g); else if (g instanceof Point) this.addPoint(g); else if (g instanceof MultiPoint) this.addCollection(g); else if (g instanceof MultiLineString) this.addCollection(g); else if (g instanceof MultiPolygon) this.addCollection(g); else if (g instanceof GeometryCollection) this.addCollection(g); else throw new UnsupportedOperationException(g.getClass().getName())\n    } else return super.add.apply(this, arguments)\n  }\n\n  addCollection (gc) {\n    for (let i = 0; i < gc.getNumGeometries(); i++) {\n      const g = gc.getGeometryN(i)\n      this.add(g)\n    }\n  }\n\n  locate (pt) {\n    if (hasInterface(this._parentGeom, Polygonal) && this._parentGeom.getNumGeometries() > 50) {\n      if (this._areaPtLocator === null) {\n        this._areaPtLocator = new IndexedPointInAreaLocator(this._parentGeom)\n      }\n      return this._areaPtLocator.locate(pt)\n    }\n    return this._ptLocator.locate(pt, this._parentGeom)\n  }\n\n  findEdge () {\n    if (arguments.length === 1 && arguments[0] instanceof LineString) {\n      const line = arguments[0]\n      return this._lineEdgeMap.get(line)\n    } else return super.findEdge.apply(this, arguments)\n  }\n\n  getClass () {\n    return GeometryGraph\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nGeometryGraph.constructor_ = function () {\n  this._parentGeom = null\n  this._lineEdgeMap = new HashMap()\n  this._boundaryNodeRule = null\n  this._useBoundaryDeterminationRule = true\n  this._argIndex = null\n  this._boundaryNodes = null\n  this._hasTooFewPoints = false\n  this._invalidPoint = null\n  this._areaPtLocator = null\n  this._ptLocator = new PointLocator()\n  if (arguments.length === 2) {\n    const argIndex = arguments[0]; const parentGeom = arguments[1]\n    GeometryGraph.constructor_.call(this, argIndex, parentGeom, BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE)\n  } else if (arguments.length === 3) {\n    const argIndex = arguments[0]; const parentGeom = arguments[1]; const boundaryNodeRule = arguments[2]\n    this._argIndex = argIndex\n    this._parentGeom = parentGeom\n    this._boundaryNodeRule = boundaryNodeRule\n    if (parentGeom !== null) {\n      this.add(parentGeom)\n    }\n  }\n}\n","export default class KdNodeVisitor {\n  constructor () {\n    KdNodeVisitor.constructor_.apply(this, arguments)\n  }\n\n  visit (node) {}\n  getClass () {\n    return KdNodeVisitor\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nKdNodeVisitor.constructor_ = function () {}\n","import Coordinate from '../../geom/Coordinate'\nexport default class KdNode {\n  constructor () {\n    KdNode.constructor_.apply(this, arguments)\n  }\n\n  isRepeated () {\n    return this._count > 1\n  }\n\n  getRight () {\n    return this._right\n  }\n\n  getCoordinate () {\n    return this._p\n  }\n\n  setLeft (_left) {\n    this._left = _left\n  }\n\n  getX () {\n    return this._p.x\n  }\n\n  getData () {\n    return this._data\n  }\n\n  getCount () {\n    return this._count\n  }\n\n  getLeft () {\n    return this._left\n  }\n\n  getY () {\n    return this._p.y\n  }\n\n  increment () {\n    this._count = this._count + 1\n  }\n\n  setRight (_right) {\n    this._right = _right\n  }\n\n  getClass () {\n    return KdNode\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nKdNode.constructor_ = function () {\n  this._p = null\n  this._data = null\n  this._left = null\n  this._right = null\n  this._count = null\n  if (arguments.length === 2) {\n    const p = arguments[0]; const data = arguments[1]\n    this._p = new Coordinate(p)\n    this._left = null\n    this._right = null\n    this._count = 1\n    this._data = data\n  } else if (arguments.length === 3) {\n    const _x = arguments[0]; const _y = arguments[1]; const data = arguments[2]\n    this._p = new Coordinate(_x, _y)\n    this._left = null\n    this._right = null\n    this._count = 1\n    this._data = data\n  }\n}\n","import CoordinateList from '../../geom/CoordinateList'\nimport hasInterface from '../../../../../hasInterface'\nimport ArrayList from '../../../../../java/util/ArrayList'\nimport KdNodeVisitor from './KdNodeVisitor'\nimport Envelope from '../../geom/Envelope'\nimport List from '../../../../../java/util/List'\nimport KdNode from './KdNode'\nexport default class KdTree {\n  constructor () {\n    KdTree.constructor_.apply(this, arguments)\n  }\n\n  static toCoordinates () {\n    if (arguments.length === 1) {\n      const kdnodes = arguments[0]\n      return KdTree.toCoordinates(kdnodes, false)\n    } else if (arguments.length === 2) {\n      const kdnodes = arguments[0]; const includeRepeated = arguments[1]\n      const coord = new CoordinateList()\n      for (let it = kdnodes.iterator(); it.hasNext();) {\n        const node = it.next()\n        const count = includeRepeated ? node.getCount() : 1\n        for (let i = 0; i < count; i++) {\n          coord.add(node.getCoordinate(), true)\n        }\n      }\n      return coord.toCoordinateArray()\n    }\n  }\n\n  insert () {\n    if (arguments.length === 1) {\n      const p = arguments[0]\n      return this.insert(p, null)\n    } else if (arguments.length === 2) {\n      const p = arguments[0]; const data = arguments[1]\n      if (this._root === null) {\n        this._root = new KdNode(p, data)\n        return this._root\n      }\n      if (this._tolerance > 0) {\n        const matchNode = this.findBestMatchNode(p)\n        if (matchNode !== null) {\n          matchNode.increment()\n          return matchNode\n        }\n      }\n      return this.insertExact(p, data)\n    }\n  }\n\n  query () {\n    if (arguments.length === 1) {\n      const queryEnv = arguments[0]\n      const result = new ArrayList()\n      this.query(queryEnv, result)\n      return result\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof Envelope && hasInterface(arguments[1], List)) {\n        const queryEnv = arguments[0]; const result = arguments[1]\n        this.queryNode(this._root, queryEnv, true, new (class {\n          get interfaces_ () {\n            return [KdNodeVisitor]\n          }\n\n          visit (node) {\n            result.add(node)\n          }\n        })())\n      } else if (arguments[0] instanceof Envelope && hasInterface(arguments[1], KdNodeVisitor)) {\n        const queryEnv = arguments[0]; const visitor = arguments[1]\n        this.queryNode(this._root, queryEnv, true, visitor)\n      }\n    }\n  }\n\n  queryNode (currentNode, queryEnv, odd, visitor) {\n    if (currentNode === null) return null\n    let min = null\n    let max = null\n    let discriminant = null\n    if (odd) {\n      min = queryEnv.getMinX()\n      max = queryEnv.getMaxX()\n      discriminant = currentNode.getX()\n    } else {\n      min = queryEnv.getMinY()\n      max = queryEnv.getMaxY()\n      discriminant = currentNode.getY()\n    }\n    const searchLeft = min < discriminant\n    const searchRight = discriminant <= max\n    if (searchLeft) {\n      this.queryNode(currentNode.getLeft(), queryEnv, !odd, visitor)\n    }\n    if (queryEnv.contains(currentNode.getCoordinate())) {\n      visitor.visit(currentNode)\n    }\n    if (searchRight) {\n      this.queryNode(currentNode.getRight(), queryEnv, !odd, visitor)\n    }\n  }\n\n  findBestMatchNode (p) {\n    const visitor = new BestMatchVisitor(p, this._tolerance)\n    this.query(visitor.queryEnvelope(), visitor)\n    return visitor.getNode()\n  }\n\n  isEmpty () {\n    if (this._root === null) return true\n    return false\n  }\n\n  insertExact (p, data) {\n    let currentNode = this._root\n    let leafNode = this._root\n    let isOddLevel = true\n    let isLessThan = true\n    while (currentNode !== null) {\n      if (currentNode !== null) {\n        const isInTolerance = p.distance(currentNode.getCoordinate()) <= this._tolerance\n        if (isInTolerance) {\n          currentNode.increment()\n          return currentNode\n        }\n      }\n      if (isOddLevel) {\n        isLessThan = p.x < currentNode.getX()\n      } else {\n        isLessThan = p.y < currentNode.getY()\n      }\n      leafNode = currentNode\n      if (isLessThan) {\n        currentNode = currentNode.getLeft()\n      } else {\n        currentNode = currentNode.getRight()\n      }\n      isOddLevel = !isOddLevel\n    }\n    this._numberOfNodes = this._numberOfNodes + 1\n    const node = new KdNode(p, data)\n    if (isLessThan) {\n      leafNode.setLeft(node)\n    } else {\n      leafNode.setRight(node)\n    }\n    return node\n  }\n\n  getClass () {\n    return KdTree\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nclass BestMatchVisitor {\n  constructor () {\n    BestMatchVisitor.constructor_.apply(this, arguments)\n  }\n\n  visit (node) {\n    const dist = this._p.distance(node.getCoordinate())\n    const isInTolerance = dist <= this._tolerance\n    if (!isInTolerance) return null\n    let update = false\n    if (this._matchNode === null || dist < this._matchDist || this._matchNode !== null && dist === this._matchDist && node.getCoordinate().compareTo(this._matchNode.getCoordinate()) < 1) update = true\n    if (update) {\n      this._matchNode = node\n      this._matchDist = dist\n    }\n  }\n\n  queryEnvelope () {\n    const queryEnv = new Envelope(this._p)\n    queryEnv.expandBy(this._tolerance)\n    return queryEnv\n  }\n\n  getNode () {\n    return this._matchNode\n  }\n\n  getClass () {\n    return BestMatchVisitor\n  }\n\n  get interfaces_ () {\n    return [KdNodeVisitor]\n  }\n}\nBestMatchVisitor.constructor_ = function () {\n  this._tolerance = null\n  this._matchNode = null\n  this._matchDist = 0.0\n  this._p = null\n  const p = arguments[0]; const tolerance = arguments[1]\n  this._p = p\n  this._tolerance = tolerance\n}\nKdTree.BestMatchVisitor = BestMatchVisitor\nKdTree.constructor_ = function () {\n  this._root = null\n  this._numberOfNodes = null\n  this._tolerance = null\n  if (arguments.length === 0) {\n    KdTree.constructor_.call(this, 0.0)\n  } else if (arguments.length === 1) {\n    const tolerance = arguments[0]\n    this._tolerance = tolerance\n  }\n}\n","import ArrayList from '../../../../../java/util/ArrayList'\nimport Serializable from '../../../../../java/io/Serializable'\nexport default class NodeBase {\n  constructor () {\n    NodeBase.constructor_.apply(this, arguments)\n  }\n\n  static getSubnodeIndex (env, centrex, centrey) {\n    let subnodeIndex = -1\n    if (env.getMinX() >= centrex) {\n      if (env.getMinY() >= centrey) subnodeIndex = 3\n      if (env.getMaxY() <= centrey) subnodeIndex = 1\n    }\n    if (env.getMaxX() <= centrex) {\n      if (env.getMinY() >= centrey) subnodeIndex = 2\n      if (env.getMaxY() <= centrey) subnodeIndex = 0\n    }\n    return subnodeIndex\n  }\n\n  hasChildren () {\n    for (let i = 0; i < 4; i++) {\n      if (this._subnode[i] !== null) return true\n    }\n    return false\n  }\n\n  isPrunable () {\n    return !(this.hasChildren() || this.hasItems())\n  }\n\n  addAllItems (resultItems) {\n    resultItems.addAll(this._items)\n    for (let i = 0; i < 4; i++) {\n      if (this._subnode[i] !== null) {\n        this._subnode[i].addAllItems(resultItems)\n      }\n    }\n    return resultItems\n  }\n\n  getNodeCount () {\n    let subSize = 0\n    for (let i = 0; i < 4; i++) {\n      if (this._subnode[i] !== null) {\n        subSize += this._subnode[i].size()\n      }\n    }\n    return subSize + 1\n  }\n\n  size () {\n    let subSize = 0\n    for (let i = 0; i < 4; i++) {\n      if (this._subnode[i] !== null) {\n        subSize += this._subnode[i].size()\n      }\n    }\n    return subSize + this._items.size()\n  }\n\n  addAllItemsFromOverlapping (searchEnv, resultItems) {\n    if (!this.isSearchMatch(searchEnv)) return null\n    resultItems.addAll(this._items)\n    for (let i = 0; i < 4; i++) {\n      if (this._subnode[i] !== null) {\n        this._subnode[i].addAllItemsFromOverlapping(searchEnv, resultItems)\n      }\n    }\n  }\n\n  visitItems (searchEnv, visitor) {\n    for (let i = this._items.iterator(); i.hasNext();) {\n      visitor.visitItem(i.next())\n    }\n  }\n\n  hasItems () {\n    return !this._items.isEmpty()\n  }\n\n  remove (itemEnv, item) {\n    if (!this.isSearchMatch(itemEnv)) return false\n    let found = false\n    for (let i = 0; i < 4; i++) {\n      if (this._subnode[i] !== null) {\n        found = this._subnode[i].remove(itemEnv, item)\n        if (found) {\n          if (this._subnode[i].isPrunable()) this._subnode[i] = null\n          break\n        }\n      }\n    }\n    if (found) return found\n    found = this._items.remove(item)\n    return found\n  }\n\n  visit (searchEnv, visitor) {\n    if (!this.isSearchMatch(searchEnv)) return null\n    this.visitItems(searchEnv, visitor)\n    for (let i = 0; i < 4; i++) {\n      if (this._subnode[i] !== null) {\n        this._subnode[i].visit(searchEnv, visitor)\n      }\n    }\n  }\n\n  getItems () {\n    return this._items\n  }\n\n  depth () {\n    let maxSubDepth = 0\n    for (let i = 0; i < 4; i++) {\n      if (this._subnode[i] !== null) {\n        const sqd = this._subnode[i].depth()\n        if (sqd > maxSubDepth) maxSubDepth = sqd\n      }\n    }\n    return maxSubDepth + 1\n  }\n\n  isEmpty () {\n    let isEmpty = true\n    if (!this._items.isEmpty()) isEmpty = false; else {\n      for (let i = 0; i < 4; i++) {\n        if (this._subnode[i] !== null) {\n          if (!this._subnode[i].isEmpty()) {\n            isEmpty = false\n            break\n          }\n        }\n      }\n    }\n    return isEmpty\n  }\n\n  add (item) {\n    this._items.add(item)\n  }\n\n  getClass () {\n    return NodeBase\n  }\n\n  get interfaces_ () {\n    return [Serializable]\n  }\n}\nNodeBase.constructor_ = function () {\n  this._items = new ArrayList()\n  this._subnode = new Array(4).fill(null)\n}\n","export default function DoubleBits () { }\nDoubleBits.exponent = function (d) {\n  return CVTFWD(64, d) - 1023\n}\nDoubleBits.powerOf2 = function (exp) {\n  return Math.pow(2, exp)\n}\n\n/**\n * Calculates the exponent of the bit-pattern for a number. Uses code from:\n * http://www.merlyn.demon.co.uk/js-exact.htm\n *\n * @param {Number}\n *          NumW 32 or 64 to denote the number of bits.\n * @param {Number}\n *          Qty the number to calculate the bit pattern for.\n * @return {Number} The integer value of the exponent.\n * @private\n */\nfunction CVTFWD (NumW, Qty) {\n  let Sign\n  let Expo\n  let Mant\n  let Bin\n  const Inf = {\n    32: {\n      d: 0x7F,\n      c: 0x80,\n      b: 0,\n      a: 0\n    },\n    64: {\n      d: 0x7FF0,\n      c: 0,\n      b: 0,\n      a: 0\n    }\n  }\n  const ExW = {\n    32: 8,\n    64: 11\n  }[NumW]\n\n  if (!Bin) {\n    Sign = Qty < 0 || 1 / Qty < 0 // OK for +-0\n    if (!isFinite(Qty)) {\n      Bin = Inf[NumW]\n      if (Sign) {\n        Bin.d += 1 << (NumW / 4 - 1)\n      }\n      Expo = Math.pow(2, ExW) - 1\n      Mant = 0\n    }\n  }\n\n  if (!Bin) {\n    Expo = {\n      32: 127,\n      64: 1023\n    }[NumW]\n    Mant = Math.abs(Qty)\n    while (Mant >= 2) {\n      Expo++\n      Mant /= 2\n    }\n    while (Mant < 1 && Expo > 0) {\n      Expo--\n      Mant *= 2\n    }\n    if (Expo <= 0) {\n      Mant /= 2\n    }\n    if (NumW === 32 && Expo > 254) {\n      Bin = {\n        d: Sign ? 0xFF : 0x7F,\n        c: 0x80,\n        b: 0,\n        a: 0\n      }\n      Expo = Math.pow(2, ExW) - 1\n      Mant = 0\n    }\n  }\n\n  return Expo\n}\n","import Coordinate from '../../geom/Coordinate'\nimport DoubleBits from './DoubleBits'\nimport Envelope from '../../geom/Envelope'\nexport default class Key {\n  constructor () {\n    Key.constructor_.apply(this, arguments)\n  }\n\n  static computeQuadLevel (env) {\n    const dx = env.getWidth()\n    const dy = env.getHeight()\n    const dMax = dx > dy ? dx : dy\n    const level = DoubleBits.exponent(dMax) + 1\n    return level\n  }\n\n  getLevel () {\n    return this._level\n  }\n\n  computeKey () {\n    if (arguments.length === 1) {\n      const itemEnv = arguments[0]\n      this._level = Key.computeQuadLevel(itemEnv)\n      this._env = new Envelope()\n      this.computeKey(this._level, itemEnv)\n      while (!this._env.contains(itemEnv)) {\n        this._level += 1\n        this.computeKey(this._level, itemEnv)\n      }\n    } else if (arguments.length === 2) {\n      const level = arguments[0]; const itemEnv = arguments[1]\n      const quadSize = DoubleBits.powerOf2(level)\n      this._pt.x = Math.floor(itemEnv.getMinX() / quadSize) * quadSize\n      this._pt.y = Math.floor(itemEnv.getMinY() / quadSize) * quadSize\n      this._env.init(this._pt.x, this._pt.x + quadSize, this._pt.y, this._pt.y + quadSize)\n    }\n  }\n\n  getEnvelope () {\n    return this._env\n  }\n\n  getCentre () {\n    return new Coordinate((this._env.getMinX() + this._env.getMaxX()) / 2, (this._env.getMinY() + this._env.getMaxY()) / 2)\n  }\n\n  getPoint () {\n    return this._pt\n  }\n\n  getClass () {\n    return Key\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nKey.constructor_ = function () {\n  this._pt = new Coordinate()\n  this._level = 0\n  this._env = null\n  const itemEnv = arguments[0]\n  this.computeKey(itemEnv)\n}\n","import NodeBase from './NodeBase'\nimport Envelope from '../../geom/Envelope'\nimport Assert from '../../util/Assert'\nimport Key from './Key'\nexport default class Node extends NodeBase {\n  constructor () {\n    super()\n    Node.constructor_.apply(this, arguments)\n  }\n\n  static createNode (env) {\n    const key = new Key(env)\n    const node = new Node(key.getEnvelope(), key.getLevel())\n    return node\n  }\n\n  static createExpanded (node, addEnv) {\n    const expandEnv = new Envelope(addEnv)\n    if (node !== null) expandEnv.expandToInclude(node._env)\n    const largerNode = Node.createNode(expandEnv)\n    if (node !== null) largerNode.insertNode(node)\n    return largerNode\n  }\n\n  find (searchEnv) {\n    const subnodeIndex = NodeBase.getSubnodeIndex(searchEnv, this._centrex, this._centrey)\n    if (subnodeIndex === -1) return this\n    if (this._subnode[subnodeIndex] !== null) {\n      const node = this._subnode[subnodeIndex]\n      return node.find(searchEnv)\n    }\n    return this\n  }\n\n  isSearchMatch (searchEnv) {\n    if (searchEnv === null) return false\n    return this._env.intersects(searchEnv)\n  }\n\n  getSubnode (index) {\n    if (this._subnode[index] === null) {\n      this._subnode[index] = this.createSubnode(index)\n    }\n    return this._subnode[index]\n  }\n\n  getEnvelope () {\n    return this._env\n  }\n\n  getNode (searchEnv) {\n    const subnodeIndex = NodeBase.getSubnodeIndex(searchEnv, this._centrex, this._centrey)\n    if (subnodeIndex !== -1) {\n      const node = this.getSubnode(subnodeIndex)\n      return node.getNode(searchEnv)\n    } else {\n      return this\n    }\n  }\n\n  createSubnode (index) {\n    let minx = 0.0\n    let maxx = 0.0\n    let miny = 0.0\n    let maxy = 0.0\n    switch (index) {\n      case 0:\n        minx = this._env.getMinX()\n        maxx = this._centrex\n        miny = this._env.getMinY()\n        maxy = this._centrey\n        break\n      case 1:\n        minx = this._centrex\n        maxx = this._env.getMaxX()\n        miny = this._env.getMinY()\n        maxy = this._centrey\n        break\n      case 2:\n        minx = this._env.getMinX()\n        maxx = this._centrex\n        miny = this._centrey\n        maxy = this._env.getMaxY()\n        break\n      case 3:\n        minx = this._centrex\n        maxx = this._env.getMaxX()\n        miny = this._centrey\n        maxy = this._env.getMaxY()\n        break\n    }\n    const sqEnv = new Envelope(minx, maxx, miny, maxy)\n    const node = new Node(sqEnv, this._level - 1)\n    return node\n  }\n\n  insertNode (node) {\n    Assert.isTrue(this._env === null || this._env.contains(node._env))\n    const index = NodeBase.getSubnodeIndex(node._env, this._centrex, this._centrey)\n    if (node._level === this._level - 1) {\n      this._subnode[index] = node\n    } else {\n      const childNode = this.createSubnode(index)\n      childNode.insertNode(node)\n      this._subnode[index] = childNode\n    }\n  }\n\n  getClass () {\n    return Node\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nNode.constructor_ = function () {\n  this._env = null\n  this._centrex = null\n  this._centrey = null\n  this._level = null\n  const env = arguments[0]; const level = arguments[1]\n  this._env = env\n  this._level = level\n  this._centrex = (env.getMinX() + env.getMaxX()) / 2\n  this._centrey = (env.getMinY() + env.getMaxY()) / 2\n}\n","import DoubleBits from './DoubleBits'\nexport default class IntervalSize {\n  constructor () {\n    IntervalSize.constructor_.apply(this, arguments)\n  }\n\n  static isZeroWidth (min, max) {\n    const width = max - min\n    if (width === 0.0) return true\n    const maxAbs = Math.max(Math.abs(min), Math.abs(max))\n    const scaledInterval = width / maxAbs\n    const level = DoubleBits.exponent(scaledInterval)\n    return level <= IntervalSize.MIN_BINARY_EXPONENT\n  }\n\n  getClass () {\n    return IntervalSize\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nIntervalSize.constructor_ = function () {}\nIntervalSize.MIN_BINARY_EXPONENT = -50\n","import Coordinate from '../../geom/Coordinate'\nimport NodeBase from './NodeBase'\nimport Node from './Node'\nimport IntervalSize from './IntervalSize'\nimport Assert from '../../util/Assert'\nexport default class Root extends NodeBase {\n  constructor () {\n    super()\n    Root.constructor_.apply(this, arguments)\n  }\n\n  insert (itemEnv, item) {\n    const index = NodeBase.getSubnodeIndex(itemEnv, Root.origin.x, Root.origin.y)\n    if (index === -1) {\n      this.add(item)\n      return null\n    }\n    const node = this._subnode[index]\n    if (node === null || !node.getEnvelope().contains(itemEnv)) {\n      const largerNode = Node.createExpanded(node, itemEnv)\n      this._subnode[index] = largerNode\n    }\n    this.insertContained(this._subnode[index], itemEnv, item)\n  }\n\n  isSearchMatch (searchEnv) {\n    return true\n  }\n\n  insertContained (tree, itemEnv, item) {\n    Assert.isTrue(tree.getEnvelope().contains(itemEnv))\n    const isZeroX = IntervalSize.isZeroWidth(itemEnv.getMinX(), itemEnv.getMaxX())\n    const isZeroY = IntervalSize.isZeroWidth(itemEnv.getMinY(), itemEnv.getMaxY())\n    let node = null\n    if (isZeroX || isZeroY) node = tree.find(itemEnv); else node = tree.getNode(itemEnv)\n    node.add(item)\n  }\n\n  getClass () {\n    return Root\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nRoot.constructor_ = function () {}\nRoot.origin = new Coordinate(0.0, 0.0)\n","export default class SpatialIndex {\n  constructor () {\n    SpatialIndex.constructor_.apply(this, arguments)\n  }\n\n  insert (itemEnv, item) {}\n  remove (itemEnv, item) {}\n  query () {\n    if (arguments.length === 1) {\n      const searchEnv = arguments[0]\n    } else if (arguments.length === 2) {\n      const searchEnv = arguments[0]; const visitor = arguments[1]\n    }\n  }\n\n  getClass () {\n    return SpatialIndex\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nSpatialIndex.constructor_ = function () {}\n","import Root from './Root'\nimport SpatialIndex from '../SpatialIndex'\nimport ArrayList from '../../../../../java/util/ArrayList'\nimport ArrayListVisitor from '../ArrayListVisitor'\nimport Serializable from '../../../../../java/io/Serializable'\nimport Envelope from '../../geom/Envelope'\nexport default class Quadtree {\n  constructor () {\n    Quadtree.constructor_.apply(this, arguments)\n  }\n\n  static ensureExtent (itemEnv, minExtent) {\n    let minx = itemEnv.getMinX()\n    let maxx = itemEnv.getMaxX()\n    let miny = itemEnv.getMinY()\n    let maxy = itemEnv.getMaxY()\n    if (minx !== maxx && miny !== maxy) return itemEnv\n    if (minx === maxx) {\n      minx = minx - minExtent / 2.0\n      maxx = minx + minExtent / 2.0\n    }\n    if (miny === maxy) {\n      miny = miny - minExtent / 2.0\n      maxy = miny + minExtent / 2.0\n    }\n    return new Envelope(minx, maxx, miny, maxy)\n  }\n\n  size () {\n    if (this._root !== null) return this._root.size()\n    return 0\n  }\n\n  insert (itemEnv, item) {\n    this.collectStats(itemEnv)\n    const insertEnv = Quadtree.ensureExtent(itemEnv, this._minExtent)\n    this._root.insert(insertEnv, item)\n  }\n\n  query () {\n    if (arguments.length === 1) {\n      const searchEnv = arguments[0]\n      const visitor = new ArrayListVisitor()\n      this.query(searchEnv, visitor)\n      return visitor.getItems()\n    } else if (arguments.length === 2) {\n      const searchEnv = arguments[0]; const visitor = arguments[1]\n      this._root.visit(searchEnv, visitor)\n    }\n  }\n\n  queryAll () {\n    const foundItems = new ArrayList()\n    this._root.addAllItems(foundItems)\n    return foundItems\n  }\n\n  remove (itemEnv, item) {\n    const posEnv = Quadtree.ensureExtent(itemEnv, this._minExtent)\n    return this._root.remove(posEnv, item)\n  }\n\n  collectStats (itemEnv) {\n    const delX = itemEnv.getWidth()\n    if (delX < this._minExtent && delX > 0.0) this._minExtent = delX\n    const delY = itemEnv.getHeight()\n    if (delY < this._minExtent && delY > 0.0) this._minExtent = delY\n  }\n\n  depth () {\n    if (this._root !== null) return this._root.depth()\n    return 0\n  }\n\n  isEmpty () {\n    if (this._root === null) return true\n    return this._root.isEmpty()\n  }\n\n  getClass () {\n    return Quadtree\n  }\n\n  get interfaces_ () {\n    return [SpatialIndex, Serializable]\n  }\n}\nQuadtree.constructor_ = function () {\n  this._root = null\n  this._minExtent = 1.0\n  this._root = new Root()\n}\nQuadtree.serialVersionUID = -7461163625812743604\n","export default class Boundable {\n  constructor () {\n    Boundable.constructor_.apply(this, arguments)\n  }\n\n  getBounds () {}\n  getClass () {\n    return Boundable\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nBoundable.constructor_ = function () {}\n","import Boundable from './Boundable'\nimport Serializable from '../../../../../java/io/Serializable'\nexport default class ItemBoundable {\n  constructor () {\n    ItemBoundable.constructor_.apply(this, arguments)\n  }\n\n  getItem () {\n    return this._item\n  }\n\n  getBounds () {\n    return this._bounds\n  }\n\n  getClass () {\n    return ItemBoundable\n  }\n\n  get interfaces_ () {\n    return [Boundable, Serializable]\n  }\n}\nItemBoundable.constructor_ = function () {\n  this._bounds = null\n  this._item = null\n  const bounds = arguments[0]; const item = arguments[1]\n  this._bounds = bounds\n  this._item = item\n}\n","import ArrayList from '../../../../java/util/ArrayList'\nexport default class PriorityQueue {\n  constructor () {\n    PriorityQueue.constructor_.apply(this, arguments)\n  }\n\n  poll () {\n    if (this.isEmpty()) return null\n    const minItem = this._items.get(1)\n    this._items.set(1, this._items.get(this._size))\n    this._size -= 1\n    this.reorder(1)\n    return minItem\n  }\n\n  size () {\n    return this._size\n  }\n\n  reorder (hole) {\n    let child = null\n    const tmp = this._items.get(hole)\n    for (; hole * 2 <= this._size; hole = child) {\n      child = hole * 2\n      if (child !== this._size && this._items.get(child + 1).compareTo(this._items.get(child)) < 0) child++\n      if (this._items.get(child).compareTo(tmp) < 0) this._items.set(hole, this._items.get(child)); else break\n    }\n    this._items.set(hole, tmp)\n  }\n\n  clear () {\n    this._size = 0\n    this._items.clear()\n  }\n\n  peek () {\n    if (this.isEmpty()) return null\n    const minItem = this._items.get(1)\n    return minItem\n  }\n\n  isEmpty () {\n    return this._size === 0\n  }\n\n  add (x) {\n    this._items.add(null)\n    this._size += 1\n    let hole = this._size\n    this._items.set(0, x)\n    for (; x.compareTo(this._items.get(Math.trunc(hole / 2))) < 0; hole /= 2) {\n      this._items.set(hole, this._items.get(Math.trunc(hole / 2)))\n    }\n    this._items.set(hole, x)\n  }\n\n  getClass () {\n    return PriorityQueue\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nPriorityQueue.constructor_ = function () {\n  this._size = null\n  this._items = null\n  this._size = 0\n  this._items = new ArrayList()\n  this._items.add(null)\n}\n","import Boundable from './Boundable'\nimport ArrayList from '../../../../../java/util/ArrayList'\nimport Serializable from '../../../../../java/io/Serializable'\nimport Assert from '../../util/Assert'\nexport default class AbstractNode {\n  constructor () {\n    AbstractNode.constructor_.apply(this, arguments)\n  }\n\n  getLevel () {\n    return this._level\n  }\n\n  size () {\n    return this._childBoundables.size()\n  }\n\n  getChildBoundables () {\n    return this._childBoundables\n  }\n\n  addChildBoundable (childBoundable) {\n    Assert.isTrue(this._bounds === null)\n    this._childBoundables.add(childBoundable)\n  }\n\n  isEmpty () {\n    return this._childBoundables.isEmpty()\n  }\n\n  getBounds () {\n    if (this._bounds === null) {\n      this._bounds = this.computeBounds()\n    }\n    return this._bounds\n  }\n\n  getClass () {\n    return AbstractNode\n  }\n\n  get interfaces_ () {\n    return [Boundable, Serializable]\n  }\n}\nAbstractNode.constructor_ = function () {\n  this._childBoundables = new ArrayList()\n  this._bounds = null\n  this._level = null\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    const level = arguments[0]\n    this._level = level\n  }\n}\nAbstractNode.serialVersionUID = 6493722185909573708\n","import IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException'\nimport AbstractNode from './AbstractNode'\nimport Comparable from '../../../../../java/lang/Comparable'\nexport default class BoundablePair {\n  constructor () {\n    BoundablePair.constructor_.apply(this, arguments)\n  }\n\n  static area (b) {\n    return b.getBounds().getArea()\n  }\n\n  static isComposite (item) {\n    return item instanceof AbstractNode\n  }\n\n  expandToQueue (priQ, minDistance) {\n    const isComp1 = BoundablePair.isComposite(this._boundable1)\n    const isComp2 = BoundablePair.isComposite(this._boundable2)\n    if (isComp1 && isComp2) {\n      if (BoundablePair.area(this._boundable1) > BoundablePair.area(this._boundable2)) {\n        this.expand(this._boundable1, this._boundable2, priQ, minDistance)\n        return null\n      } else {\n        this.expand(this._boundable2, this._boundable1, priQ, minDistance)\n        return null\n      }\n    } else if (isComp1) {\n      this.expand(this._boundable1, this._boundable2, priQ, minDistance)\n      return null\n    } else if (isComp2) {\n      this.expand(this._boundable2, this._boundable1, priQ, minDistance)\n      return null\n    }\n    throw new IllegalArgumentException('neither boundable is composite')\n  }\n\n  isLeaves () {\n    return !(BoundablePair.isComposite(this._boundable1) || BoundablePair.isComposite(this._boundable2))\n  }\n\n  compareTo (o) {\n    const nd = o\n    if (this._distance < nd._distance) return -1\n    if (this._distance > nd._distance) return 1\n    return 0\n  }\n\n  expand (bndComposite, bndOther, priQ, minDistance) {\n    const children = bndComposite.getChildBoundables()\n    for (let i = children.iterator(); i.hasNext();) {\n      const child = i.next()\n      const bp = new BoundablePair(child, bndOther, this._itemDistance)\n      if (bp.getDistance() < minDistance) {\n        priQ.add(bp)\n      }\n    }\n  }\n\n  getBoundable (i) {\n    if (i === 0) return this._boundable1\n    return this._boundable2\n  }\n\n  getDistance () {\n    return this._distance\n  }\n\n  distance () {\n    if (this.isLeaves()) {\n      return this._itemDistance.distance(this._boundable1, this._boundable2)\n    }\n    return this._boundable1.getBounds().distance(this._boundable2.getBounds())\n  }\n\n  getClass () {\n    return BoundablePair\n  }\n\n  get interfaces_ () {\n    return [Comparable]\n  }\n}\nBoundablePair.constructor_ = function () {\n  this._boundable1 = null\n  this._boundable2 = null\n  this._distance = null\n  this._itemDistance = null\n  const boundable1 = arguments[0]; const boundable2 = arguments[1]; const itemDistance = arguments[2]\n  this._boundable1 = boundable1\n  this._boundable2 = boundable2\n  this._itemDistance = itemDistance\n  this._distance = this.distance()\n}\n","import ItemBoundable from './ItemBoundable'\nimport hasInterface from '../../../../../hasInterface'\nimport ItemVisitor from '../ItemVisitor'\nimport AbstractNode from './AbstractNode'\nimport Collections from '../../../../../java/util/Collections'\nimport ArrayList from '../../../../../java/util/ArrayList'\nimport Serializable from '../../../../../java/io/Serializable'\nimport Assert from '../../util/Assert'\nimport List from '../../../../../java/util/List'\nexport default class AbstractSTRtree {\n  constructor () {\n    AbstractSTRtree.constructor_.apply(this, arguments)\n  }\n\n  static compareDoubles (a, b) {\n    return a > b ? 1 : a < b ? -1 : 0\n  }\n\n  queryInternal () {\n    if (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      const searchBounds = arguments[0]; const node = arguments[1]; const visitor = arguments[2]\n      const childBoundables = node.getChildBoundables()\n      for (let i = 0; i < childBoundables.size(); i++) {\n        const childBoundable = childBoundables.get(i)\n        if (!this.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds)) {\n          continue\n        }\n        if (childBoundable instanceof AbstractNode) {\n          this.queryInternal(searchBounds, childBoundable, visitor)\n        } else if (childBoundable instanceof ItemBoundable) {\n          visitor.visitItem(childBoundable.getItem())\n        } else {\n          Assert.shouldNeverReachHere()\n        }\n      }\n    } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      const searchBounds = arguments[0]; const node = arguments[1]; const matches = arguments[2]\n      const childBoundables = node.getChildBoundables()\n      for (let i = 0; i < childBoundables.size(); i++) {\n        const childBoundable = childBoundables.get(i)\n        if (!this.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds)) {\n          continue\n        }\n        if (childBoundable instanceof AbstractNode) {\n          this.queryInternal(searchBounds, childBoundable, matches)\n        } else if (childBoundable instanceof ItemBoundable) {\n          matches.add(childBoundable.getItem())\n        } else {\n          Assert.shouldNeverReachHere()\n        }\n      }\n    }\n  }\n\n  getNodeCapacity () {\n    return this._nodeCapacity\n  }\n\n  lastNode (nodes) {\n    return nodes.get(nodes.size() - 1)\n  }\n\n  size () {\n    if (arguments.length === 0) {\n      if (this.isEmpty()) {\n        return 0\n      }\n      this.build()\n      return this.size(this._root)\n    } else if (arguments.length === 1) {\n      const node = arguments[0]\n      let size = 0\n      for (let i = node.getChildBoundables().iterator(); i.hasNext();) {\n        const childBoundable = i.next()\n        if (childBoundable instanceof AbstractNode) {\n          size += this.size(childBoundable)\n        } else if (childBoundable instanceof ItemBoundable) {\n          size += 1\n        }\n      }\n      return size\n    }\n  }\n\n  removeItem (node, item) {\n    let childToRemove = null\n    for (let i = node.getChildBoundables().iterator(); i.hasNext();) {\n      const childBoundable = i.next()\n      if (childBoundable instanceof ItemBoundable) {\n        if (childBoundable.getItem() === item) childToRemove = childBoundable\n      }\n    }\n    if (childToRemove !== null) {\n      node.getChildBoundables().remove(childToRemove)\n      return true\n    }\n    return false\n  }\n\n  itemsTree () {\n    if (arguments.length === 0) {\n      this.build()\n      const valuesTree = this.itemsTree(this._root)\n      if (valuesTree === null) return new ArrayList()\n      return valuesTree\n    } else if (arguments.length === 1) {\n      const node = arguments[0]\n      const valuesTreeForNode = new ArrayList()\n      for (let i = node.getChildBoundables().iterator(); i.hasNext();) {\n        const childBoundable = i.next()\n        if (childBoundable instanceof AbstractNode) {\n          const valuesTreeForChild = this.itemsTree(childBoundable)\n          if (valuesTreeForChild !== null) valuesTreeForNode.add(valuesTreeForChild)\n        } else if (childBoundable instanceof ItemBoundable) {\n          valuesTreeForNode.add(childBoundable.getItem())\n        } else {\n          Assert.shouldNeverReachHere()\n        }\n      }\n      if (valuesTreeForNode.size() <= 0) return null\n      return valuesTreeForNode\n    }\n  }\n\n  insert (bounds, item) {\n    Assert.isTrue(!this._built, 'Cannot insert items into an STR packed R-tree after it has been built.')\n    this._itemBoundables.add(new ItemBoundable(bounds, item))\n  }\n\n  boundablesAtLevel () {\n    if (arguments.length === 1) {\n      const level = arguments[0]\n      const boundables = new ArrayList()\n      this.boundablesAtLevel(level, this._root, boundables)\n      return boundables\n    } else if (arguments.length === 3) {\n      const level = arguments[0]; const top = arguments[1]; const boundables = arguments[2]\n      Assert.isTrue(level > -2)\n      if (top.getLevel() === level) {\n        boundables.add(top)\n        return null\n      }\n      for (let i = top.getChildBoundables().iterator(); i.hasNext();) {\n        const boundable = i.next()\n        if (boundable instanceof AbstractNode) {\n          this.boundablesAtLevel(level, boundable, boundables)\n        } else {\n          Assert.isTrue(boundable instanceof ItemBoundable)\n          if (level === -1) {\n            boundables.add(boundable)\n          }\n        }\n      }\n      return null\n    }\n  }\n\n  query () {\n    if (arguments.length === 1) {\n      const searchBounds = arguments[0]\n      this.build()\n      const matches = new ArrayList()\n      if (this.isEmpty()) {\n        return matches\n      }\n      if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n        this.queryInternal(searchBounds, this._root, matches)\n      }\n      return matches\n    } else if (arguments.length === 2) {\n      const searchBounds = arguments[0]; const visitor = arguments[1]\n      this.build()\n      if (this.isEmpty()) {\n        return null\n      }\n      if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n        this.queryInternal(searchBounds, this._root, visitor)\n      }\n    }\n  }\n\n  build () {\n    if (this._built) return null\n    this._root = this._itemBoundables.isEmpty() ? this.createNode(0) : this.createHigherLevels(this._itemBoundables, -1)\n    this._itemBoundables = null\n    this._built = true\n  }\n\n  getRoot () {\n    this.build()\n    return this._root\n  }\n\n  remove () {\n    if (arguments.length === 2) {\n      const searchBounds = arguments[0]; const item = arguments[1]\n      this.build()\n      if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n        return this.remove(searchBounds, this._root, item)\n      }\n      return false\n    } else if (arguments.length === 3) {\n      const searchBounds = arguments[0]; const node = arguments[1]; const item = arguments[2]\n      let found = this.removeItem(node, item)\n      if (found) return true\n      let childToPrune = null\n      for (let i = node.getChildBoundables().iterator(); i.hasNext();) {\n        const childBoundable = i.next()\n        if (!this.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds)) {\n          continue\n        }\n        if (childBoundable instanceof AbstractNode) {\n          found = this.remove(searchBounds, childBoundable, item)\n          if (found) {\n            childToPrune = childBoundable\n            break\n          }\n        }\n      }\n      if (childToPrune !== null) {\n        if (childToPrune.getChildBoundables().isEmpty()) {\n          node.getChildBoundables().remove(childToPrune)\n        }\n      }\n      return found\n    }\n  }\n\n  createHigherLevels (boundablesOfALevel, level) {\n    Assert.isTrue(!boundablesOfALevel.isEmpty())\n    const parentBoundables = this.createParentBoundables(boundablesOfALevel, level + 1)\n    if (parentBoundables.size() === 1) {\n      return parentBoundables.get(0)\n    }\n    return this.createHigherLevels(parentBoundables, level + 1)\n  }\n\n  depth () {\n    if (arguments.length === 0) {\n      if (this.isEmpty()) {\n        return 0\n      }\n      this.build()\n      return this.depth(this._root)\n    } else if (arguments.length === 1) {\n      const node = arguments[0]\n      let maxChildDepth = 0\n      for (let i = node.getChildBoundables().iterator(); i.hasNext();) {\n        const childBoundable = i.next()\n        if (childBoundable instanceof AbstractNode) {\n          const childDepth = this.depth(childBoundable)\n          if (childDepth > maxChildDepth) maxChildDepth = childDepth\n        }\n      }\n      return maxChildDepth + 1\n    }\n  }\n\n  createParentBoundables (childBoundables, newLevel) {\n    Assert.isTrue(!childBoundables.isEmpty())\n    const parentBoundables = new ArrayList()\n    parentBoundables.add(this.createNode(newLevel))\n    const sortedChildBoundables = new ArrayList(childBoundables)\n    Collections.sort(sortedChildBoundables, this.getComparator())\n    for (let i = sortedChildBoundables.iterator(); i.hasNext();) {\n      const childBoundable = i.next()\n      if (this.lastNode(parentBoundables).getChildBoundables().size() === this.getNodeCapacity()) {\n        parentBoundables.add(this.createNode(newLevel))\n      }\n      this.lastNode(parentBoundables).addChildBoundable(childBoundable)\n    }\n    return parentBoundables\n  }\n\n  isEmpty () {\n    if (!this._built) return this._itemBoundables.isEmpty()\n    return this._root.isEmpty()\n  }\n\n  getClass () {\n    return AbstractSTRtree\n  }\n\n  get interfaces_ () {\n    return [Serializable]\n  }\n}\nfunction IntersectsOp () {}\nAbstractSTRtree.IntersectsOp = IntersectsOp\nAbstractSTRtree.constructor_ = function () {\n  this._root = null\n  this._built = false\n  this._itemBoundables = new ArrayList()\n  this._nodeCapacity = null\n  if (arguments.length === 0) {\n    AbstractSTRtree.constructor_.call(this, AbstractSTRtree.DEFAULT_NODE_CAPACITY)\n  } else if (arguments.length === 1) {\n    const nodeCapacity = arguments[0]\n    Assert.isTrue(nodeCapacity > 1, 'Node capacity must be greater than 1')\n    this._nodeCapacity = nodeCapacity\n  }\n}\nAbstractSTRtree.serialVersionUID = -3886435814360241337\nAbstractSTRtree.DEFAULT_NODE_CAPACITY = 10\n","export default class ItemDistance {\n  constructor () {\n    ItemDistance.constructor_.apply(this, arguments)\n  }\n\n  distance (item1, item2) {}\n  getClass () {\n    return ItemDistance\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nItemDistance.constructor_ = function () {}\n","import ItemBoundable from './ItemBoundable'\nimport PriorityQueue from '../../util/PriorityQueue'\nimport hasInterface from '../../../../../hasInterface'\nimport SpatialIndex from '../SpatialIndex'\nimport AbstractNode from './AbstractNode'\nimport Double from '../../../../../java/lang/Double'\nimport Collections from '../../../../../java/util/Collections'\nimport BoundablePair from './BoundablePair'\nimport ArrayList from '../../../../../java/util/ArrayList'\nimport Comparator from '../../../../../java/util/Comparator'\nimport Serializable from '../../../../../java/io/Serializable'\nimport Envelope from '../../geom/Envelope'\nimport Assert from '../../util/Assert'\nimport AbstractSTRtree from './AbstractSTRtree'\nimport ItemDistance from './ItemDistance'\nexport default class STRtree extends AbstractSTRtree {\n  constructor () {\n    super()\n    STRtree.constructor_.apply(this, arguments)\n  }\n\n  static centreX (e) {\n    return STRtree.avg(e.getMinX(), e.getMaxX())\n  }\n\n  static avg (a, b) {\n    return (a + b) / 2\n  }\n\n  static getItems (kNearestNeighbors) {\n    const items = new Array(kNearestNeighbors.size()).fill(null)\n    let count = 0\n    while (!kNearestNeighbors.isEmpty()) {\n      const bp = kNearestNeighbors.poll()\n      items[count] = bp.getBoundable(0).getItem()\n      count++\n    }\n    return items\n  }\n\n  static centreY (e) {\n    return STRtree.avg(e.getMinY(), e.getMaxY())\n  }\n\n  createParentBoundablesFromVerticalSlices (verticalSlices, newLevel) {\n    Assert.isTrue(verticalSlices.length > 0)\n    const parentBoundables = new ArrayList()\n    for (let i = 0; i < verticalSlices.length; i++) {\n      parentBoundables.addAll(this.createParentBoundablesFromVerticalSlice(verticalSlices[i], newLevel))\n    }\n    return parentBoundables\n  }\n\n  createNode (level) {\n    return new STRtreeNode(level)\n  }\n\n  size () {\n    if (arguments.length === 0) {\n      return super.size.call(this)\n    } else return super.size.apply(this, arguments)\n  }\n\n  insert () {\n    if (arguments.length === 2 && (arguments[1] instanceof Object && arguments[0] instanceof Envelope)) {\n      const itemEnv = arguments[0]; const item = arguments[1]\n      if (itemEnv.isNull()) {\n        return null\n      }\n      super.insert.call(this, itemEnv, item)\n    } else return super.insert.apply(this, arguments)\n  }\n\n  getIntersectsOp () {\n    return STRtree.intersectsOp\n  }\n\n  verticalSlices (childBoundables, sliceCount) {\n    const sliceCapacity = Math.trunc(Math.ceil(childBoundables.size() / sliceCount))\n    const slices = new Array(sliceCount).fill(null)\n    const i = childBoundables.iterator()\n    for (let j = 0; j < sliceCount; j++) {\n      slices[j] = new ArrayList()\n      let boundablesAddedToSlice = 0\n      while (i.hasNext() && boundablesAddedToSlice < sliceCapacity) {\n        const childBoundable = i.next()\n        slices[j].add(childBoundable)\n        boundablesAddedToSlice++\n      }\n    }\n    return slices\n  }\n\n  query () {\n    if (arguments.length === 1) {\n      const searchEnv = arguments[0]\n      return super.query.call(this, searchEnv)\n    } else if (arguments.length === 2) {\n      const searchEnv = arguments[0]; const visitor = arguments[1]\n      super.query.call(this, searchEnv, visitor)\n    }\n  }\n\n  getComparator () {\n    return STRtree.yComparator\n  }\n\n  createParentBoundablesFromVerticalSlice (childBoundables, newLevel) {\n    return super.createParentBoundables.call(this, childBoundables, newLevel)\n  }\n\n  remove () {\n    if (arguments.length === 2 && (arguments[1] instanceof Object && arguments[0] instanceof Envelope)) {\n      const itemEnv = arguments[0]; const item = arguments[1]\n      return super.remove.call(this, itemEnv, item)\n    } else return super.remove.apply(this, arguments)\n  }\n\n  depth () {\n    if (arguments.length === 0) {\n      return super.depth.call(this)\n    } else return super.depth.apply(this, arguments)\n  }\n\n  createParentBoundables (childBoundables, newLevel) {\n    Assert.isTrue(!childBoundables.isEmpty())\n    const minLeafCount = Math.trunc(Math.ceil(childBoundables.size() / this.getNodeCapacity()))\n    const sortedChildBoundables = new ArrayList(childBoundables)\n    Collections.sort(sortedChildBoundables, STRtree.xComparator)\n    const verticalSlices = this.verticalSlices(sortedChildBoundables, Math.trunc(Math.ceil(Math.sqrt(minLeafCount))))\n    return this.createParentBoundablesFromVerticalSlices(verticalSlices, newLevel)\n  }\n\n  nearestNeighbour () {\n    if (arguments.length === 1) {\n      if (hasInterface(arguments[0], ItemDistance)) {\n        const itemDist = arguments[0]\n        const bp = new BoundablePair(this.getRoot(), this.getRoot(), itemDist)\n        return this.nearestNeighbour(bp)\n      } else if (arguments[0] instanceof BoundablePair) {\n        const initBndPair = arguments[0]\n        return this.nearestNeighbour(initBndPair, Double.POSITIVE_INFINITY)\n      }\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof STRtree && hasInterface(arguments[1], ItemDistance)) {\n        const tree = arguments[0]; const itemDist = arguments[1]\n        const bp = new BoundablePair(this.getRoot(), tree.getRoot(), itemDist)\n        return this.nearestNeighbour(bp)\n      } else if (arguments[0] instanceof BoundablePair && typeof arguments[1] === 'number') {\n        const initBndPair = arguments[0]; const maxDistance = arguments[1]\n        let distanceLowerBound = maxDistance\n        let minPair = null\n        const priQ = new PriorityQueue()\n        priQ.add(initBndPair)\n        while (!priQ.isEmpty() && distanceLowerBound > 0.0) {\n          const bndPair = priQ.poll()\n          const currentDistance = bndPair.getDistance()\n          if (currentDistance >= distanceLowerBound) break\n          if (bndPair.isLeaves()) {\n            distanceLowerBound = currentDistance\n            minPair = bndPair\n          } else {\n            bndPair.expandToQueue(priQ, distanceLowerBound)\n          }\n        }\n        return [minPair.getBoundable(0).getItem(), minPair.getBoundable(1).getItem()]\n      } else if (arguments[0] instanceof BoundablePair && Number.isInteger(arguments[1])) {\n        const initBndPair = arguments[0]; const k = arguments[1]\n        return this.nearestNeighbour(initBndPair, Double.POSITIVE_INFINITY, k)\n      }\n    } else if (arguments.length === 3) {\n      if (hasInterface(arguments[2], ItemDistance) && (arguments[0] instanceof Envelope && arguments[1] instanceof Object)) {\n        const env = arguments[0]; const item = arguments[1]; const itemDist = arguments[2]\n        const bnd = new ItemBoundable(env, item)\n        const bp = new BoundablePair(this.getRoot(), bnd, itemDist)\n        return this.nearestNeighbour(bp)[0]\n      } else if (Number.isInteger(arguments[2]) && (arguments[0] instanceof BoundablePair && typeof arguments[1] === 'number')) {\n        const initBndPair = arguments[0]; const maxDistance = arguments[1]; const k = arguments[2]\n        let distanceLowerBound = maxDistance\n        const priQ = new PriorityQueue()\n        priQ.add(initBndPair)\n        const kNearestNeighbors = new PriorityQueue()\n        while (!priQ.isEmpty() && distanceLowerBound >= 0.0) {\n          const bndPair = priQ.poll()\n          const currentDistance = bndPair.getDistance()\n          if (currentDistance >= distanceLowerBound) {\n            break\n          }\n          if (bndPair.isLeaves()) {\n            if (kNearestNeighbors.size() < k) {\n              kNearestNeighbors.add(bndPair)\n            } else {\n              const bp1 = kNearestNeighbors.peek()\n              if (bp1.getDistance() > currentDistance) {\n                kNearestNeighbors.poll()\n                kNearestNeighbors.add(bndPair)\n              }\n              const bp2 = kNearestNeighbors.peek()\n              distanceLowerBound = bp2.getDistance()\n            }\n          } else {\n            bndPair.expandToQueue(priQ, distanceLowerBound)\n          }\n        }\n        return STRtree.getItems(kNearestNeighbors)\n      }\n    } else if (arguments.length === 4) {\n      const env = arguments[0]; const item = arguments[1]; const itemDist = arguments[2]; const k = arguments[3]\n      const bnd = new ItemBoundable(env, item)\n      const bp = new BoundablePair(this.getRoot(), bnd, itemDist)\n      return this.nearestNeighbour(bp, k)\n    }\n  }\n\n  getClass () {\n    return STRtree\n  }\n\n  get interfaces_ () {\n    return [SpatialIndex, Serializable]\n  }\n}\nclass STRtreeNode extends AbstractNode {\n  constructor () {\n    super()\n    STRtreeNode.constructor_.apply(this, arguments)\n  }\n\n  computeBounds () {\n    let bounds = null\n    for (let i = this.getChildBoundables().iterator(); i.hasNext();) {\n      const childBoundable = i.next()\n      if (bounds === null) {\n        bounds = new Envelope(childBoundable.getBounds())\n      } else {\n        bounds.expandToInclude(childBoundable.getBounds())\n      }\n    }\n    return bounds\n  }\n\n  getClass () {\n    return STRtreeNode\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nSTRtreeNode.constructor_ = function () {\n  const level = arguments[0]\n  AbstractNode.constructor_.call(this, level)\n}\nSTRtree.STRtreeNode = STRtreeNode\nSTRtree.constructor_ = function () {\n  if (arguments.length === 0) {\n    STRtree.constructor_.call(this, STRtree.DEFAULT_NODE_CAPACITY)\n  } else if (arguments.length === 1) {\n    const nodeCapacity = arguments[0]\n    AbstractSTRtree.constructor_.call(this, nodeCapacity)\n  }\n}\nSTRtree.serialVersionUID = 259274702368956900\nSTRtree.xComparator = new (class {\n  get interfaces_ () {\n    return [Comparator]\n  }\n\n  compare (o1, o2) {\n    return AbstractSTRtree.compareDoubles(STRtree.centreX(o1.getBounds()), STRtree.centreX(o2.getBounds()))\n  }\n})()\nSTRtree.yComparator = new (class {\n  get interfaces_ () {\n    return [Comparator]\n  }\n\n  compare (o1, o2) {\n    return AbstractSTRtree.compareDoubles(STRtree.centreY(o1.getBounds()), STRtree.centreY(o2.getBounds()))\n  }\n})()\nSTRtree.intersectsOp = new (class {\n  get interfaces_ () {\n    return [IntersectsOp]\n  }\n\n  intersects (aBounds, bBounds) {\n    return aBounds.intersects(bBounds)\n  }\n})()\nSTRtree.DEFAULT_NODE_CAPACITY = 10\n","import Coordinate from '../geom/Coordinate'\nimport GeometryFactory from '../geom/GeometryFactory'\n\nconst geometryTypes = ['Point', 'MultiPoint', 'LineString', 'MultiLineString', 'Polygon', 'MultiPolygon']\n\n/**\n * Class for reading and writing Well-Known Text.Create a new parser for GeoJSON\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/**\n * Create a new parser for GeoJSON\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of GeoJsonParser.\n * @constructor\n * @private\n */\nexport default class GeoJSONParser {\n  constructor (geometryFactory) {\n    this.geometryFactory = geometryFactory || new GeometryFactory()\n  }\n\n  /**\n   * Deserialize a GeoJSON object and return the Geometry or Feature(Collection) with JSTS Geometries\n   *\n   * @param {}\n   *          A GeoJSON object.\n   * @return {} A Geometry instance or object representing a Feature(Collection) with Geometry instances.\n   * @private\n   */\n  read (json) {\n    let obj\n    if (typeof json === 'string') { obj = JSON.parse(json) } else { obj = json }\n\n    const type = obj.type\n\n    if (!parse[type]) { throw new Error('Unknown GeoJSON type: ' + obj.type) }\n\n    if (geometryTypes.indexOf(type) !== -1) { return parse[type].call(this, obj.coordinates) } else if (type === 'GeometryCollection') { return parse[type].call(this, obj.geometries) }\n\n    // feature or feature collection\n    return parse[type].call(this, obj)\n  }\n\n  /**\n   * Serialize a Geometry object into GeoJSON\n   *\n   * @param {Geometry}\n   *          geometry A Geometry or array of Geometries.\n   * @return {Object} A GeoJSON object represting the input Geometry/Geometries.\n   * @private\n   */\n  write (geometry) {\n    const type = geometry.getGeometryType()\n\n    if (!extract[type]) { throw new Error('Geometry is not supported') }\n\n    return extract[type].call(this, geometry)\n  }\n}\n\nconst parse = {\n  /**\n   * Parse a GeoJSON Feature object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} Feature with geometry/bbox converted to JSTS Geometries.\n   */\n  Feature: function (obj) {\n    const feature = {}\n\n    for (const key in obj) { feature[key] = obj[key] }\n\n    if (obj.geometry) {\n      const type = obj.geometry.type\n      if (!parse[type]) { throw new Error('Unknown GeoJSON type: ' + obj.type) }\n      feature.geometry = this.read(obj.geometry)\n    }\n\n    if (obj.bbox) { feature.bbox = parse.bbox.call(this, obj.bbox) }\n\n    return feature\n  },\n\n  /**\n   * Parse a GeoJSON FeatureCollection object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} FeatureCollection with geometry/bbox converted to JSTS Geometries.\n   */\n  FeatureCollection: function (obj) {\n    const featureCollection = {}\n\n    if (obj.features) {\n      featureCollection.features = []\n\n      for (let i = 0; i < obj.features.length; ++i) { featureCollection.features.push(this.read(obj.features[i])) }\n    }\n\n    if (obj.bbox) { featureCollection.bbox = this.parse.bbox.call(this, obj.bbox) }\n\n    return featureCollection\n  },\n\n  /**\n   * Convert the ordinates in an array to an array of Coordinates\n   *\n   * @param {Array}\n   *          array Array with {Number}s.\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  coordinates: function (array) {\n    const coordinates = []\n    for (let i = 0; i < array.length; ++i) {\n      const sub = array[i]\n      coordinates.push(new Coordinate(sub[0], sub[1]))\n    }\n    return coordinates\n  },\n\n  /**\n   * Convert the bbox to a LinearRing\n   *\n   * @param {Array}\n   *          array Array with [xMin, yMin, xMax, yMax].\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  bbox: function (array) {\n    return this.geometryFactory.createLinearRing([\n      new Coordinate(array[0], array[1]),\n      new Coordinate(array[2], array[1]),\n      new Coordinate(array[2], array[3]),\n      new Coordinate(array[0], array[3]),\n      new Coordinate(array[0], array[1])\n    ])\n  },\n\n  /**\n   * Convert an Array with ordinates to a Point\n   *\n   * @param {Array}\n   *          array Array with ordinates.\n   *\n   * @return {Point} Point.\n   */\n  Point: function (array) {\n    const coordinate = new Coordinate(array[0], array[1])\n    return this.geometryFactory.createPoint(coordinate)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiPoint\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiPoint} MultiPoint.\n   */\n  MultiPoint: function (array) {\n    const points = []\n    for (let i = 0; i < array.length; ++i) { points.push(parse.Point.call(this, array[i])) }\n    return this.geometryFactory.createMultiPoint(points)\n  },\n\n  /**\n   * Convert an Array with coordinates to a LineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {LineString} LineString.\n   */\n  LineString: function (array) {\n    const coordinates = parse.coordinates.call(this, array)\n    return this.geometryFactory.createLineString(coordinates)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiLineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiLineString} MultiLineString.\n   */\n  MultiLineString: function (array) {\n    const lineStrings = []\n    for (let i = 0; i < array.length; ++i) { lineStrings.push(parse.LineString.call(this, array[i])) }\n    return this.geometryFactory.createMultiLineString(lineStrings)\n  },\n\n  /**\n   * Convert an Array to a Polygon\n   *\n   * @param {Array}\n   *          array Array with shell and holes.\n   *\n   * @return {Polygon} Polygon.\n   */\n  Polygon: function (array) {\n    const shellCoordinates = parse.coordinates.call(this, array[0])\n    const shell = this.geometryFactory.createLinearRing(shellCoordinates)\n    const holes = []\n    for (let i = 1; i < array.length; ++i) {\n      const hole = array[i]\n      const coordinates = parse.coordinates.call(this, hole)\n      const linearRing = this.geometryFactory.createLinearRing(coordinates)\n      holes.push(linearRing)\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Convert an Array to a MultiPolygon\n   *\n   * @param {Array}\n   *          array Array of arrays with shell and rings.\n   *\n   * @return {MultiPolygon} MultiPolygon.\n   */\n  MultiPolygon: function (array) {\n    const polygons = []\n    for (let i = 0; i < array.length; ++i) {\n      const polygon = array[i]\n      polygons.push(parse.Polygon.call(this, polygon))\n    }\n    return this.geometryFactory.createMultiPolygon(polygons)\n  },\n\n  /**\n   * Convert an Array to a GeometryCollection\n   *\n   * @param {Array}\n   *          array Array of GeoJSON geometries.\n   *\n   * @return {GeometryCollection} GeometryCollection.\n   */\n  GeometryCollection: function (array) {\n    const geometries = []\n    for (let i = 0; i < array.length; ++i) {\n      const geometry = array[i]\n      geometries.push(this.read(geometry))\n    }\n    return this.geometryFactory.createGeometryCollection(geometries)\n  }\n}\n\nconst extract = {\n  /**\n   * Convert a Coordinate to an Array\n   *\n   * @param {Coordinate}\n   *          coordinate Coordinate to convert.\n   *\n   * @return {Array} Array of ordinates.\n   */\n  coordinate: function (coordinate) {\n    return [coordinate.x, coordinate.y]\n  },\n\n  /**\n   * Convert a Point to a GeoJSON object\n   *\n   * @param {Point}\n   *          point Point to convert.\n   *\n   * @return {Array} Array of 2 ordinates (paired to a coordinate).\n   */\n  Point: function (point) {\n    const array = extract.coordinate.call(this, point.getCoordinate())\n    return {\n      type: 'Point',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPoint to a GeoJSON object\n   *\n   * @param {MultiPoint}\n   *          multipoint MultiPoint to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  MultiPoint: function (multipoint) {\n    const array = []\n    for (let i = 0; i < multipoint._geometries.length; ++i) {\n      const point = multipoint._geometries[i]\n      const geoJson = extract.Point.call(this, point)\n      array.push(geoJson.coordinates)\n    }\n    return {\n      type: 'MultiPoint',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a LineString to a GeoJSON object\n   *\n   * @param {LineString}\n   *          linestring LineString to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  LineString: function (linestring) {\n    const array = []\n    const coordinates = linestring.getCoordinates()\n    for (let i = 0; i < coordinates.length; ++i) {\n      const coordinate = coordinates[i]\n      array.push(extract.coordinate.call(this, coordinate))\n    }\n    return {\n      type: 'LineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiLineString to a GeoJSON object\n   *\n   * @param {MultiLineString}\n   *          multilinestring MultiLineString to convert.\n   *\n   * @return {Array} Array of Array of coordinates.\n   */\n  MultiLineString: function (multilinestring) {\n    const array = []\n    for (let i = 0; i < multilinestring._geometries.length; ++i) {\n      const linestring = multilinestring._geometries[i]\n      const geoJson = extract.LineString.call(this, linestring)\n      array.push(geoJson.coordinates)\n    }\n    return {\n      type: 'MultiLineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a Polygon to a GeoJSON object\n   *\n   * @param {Polygon}\n   *          polygon Polygon to convert.\n   *\n   * @return {Array} Array with shell, holes.\n   */\n  Polygon: function (polygon) {\n    const array = []\n    const shellGeoJson = extract.LineString.call(this, polygon._shell)\n    array.push(shellGeoJson.coordinates)\n    for (let i = 0; i < polygon._holes.length; ++i) {\n      const hole = polygon._holes[i]\n      const holeGeoJson = extract.LineString.call(this, hole)\n      array.push(holeGeoJson.coordinates)\n    }\n    return {\n      type: 'Polygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPolygon to a GeoJSON object\n   *\n   * @param {MultiPolygon}\n   *          multipolygon MultiPolygon to convert.\n   *\n   * @return {Array} Array of polygons.\n   */\n  MultiPolygon: function (multipolygon) {\n    const array = []\n    for (let i = 0; i < multipolygon._geometries.length; ++i) {\n      const polygon = multipolygon._geometries[i]\n      const geoJson = extract.Polygon.call(this, polygon)\n      array.push(geoJson.coordinates)\n    }\n    return {\n      type: 'MultiPolygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a GeometryCollection to a GeoJSON object\n   *\n   * @param {GeometryCollection}\n   *          collection GeometryCollection to convert.\n   *\n   * @return {Array} Array of geometries.\n   */\n  GeometryCollection: function (collection) {\n    const array = []\n    for (let i = 0; i < collection._geometries.length; ++i) {\n      const geometry = collection._geometries[i]\n      const type = geometry.getGeometryType()\n      array.push(extract[type].call(this, geometry))\n    }\n    return {\n      type: 'GeometryCollection',\n      geometries: array\n    }\n  }\n}\n","/* eslint-disable no-undef */\n\n/**\n * @module org/locationtech/jts/io/OL3Parser\n */\n\nimport Coordinate from '../geom/Coordinate'\nimport GeometryFactory from '../geom/GeometryFactory'\n\nfunction p2c (p) { return [p.x, p.y] }\n\nexport default class OL3Parser {\n  /**\n   * OpenLayers Geometry parser and writer\n   * @param {GeometryFactory} geometryFactory\n   * @param {ol} olReference\n   */\n  constructor (geometryFactory, olReference) {\n    this.geometryFactory = geometryFactory || new GeometryFactory()\n    this.ol = olReference || (typeof ol !== 'undefined' && ol)\n  }\n\n  /**\n   * Inject OpenLayers geom classes\n   */\n  inject (Point, LineString, LinearRing, Polygon, MultiPoint, MultiLineString, MultiPolygon, GeometryCollection) {\n    this.ol = {\n      geom: {\n        Point, LineString, LinearRing, Polygon, MultiPoint, MultiLineString, MultiPolygon, GeometryCollection\n      }\n    }\n  }\n\n  /**\n   * @param geometry {ol.geom.Geometry}\n   * @return {Geometry}\n   * @memberof module:org/locationtech/jts/io/OL3Parser#\n   */\n  read (geometry) {\n    const ol = this.ol\n    if (geometry instanceof ol.geom.Point) {\n      return this.convertFromPoint(geometry)\n    } else if (geometry instanceof ol.geom.LineString) {\n      return this.convertFromLineString(geometry)\n    } else if (geometry instanceof ol.geom.LinearRing) {\n      return this.convertFromLinearRing(geometry)\n    } else if (geometry instanceof ol.geom.Polygon) {\n      return this.convertFromPolygon(geometry)\n    } else if (geometry instanceof ol.geom.MultiPoint) {\n      return this.convertFromMultiPoint(geometry)\n    } else if (geometry instanceof ol.geom.MultiLineString) {\n      return this.convertFromMultiLineString(geometry)\n    } else if (geometry instanceof ol.geom.MultiPolygon) {\n      return this.convertFromMultiPolygon(geometry)\n    } else if (geometry instanceof ol.geom.GeometryCollection) {\n      return this.convertFromCollection(geometry)\n    }\n  }\n\n  convertFromPoint (point) {\n    const coordinates = point.getCoordinates()\n    return this.geometryFactory.createPoint(new Coordinate(coordinates[0], coordinates[1]))\n  }\n\n  convertFromLineString (lineString) {\n    return this.geometryFactory.createLineString(lineString.getCoordinates().map(function (coordinates) {\n      return new Coordinate(coordinates[0], coordinates[1])\n    }))\n  }\n\n  convertFromLinearRing (linearRing) {\n    return this.geometryFactory.createLinearRing(linearRing.getCoordinates().map(function (coordinates) {\n      return new Coordinate(coordinates[0], coordinates[1])\n    }))\n  }\n\n  convertFromPolygon (polygon) {\n    const linearRings = polygon.getLinearRings()\n    let shell = null\n    const holes = []\n    for (let i = 0; i < linearRings.length; i++) {\n      const linearRing = this.convertFromLinearRing(linearRings[i])\n      if (i === 0) {\n        shell = linearRing\n      } else {\n        holes.push(linearRing)\n      }\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  }\n\n  convertFromMultiPoint (multiPoint) {\n    const points = multiPoint.getPoints().map(function (point) {\n      return this.convertFromPoint(point)\n    }, this)\n    return this.geometryFactory.createMultiPoint(points)\n  }\n\n  convertFromMultiLineString (multiLineString) {\n    const lineStrings = multiLineString.getLineStrings().map(function (lineString) {\n      return this.convertFromLineString(lineString)\n    }, this)\n    return this.geometryFactory.createMultiLineString(lineStrings)\n  }\n\n  convertFromMultiPolygon (multiPolygon) {\n    const polygons = multiPolygon.getPolygons().map(function (polygon) {\n      return this.convertFromPolygon(polygon)\n    }, this)\n    return this.geometryFactory.createMultiPolygon(polygons)\n  }\n\n  convertFromCollection (collection) {\n    const geometries = collection.getGeometries().map(function (geometry) {\n      return this.read(geometry)\n    }, this)\n    return this.geometryFactory.createGeometryCollection(geometries)\n  }\n\n  /**\n   * @param geometry\n   *          {Geometry}\n   * @return {ol.geom.Geometry}\n   * @memberof module:org/locationtech/jts/io/OL3Parser#\n   */\n  write (geometry) {\n    if (geometry.getGeometryType() === 'Point') {\n      return this.convertToPoint(geometry.getCoordinate())\n    } else if (geometry.getGeometryType() === 'LineString') {\n      return this.convertToLineString(geometry)\n    } else if (geometry.getGeometryType() === 'LinearRing') {\n      return this.convertToLinearRing(geometry)\n    } else if (geometry.getGeometryType() === 'Polygon') {\n      return this.convertToPolygon(geometry)\n    } else if (geometry.getGeometryType() === 'MultiPoint') {\n      return this.convertToMultiPoint(geometry)\n    } else if (geometry.getGeometryType() === 'MultiLineString') {\n      return this.convertToMultiLineString(geometry)\n    } else if (geometry.getGeometryType() === 'MultiPolygon') {\n      return this.convertToMultiPolygon(geometry)\n    } else if (geometry.getGeometryType() === 'GeometryCollection') {\n      return this.convertToCollection(geometry)\n    }\n  }\n\n  convertToPoint (coordinate) {\n    return new this.ol.geom.Point([coordinate.x, coordinate.y])\n  }\n\n  convertToLineString (lineString) {\n    const points = lineString._points._coordinates.map(p2c)\n    return new this.ol.geom.LineString(points)\n  }\n\n  convertToLinearRing (linearRing) {\n    const points = linearRing._points._coordinates.map(p2c)\n    return new this.ol.geom.LinearRing(points)\n  }\n\n  convertToPolygon (polygon) {\n    const rings = [polygon._shell._points._coordinates.map(p2c)]\n    for (let i = 0; i < polygon._holes.length; i++) {\n      rings.push(polygon._holes[i]._points._coordinates.map(p2c))\n    }\n    return new this.ol.geom.Polygon(rings)\n  }\n\n  convertToMultiPoint (multiPoint) {\n    return new this.ol.geom.MultiPoint(multiPoint.getCoordinates().map(p2c))\n  }\n\n  convertToMultiLineString (multiLineString) {\n    const lineStrings = []\n    for (let i = 0; i < multiLineString._geometries.length; i++) {\n      lineStrings.push(this.convertToLineString(multiLineString._geometries[i]).getCoordinates())\n    }\n    return new this.ol.geom.MultiLineString(lineStrings)\n  }\n\n  convertToMultiPolygon (multiPolygon) {\n    const polygons = []\n    for (let i = 0; i < multiPolygon._geometries.length; i++) {\n      polygons.push(this.convertToPolygon(multiPolygon._geometries[i]).getCoordinates())\n    }\n    return new this.ol.geom.MultiPolygon(polygons)\n  }\n\n  convertToCollection (geometryCollection) {\n    const geometries = []\n    for (let i = 0; i < geometryCollection._geometries.length; i++) {\n      const geometry = geometryCollection._geometries[i]\n      geometries.push(this.write(geometry))\n    }\n    return new this.ol.geom.GeometryCollection(geometries)\n  }\n}\n","/**\n * @module org/locationtech/jts/io/GeoJSONReader\n */\n\nimport GeometryFactory from '../geom/GeometryFactory'\nimport GeoJSONParser from './GeoJSONParser'\n\n/**\n * Converts a geometry in GeoJSON to a {@link Geometry}.\n */\nexport default class GeoJSONReader {\n  /**\n   * A <code>GeoJSONReader</code> is parameterized by a <code>GeometryFactory</code>,\n   * to allow it to create <code>Geometry</code> objects of the appropriate\n   * implementation. In particular, the <code>GeometryFactory</code> determines\n   * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\n   *\n   * @param {GeometryFactory} geometryFactory\n   */\n  constructor (geometryFactory) {\n    this.parser = new GeoJSONParser(geometryFactory || new GeometryFactory())\n  }\n\n  /**\n   * Reads a GeoJSON representation of a {@link Geometry}\n   *\n   * Will also parse GeoJSON Features/FeatureCollections as custom objects.\n   *\n   * @param {Object|String} geoJson a GeoJSON Object or String.\n   * @return {Geometry|Object} a <code>Geometry or Feature/FeatureCollection representation.</code>\n   * @memberof module:org/locationtech/jts/io/GeoJSONReader#\n   */\n  read (geoJson) {\n    const geometry = this.parser.read(geoJson)\n    return geometry\n  }\n}\n","/**\n * @module org/locationtech/jts/io/GeoJSONWriter\n */\n\nimport GeoJSONParser from './GeoJSONParser'\n\n/**\n * Writes the GeoJSON representation of a {@link Geometry}. The\n * The GeoJSON format is defined <A\n * HREF=\"http://geojson.org/geojson-spec.html\">here</A>.\n */\nexport default class GeoJSONWriter {\n  /**\n   * The <code>GeoJSONWriter</code> outputs coordinates rounded to the precision\n   * model. Only the maximum number of decimal places necessary to represent the\n   * ordinates to the required precision will be output.\n   *\n   * @param {GeometryFactory} geometryFactory\n   * @constructor\n   */\n  constructor () {\n    this.parser = new GeoJSONParser(this.geometryFactory)\n  }\n\n  /**\n   * Converts a <code>Geometry</code> to its GeoJSON representation.\n   *\n   * @param {Geometry}\n   *          geometry a <code>Geometry</code> to process.\n   * @return {Object} The GeoJSON representation of the Geometry.\n   * @memberof module:org/locationtech/jts/io/GeoJSONWriter#\n   */\n  write (geometry) {\n    return this.parser.write(geometry)\n  }\n}\n","/**\n * @module org/locationtech/jts/io/WKTReader\n */\n\nimport GeometryFactory from '../geom/GeometryFactory'\nimport WKTParser from './WKTParser'\n\n/**\n * Converts a geometry in Well-Known Text format to a {@link Geometry}.\n * <p>\n * <code>WKTReader</code> supports extracting <code>Geometry</code> objects\n * from either {@link Reader}s or {@link String}s. This allows it to function\n * as a parser to read <code>Geometry</code> objects from text blocks embedded\n * in other data formats (e.g. XML).\n */\n\nexport default class WKTReader {\n  /**\n   * A <code>WKTReader</code> is parameterized by a <code>GeometryFactory</code>,\n   * to allow it to create <code>Geometry</code> objects of the appropriate\n   * implementation. In particular, the <code>GeometryFactory</code> determines\n   * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\n   * @param {GeometryFactory} geometryFactory\n   */\n  constructor (geometryFactory) {\n    this.parser = new WKTParser(geometryFactory || new GeometryFactory())\n  }\n\n  /**\n   * Reads a Well-Known Text representation of a {@link Geometry}\n   *\n   * @param {string}\n   *          wkt a <Geometry Tagged Text> string (see the OpenGIS Simple Features\n   *          Specification).\n   * @return {Geometry} a <code>Geometry</code> read from\n   *         <code>string.</code>\n   * @memberof module:org/locationtech/jts/io/WKTReader#\n   */\n  read (wkt) {\n    var geometry = this.parser.read(wkt)\n    return geometry\n  }\n}\n","import Assert from '../util/Assert'\nexport default class SegmentPointComparator {\n  constructor () {\n    SegmentPointComparator.constructor_.apply(this, arguments)\n  }\n\n  static relativeSign (x0, x1) {\n    if (x0 < x1) return -1\n    if (x0 > x1) return 1\n    return 0\n  }\n\n  static compare (octant, p0, p1) {\n    if (p0.equals2D(p1)) return 0\n    const xSign = SegmentPointComparator.relativeSign(p0.x, p1.x)\n    const ySign = SegmentPointComparator.relativeSign(p0.y, p1.y)\n    switch (octant) {\n      case 0:\n        return SegmentPointComparator.compareValue(xSign, ySign)\n      case 1:\n        return SegmentPointComparator.compareValue(ySign, xSign)\n      case 2:\n        return SegmentPointComparator.compareValue(ySign, -xSign)\n      case 3:\n        return SegmentPointComparator.compareValue(-xSign, ySign)\n      case 4:\n        return SegmentPointComparator.compareValue(-xSign, -ySign)\n      case 5:\n        return SegmentPointComparator.compareValue(-ySign, -xSign)\n      case 6:\n        return SegmentPointComparator.compareValue(-ySign, xSign)\n      case 7:\n        return SegmentPointComparator.compareValue(xSign, -ySign)\n    }\n    Assert.shouldNeverReachHere('invalid octant value')\n    return 0\n  }\n\n  static compareValue (compareSign0, compareSign1) {\n    if (compareSign0 < 0) return -1\n    if (compareSign0 > 0) return 1\n    if (compareSign1 < 0) return -1\n    if (compareSign1 > 0) return 1\n    return 0\n  }\n\n  getClass () {\n    return SegmentPointComparator\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nSegmentPointComparator.constructor_ = function () {}\n","import Coordinate from '../geom/Coordinate'\nimport SegmentPointComparator from './SegmentPointComparator'\nimport Comparable from '../../../../java/lang/Comparable'\nexport default class SegmentNode {\n  constructor () {\n    SegmentNode.constructor_.apply(this, arguments)\n  }\n\n  getCoordinate () {\n    return this.coord\n  }\n\n  print (out) {\n    out.print(this.coord)\n    out.print(' seg # = ' + this.segmentIndex)\n  }\n\n  compareTo (obj) {\n    const other = obj\n    if (this.segmentIndex < other.segmentIndex) return -1\n    if (this.segmentIndex > other.segmentIndex) return 1\n    if (this.coord.equals2D(other.coord)) return 0\n    return SegmentPointComparator.compare(this._segmentOctant, this.coord, other.coord)\n  }\n\n  isEndPoint (maxSegmentIndex) {\n    if (this.segmentIndex === 0 && !this._isInterior) return true\n    if (this.segmentIndex === maxSegmentIndex) return true\n    return false\n  }\n\n  isInterior () {\n    return this._isInterior\n  }\n\n  getClass () {\n    return SegmentNode\n  }\n\n  get interfaces_ () {\n    return [Comparable]\n  }\n}\nSegmentNode.constructor_ = function () {\n  this._segString = null\n  this.coord = null\n  this.segmentIndex = null\n  this._segmentOctant = null\n  this._isInterior = null\n  const segString = arguments[0]; const coord = arguments[1]; const segmentIndex = arguments[2]; const segmentOctant = arguments[3]\n  this._segString = segString\n  this.coord = new Coordinate(coord)\n  this.segmentIndex = segmentIndex\n  this._segmentOctant = segmentOctant\n  this._isInterior = !coord.equals2D(segString.getCoordinate(segmentIndex))\n}\n","import CoordinateList from '../geom/CoordinateList'\nimport SegmentNode from './SegmentNode'\nimport Iterator from '../../../../java/util/Iterator'\nimport Coordinate from '../geom/Coordinate'\nimport NodedSegmentString from './NodedSegmentString'\nimport Integer from '../../../../java/lang/Integer'\nimport UnsupportedOperationException from '../../../../java/lang/UnsupportedOperationException'\nimport ArrayList from '../../../../java/util/ArrayList'\nimport RuntimeException from '../../../../java/lang/RuntimeException'\nimport Assert from '../util/Assert'\nimport TreeMap from '../../../../java/util/TreeMap'\nexport default class SegmentNodeList {\n  constructor () {\n    SegmentNodeList.constructor_.apply(this, arguments)\n  }\n\n  getSplitCoordinates () {\n    const coordList = new CoordinateList()\n    this.addEndpoints()\n    const it = this.iterator()\n    let eiPrev = it.next()\n    while (it.hasNext()) {\n      const ei = it.next()\n      this.addEdgeCoordinates(eiPrev, ei, coordList)\n      eiPrev = ei\n    }\n    return coordList.toCoordinateArray()\n  }\n\n  addCollapsedNodes () {\n    const collapsedVertexIndexes = new ArrayList()\n    this.findCollapsesFromInsertedNodes(collapsedVertexIndexes)\n    this.findCollapsesFromExistingVertices(collapsedVertexIndexes)\n    for (let it = collapsedVertexIndexes.iterator(); it.hasNext();) {\n      const vertexIndex = it.next().intValue()\n      this.add(this._edge.getCoordinate(vertexIndex), vertexIndex)\n    }\n  }\n\n  print (out) {\n    out.println('Intersections:')\n    for (let it = this.iterator(); it.hasNext();) {\n      const ei = it.next()\n      ei.print(out)\n    }\n  }\n\n  findCollapsesFromExistingVertices (collapsedVertexIndexes) {\n    for (let i = 0; i < this._edge.size() - 2; i++) {\n      const p0 = this._edge.getCoordinate(i)\n      const p1 = this._edge.getCoordinate(i + 1)\n      const p2 = this._edge.getCoordinate(i + 2)\n      if (p0.equals2D(p2)) {\n        collapsedVertexIndexes.add(new Integer(i + 1))\n      }\n    }\n  }\n\n  addEdgeCoordinates (ei0, ei1, coordList) {\n    let npts = ei1.segmentIndex - ei0.segmentIndex + 2\n    const lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex)\n    const useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt)\n    if (!useIntPt1) {\n      npts--\n    }\n    const ipt = 0\n    coordList.add(new Coordinate(ei0.coord), false)\n    for (let i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n      coordList.add(this._edge.getCoordinate(i))\n    }\n    if (useIntPt1) {\n      coordList.add(new Coordinate(ei1.coord))\n    }\n  }\n\n  iterator () {\n    return this._nodeMap.values().iterator()\n  }\n\n  addSplitEdges (edgeList) {\n    this.addEndpoints()\n    this.addCollapsedNodes()\n    const it = this.iterator()\n    let eiPrev = it.next()\n    while (it.hasNext()) {\n      const ei = it.next()\n      const newEdge = this.createSplitEdge(eiPrev, ei)\n      edgeList.add(newEdge)\n      eiPrev = ei\n    }\n  }\n\n  findCollapseIndex (ei0, ei1, collapsedVertexIndex) {\n    if (!ei0.coord.equals2D(ei1.coord)) return false\n    let numVerticesBetween = ei1.segmentIndex - ei0.segmentIndex\n    if (!ei1.isInterior()) {\n      numVerticesBetween--\n    }\n    if (numVerticesBetween === 1) {\n      collapsedVertexIndex[0] = ei0.segmentIndex + 1\n      return true\n    }\n    return false\n  }\n\n  findCollapsesFromInsertedNodes (collapsedVertexIndexes) {\n    const collapsedVertexIndex = new Array(1).fill(null)\n    const it = this.iterator()\n    let eiPrev = it.next()\n    while (it.hasNext()) {\n      const ei = it.next()\n      const isCollapsed = this.findCollapseIndex(eiPrev, ei, collapsedVertexIndex)\n      if (isCollapsed) collapsedVertexIndexes.add(new Integer(collapsedVertexIndex[0]))\n      eiPrev = ei\n    }\n  }\n\n  getEdge () {\n    return this._edge\n  }\n\n  addEndpoints () {\n    const maxSegIndex = this._edge.size() - 1\n    this.add(this._edge.getCoordinate(0), 0)\n    this.add(this._edge.getCoordinate(maxSegIndex), maxSegIndex)\n  }\n\n  createSplitEdge (ei0, ei1) {\n    let npts = ei1.segmentIndex - ei0.segmentIndex + 2\n    const lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex)\n    const useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt)\n    if (!useIntPt1) {\n      npts--\n    }\n    const pts = new Array(npts).fill(null)\n    let ipt = 0\n    pts[ipt++] = new Coordinate(ei0.coord)\n    for (let i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n      pts[ipt++] = this._edge.getCoordinate(i)\n    }\n    if (useIntPt1) pts[ipt] = new Coordinate(ei1.coord)\n    return new NodedSegmentString(pts, this._edge.getData())\n  }\n\n  add (intPt, segmentIndex) {\n    const eiNew = new SegmentNode(this._edge, intPt, segmentIndex, this._edge.getSegmentOctant(segmentIndex))\n    const ei = this._nodeMap.get(eiNew)\n    if (ei !== null) {\n      Assert.isTrue(ei.coord.equals2D(intPt), 'Found equal nodes with different coordinates')\n      return ei\n    }\n    this._nodeMap.put(eiNew, eiNew)\n    return eiNew\n  }\n\n  checkSplitEdgesCorrectness (splitEdges) {\n    const edgePts = this._edge.getCoordinates()\n    const split0 = splitEdges.get(0)\n    const pt0 = split0.getCoordinate(0)\n    if (!pt0.equals2D(edgePts[0])) throw new RuntimeException('bad split edge start point at ' + pt0)\n    const splitn = splitEdges.get(splitEdges.size() - 1)\n    const splitnPts = splitn.getCoordinates()\n    const ptn = splitnPts[splitnPts.length - 1]\n    if (!ptn.equals2D(edgePts[edgePts.length - 1])) throw new RuntimeException('bad split edge end point at ' + ptn)\n  }\n\n  getClass () {\n    return SegmentNodeList\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nSegmentNodeList.constructor_ = function () {\n  this._nodeMap = new TreeMap()\n  this._edge = null\n  const edge = arguments[0]\n  this._edge = edge\n}\nclass NodeVertexIterator {\n  constructor () {\n    NodeVertexIterator.constructor_.apply(this, arguments)\n  }\n\n  next () {\n    if (this._currNode === null) {\n      this._currNode = this._nextNode\n      this._currSegIndex = this._currNode.segmentIndex\n      this.readNextNode()\n      return this._currNode\n    }\n    if (this._nextNode === null) return null\n    if (this._nextNode.segmentIndex === this._currNode.segmentIndex) {\n      this._currNode = this._nextNode\n      this._currSegIndex = this._currNode.segmentIndex\n      this.readNextNode()\n      return this._currNode\n    }\n    if (this._nextNode.segmentIndex > this._currNode.segmentIndex) {}\n    return null\n  }\n\n  remove () {\n    throw new UnsupportedOperationException(this.getClass().getName())\n  }\n\n  hasNext () {\n    if (this._nextNode === null) return false\n    return true\n  }\n\n  readNextNode () {\n    if (this._nodeIt.hasNext()) this._nextNode = this._nodeIt.next(); else this._nextNode = null\n  }\n\n  getClass () {\n    return NodeVertexIterator\n  }\n\n  get interfaces_ () {\n    return [Iterator]\n  }\n}\nNodeVertexIterator.constructor_ = function () {\n  this._nodeList = null\n  this._edge = null\n  this._nodeIt = null\n  this._currNode = null\n  this._nextNode = null\n  this._currSegIndex = 0\n  const nodeList = arguments[0]\n  this._nodeList = nodeList\n  this._edge = nodeList.getEdge()\n  this._nodeIt = nodeList.iterator()\n  this.readNextNode()\n}\n","import Coordinate from '../geom/Coordinate'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException'\nexport default class Octant {\n  constructor () {\n    Octant.constructor_.apply(this, arguments)\n  }\n\n  static octant () {\n    if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n      const dx = arguments[0]; const dy = arguments[1]\n      if (dx === 0.0 && dy === 0.0) throw new IllegalArgumentException('Cannot compute the octant for point ( ' + dx + ', ' + dy + ' )')\n      const adx = Math.abs(dx)\n      const ady = Math.abs(dy)\n      if (dx >= 0) {\n        if (dy >= 0) {\n          if (adx >= ady) return 0; else return 1\n        } else {\n          if (adx >= ady) return 7; else return 6\n        }\n      } else {\n        if (dy >= 0) {\n          if (adx >= ady) return 3; else return 2\n        } else {\n          if (adx >= ady) return 4; else return 5\n        }\n      }\n    } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n      const p0 = arguments[0]; const p1 = arguments[1]\n      const dx = p1.x - p0.x\n      const dy = p1.y - p0.y\n      if (dx === 0.0 && dy === 0.0) throw new IllegalArgumentException('Cannot compute the octant for two identical points ' + p0)\n      return Octant.octant(dx, dy)\n    }\n  }\n\n  getClass () {\n    return Octant\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nOctant.constructor_ = function () {}\n","export default class SegmentString {\n  constructor () {\n    SegmentString.constructor_.apply(this, arguments)\n  }\n\n  getCoordinates () {}\n  size () {}\n  getCoordinate (i) {}\n  isClosed () {}\n  setData (data) {}\n  getData () {}\n  getClass () {\n    return SegmentString\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nSegmentString.constructor_ = function () {}\n","import SegmentString from './SegmentString'\nexport default class NodableSegmentString {\n  constructor () {\n    NodableSegmentString.constructor_.apply(this, arguments)\n  }\n\n  addIntersection (intPt, segmentIndex) {}\n  getClass () {\n    return NodableSegmentString\n  }\n\n  get interfaces_ () {\n    return [SegmentString]\n  }\n}\nNodableSegmentString.constructor_ = function () {}\n","import SegmentNodeList from './SegmentNodeList'\nimport WKTWriter from '../io/WKTWriter'\nimport CoordinateArraySequence from '../geom/impl/CoordinateArraySequence'\nimport Coordinate from '../geom/Coordinate'\nimport Octant from './Octant'\nimport ArrayList from '../../../../java/util/ArrayList'\nimport NodableSegmentString from './NodableSegmentString'\nexport default class NodedSegmentString {\n  constructor () {\n    NodedSegmentString.constructor_.apply(this, arguments)\n  }\n\n  static getNodedSubstrings () {\n    if (arguments.length === 1) {\n      const segStrings = arguments[0]\n      const resultEdgelist = new ArrayList()\n      NodedSegmentString.getNodedSubstrings(segStrings, resultEdgelist)\n      return resultEdgelist\n    } else if (arguments.length === 2) {\n      const segStrings = arguments[0]; const resultEdgelist = arguments[1]\n      for (let i = segStrings.iterator(); i.hasNext();) {\n        const ss = i.next()\n        ss.getNodeList().addSplitEdges(resultEdgelist)\n      }\n    }\n  }\n\n  getCoordinates () {\n    return this._pts\n  }\n\n  size () {\n    return this._pts.length\n  }\n\n  getCoordinate (i) {\n    return this._pts[i]\n  }\n\n  isClosed () {\n    return this._pts[0].equals(this._pts[this._pts.length - 1])\n  }\n\n  getSegmentOctant (index) {\n    if (index === this._pts.length - 1) return -1\n    return this.safeOctant(this.getCoordinate(index), this.getCoordinate(index + 1))\n  }\n\n  setData (data) {\n    this._data = data\n  }\n\n  safeOctant (p0, p1) {\n    if (p0.equals2D(p1)) return 0\n    return Octant.octant(p0, p1)\n  }\n\n  getData () {\n    return this._data\n  }\n\n  addIntersection () {\n    if (arguments.length === 2) {\n      const intPt = arguments[0]; const segmentIndex = arguments[1]\n      this.addIntersectionNode(intPt, segmentIndex)\n    } else if (arguments.length === 4) {\n      const li = arguments[0]; const segmentIndex = arguments[1]; const geomIndex = arguments[2]; const intIndex = arguments[3]\n      const intPt = new Coordinate(li.getIntersection(intIndex))\n      this.addIntersection(intPt, segmentIndex)\n    }\n  }\n\n  toString () {\n    return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n  }\n\n  getNodeList () {\n    return this._nodeList\n  }\n\n  addIntersectionNode (intPt, segmentIndex) {\n    let normalizedSegmentIndex = segmentIndex\n    const nextSegIndex = normalizedSegmentIndex + 1\n    if (nextSegIndex < this._pts.length) {\n      const nextPt = this._pts[nextSegIndex]\n      if (intPt.equals2D(nextPt)) {\n        normalizedSegmentIndex = nextSegIndex\n      }\n    }\n    const ei = this._nodeList.add(intPt, normalizedSegmentIndex)\n    return ei\n  }\n\n  addIntersections (li, segmentIndex, geomIndex) {\n    for (let i = 0; i < li.getIntersectionNum(); i++) {\n      this.addIntersection(li, segmentIndex, geomIndex, i)\n    }\n  }\n\n  getClass () {\n    return NodedSegmentString\n  }\n\n  get interfaces_ () {\n    return [NodableSegmentString]\n  }\n}\nNodedSegmentString.constructor_ = function () {\n  this._nodeList = new SegmentNodeList(this)\n  this._pts = null\n  this._data = null\n  const pts = arguments[0]; const data = arguments[1]\n  this._pts = pts\n  this._data = data\n}\n","import LineSegment from '../../geom/LineSegment'\nexport default class MonotoneChainOverlapAction {\n  constructor () {\n    MonotoneChainOverlapAction.constructor_.apply(this, arguments)\n  }\n\n  overlap () {\n    if (arguments.length === 2) {\n      const seg1 = arguments[0]; const seg2 = arguments[1]\n    } else if (arguments.length === 4) {\n      const mc1 = arguments[0]; const start1 = arguments[1]; const mc2 = arguments[2]; const start2 = arguments[3]\n      mc1.getLineSegment(start1, this._overlapSeg1)\n      mc2.getLineSegment(start2, this._overlapSeg2)\n      this.overlap(this._overlapSeg1, this._overlapSeg2)\n    }\n  }\n\n  getClass () {\n    return MonotoneChainOverlapAction\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nMonotoneChainOverlapAction.constructor_ = function () {\n  this._overlapSeg1 = new LineSegment()\n  this._overlapSeg2 = new LineSegment()\n}\n","import Envelope from '../../geom/Envelope'\nexport default class MonotoneChain {\n  constructor () {\n    MonotoneChain.constructor_.apply(this, arguments)\n  }\n\n  getLineSegment (index, ls) {\n    ls.p0 = this._pts[index]\n    ls.p1 = this._pts[index + 1]\n  }\n\n  computeSelect (searchEnv, start0, end0, mcs) {\n    const p0 = this._pts[start0]\n    const p1 = this._pts[end0]\n    if (end0 - start0 === 1) {\n      mcs.select(this, start0)\n      return null\n    }\n    if (!searchEnv.intersects(p0, p1)) return null\n    const mid = Math.trunc((start0 + end0) / 2)\n    if (start0 < mid) {\n      this.computeSelect(searchEnv, start0, mid, mcs)\n    }\n    if (mid < end0) {\n      this.computeSelect(searchEnv, mid, end0, mcs)\n    }\n  }\n\n  getCoordinates () {\n    const coord = new Array(this._end - this._start + 1).fill(null)\n    let index = 0\n    for (let i = this._start; i <= this._end; i++) {\n      coord[index++] = this._pts[i]\n    }\n    return coord\n  }\n\n  computeOverlaps () {\n    if (arguments.length === 2) {\n      const mc = arguments[0]; const mco = arguments[1]\n      this.computeOverlaps(this._start, this._end, mc, mc._start, mc._end, mco)\n    } else if (arguments.length === 6) {\n      const start0 = arguments[0]; const end0 = arguments[1]; const mc = arguments[2]; const start1 = arguments[3]; const end1 = arguments[4]; const mco = arguments[5]\n      if (end0 - start0 === 1 && end1 - start1 === 1) {\n        mco.overlap(this, start0, mc, start1)\n        return null\n      }\n      if (!this.overlaps(start0, end0, mc, start1, end1)) return null\n      const mid0 = Math.trunc((start0 + end0) / 2)\n      const mid1 = Math.trunc((start1 + end1) / 2)\n      if (start0 < mid0) {\n        if (start1 < mid1) this.computeOverlaps(start0, mid0, mc, start1, mid1, mco)\n        if (mid1 < end1) this.computeOverlaps(start0, mid0, mc, mid1, end1, mco)\n      }\n      if (mid0 < end0) {\n        if (start1 < mid1) this.computeOverlaps(mid0, end0, mc, start1, mid1, mco)\n        if (mid1 < end1) this.computeOverlaps(mid0, end0, mc, mid1, end1, mco)\n      }\n    }\n  }\n\n  setId (id) {\n    this._id = id\n  }\n\n  select (searchEnv, mcs) {\n    this.computeSelect(searchEnv, this._start, this._end, mcs)\n  }\n\n  getEnvelope () {\n    if (this._env === null) {\n      const p0 = this._pts[this._start]\n      const p1 = this._pts[this._end]\n      this._env = new Envelope(p0, p1)\n    }\n    return this._env\n  }\n\n  overlaps (start0, end0, mc, start1, end1) {\n    return Envelope.intersects(this._pts[start0], this._pts[end0], mc._pts[start1], mc._pts[end1])\n  }\n\n  getEndIndex () {\n    return this._end\n  }\n\n  getStartIndex () {\n    return this._start\n  }\n\n  getContext () {\n    return this._context\n  }\n\n  getId () {\n    return this._id\n  }\n\n  getClass () {\n    return MonotoneChain\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nMonotoneChain.constructor_ = function () {\n  this._pts = null\n  this._start = null\n  this._end = null\n  this._env = null\n  this._context = null\n  this._id = null\n  const pts = arguments[0]; const start = arguments[1]; const end = arguments[2]; const context = arguments[3]\n  this._pts = pts\n  this._start = start\n  this._end = end\n  this._context = context\n}\n","import MonotoneChain from './MonotoneChain'\nimport Integer from '../../../../../java/lang/Integer'\nimport ArrayList from '../../../../../java/util/ArrayList'\nimport Quadrant from '../../geomgraph/Quadrant'\nexport default class MonotoneChainBuilder {\n  constructor () {\n    MonotoneChainBuilder.constructor_.apply(this, arguments)\n  }\n\n  static getChainStartIndices (pts) {\n    let start = 0\n    const startIndexList = new ArrayList()\n    startIndexList.add(new Integer(start))\n    do {\n      const last = MonotoneChainBuilder.findChainEnd(pts, start)\n      startIndexList.add(new Integer(last))\n      start = last\n    } while (start < pts.length - 1)\n    const startIndex = MonotoneChainBuilder.toIntArray(startIndexList)\n    return startIndex\n  }\n\n  static findChainEnd (pts, start) {\n    let safeStart = start\n    while (safeStart < pts.length - 1 && pts[safeStart].equals2D(pts[safeStart + 1])) {\n      safeStart++\n    }\n    if (safeStart >= pts.length - 1) {\n      return pts.length - 1\n    }\n    const chainQuad = Quadrant.quadrant(pts[safeStart], pts[safeStart + 1])\n    let last = start + 1\n    while (last < pts.length) {\n      if (!pts[last - 1].equals2D(pts[last])) {\n        const quad = Quadrant.quadrant(pts[last - 1], pts[last])\n        if (quad !== chainQuad) break\n      }\n      last++\n    }\n    return last - 1\n  }\n\n  static getChains () {\n    if (arguments.length === 1) {\n      const pts = arguments[0]\n      return MonotoneChainBuilder.getChains(pts, null)\n    } else if (arguments.length === 2) {\n      const pts = arguments[0]; const context = arguments[1]\n      const mcList = new ArrayList()\n      const startIndex = MonotoneChainBuilder.getChainStartIndices(pts)\n      for (let i = 0; i < startIndex.length - 1; i++) {\n        const mc = new MonotoneChain(pts, startIndex[i], startIndex[i + 1], context)\n        mcList.add(mc)\n      }\n      return mcList\n    }\n  }\n\n  static toIntArray (list) {\n    const array = new Array(list.size()).fill(null)\n    for (let i = 0; i < array.length; i++) {\n      array[i] = list.get(i).intValue()\n    }\n    return array\n  }\n\n  getClass () {\n    return MonotoneChainBuilder\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nMonotoneChainBuilder.constructor_ = function () {}\n","export default class Noder {\n  constructor () {\n    Noder.constructor_.apply(this, arguments)\n  }\n\n  computeNodes (segStrings) {}\n  getNodedSubstrings () {}\n  getClass () {\n    return Noder\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nNoder.constructor_ = function () {}\n","import Noder from './Noder'\nexport default class SinglePassNoder {\n  constructor () {\n    SinglePassNoder.constructor_.apply(this, arguments)\n  }\n\n  setSegmentIntersector (segInt) {\n    this._segInt = segInt\n  }\n\n  getClass () {\n    return SinglePassNoder\n  }\n\n  get interfaces_ () {\n    return [Noder]\n  }\n}\nSinglePassNoder.constructor_ = function () {\n  this._segInt = null\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    const segInt = arguments[0]\n    this.setSegmentIntersector(segInt)\n  }\n}\n","import STRtree from '../index/strtree/STRtree'\nimport NodedSegmentString from './NodedSegmentString'\nimport MonotoneChainOverlapAction from '../index/chain/MonotoneChainOverlapAction'\nimport MonotoneChainBuilder from '../index/chain/MonotoneChainBuilder'\nimport ArrayList from '../../../../java/util/ArrayList'\nimport SinglePassNoder from './SinglePassNoder'\nexport default class MCIndexNoder extends SinglePassNoder {\n  constructor () {\n    super()\n    MCIndexNoder.constructor_.apply(this, arguments)\n  }\n\n  getMonotoneChains () {\n    return this._monoChains\n  }\n\n  getNodedSubstrings () {\n    return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n  }\n\n  getIndex () {\n    return this._index\n  }\n\n  add (segStr) {\n    const segChains = MonotoneChainBuilder.getChains(segStr.getCoordinates(), segStr)\n    for (let i = segChains.iterator(); i.hasNext();) {\n      const mc = i.next()\n      mc.setId(this._idCounter++)\n      this._index.insert(mc.getEnvelope(), mc)\n      this._monoChains.add(mc)\n    }\n  }\n\n  computeNodes (inputSegStrings) {\n    this._nodedSegStrings = inputSegStrings\n    for (let i = inputSegStrings.iterator(); i.hasNext();) {\n      this.add(i.next())\n    }\n    this.intersectChains()\n  }\n\n  intersectChains () {\n    const overlapAction = new SegmentOverlapAction(this._segInt)\n    for (let i = this._monoChains.iterator(); i.hasNext();) {\n      const queryChain = i.next()\n      const overlapChains = this._index.query(queryChain.getEnvelope())\n      for (let j = overlapChains.iterator(); j.hasNext();) {\n        const testChain = j.next()\n        if (testChain.getId() > queryChain.getId()) {\n          queryChain.computeOverlaps(testChain, overlapAction)\n          this._nOverlaps++\n        }\n        if (this._segInt.isDone()) return null\n      }\n    }\n  }\n\n  getClass () {\n    return MCIndexNoder\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nclass SegmentOverlapAction extends MonotoneChainOverlapAction {\n  constructor () {\n    super()\n    SegmentOverlapAction.constructor_.apply(this, arguments)\n  }\n\n  overlap () {\n    if (arguments.length === 4) {\n      const mc1 = arguments[0]; const start1 = arguments[1]; const mc2 = arguments[2]; const start2 = arguments[3]\n      const ss1 = mc1.getContext()\n      const ss2 = mc2.getContext()\n      this._si.processIntersections(ss1, start1, ss2, start2)\n    } else return super.overlap.apply(this, arguments)\n  }\n\n  getClass () {\n    return SegmentOverlapAction\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nSegmentOverlapAction.constructor_ = function () {\n  this._si = null\n  const si = arguments[0]\n  this._si = si\n}\nMCIndexNoder.SegmentOverlapAction = SegmentOverlapAction\nMCIndexNoder.constructor_ = function () {\n  this._monoChains = new ArrayList()\n  this._index = new STRtree()\n  this._idCounter = 0\n  this._nodedSegStrings = null\n  this._nOverlaps = 0\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    const si = arguments[0]\n    SinglePassNoder.constructor_.call(this, si)\n  }\n}\n","import hasInterface from '../../../../hasInterface'\nimport Collection from '../../../../java/util/Collection'\nimport Noder from './Noder'\nimport Coordinate from '../geom/Coordinate'\nimport NodedSegmentString from './NodedSegmentString'\nimport System from '../../../../java/lang/System'\nimport CoordinateArrays from '../geom/CoordinateArrays'\nimport ArrayList from '../../../../java/util/ArrayList'\nexport default class ScaledNoder {\n  constructor () {\n    ScaledNoder.constructor_.apply(this, arguments)\n  }\n\n  rescale () {\n    if (hasInterface(arguments[0], Collection)) {\n      const segStrings = arguments[0]\n      for (let i = segStrings.iterator(); i.hasNext();) {\n        const ss = i.next()\n        this.rescale(ss.getCoordinates())\n      }\n    } else if (arguments[0] instanceof Array) {\n      const pts = arguments[0]\n      let p0 = null\n      let p1 = null\n      if (pts.length === 2) {\n        p0 = new Coordinate(pts[0])\n        p1 = new Coordinate(pts[1])\n      }\n      for (let i = 0; i < pts.length; i++) {\n        pts[i].x = pts[i].x / this._scaleFactor + this._offsetX\n        pts[i].y = pts[i].y / this._scaleFactor + this._offsetY\n      }\n      if (pts.length === 2 && pts[0].equals2D(pts[1])) {\n        System.out.println(pts)\n      }\n    }\n  }\n\n  scale () {\n    if (hasInterface(arguments[0], Collection)) {\n      const segStrings = arguments[0]\n      const nodedSegmentStrings = new ArrayList(segStrings.size())\n      for (let i = segStrings.iterator(); i.hasNext();) {\n        const ss = i.next()\n        nodedSegmentStrings.add(new NodedSegmentString(this.scale(ss.getCoordinates()), ss.getData()))\n      }\n      return nodedSegmentStrings\n    } else if (arguments[0] instanceof Array) {\n      const pts = arguments[0]\n      const roundPts = new Array(pts.length).fill(null)\n      for (let i = 0; i < pts.length; i++) {\n        roundPts[i] = new Coordinate(Math.round((pts[i].x - this._offsetX) * this._scaleFactor), Math.round((pts[i].y - this._offsetY) * this._scaleFactor), pts[i].z)\n      }\n      const roundPtsNoDup = CoordinateArrays.removeRepeatedPoints(roundPts)\n      return roundPtsNoDup\n    }\n  }\n\n  isIntegerPrecision () {\n    return this._scaleFactor === 1.0\n  }\n\n  getNodedSubstrings () {\n    const splitSS = this._noder.getNodedSubstrings()\n    if (this._isScaled) this.rescale(splitSS)\n    return splitSS\n  }\n\n  computeNodes (inputSegStrings) {\n    let intSegStrings = inputSegStrings\n    if (this._isScaled) intSegStrings = this.scale(inputSegStrings)\n    this._noder.computeNodes(intSegStrings)\n  }\n\n  getClass () {\n    return ScaledNoder\n  }\n\n  get interfaces_ () {\n    return [Noder]\n  }\n}\nScaledNoder.constructor_ = function () {\n  this._noder = null\n  this._scaleFactor = null\n  this._offsetX = null\n  this._offsetY = null\n  this._isScaled = false\n  if (arguments.length === 2) {\n    const noder = arguments[0]; const scaleFactor = arguments[1]\n    ScaledNoder.constructor_.call(this, noder, scaleFactor, 0, 0)\n  } else if (arguments.length === 4) {\n    const noder = arguments[0]; const scaleFactor = arguments[1]; const offsetX = arguments[2]; const offsetY = arguments[3]\n    this._noder = noder\n    this._scaleFactor = scaleFactor\n    this._isScaled = !this.isIntegerPrecision()\n  }\n}\n","import TreeSet from '../../../../java/util/TreeSet'\nimport LineString from '../geom/LineString'\nimport hasInterface from '../../../../hasInterface'\nimport MultiPoint from '../geom/MultiPoint'\nimport GeometryGraph from '../geomgraph/GeometryGraph'\nimport GeometryCollection from '../geom/GeometryCollection'\nimport Polygonal from '../geom/Polygonal'\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector'\nimport LinearComponentExtracter from '../geom/util/LinearComponentExtracter'\nimport TreeMap from '../../../../java/util/TreeMap'\nimport MultiLineString from '../geom/MultiLineString'\nexport default class IsSimpleOp {\n  constructor () {\n    IsSimpleOp.constructor_.apply(this, arguments)\n  }\n\n  static isSimple () {\n    if (arguments.length === 1) {\n      const geom = arguments[0]\n      const op = new IsSimpleOp(geom)\n      return op.isSimple()\n    } else if (arguments.length === 2) {\n      const geom = arguments[0]; const boundaryNodeRule = arguments[1]\n      const op = new IsSimpleOp(geom, boundaryNodeRule)\n      return op.isSimple()\n    }\n  }\n\n  isSimpleMultiPoint (mp) {\n    if (mp.isEmpty()) return true\n    const points = new TreeSet()\n    for (let i = 0; i < mp.getNumGeometries(); i++) {\n      const pt = mp.getGeometryN(i)\n      const p = pt.getCoordinate()\n      if (points.contains(p)) {\n        this._nonSimpleLocation = p\n        return false\n      }\n      points.add(p)\n    }\n    return true\n  }\n\n  isSimplePolygonal (geom) {\n    const rings = LinearComponentExtracter.getLines(geom)\n    for (let i = rings.iterator(); i.hasNext();) {\n      const ring = i.next()\n      if (!this.isSimpleLinearGeometry(ring)) return false\n    }\n    return true\n  }\n\n  hasClosedEndpointIntersection (graph) {\n    const endPoints = new TreeMap()\n    for (let i = graph.getEdgeIterator(); i.hasNext();) {\n      const e = i.next()\n      const maxSegmentIndex = e.getMaximumSegmentIndex()\n      const isClosed = e.isClosed()\n      const p0 = e.getCoordinate(0)\n      this.addEndpoint(endPoints, p0, isClosed)\n      const p1 = e.getCoordinate(e.getNumPoints() - 1)\n      this.addEndpoint(endPoints, p1, isClosed)\n    }\n    for (let i = endPoints.values().iterator(); i.hasNext();) {\n      const eiInfo = i.next()\n      if (eiInfo.isClosed && eiInfo.degree !== 2) {\n        this._nonSimpleLocation = eiInfo.getCoordinate()\n        return true\n      }\n    }\n    return false\n  }\n\n  getNonSimpleLocation () {\n    return this._nonSimpleLocation\n  }\n\n  isSimpleLinearGeometry (geom) {\n    if (geom.isEmpty()) return true\n    const graph = new GeometryGraph(0, geom)\n    const li = new RobustLineIntersector()\n    const si = graph.computeSelfNodes(li, true)\n    if (!si.hasIntersection()) return true\n    if (si.hasProperIntersection()) {\n      this._nonSimpleLocation = si.getProperIntersectionPoint()\n      return false\n    }\n    if (this.hasNonEndpointIntersection(graph)) return false\n    if (this._isClosedEndpointsInInterior) {\n      if (this.hasClosedEndpointIntersection(graph)) return false\n    }\n    return true\n  }\n\n  hasNonEndpointIntersection (graph) {\n    for (let i = graph.getEdgeIterator(); i.hasNext();) {\n      const e = i.next()\n      const maxSegmentIndex = e.getMaximumSegmentIndex()\n      for (let eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext();) {\n        const ei = eiIt.next()\n        if (!ei.isEndPoint(maxSegmentIndex)) {\n          this._nonSimpleLocation = ei.getCoordinate()\n          return true\n        }\n      }\n    }\n    return false\n  }\n\n  addEndpoint (endPoints, p, isClosed) {\n    let eiInfo = endPoints.get(p)\n    if (eiInfo === null) {\n      eiInfo = new EndpointInfo(p)\n      endPoints.put(p, eiInfo)\n    }\n    eiInfo.addEndpoint(isClosed)\n  }\n\n  computeSimple (geom) {\n    this._nonSimpleLocation = null\n    if (geom.isEmpty()) return true\n    if (geom instanceof LineString) return this.isSimpleLinearGeometry(geom)\n    if (geom instanceof MultiLineString) return this.isSimpleLinearGeometry(geom)\n    if (geom instanceof MultiPoint) return this.isSimpleMultiPoint(geom)\n    if (hasInterface(geom, Polygonal)) return this.isSimplePolygonal(geom)\n    if (geom instanceof GeometryCollection) return this.isSimpleGeometryCollection(geom)\n    return true\n  }\n\n  isSimple () {\n    this._nonSimpleLocation = null\n    return this.computeSimple(this._inputGeom)\n  }\n\n  isSimpleGeometryCollection (geom) {\n    for (let i = 0; i < geom.getNumGeometries(); i++) {\n      const comp = geom.getGeometryN(i)\n      if (!this.computeSimple(comp)) return false\n    }\n    return true\n  }\n\n  getClass () {\n    return IsSimpleOp\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nclass EndpointInfo {\n  constructor () {\n    EndpointInfo.constructor_.apply(this, arguments)\n  }\n\n  addEndpoint (isClosed) {\n    this.degree++\n    this.isClosed |= isClosed\n  }\n\n  getCoordinate () {\n    return this.pt\n  }\n\n  getClass () {\n    return EndpointInfo\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nEndpointInfo.constructor_ = function () {\n  this.pt = null\n  this.isClosed = null\n  this.degree = null\n  const pt = arguments[0]\n  this.pt = pt\n  this.isClosed = false\n  this.degree = 0\n}\nIsSimpleOp.EndpointInfo = EndpointInfo\nIsSimpleOp.constructor_ = function () {\n  this._inputGeom = null\n  this._isClosedEndpointsInInterior = true\n  this._nonSimpleLocation = null\n  if (arguments.length === 1) {\n    const geom = arguments[0]\n    this._inputGeom = geom\n  } else if (arguments.length === 2) {\n    const geom = arguments[0]; const boundaryNodeRule = arguments[1]\n    this._inputGeom = geom\n    this._isClosedEndpointsInInterior = !boundaryNodeRule.isInBoundary(2)\n  }\n}\n","export default class BufferParameters {\n  constructor () {\n    BufferParameters.constructor_.apply(this, arguments)\n  }\n\n  static bufferDistanceError (quadSegs) {\n    const alpha = Math.PI / 2.0 / quadSegs\n    return 1 - Math.cos(alpha / 2.0)\n  }\n\n  getEndCapStyle () {\n    return this._endCapStyle\n  }\n\n  isSingleSided () {\n    return this._isSingleSided\n  }\n\n  setQuadrantSegments (quadSegs) {\n    this._quadrantSegments = quadSegs\n    if (this._quadrantSegments === 0) this._joinStyle = BufferParameters.JOIN_BEVEL\n    if (this._quadrantSegments < 0) {\n      this._joinStyle = BufferParameters.JOIN_MITRE\n      this._mitreLimit = Math.abs(this._quadrantSegments)\n    }\n    if (quadSegs <= 0) {\n      this._quadrantSegments = 1\n    }\n    if (this._joinStyle !== BufferParameters.JOIN_ROUND) {\n      this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS\n    }\n  }\n\n  getJoinStyle () {\n    return this._joinStyle\n  }\n\n  setJoinStyle (joinStyle) {\n    this._joinStyle = joinStyle\n  }\n\n  setSimplifyFactor (simplifyFactor) {\n    this._simplifyFactor = simplifyFactor < 0 ? 0 : simplifyFactor\n  }\n\n  getSimplifyFactor () {\n    return this._simplifyFactor\n  }\n\n  getQuadrantSegments () {\n    return this._quadrantSegments\n  }\n\n  setEndCapStyle (endCapStyle) {\n    this._endCapStyle = endCapStyle\n  }\n\n  getMitreLimit () {\n    return this._mitreLimit\n  }\n\n  setMitreLimit (mitreLimit) {\n    this._mitreLimit = mitreLimit\n  }\n\n  setSingleSided (isSingleSided) {\n    this._isSingleSided = isSingleSided\n  }\n\n  getClass () {\n    return BufferParameters\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nBufferParameters.constructor_ = function () {\n  this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS\n  this._endCapStyle = BufferParameters.CAP_ROUND\n  this._joinStyle = BufferParameters.JOIN_ROUND\n  this._mitreLimit = BufferParameters.DEFAULT_MITRE_LIMIT\n  this._isSingleSided = false\n  this._simplifyFactor = BufferParameters.DEFAULT_SIMPLIFY_FACTOR\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    const quadrantSegments = arguments[0]\n    this.setQuadrantSegments(quadrantSegments)\n  } else if (arguments.length === 2) {\n    const quadrantSegments = arguments[0]; const endCapStyle = arguments[1]\n    this.setQuadrantSegments(quadrantSegments)\n    this.setEndCapStyle(endCapStyle)\n  } else if (arguments.length === 4) {\n    const quadrantSegments = arguments[0]; const endCapStyle = arguments[1]; const joinStyle = arguments[2]; const mitreLimit = arguments[3]\n    this.setQuadrantSegments(quadrantSegments)\n    this.setEndCapStyle(endCapStyle)\n    this.setJoinStyle(joinStyle)\n    this.setMitreLimit(mitreLimit)\n  }\n}\nBufferParameters.CAP_ROUND = 1\nBufferParameters.CAP_FLAT = 2\nBufferParameters.CAP_SQUARE = 3\nBufferParameters.JOIN_ROUND = 1\nBufferParameters.JOIN_MITRE = 2\nBufferParameters.JOIN_BEVEL = 3\nBufferParameters.DEFAULT_QUADRANT_SEGMENTS = 8\nBufferParameters.DEFAULT_MITRE_LIMIT = 5.0\nBufferParameters.DEFAULT_SIMPLIFY_FACTOR = 0.01\n","import Position from '../../geomgraph/Position'\nimport Orientation from '../../algorithm/Orientation'\nimport Assert from '../../util/Assert'\nexport default class RightmostEdgeFinder {\n  constructor () {\n    RightmostEdgeFinder.constructor_.apply(this, arguments)\n  }\n\n  getCoordinate () {\n    return this._minCoord\n  }\n\n  getRightmostSide (de, index) {\n    let side = this.getRightmostSideOfSegment(de, index)\n    if (side < 0) side = this.getRightmostSideOfSegment(de, index - 1)\n    if (side < 0) {\n      this._minCoord = null\n      this.checkForRightmostCoordinate(de)\n    }\n    return side\n  }\n\n  findRightmostEdgeAtVertex () {\n    const pts = this._minDe.getEdge().getCoordinates()\n    Assert.isTrue(this._minIndex > 0 && this._minIndex < pts.length, 'rightmost point expected to be interior vertex of edge')\n    const pPrev = pts[this._minIndex - 1]\n    const pNext = pts[this._minIndex + 1]\n    const orientation = Orientation.index(this._minCoord, pNext, pPrev)\n    let usePrev = false\n    if (pPrev.y < this._minCoord.y && pNext.y < this._minCoord.y && orientation === Orientation.COUNTERCLOCKWISE) {\n      usePrev = true\n    } else if (pPrev.y > this._minCoord.y && pNext.y > this._minCoord.y && orientation === Orientation.CLOCKWISE) {\n      usePrev = true\n    }\n    if (usePrev) {\n      this._minIndex = this._minIndex - 1\n    }\n  }\n\n  getRightmostSideOfSegment (de, i) {\n    const e = de.getEdge()\n    const coord = e.getCoordinates()\n    if (i < 0 || i + 1 >= coord.length) return -1\n    if (coord[i].y === coord[i + 1].y) return -1\n    let pos = Position.LEFT\n    if (coord[i].y < coord[i + 1].y) pos = Position.RIGHT\n    return pos\n  }\n\n  getEdge () {\n    return this._orientedDe\n  }\n\n  checkForRightmostCoordinate (de) {\n    const coord = de.getEdge().getCoordinates()\n    for (let i = 0; i < coord.length - 1; i++) {\n      if (this._minCoord === null || coord[i].x > this._minCoord.x) {\n        this._minDe = de\n        this._minIndex = i\n        this._minCoord = coord[i]\n      }\n    }\n  }\n\n  findRightmostEdgeAtNode () {\n    const node = this._minDe.getNode()\n    const star = node.getEdges()\n    this._minDe = star.getRightmostEdge()\n    if (!this._minDe.isForward()) {\n      this._minDe = this._minDe.getSym()\n      this._minIndex = this._minDe.getEdge().getCoordinates().length - 1\n    }\n  }\n\n  findEdge (dirEdgeList) {\n    for (let i = dirEdgeList.iterator(); i.hasNext();) {\n      const de = i.next()\n      if (!de.isForward()) continue\n      this.checkForRightmostCoordinate(de)\n    }\n    Assert.isTrue(this._minIndex !== 0 || this._minCoord.equals(this._minDe.getCoordinate()), 'inconsistency in rightmost processing')\n    if (this._minIndex === 0) {\n      this.findRightmostEdgeAtNode()\n    } else {\n      this.findRightmostEdgeAtVertex()\n    }\n    this._orientedDe = this._minDe\n    const rightmostSide = this.getRightmostSide(this._minDe, this._minIndex)\n    if (rightmostSide === Position.LEFT) {\n      this._orientedDe = this._minDe.getSym()\n    }\n  }\n\n  getClass () {\n    return RightmostEdgeFinder\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nRightmostEdgeFinder.constructor_ = function () {\n  this._minIndex = -1\n  this._minCoord = null\n  this._minDe = null\n  this._orientedDe = null\n}\n","export default function LinkedList () {\n  this.array_ = []\n}\nLinkedList.prototype.addLast = function (e) {\n  this.array_.push(e)\n}\nLinkedList.prototype.removeFirst = function () {\n  return this.array_.shift()\n}\nLinkedList.prototype.isEmpty = function () {\n  return this.array_.length === 0\n}\n","import HashSet from '../../../../../java/util/HashSet'\nimport Position from '../../geomgraph/Position'\nimport Stack from '../../../../../java/util/Stack'\nimport RightmostEdgeFinder from './RightmostEdgeFinder'\nimport TopologyException from '../../geom/TopologyException'\nimport LinkedList from '../../../../../java/util/LinkedList'\nimport Comparable from '../../../../../java/lang/Comparable'\nimport ArrayList from '../../../../../java/util/ArrayList'\nimport Envelope from '../../geom/Envelope'\nexport default class BufferSubgraph {\n  constructor () {\n    BufferSubgraph.constructor_.apply(this, arguments)\n  }\n\n  clearVisitedEdges () {\n    for (let it = this._dirEdgeList.iterator(); it.hasNext();) {\n      const de = it.next()\n      de.setVisited(false)\n    }\n  }\n\n  getRightmostCoordinate () {\n    return this._rightMostCoord\n  }\n\n  computeNodeDepth (n) {\n    let startEdge = null\n    for (let i = n.getEdges().iterator(); i.hasNext();) {\n      const de = i.next()\n      if (de.isVisited() || de.getSym().isVisited()) {\n        startEdge = de\n        break\n      }\n    }\n    if (startEdge === null) throw new TopologyException('unable to find edge to compute depths at ' + n.getCoordinate())\n    n.getEdges().computeDepths(startEdge)\n    for (let i = n.getEdges().iterator(); i.hasNext();) {\n      const de = i.next()\n      de.setVisited(true)\n      this.copySymDepths(de)\n    }\n  }\n\n  computeDepth (outsideDepth) {\n    this.clearVisitedEdges()\n    const de = this._finder.getEdge()\n    const n = de.getNode()\n    const label = de.getLabel()\n    de.setEdgeDepths(Position.RIGHT, outsideDepth)\n    this.copySymDepths(de)\n    this.computeDepths(de)\n  }\n\n  create (node) {\n    this.addReachable(node)\n    this._finder.findEdge(this._dirEdgeList)\n    this._rightMostCoord = this._finder.getCoordinate()\n  }\n\n  findResultEdges () {\n    for (let it = this._dirEdgeList.iterator(); it.hasNext();) {\n      const de = it.next()\n      if (de.getDepth(Position.RIGHT) >= 1 && de.getDepth(Position.LEFT) <= 0 && !de.isInteriorAreaEdge()) {\n        de.setInResult(true)\n      }\n    }\n  }\n\n  computeDepths (startEdge) {\n    const nodesVisited = new HashSet()\n    const nodeQueue = new LinkedList()\n    const startNode = startEdge.getNode()\n    nodeQueue.addLast(startNode)\n    nodesVisited.add(startNode)\n    startEdge.setVisited(true)\n    while (!nodeQueue.isEmpty()) {\n      const n = nodeQueue.removeFirst()\n      nodesVisited.add(n)\n      this.computeNodeDepth(n)\n      for (let i = n.getEdges().iterator(); i.hasNext();) {\n        const de = i.next()\n        const sym = de.getSym()\n        if (sym.isVisited()) continue\n        const adjNode = sym.getNode()\n        if (!nodesVisited.contains(adjNode)) {\n          nodeQueue.addLast(adjNode)\n          nodesVisited.add(adjNode)\n        }\n      }\n    }\n  }\n\n  compareTo (o) {\n    const graph = o\n    if (this._rightMostCoord.x < graph._rightMostCoord.x) {\n      return -1\n    }\n    if (this._rightMostCoord.x > graph._rightMostCoord.x) {\n      return 1\n    }\n    return 0\n  }\n\n  getEnvelope () {\n    if (this._env === null) {\n      const edgeEnv = new Envelope()\n      for (let it = this._dirEdgeList.iterator(); it.hasNext();) {\n        const dirEdge = it.next()\n        const pts = dirEdge.getEdge().getCoordinates()\n        for (let i = 0; i < pts.length - 1; i++) {\n          edgeEnv.expandToInclude(pts[i])\n        }\n      }\n      this._env = edgeEnv\n    }\n    return this._env\n  }\n\n  addReachable (startNode) {\n    const nodeStack = new Stack()\n    nodeStack.add(startNode)\n    while (!nodeStack.empty()) {\n      const node = nodeStack.pop()\n      this.add(node, nodeStack)\n    }\n  }\n\n  copySymDepths (de) {\n    const sym = de.getSym()\n    sym.setDepth(Position.LEFT, de.getDepth(Position.RIGHT))\n    sym.setDepth(Position.RIGHT, de.getDepth(Position.LEFT))\n  }\n\n  add (node, nodeStack) {\n    node.setVisited(true)\n    this._nodes.add(node)\n    for (let i = node.getEdges().iterator(); i.hasNext();) {\n      const de = i.next()\n      this._dirEdgeList.add(de)\n      const sym = de.getSym()\n      const symNode = sym.getNode()\n      if (!symNode.isVisited()) nodeStack.push(symNode)\n    }\n  }\n\n  getNodes () {\n    return this._nodes\n  }\n\n  getDirectedEdges () {\n    return this._dirEdgeList\n  }\n\n  getClass () {\n    return BufferSubgraph\n  }\n\n  get interfaces_ () {\n    return [Comparable]\n  }\n}\nBufferSubgraph.constructor_ = function () {\n  this._finder = null\n  this._dirEdgeList = new ArrayList()\n  this._nodes = new ArrayList()\n  this._rightMostCoord = null\n  this._env = null\n  this._finder = new RightmostEdgeFinder()\n}\n","import Location from '../geom/Location'\nimport Position from './Position'\nimport PointLocation from '../algorithm/PointLocation'\nimport TopologyException from '../geom/TopologyException'\nimport Orientation from '../algorithm/Orientation'\nimport Label from './Label'\nimport ArrayList from '../../../../java/util/ArrayList'\nimport Assert from '../util/Assert'\nexport default class EdgeRing {\n  constructor () {\n    EdgeRing.constructor_.apply(this, arguments)\n  }\n\n  computeRing () {\n    if (this._ring !== null) return null\n    const coord = new Array(this._pts.size()).fill(null)\n    for (let i = 0; i < this._pts.size(); i++) {\n      coord[i] = this._pts.get(i)\n    }\n    this._ring = this._geometryFactory.createLinearRing(coord)\n    this._isHole = Orientation.isCCW(this._ring.getCoordinates())\n  }\n\n  isIsolated () {\n    return this._label.getGeometryCount() === 1\n  }\n\n  computePoints (start) {\n    this._startDe = start\n    let de = start\n    let isFirstEdge = true\n    do {\n      if (de === null) throw new TopologyException('Found null DirectedEdge')\n      if (de.getEdgeRing() === this) throw new TopologyException('Directed Edge visited twice during ring-building at ' + de.getCoordinate())\n      this._edges.add(de)\n      const label = de.getLabel()\n      Assert.isTrue(label.isArea())\n      this.mergeLabel(label)\n      this.addPoints(de.getEdge(), de.isForward(), isFirstEdge)\n      isFirstEdge = false\n      this.setEdgeRing(de, this)\n      de = this.getNext(de)\n    } while (de !== this._startDe)\n  }\n\n  getLinearRing () {\n    return this._ring\n  }\n\n  getCoordinate (i) {\n    return this._pts.get(i)\n  }\n\n  computeMaxNodeDegree () {\n    this._maxNodeDegree = 0\n    let de = this._startDe\n    do {\n      const node = de.getNode()\n      const degree = node.getEdges().getOutgoingDegree(this)\n      if (degree > this._maxNodeDegree) this._maxNodeDegree = degree\n      de = this.getNext(de)\n    } while (de !== this._startDe)\n    this._maxNodeDegree *= 2\n  }\n\n  addPoints (edge, isForward, isFirstEdge) {\n    const edgePts = edge.getCoordinates()\n    if (isForward) {\n      let startIndex = 1\n      if (isFirstEdge) startIndex = 0\n      for (let i = startIndex; i < edgePts.length; i++) {\n        this._pts.add(edgePts[i])\n      }\n    } else {\n      let startIndex = edgePts.length - 2\n      if (isFirstEdge) startIndex = edgePts.length - 1\n      for (let i = startIndex; i >= 0; i--) {\n        this._pts.add(edgePts[i])\n      }\n    }\n  }\n\n  isHole () {\n    return this._isHole\n  }\n\n  setInResult () {\n    let de = this._startDe\n    do {\n      de.getEdge().setInResult(true)\n      de = de.getNext()\n    } while (de !== this._startDe)\n  }\n\n  containsPoint (p) {\n    const shell = this.getLinearRing()\n    const env = shell.getEnvelopeInternal()\n    if (!env.contains(p)) return false\n    if (!PointLocation.isInRing(p, shell.getCoordinates())) return false\n    for (let i = this._holes.iterator(); i.hasNext();) {\n      const hole = i.next()\n      if (hole.containsPoint(p)) return false\n    }\n    return true\n  }\n\n  addHole (ring) {\n    this._holes.add(ring)\n  }\n\n  isShell () {\n    return this._shell === null\n  }\n\n  getLabel () {\n    return this._label\n  }\n\n  getEdges () {\n    return this._edges\n  }\n\n  getMaxNodeDegree () {\n    if (this._maxNodeDegree < 0) this.computeMaxNodeDegree()\n    return this._maxNodeDegree\n  }\n\n  getShell () {\n    return this._shell\n  }\n\n  mergeLabel () {\n    if (arguments.length === 1) {\n      const deLabel = arguments[0]\n      this.mergeLabel(deLabel, 0)\n      this.mergeLabel(deLabel, 1)\n    } else if (arguments.length === 2) {\n      const deLabel = arguments[0]; const geomIndex = arguments[1]\n      const loc = deLabel.getLocation(geomIndex, Position.RIGHT)\n      if (loc === Location.NONE) return null\n      if (this._label.getLocation(geomIndex) === Location.NONE) {\n        this._label.setLocation(geomIndex, loc)\n        return null\n      }\n    }\n  }\n\n  setShell (shell) {\n    this._shell = shell\n    if (shell !== null) shell.addHole(this)\n  }\n\n  toPolygon (geometryFactory) {\n    const holeLR = new Array(this._holes.size()).fill(null)\n    for (let i = 0; i < this._holes.size(); i++) {\n      holeLR[i] = this._holes.get(i).getLinearRing()\n    }\n    const poly = geometryFactory.createPolygon(this.getLinearRing(), holeLR)\n    return poly\n  }\n\n  getClass () {\n    return EdgeRing\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nEdgeRing.constructor_ = function () {\n  this._startDe = null\n  this._maxNodeDegree = -1\n  this._edges = new ArrayList()\n  this._pts = new ArrayList()\n  this._label = new Label(Location.NONE)\n  this._ring = null\n  this._isHole = null\n  this._shell = null\n  this._holes = new ArrayList()\n  this._geometryFactory = null\n  if (arguments.length === 0) {} else if (arguments.length === 2) {\n    const start = arguments[0]; const geometryFactory = arguments[1]\n    this._geometryFactory = geometryFactory\n    this.computePoints(start)\n    this.computeRing()\n  }\n}\n","import EdgeRing from '../../geomgraph/EdgeRing'\nexport default class MinimalEdgeRing extends EdgeRing {\n  constructor () {\n    super()\n    MinimalEdgeRing.constructor_.apply(this, arguments)\n  }\n\n  setEdgeRing (de, er) {\n    de.setMinEdgeRing(er)\n  }\n\n  getNext (de) {\n    return de.getNextMin()\n  }\n\n  getClass () {\n    return MinimalEdgeRing\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nMinimalEdgeRing.constructor_ = function () {\n  const start = arguments[0]; const geometryFactory = arguments[1]\n  EdgeRing.constructor_.call(this, start, geometryFactory)\n}\n","import MinimalEdgeRing from './MinimalEdgeRing'\nimport EdgeRing from '../../geomgraph/EdgeRing'\nimport ArrayList from '../../../../../java/util/ArrayList'\nexport default class MaximalEdgeRing extends EdgeRing {\n  constructor () {\n    super()\n    MaximalEdgeRing.constructor_.apply(this, arguments)\n  }\n\n  buildMinimalRings () {\n    const minEdgeRings = new ArrayList()\n    let de = this._startDe\n    do {\n      if (de.getMinEdgeRing() === null) {\n        const minEr = new MinimalEdgeRing(de, this._geometryFactory)\n        minEdgeRings.add(minEr)\n      }\n      de = de.getNext()\n    } while (de !== this._startDe)\n    return minEdgeRings\n  }\n\n  setEdgeRing (de, er) {\n    de.setEdgeRing(er)\n  }\n\n  linkDirectedEdgesForMinimalEdgeRings () {\n    let de = this._startDe\n    do {\n      const node = de.getNode()\n      node.getEdges().linkMinimalDirectedEdges(this)\n      de = de.getNext()\n    } while (de !== this._startDe)\n  }\n\n  getNext (de) {\n    return de.getNext()\n  }\n\n  getClass () {\n    return MaximalEdgeRing\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nMaximalEdgeRing.constructor_ = function () {\n  const start = arguments[0]; const geometryFactory = arguments[1]\n  EdgeRing.constructor_.call(this, start, geometryFactory)\n}\n","import PointLocation from '../../algorithm/PointLocation'\nimport TopologyException from '../../geom/TopologyException'\nimport MaximalEdgeRing from './MaximalEdgeRing'\nimport ArrayList from '../../../../../java/util/ArrayList'\nimport Assert from '../../util/Assert'\nimport PlanarGraph from '../../geomgraph/PlanarGraph'\nexport default class PolygonBuilder {\n  constructor () {\n    PolygonBuilder.constructor_.apply(this, arguments)\n  }\n\n  sortShellsAndHoles (edgeRings, shellList, freeHoleList) {\n    for (let it = edgeRings.iterator(); it.hasNext();) {\n      const er = it.next()\n      if (er.isHole()) {\n        freeHoleList.add(er)\n      } else {\n        shellList.add(er)\n      }\n    }\n  }\n\n  computePolygons (shellList) {\n    const resultPolyList = new ArrayList()\n    for (let it = shellList.iterator(); it.hasNext();) {\n      const er = it.next()\n      const poly = er.toPolygon(this._geometryFactory)\n      resultPolyList.add(poly)\n    }\n    return resultPolyList\n  }\n\n  placeFreeHoles (shellList, freeHoleList) {\n    for (let it = freeHoleList.iterator(); it.hasNext();) {\n      const hole = it.next()\n      if (hole.getShell() === null) {\n        const shell = this.findEdgeRingContaining(hole, shellList)\n        if (shell === null) throw new TopologyException('unable to assign hole to a shell', hole.getCoordinate(0))\n        hole.setShell(shell)\n      }\n    }\n  }\n\n  buildMinimalEdgeRings (maxEdgeRings, shellList, freeHoleList) {\n    const edgeRings = new ArrayList()\n    for (let it = maxEdgeRings.iterator(); it.hasNext();) {\n      const er = it.next()\n      if (er.getMaxNodeDegree() > 2) {\n        er.linkDirectedEdgesForMinimalEdgeRings()\n        const minEdgeRings = er.buildMinimalRings()\n        const shell = this.findShell(minEdgeRings)\n        if (shell !== null) {\n          this.placePolygonHoles(shell, minEdgeRings)\n          shellList.add(shell)\n        } else {\n          freeHoleList.addAll(minEdgeRings)\n        }\n      } else {\n        edgeRings.add(er)\n      }\n    }\n    return edgeRings\n  }\n\n  containsPoint (p) {\n    for (let it = this._shellList.iterator(); it.hasNext();) {\n      const er = it.next()\n      if (er.containsPoint(p)) return true\n    }\n    return false\n  }\n\n  buildMaximalEdgeRings (dirEdges) {\n    const maxEdgeRings = new ArrayList()\n    for (let it = dirEdges.iterator(); it.hasNext();) {\n      const de = it.next()\n      if (de.isInResult() && de.getLabel().isArea()) {\n        if (de.getEdgeRing() === null) {\n          const er = new MaximalEdgeRing(de, this._geometryFactory)\n          maxEdgeRings.add(er)\n          er.setInResult()\n        }\n      }\n    }\n    return maxEdgeRings\n  }\n\n  placePolygonHoles (shell, minEdgeRings) {\n    for (let it = minEdgeRings.iterator(); it.hasNext();) {\n      const er = it.next()\n      if (er.isHole()) {\n        er.setShell(shell)\n      }\n    }\n  }\n\n  getPolygons () {\n    const resultPolyList = this.computePolygons(this._shellList)\n    return resultPolyList\n  }\n\n  findEdgeRingContaining (testEr, shellList) {\n    const testRing = testEr.getLinearRing()\n    const testEnv = testRing.getEnvelopeInternal()\n    const testPt = testRing.getCoordinateN(0)\n    let minShell = null\n    let minEnv = null\n    for (let it = shellList.iterator(); it.hasNext();) {\n      const tryShell = it.next()\n      const tryRing = tryShell.getLinearRing()\n      const tryEnv = tryRing.getEnvelopeInternal()\n      if (minShell !== null) minEnv = minShell.getLinearRing().getEnvelopeInternal()\n      let isContained = false\n      if (tryEnv.contains(testEnv) && PointLocation.isInRing(testPt, tryRing.getCoordinates())) isContained = true\n      if (isContained) {\n        if (minShell === null || minEnv.contains(tryEnv)) {\n          minShell = tryShell\n        }\n      }\n    }\n    return minShell\n  }\n\n  findShell (minEdgeRings) {\n    let shellCount = 0\n    let shell = null\n    for (let it = minEdgeRings.iterator(); it.hasNext();) {\n      const er = it.next()\n      if (!er.isHole()) {\n        shell = er\n        shellCount++\n      }\n    }\n    Assert.isTrue(shellCount <= 1, 'found two shells in MinimalEdgeRing list')\n    return shell\n  }\n\n  add () {\n    if (arguments.length === 1) {\n      const graph = arguments[0]\n      this.add(graph.getEdgeEnds(), graph.getNodes())\n    } else if (arguments.length === 2) {\n      const dirEdges = arguments[0]; const nodes = arguments[1]\n      PlanarGraph.linkResultDirectedEdges(nodes)\n      const maxEdgeRings = this.buildMaximalEdgeRings(dirEdges)\n      const freeHoleList = new ArrayList()\n      const edgeRings = this.buildMinimalEdgeRings(maxEdgeRings, this._shellList, freeHoleList)\n      this.sortShellsAndHoles(edgeRings, this._shellList, freeHoleList)\n      this.placeFreeHoles(this._shellList, freeHoleList)\n    }\n  }\n\n  getClass () {\n    return PolygonBuilder\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nPolygonBuilder.constructor_ = function () {\n  this._geometryFactory = null\n  this._shellList = new ArrayList()\n  const geometryFactory = arguments[0]\n  this._geometryFactory = geometryFactory\n}\n","import CoordinateList from '../../geom/CoordinateList'\nimport Orientation from '../../algorithm/Orientation'\nimport Distance from '../../algorithm/Distance'\nexport default class BufferInputLineSimplifier {\n  constructor () {\n    BufferInputLineSimplifier.constructor_.apply(this, arguments)\n  }\n\n  static simplify (inputLine, distanceTol) {\n    const simp = new BufferInputLineSimplifier(inputLine)\n    return simp.simplify(distanceTol)\n  }\n\n  isDeletable (i0, i1, i2, distanceTol) {\n    const p0 = this._inputLine[i0]\n    const p1 = this._inputLine[i1]\n    const p2 = this._inputLine[i2]\n    if (!this.isConcave(p0, p1, p2)) return false\n    if (!this.isShallow(p0, p1, p2, distanceTol)) return false\n    return this.isShallowSampled(p0, p1, i0, i2, distanceTol)\n  }\n\n  deleteShallowConcavities () {\n    let index = 1\n    const maxIndex = this._inputLine.length - 1\n    let midIndex = this.findNextNonDeletedIndex(index)\n    let lastIndex = this.findNextNonDeletedIndex(midIndex)\n    let isChanged = false\n    while (lastIndex < this._inputLine.length) {\n      let isMiddleVertexDeleted = false\n      if (this.isDeletable(index, midIndex, lastIndex, this._distanceTol)) {\n        this._isDeleted[midIndex] = BufferInputLineSimplifier.DELETE\n        isMiddleVertexDeleted = true\n        isChanged = true\n      }\n      if (isMiddleVertexDeleted) index = lastIndex; else index = midIndex\n      midIndex = this.findNextNonDeletedIndex(index)\n      lastIndex = this.findNextNonDeletedIndex(midIndex)\n    }\n    return isChanged\n  }\n\n  isShallowConcavity (p0, p1, p2, distanceTol) {\n    const orientation = Orientation.index(p0, p1, p2)\n    const isAngleToSimplify = orientation === this._angleOrientation\n    if (!isAngleToSimplify) return false\n    const dist = Distance.pointToSegment(p1, p0, p2)\n    return dist < distanceTol\n  }\n\n  isShallowSampled (p0, p2, i0, i2, distanceTol) {\n    let inc = Math.trunc((i2 - i0) / BufferInputLineSimplifier.NUM_PTS_TO_CHECK)\n    if (inc <= 0) inc = 1\n    for (let i = i0; i < i2; i += inc) {\n      if (!this.isShallow(p0, p2, this._inputLine[i], distanceTol)) return false\n    }\n    return true\n  }\n\n  isConcave (p0, p1, p2) {\n    const orientation = Orientation.index(p0, p1, p2)\n    const isConcave = orientation === this._angleOrientation\n    return isConcave\n  }\n\n  simplify (distanceTol) {\n    this._distanceTol = Math.abs(distanceTol)\n    if (distanceTol < 0) this._angleOrientation = Orientation.CLOCKWISE\n    this._isDeleted = new Array(this._inputLine.length).fill(null)\n    let isChanged = false\n    do {\n      isChanged = this.deleteShallowConcavities()\n    } while (isChanged)\n    return this.collapseLine()\n  }\n\n  findNextNonDeletedIndex (index) {\n    let next = index + 1\n    while (next < this._inputLine.length && this._isDeleted[next] === BufferInputLineSimplifier.DELETE) next++\n    return next\n  }\n\n  isShallow (p0, p1, p2, distanceTol) {\n    const dist = Distance.pointToSegment(p1, p0, p2)\n    return dist < distanceTol\n  }\n\n  collapseLine () {\n    const coordList = new CoordinateList()\n    for (let i = 0; i < this._inputLine.length; i++) {\n      if (this._isDeleted[i] !== BufferInputLineSimplifier.DELETE) coordList.add(this._inputLine[i])\n    }\n    return coordList.toCoordinateArray()\n  }\n\n  getClass () {\n    return BufferInputLineSimplifier\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nBufferInputLineSimplifier.constructor_ = function () {\n  this._inputLine = null\n  this._distanceTol = null\n  this._isDeleted = null\n  this._angleOrientation = Orientation.COUNTERCLOCKWISE\n  const inputLine = arguments[0]\n  this._inputLine = inputLine\n}\nBufferInputLineSimplifier.INIT = 0\nBufferInputLineSimplifier.DELETE = 1\nBufferInputLineSimplifier.KEEP = 1\nBufferInputLineSimplifier.NUM_PTS_TO_CHECK = 10\n","import GeometryFactory from '../../geom/GeometryFactory'\nimport Coordinate from '../../geom/Coordinate'\nimport ArrayList from '../../../../../java/util/ArrayList'\nexport default class OffsetSegmentString {\n  constructor () {\n    OffsetSegmentString.constructor_.apply(this, arguments)\n  }\n\n  getCoordinates () {\n    const coord = this._ptList.toArray(OffsetSegmentString.COORDINATE_ARRAY_TYPE)\n    return coord\n  }\n\n  setPrecisionModel (precisionModel) {\n    this._precisionModel = precisionModel\n  }\n\n  addPt (pt) {\n    const bufPt = new Coordinate(pt)\n    this._precisionModel.makePrecise(bufPt)\n    if (this.isRedundant(bufPt)) return null\n    this._ptList.add(bufPt)\n  }\n\n  reverse () {}\n  addPts (pt, isForward) {\n    if (isForward) {\n      for (let i = 0; i < pt.length; i++) {\n        this.addPt(pt[i])\n      }\n    } else {\n      for (let i = pt.length - 1; i >= 0; i--) {\n        this.addPt(pt[i])\n      }\n    }\n  }\n\n  isRedundant (pt) {\n    if (this._ptList.size() < 1) return false\n    const lastPt = this._ptList.get(this._ptList.size() - 1)\n    const ptDist = pt.distance(lastPt)\n    if (ptDist < this._minimimVertexDistance) return true\n    return false\n  }\n\n  toString () {\n    const fact = new GeometryFactory()\n    const line = fact.createLineString(this.getCoordinates())\n    return line.toString()\n  }\n\n  closeRing () {\n    if (this._ptList.size() < 1) return null\n    const startPt = new Coordinate(this._ptList.get(0))\n    const lastPt = this._ptList.get(this._ptList.size() - 1)\n    let last2Pt = null\n    if (this._ptList.size() >= 2) last2Pt = this._ptList.get(this._ptList.size() - 2)\n    if (startPt.equals(lastPt)) return null\n    this._ptList.add(startPt)\n  }\n\n  setMinimumVertexDistance (minimimVertexDistance) {\n    this._minimimVertexDistance = minimimVertexDistance\n  }\n\n  getClass () {\n    return OffsetSegmentString\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nOffsetSegmentString.constructor_ = function () {\n  this._ptList = null\n  this._precisionModel = null\n  this._minimimVertexDistance = 0.0\n  this._ptList = new ArrayList()\n}\nOffsetSegmentString.COORDINATE_ARRAY_TYPE = new Array(0).fill(null)\n","import BufferParameters from './BufferParameters'\nimport NotRepresentableException from '../../algorithm/NotRepresentableException'\nimport Position from '../../geomgraph/Position'\nimport Coordinate from '../../geom/Coordinate'\nimport Orientation from '../../algorithm/Orientation'\nimport OffsetSegmentString from './OffsetSegmentString'\nimport LineSegment from '../../geom/LineSegment'\nimport Angle from '../../algorithm/Angle'\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector'\nimport HCoordinate from '../../algorithm/HCoordinate'\nexport default class OffsetSegmentGenerator {\n  constructor () {\n    OffsetSegmentGenerator.constructor_.apply(this, arguments)\n  }\n\n  addNextSegment (p, addStartPoint) {\n    this._s0 = this._s1\n    this._s1 = this._s2\n    this._s2 = p\n    this._seg0.setCoordinates(this._s0, this._s1)\n    this.computeOffsetSegment(this._seg0, this._side, this._distance, this._offset0)\n    this._seg1.setCoordinates(this._s1, this._s2)\n    this.computeOffsetSegment(this._seg1, this._side, this._distance, this._offset1)\n    if (this._s1.equals(this._s2)) return null\n    const orientation = Orientation.index(this._s0, this._s1, this._s2)\n    const outsideTurn = orientation === Orientation.CLOCKWISE && this._side === Position.LEFT || orientation === Orientation.COUNTERCLOCKWISE && this._side === Position.RIGHT\n    if (orientation === 0) {\n      this.addCollinear(addStartPoint)\n    } else if (outsideTurn) {\n      this.addOutsideTurn(orientation, addStartPoint)\n    } else {\n      this.addInsideTurn(orientation, addStartPoint)\n    }\n  }\n\n  addLineEndCap (p0, p1) {\n    const seg = new LineSegment(p0, p1)\n    const offsetL = new LineSegment()\n    this.computeOffsetSegment(seg, Position.LEFT, this._distance, offsetL)\n    const offsetR = new LineSegment()\n    this.computeOffsetSegment(seg, Position.RIGHT, this._distance, offsetR)\n    const dx = p1.x - p0.x\n    const dy = p1.y - p0.y\n    const angle = Math.atan2(dy, dx)\n    switch (this._bufParams.getEndCapStyle()) {\n      case BufferParameters.CAP_ROUND:\n        this._segList.addPt(offsetL.p1)\n        this.addDirectedFillet(p1, angle + Math.PI / 2, angle - Math.PI / 2, Orientation.CLOCKWISE, this._distance)\n        this._segList.addPt(offsetR.p1)\n        break\n      case BufferParameters.CAP_FLAT:\n        this._segList.addPt(offsetL.p1)\n        this._segList.addPt(offsetR.p1)\n        break\n      case BufferParameters.CAP_SQUARE:\n        const squareCapSideOffset = new Coordinate()\n        squareCapSideOffset.x = Math.abs(this._distance) * Math.cos(angle)\n        squareCapSideOffset.y = Math.abs(this._distance) * Math.sin(angle)\n        const squareCapLOffset = new Coordinate(offsetL.p1.x + squareCapSideOffset.x, offsetL.p1.y + squareCapSideOffset.y)\n        const squareCapROffset = new Coordinate(offsetR.p1.x + squareCapSideOffset.x, offsetR.p1.y + squareCapSideOffset.y)\n        this._segList.addPt(squareCapLOffset)\n        this._segList.addPt(squareCapROffset)\n        break\n    }\n  }\n\n  getCoordinates () {\n    const pts = this._segList.getCoordinates()\n    return pts\n  }\n\n  addMitreJoin (p, offset0, offset1, distance) {\n    let isMitreWithinLimit = true\n    let intPt = null\n    try {\n      intPt = HCoordinate.intersection(offset0.p0, offset0.p1, offset1.p0, offset1.p1)\n      const mitreRatio = distance <= 0.0 ? 1.0 : intPt.distance(p) / Math.abs(distance)\n      if (mitreRatio > this._bufParams.getMitreLimit()) isMitreWithinLimit = false\n    } catch (ex) {\n      if (ex instanceof NotRepresentableException) {\n        intPt = new Coordinate(0, 0)\n        isMitreWithinLimit = false\n      } else throw ex\n    } finally {}\n    if (isMitreWithinLimit) {\n      this._segList.addPt(intPt)\n    } else {\n      this.addLimitedMitreJoin(offset0, offset1, distance, this._bufParams.getMitreLimit())\n    }\n  }\n\n  addOutsideTurn (orientation, addStartPoint) {\n    if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR) {\n      this._segList.addPt(this._offset0.p1)\n      return null\n    }\n    if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n      this.addMitreJoin(this._s1, this._offset0, this._offset1, this._distance)\n    } else if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL) {\n      this.addBevelJoin(this._offset0, this._offset1)\n    } else {\n      if (addStartPoint) this._segList.addPt(this._offset0.p1)\n      this.addCornerFillet(this._s1, this._offset0.p1, this._offset1.p0, orientation, this._distance)\n      this._segList.addPt(this._offset1.p0)\n    }\n  }\n\n  createSquare (p) {\n    this._segList.addPt(new Coordinate(p.x + this._distance, p.y + this._distance))\n    this._segList.addPt(new Coordinate(p.x + this._distance, p.y - this._distance))\n    this._segList.addPt(new Coordinate(p.x - this._distance, p.y - this._distance))\n    this._segList.addPt(new Coordinate(p.x - this._distance, p.y + this._distance))\n    this._segList.closeRing()\n  }\n\n  addSegments (pt, isForward) {\n    this._segList.addPts(pt, isForward)\n  }\n\n  addFirstSegment () {\n    this._segList.addPt(this._offset1.p0)\n  }\n\n  addCornerFillet (p, p0, p1, direction, radius) {\n    const dx0 = p0.x - p.x\n    const dy0 = p0.y - p.y\n    let startAngle = Math.atan2(dy0, dx0)\n    const dx1 = p1.x - p.x\n    const dy1 = p1.y - p.y\n    const endAngle = Math.atan2(dy1, dx1)\n    if (direction === Orientation.CLOCKWISE) {\n      if (startAngle <= endAngle) startAngle += 2.0 * Math.PI\n    } else {\n      if (startAngle >= endAngle) startAngle -= 2.0 * Math.PI\n    }\n    this._segList.addPt(p0)\n    this.addDirectedFillet(p, startAngle, endAngle, direction, radius)\n    this._segList.addPt(p1)\n  }\n\n  addLastSegment () {\n    this._segList.addPt(this._offset1.p1)\n  }\n\n  initSideSegments (s1, s2, side) {\n    this._s1 = s1\n    this._s2 = s2\n    this._side = side\n    this._seg1.setCoordinates(s1, s2)\n    this.computeOffsetSegment(this._seg1, side, this._distance, this._offset1)\n  }\n\n  addLimitedMitreJoin (offset0, offset1, distance, mitreLimit) {\n    const basePt = this._seg0.p1\n    const ang0 = Angle.angle(basePt, this._seg0.p0)\n    const ang1 = Angle.angle(basePt, this._seg1.p1)\n    const angDiff = Angle.angleBetweenOriented(this._seg0.p0, basePt, this._seg1.p1)\n    const angDiffHalf = angDiff / 2\n    const midAng = Angle.normalize(ang0 + angDiffHalf)\n    const mitreMidAng = Angle.normalize(midAng + Math.PI)\n    const mitreDist = mitreLimit * distance\n    const bevelDelta = mitreDist * Math.abs(Math.sin(angDiffHalf))\n    const bevelHalfLen = distance - bevelDelta\n    const bevelMidX = basePt.x + mitreDist * Math.cos(mitreMidAng)\n    const bevelMidY = basePt.y + mitreDist * Math.sin(mitreMidAng)\n    const bevelMidPt = new Coordinate(bevelMidX, bevelMidY)\n    const mitreMidLine = new LineSegment(basePt, bevelMidPt)\n    const bevelEndLeft = mitreMidLine.pointAlongOffset(1.0, bevelHalfLen)\n    const bevelEndRight = mitreMidLine.pointAlongOffset(1.0, -bevelHalfLen)\n    if (this._side === Position.LEFT) {\n      this._segList.addPt(bevelEndLeft)\n      this._segList.addPt(bevelEndRight)\n    } else {\n      this._segList.addPt(bevelEndRight)\n      this._segList.addPt(bevelEndLeft)\n    }\n  }\n\n  addDirectedFillet (p, startAngle, endAngle, direction, radius) {\n    const directionFactor = direction === Orientation.CLOCKWISE ? -1 : 1\n    const totalAngle = Math.abs(startAngle - endAngle)\n    const nSegs = Math.trunc(totalAngle / this._filletAngleQuantum + 0.5)\n    if (nSegs < 1) return null\n    let initAngle = null; let currAngleInc = null\n    initAngle = 0.0\n    currAngleInc = totalAngle / nSegs\n    let currAngle = initAngle\n    const pt = new Coordinate()\n    while (currAngle < totalAngle) {\n      const angle = startAngle + directionFactor * currAngle\n      pt.x = p.x + radius * Math.cos(angle)\n      pt.y = p.y + radius * Math.sin(angle)\n      this._segList.addPt(pt)\n      currAngle += currAngleInc\n    }\n  }\n\n  computeOffsetSegment (seg, side, distance, offset) {\n    const sideSign = side === Position.LEFT ? 1 : -1\n    const dx = seg.p1.x - seg.p0.x\n    const dy = seg.p1.y - seg.p0.y\n    const len = Math.sqrt(dx * dx + dy * dy)\n    const ux = sideSign * distance * dx / len\n    const uy = sideSign * distance * dy / len\n    offset.p0.x = seg.p0.x - uy\n    offset.p0.y = seg.p0.y + ux\n    offset.p1.x = seg.p1.x - uy\n    offset.p1.y = seg.p1.y + ux\n  }\n\n  addInsideTurn (orientation, addStartPoint) {\n    this._li.computeIntersection(this._offset0.p0, this._offset0.p1, this._offset1.p0, this._offset1.p1)\n    if (this._li.hasIntersection()) {\n      this._segList.addPt(this._li.getIntersection(0))\n    } else {\n      this._hasNarrowConcaveAngle = true\n      if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR) {\n        this._segList.addPt(this._offset0.p1)\n      } else {\n        this._segList.addPt(this._offset0.p1)\n        if (this._closingSegLengthFactor > 0) {\n          const mid0 = new Coordinate((this._closingSegLengthFactor * this._offset0.p1.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset0.p1.y + this._s1.y) / (this._closingSegLengthFactor + 1))\n          this._segList.addPt(mid0)\n          const mid1 = new Coordinate((this._closingSegLengthFactor * this._offset1.p0.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset1.p0.y + this._s1.y) / (this._closingSegLengthFactor + 1))\n          this._segList.addPt(mid1)\n        } else {\n          this._segList.addPt(this._s1)\n        }\n        this._segList.addPt(this._offset1.p0)\n      }\n    }\n  }\n\n  createCircle (p) {\n    const pt = new Coordinate(p.x + this._distance, p.y)\n    this._segList.addPt(pt)\n    this.addDirectedFillet(p, 0.0, 2.0 * Math.PI, -1, this._distance)\n    this._segList.closeRing()\n  }\n\n  addBevelJoin (offset0, offset1) {\n    this._segList.addPt(offset0.p1)\n    this._segList.addPt(offset1.p0)\n  }\n\n  init (distance) {\n    this._distance = distance\n    this._maxCurveSegmentError = distance * (1 - Math.cos(this._filletAngleQuantum / 2.0))\n    this._segList = new OffsetSegmentString()\n    this._segList.setPrecisionModel(this._precisionModel)\n    this._segList.setMinimumVertexDistance(distance * OffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR)\n  }\n\n  addCollinear (addStartPoint) {\n    this._li.computeIntersection(this._s0, this._s1, this._s1, this._s2)\n    const numInt = this._li.getIntersectionNum()\n    if (numInt >= 2) {\n      if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL || this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n        if (addStartPoint) this._segList.addPt(this._offset0.p1)\n        this._segList.addPt(this._offset1.p0)\n      } else {\n        this.addCornerFillet(this._s1, this._offset0.p1, this._offset1.p0, Orientation.CLOCKWISE, this._distance)\n      }\n    }\n  }\n\n  closeRing () {\n    this._segList.closeRing()\n  }\n\n  hasNarrowConcaveAngle () {\n    return this._hasNarrowConcaveAngle\n  }\n\n  getClass () {\n    return OffsetSegmentGenerator\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nOffsetSegmentGenerator.constructor_ = function () {\n  this._maxCurveSegmentError = 0.0\n  this._filletAngleQuantum = null\n  this._closingSegLengthFactor = 1\n  this._segList = null\n  this._distance = 0.0\n  this._precisionModel = null\n  this._bufParams = null\n  this._li = null\n  this._s0 = null\n  this._s1 = null\n  this._s2 = null\n  this._seg0 = new LineSegment()\n  this._seg1 = new LineSegment()\n  this._offset0 = new LineSegment()\n  this._offset1 = new LineSegment()\n  this._side = 0\n  this._hasNarrowConcaveAngle = false\n  const precisionModel = arguments[0]; const bufParams = arguments[1]; const distance = arguments[2]\n  this._precisionModel = precisionModel\n  this._bufParams = bufParams\n  this._li = new RobustLineIntersector()\n  this._filletAngleQuantum = Math.PI / 2.0 / bufParams.getQuadrantSegments()\n  if (bufParams.getQuadrantSegments() >= 8 && bufParams.getJoinStyle() === BufferParameters.JOIN_ROUND) this._closingSegLengthFactor = OffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR\n  this.init(distance)\n}\nOffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR = 1.0E-3\nOffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR = 1.0E-3\nOffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR = 1.0E-6\nOffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR = 80\n","import BufferParameters from './BufferParameters'\nimport Position from '../../geomgraph/Position'\nimport Coordinate from '../../geom/Coordinate'\nimport BufferInputLineSimplifier from './BufferInputLineSimplifier'\nimport CoordinateArrays from '../../geom/CoordinateArrays'\nimport OffsetSegmentGenerator from './OffsetSegmentGenerator'\nexport default class OffsetCurveBuilder {\n  constructor () {\n    OffsetCurveBuilder.constructor_.apply(this, arguments)\n  }\n\n  static copyCoordinates (pts) {\n    const copy = new Array(pts.length).fill(null)\n    for (let i = 0; i < copy.length; i++) {\n      copy[i] = new Coordinate(pts[i])\n    }\n    return copy\n  }\n\n  getOffsetCurve (inputPts, distance) {\n    this._distance = distance\n    if (distance === 0.0) return null\n    const isRightSide = distance < 0.0\n    const posDistance = Math.abs(distance)\n    const segGen = this.getSegGen(posDistance)\n    if (inputPts.length <= 1) {\n      this.computePointCurve(inputPts[0], segGen)\n    } else {\n      this.computeOffsetCurve(inputPts, isRightSide, segGen)\n    }\n    const curvePts = segGen.getCoordinates()\n    if (isRightSide) CoordinateArrays.reverse(curvePts)\n    return curvePts\n  }\n\n  computeSingleSidedBufferCurve (inputPts, isRightSide, segGen) {\n    const distTol = this.simplifyTolerance(this._distance)\n    if (isRightSide) {\n      segGen.addSegments(inputPts, true)\n      const simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol)\n      const n2 = simp2.length - 1\n      segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT)\n      segGen.addFirstSegment()\n      for (let i = n2 - 2; i >= 0; i--) {\n        segGen.addNextSegment(simp2[i], true)\n      }\n    } else {\n      segGen.addSegments(inputPts, false)\n      const simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol)\n      const n1 = simp1.length - 1\n      segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT)\n      segGen.addFirstSegment()\n      for (let i = 2; i <= n1; i++) {\n        segGen.addNextSegment(simp1[i], true)\n      }\n    }\n    segGen.addLastSegment()\n    segGen.closeRing()\n  }\n\n  computeRingBufferCurve (inputPts, side, segGen) {\n    let distTol = this.simplifyTolerance(this._distance)\n    if (side === Position.RIGHT) distTol = -distTol\n    const simp = BufferInputLineSimplifier.simplify(inputPts, distTol)\n    const n = simp.length - 1\n    segGen.initSideSegments(simp[n - 1], simp[0], side)\n    for (let i = 1; i <= n; i++) {\n      const addStartPoint = i !== 1\n      segGen.addNextSegment(simp[i], addStartPoint)\n    }\n    segGen.closeRing()\n  }\n\n  computeLineBufferCurve (inputPts, segGen) {\n    const distTol = this.simplifyTolerance(this._distance)\n    const simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol)\n    const n1 = simp1.length - 1\n    segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT)\n    for (let i = 2; i <= n1; i++) {\n      segGen.addNextSegment(simp1[i], true)\n    }\n    segGen.addLastSegment()\n    segGen.addLineEndCap(simp1[n1 - 1], simp1[n1])\n    const simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol)\n    const n2 = simp2.length - 1\n    segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT)\n    for (let i = n2 - 2; i >= 0; i--) {\n      segGen.addNextSegment(simp2[i], true)\n    }\n    segGen.addLastSegment()\n    segGen.addLineEndCap(simp2[1], simp2[0])\n    segGen.closeRing()\n  }\n\n  computePointCurve (pt, segGen) {\n    switch (this._bufParams.getEndCapStyle()) {\n      case BufferParameters.CAP_ROUND:\n        segGen.createCircle(pt)\n        break\n      case BufferParameters.CAP_SQUARE:\n        segGen.createSquare(pt)\n        break\n    }\n  }\n\n  getLineCurve (inputPts, distance) {\n    this._distance = distance\n    if (distance < 0.0 && !this._bufParams.isSingleSided()) return null\n    if (distance === 0.0) return null\n    const posDistance = Math.abs(distance)\n    const segGen = this.getSegGen(posDistance)\n    if (inputPts.length <= 1) {\n      this.computePointCurve(inputPts[0], segGen)\n    } else {\n      if (this._bufParams.isSingleSided()) {\n        const isRightSide = distance < 0.0\n        this.computeSingleSidedBufferCurve(inputPts, isRightSide, segGen)\n      } else this.computeLineBufferCurve(inputPts, segGen)\n    }\n    const lineCoord = segGen.getCoordinates()\n    return lineCoord\n  }\n\n  getBufferParameters () {\n    return this._bufParams\n  }\n\n  simplifyTolerance (bufDistance) {\n    return bufDistance * this._bufParams.getSimplifyFactor()\n  }\n\n  getRingCurve (inputPts, side, distance) {\n    this._distance = distance\n    if (inputPts.length <= 2) return this.getLineCurve(inputPts, distance)\n    if (distance === 0.0) {\n      return OffsetCurveBuilder.copyCoordinates(inputPts)\n    }\n    const segGen = this.getSegGen(distance)\n    this.computeRingBufferCurve(inputPts, side, segGen)\n    return segGen.getCoordinates()\n  }\n\n  computeOffsetCurve (inputPts, isRightSide, segGen) {\n    const distTol = this.simplifyTolerance(this._distance)\n    if (isRightSide) {\n      const simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol)\n      const n2 = simp2.length - 1\n      segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT)\n      segGen.addFirstSegment()\n      for (let i = n2 - 2; i >= 0; i--) {\n        segGen.addNextSegment(simp2[i], true)\n      }\n    } else {\n      const simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol)\n      const n1 = simp1.length - 1\n      segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT)\n      segGen.addFirstSegment()\n      for (let i = 2; i <= n1; i++) {\n        segGen.addNextSegment(simp1[i], true)\n      }\n    }\n    segGen.addLastSegment()\n  }\n\n  getSegGen (distance) {\n    return new OffsetSegmentGenerator(this._precisionModel, this._bufParams, distance)\n  }\n\n  getClass () {\n    return OffsetCurveBuilder\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nOffsetCurveBuilder.constructor_ = function () {\n  this._distance = 0.0\n  this._precisionModel = null\n  this._bufParams = null\n  const precisionModel = arguments[0]; const bufParams = arguments[1]\n  this._precisionModel = precisionModel\n  this._bufParams = bufParams\n}\n","import hasInterface from '../../../../../hasInterface'\nimport Position from '../../geomgraph/Position'\nimport Coordinate from '../../geom/Coordinate'\nimport Orientation from '../../algorithm/Orientation'\nimport Collections from '../../../../../java/util/Collections'\nimport DirectedEdge from '../../geomgraph/DirectedEdge'\nimport LineSegment from '../../geom/LineSegment'\nimport Comparable from '../../../../../java/lang/Comparable'\nimport ArrayList from '../../../../../java/util/ArrayList'\nimport List from '../../../../../java/util/List'\nexport default class SubgraphDepthLocater {\n  constructor () {\n    SubgraphDepthLocater.constructor_.apply(this, arguments)\n  }\n\n  findStabbedSegments () {\n    if (arguments.length === 1) {\n      const stabbingRayLeftPt = arguments[0]\n      const stabbedSegments = new ArrayList()\n      for (let i = this._subgraphs.iterator(); i.hasNext();) {\n        const bsg = i.next()\n        const env = bsg.getEnvelope()\n        if (stabbingRayLeftPt.y < env.getMinY() || stabbingRayLeftPt.y > env.getMaxY()) continue\n        this.findStabbedSegments(stabbingRayLeftPt, bsg.getDirectedEdges(), stabbedSegments)\n      }\n      return stabbedSegments\n    } else if (arguments.length === 3) {\n      if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && arguments[1] instanceof DirectedEdge)) {\n        const stabbingRayLeftPt = arguments[0]; const dirEdge = arguments[1]; const stabbedSegments = arguments[2]\n        const pts = dirEdge.getEdge().getCoordinates()\n        for (let i = 0; i < pts.length - 1; i++) {\n          this._seg.p0 = pts[i]\n          this._seg.p1 = pts[i + 1]\n          if (this._seg.p0.y > this._seg.p1.y) this._seg.reverse()\n          const maxx = Math.max(this._seg.p0.x, this._seg.p1.x)\n          if (maxx < stabbingRayLeftPt.x) continue\n          if (this._seg.isHorizontal()) continue\n          if (stabbingRayLeftPt.y < this._seg.p0.y || stabbingRayLeftPt.y > this._seg.p1.y) continue\n          if (Orientation.index(this._seg.p0, this._seg.p1, stabbingRayLeftPt) === Orientation.RIGHT) continue\n          let depth = dirEdge.getDepth(Position.LEFT)\n          if (!this._seg.p0.equals(pts[i])) depth = dirEdge.getDepth(Position.RIGHT)\n          const ds = new DepthSegment(this._seg, depth)\n          stabbedSegments.add(ds)\n        }\n      } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && hasInterface(arguments[1], List))) {\n        const stabbingRayLeftPt = arguments[0]; const dirEdges = arguments[1]; const stabbedSegments = arguments[2]\n        for (let i = dirEdges.iterator(); i.hasNext();) {\n          const de = i.next()\n          if (!de.isForward()) continue\n          this.findStabbedSegments(stabbingRayLeftPt, de, stabbedSegments)\n        }\n      }\n    }\n  }\n\n  getDepth (p) {\n    const stabbedSegments = this.findStabbedSegments(p)\n    if (stabbedSegments.size() === 0) return 0\n    const ds = Collections.min(stabbedSegments)\n    return ds._leftDepth\n  }\n\n  getClass () {\n    return SubgraphDepthLocater\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nclass DepthSegment {\n  constructor () {\n    DepthSegment.constructor_.apply(this, arguments)\n  }\n\n  compareTo (obj) {\n    const other = obj\n    if (this._upwardSeg.minX() >= other._upwardSeg.maxX()) return 1\n    if (this._upwardSeg.maxX() <= other._upwardSeg.minX()) return -1\n    let orientIndex = this._upwardSeg.orientationIndex(other._upwardSeg)\n    if (orientIndex !== 0) return orientIndex\n    orientIndex = -1 * other._upwardSeg.orientationIndex(this._upwardSeg)\n    if (orientIndex !== 0) return orientIndex\n    return this._upwardSeg.compareTo(other._upwardSeg)\n  }\n\n  compareX (seg0, seg1) {\n    const compare0 = seg0.p0.compareTo(seg1.p0)\n    if (compare0 !== 0) return compare0\n    return seg0.p1.compareTo(seg1.p1)\n  }\n\n  toString () {\n    return this._upwardSeg.toString()\n  }\n\n  getClass () {\n    return DepthSegment\n  }\n\n  get interfaces_ () {\n    return [Comparable]\n  }\n}\nDepthSegment.constructor_ = function () {\n  this._upwardSeg = null\n  this._leftDepth = null\n  const seg = arguments[0]; const depth = arguments[1]\n  this._upwardSeg = new LineSegment(seg)\n  this._leftDepth = depth\n}\nSubgraphDepthLocater.DepthSegment = DepthSegment\nSubgraphDepthLocater.constructor_ = function () {\n  this._subgraphs = null\n  this._seg = new LineSegment()\n  const subgraphs = arguments[0]\n  this._subgraphs = subgraphs\n}\n","import Location from '../../geom/Location'\nimport LineString from '../../geom/LineString'\nimport Position from '../../geomgraph/Position'\nimport Point from '../../geom/Point'\nimport NodedSegmentString from '../../noding/NodedSegmentString'\nimport Polygon from '../../geom/Polygon'\nimport MultiPoint from '../../geom/MultiPoint'\nimport LinearRing from '../../geom/LinearRing'\nimport Orientation from '../../algorithm/Orientation'\nimport MultiPolygon from '../../geom/MultiPolygon'\nimport Label from '../../geomgraph/Label'\nimport GeometryCollection from '../../geom/GeometryCollection'\nimport UnsupportedOperationException from '../../../../../java/lang/UnsupportedOperationException'\nimport CoordinateArrays from '../../geom/CoordinateArrays'\nimport ArrayList from '../../../../../java/util/ArrayList'\nimport Distance from '../../algorithm/Distance'\nimport MultiLineString from '../../geom/MultiLineString'\nimport Triangle from '../../geom/Triangle'\nexport default class OffsetCurveSetBuilder {\n  constructor () {\n    OffsetCurveSetBuilder.constructor_.apply(this, arguments)\n  }\n\n  addPoint (p) {\n    if (this._distance <= 0.0) return null\n    const coord = p.getCoordinates()\n    const curve = this._curveBuilder.getLineCurve(coord, this._distance)\n    this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR)\n  }\n\n  addPolygon (p) {\n    let offsetDistance = this._distance\n    let offsetSide = Position.LEFT\n    if (this._distance < 0.0) {\n      offsetDistance = -this._distance\n      offsetSide = Position.RIGHT\n    }\n    const shell = p.getExteriorRing()\n    const shellCoord = CoordinateArrays.removeRepeatedPoints(shell.getCoordinates())\n    if (this._distance < 0.0 && this.isErodedCompletely(shell, this._distance)) return null\n    if (this._distance <= 0.0 && shellCoord.length < 3) return null\n    this.addPolygonRing(shellCoord, offsetDistance, offsetSide, Location.EXTERIOR, Location.INTERIOR)\n    for (let i = 0; i < p.getNumInteriorRing(); i++) {\n      const hole = p.getInteriorRingN(i)\n      const holeCoord = CoordinateArrays.removeRepeatedPoints(hole.getCoordinates())\n      if (this._distance > 0.0 && this.isErodedCompletely(hole, -this._distance)) continue\n      this.addPolygonRing(holeCoord, offsetDistance, Position.opposite(offsetSide), Location.INTERIOR, Location.EXTERIOR)\n    }\n  }\n\n  isTriangleErodedCompletely (triangleCoord, bufferDistance) {\n    const tri = new Triangle(triangleCoord[0], triangleCoord[1], triangleCoord[2])\n    const inCentre = tri.inCentre()\n    const distToCentre = Distance.pointToSegment(inCentre, tri.p0, tri.p1)\n    return distToCentre < Math.abs(bufferDistance)\n  }\n\n  addLineString (line) {\n    if (this._distance <= 0.0 && !this._curveBuilder.getBufferParameters().isSingleSided()) return null\n    const coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates())\n    const curve = this._curveBuilder.getLineCurve(coord, this._distance)\n    this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR)\n  }\n\n  addCurve (coord, leftLoc, rightLoc) {\n    if (coord === null || coord.length < 2) return null\n    const e = new NodedSegmentString(coord, new Label(0, Location.BOUNDARY, leftLoc, rightLoc))\n    this._curveList.add(e)\n  }\n\n  getCurves () {\n    this.add(this._inputGeom)\n    return this._curveList\n  }\n\n  addPolygonRing (coord, offsetDistance, side, cwLeftLoc, cwRightLoc) {\n    if (offsetDistance === 0.0 && coord.length < LinearRing.MINIMUM_VALID_SIZE) return null\n    let leftLoc = cwLeftLoc\n    let rightLoc = cwRightLoc\n    if (coord.length >= LinearRing.MINIMUM_VALID_SIZE && Orientation.isCCW(coord)) {\n      leftLoc = cwRightLoc\n      rightLoc = cwLeftLoc\n      side = Position.opposite(side)\n    }\n    const curve = this._curveBuilder.getRingCurve(coord, side, offsetDistance)\n    this.addCurve(curve, leftLoc, rightLoc)\n  }\n\n  add (g) {\n    if (g.isEmpty()) return null\n    if (g instanceof Polygon) this.addPolygon(g); else if (g instanceof LineString) this.addLineString(g); else if (g instanceof Point) this.addPoint(g); else if (g instanceof MultiPoint) this.addCollection(g); else if (g instanceof MultiLineString) this.addCollection(g); else if (g instanceof MultiPolygon) this.addCollection(g); else if (g instanceof GeometryCollection) this.addCollection(g); else throw new UnsupportedOperationException(g.getClass().getName())\n  }\n\n  isErodedCompletely (ring, bufferDistance) {\n    const ringCoord = ring.getCoordinates()\n    const minDiam = 0.0\n    if (ringCoord.length < 4) return bufferDistance < 0\n    if (ringCoord.length === 4) return this.isTriangleErodedCompletely(ringCoord, bufferDistance)\n    const env = ring.getEnvelopeInternal()\n    const envMinDimension = Math.min(env.getHeight(), env.getWidth())\n    if (bufferDistance < 0.0 && 2 * Math.abs(bufferDistance) > envMinDimension) return true\n    return false\n  }\n\n  addCollection (gc) {\n    for (let i = 0; i < gc.getNumGeometries(); i++) {\n      const g = gc.getGeometryN(i)\n      this.add(g)\n    }\n  }\n\n  getClass () {\n    return OffsetCurveSetBuilder\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nOffsetCurveSetBuilder.constructor_ = function () {\n  this._inputGeom = null\n  this._distance = null\n  this._curveBuilder = null\n  this._curveList = new ArrayList()\n  const inputGeom = arguments[0]; const distance = arguments[1]; const curveBuilder = arguments[2]\n  this._inputGeom = inputGeom\n  this._distance = distance\n  this._curveBuilder = curveBuilder\n}\n","import StringBuffer from '../../../../java/lang/StringBuffer'\nimport Location from '../geom/Location'\nimport Position from './Position'\nimport TopologyException from '../geom/TopologyException'\nimport System from '../../../../java/lang/System'\nimport SimplePointInAreaLocator from '../algorithm/locate/SimplePointInAreaLocator'\nimport ArrayList from '../../../../java/util/ArrayList'\nimport Assert from '../util/Assert'\nimport TreeMap from '../../../../java/util/TreeMap'\nexport default class EdgeEndStar {\n  constructor () {\n    EdgeEndStar.constructor_.apply(this, arguments)\n  }\n\n  getNextCW (ee) {\n    this.getEdges()\n    const i = this._edgeList.indexOf(ee)\n    let iNextCW = i - 1\n    if (i === 0) iNextCW = this._edgeList.size() - 1\n    return this._edgeList.get(iNextCW)\n  }\n\n  propagateSideLabels (geomIndex) {\n    let startLoc = Location.NONE\n    for (let it = this.iterator(); it.hasNext();) {\n      const e = it.next()\n      const label = e.getLabel()\n      if (label.isArea(geomIndex) && label.getLocation(geomIndex, Position.LEFT) !== Location.NONE) startLoc = label.getLocation(geomIndex, Position.LEFT)\n    }\n    if (startLoc === Location.NONE) return null\n    let currLoc = startLoc\n    for (let it = this.iterator(); it.hasNext();) {\n      const e = it.next()\n      const label = e.getLabel()\n      if (label.getLocation(geomIndex, Position.ON) === Location.NONE) label.setLocation(geomIndex, Position.ON, currLoc)\n      if (label.isArea(geomIndex)) {\n        const leftLoc = label.getLocation(geomIndex, Position.LEFT)\n        const rightLoc = label.getLocation(geomIndex, Position.RIGHT)\n        if (rightLoc !== Location.NONE) {\n          if (rightLoc !== currLoc) throw new TopologyException('side location conflict', e.getCoordinate())\n          if (leftLoc === Location.NONE) {\n            Assert.shouldNeverReachHere('found single null side (at ' + e.getCoordinate() + ')')\n          }\n          currLoc = leftLoc\n        } else {\n          Assert.isTrue(label.getLocation(geomIndex, Position.LEFT) === Location.NONE, 'found single null side')\n          label.setLocation(geomIndex, Position.RIGHT, currLoc)\n          label.setLocation(geomIndex, Position.LEFT, currLoc)\n        }\n      }\n    }\n  }\n\n  getCoordinate () {\n    const it = this.iterator()\n    if (!it.hasNext()) return null\n    const e = it.next()\n    return e.getCoordinate()\n  }\n\n  print (out) {\n    System.out.println('EdgeEndStar:   ' + this.getCoordinate())\n    for (let it = this.iterator(); it.hasNext();) {\n      const e = it.next()\n      e.print(out)\n    }\n  }\n\n  isAreaLabelsConsistent (geomGraph) {\n    this.computeEdgeEndLabels(geomGraph.getBoundaryNodeRule())\n    return this.checkAreaLabelsConsistent(0)\n  }\n\n  checkAreaLabelsConsistent (geomIndex) {\n    const edges = this.getEdges()\n    if (edges.size() <= 0) return true\n    const lastEdgeIndex = edges.size() - 1\n    const startLabel = edges.get(lastEdgeIndex).getLabel()\n    const startLoc = startLabel.getLocation(geomIndex, Position.LEFT)\n    Assert.isTrue(startLoc !== Location.NONE, 'Found unlabelled area edge')\n    let currLoc = startLoc\n    for (let it = this.iterator(); it.hasNext();) {\n      const e = it.next()\n      const label = e.getLabel()\n      Assert.isTrue(label.isArea(geomIndex), 'Found non-area edge')\n      const leftLoc = label.getLocation(geomIndex, Position.LEFT)\n      const rightLoc = label.getLocation(geomIndex, Position.RIGHT)\n      if (leftLoc === rightLoc) {\n        return false\n      }\n      if (rightLoc !== currLoc) {\n        return false\n      }\n      currLoc = leftLoc\n    }\n    return true\n  }\n\n  findIndex (eSearch) {\n    this.iterator()\n    for (let i = 0; i < this._edgeList.size(); i++) {\n      const e = this._edgeList.get(i)\n      if (e === eSearch) return i\n    }\n    return -1\n  }\n\n  iterator () {\n    return this.getEdges().iterator()\n  }\n\n  getEdges () {\n    if (this._edgeList === null) {\n      this._edgeList = new ArrayList(this._edgeMap.values())\n    }\n    return this._edgeList\n  }\n\n  getLocation (geomIndex, p, geom) {\n    if (this._ptInAreaLocation[geomIndex] === Location.NONE) {\n      this._ptInAreaLocation[geomIndex] = SimplePointInAreaLocator.locate(p, geom[geomIndex].getGeometry())\n    }\n    return this._ptInAreaLocation[geomIndex]\n  }\n\n  toString () {\n    const buf = new StringBuffer()\n    buf.append('EdgeEndStar:   ' + this.getCoordinate())\n    buf.append('\\n')\n    for (let it = this.iterator(); it.hasNext();) {\n      const e = it.next()\n      buf.append(e)\n      buf.append('\\n')\n    }\n    return buf.toString()\n  }\n\n  computeEdgeEndLabels (boundaryNodeRule) {\n    for (let it = this.iterator(); it.hasNext();) {\n      const ee = it.next()\n      ee.computeLabel(boundaryNodeRule)\n    }\n  }\n\n  computeLabelling (geomGraph) {\n    this.computeEdgeEndLabels(geomGraph[0].getBoundaryNodeRule())\n    this.propagateSideLabels(0)\n    this.propagateSideLabels(1)\n    const hasDimensionalCollapseEdge = [false, false]\n    for (let it = this.iterator(); it.hasNext();) {\n      const e = it.next()\n      const label = e.getLabel()\n      for (let geomi = 0; geomi < 2; geomi++) {\n        if (label.isLine(geomi) && label.getLocation(geomi) === Location.BOUNDARY) hasDimensionalCollapseEdge[geomi] = true\n      }\n    }\n    for (let it = this.iterator(); it.hasNext();) {\n      const e = it.next()\n      const label = e.getLabel()\n      for (let geomi = 0; geomi < 2; geomi++) {\n        if (label.isAnyNull(geomi)) {\n          let loc = Location.NONE\n          if (hasDimensionalCollapseEdge[geomi]) {\n            loc = Location.EXTERIOR\n          } else {\n            const p = e.getCoordinate()\n            loc = this.getLocation(geomi, p, geomGraph)\n          }\n          label.setAllLocationsIfNull(geomi, loc)\n        }\n      }\n    }\n  }\n\n  getDegree () {\n    return this._edgeMap.size()\n  }\n\n  insertEdgeEnd (e, obj) {\n    this._edgeMap.put(e, obj)\n    this._edgeList = null\n  }\n\n  getClass () {\n    return EdgeEndStar\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nEdgeEndStar.constructor_ = function () {\n  this._edgeMap = new TreeMap()\n  this._edgeList = null\n  this._ptInAreaLocation = [Location.NONE, Location.NONE]\n}\n","import Location from '../geom/Location'\nimport Position from './Position'\nimport TopologyException from '../geom/TopologyException'\nimport EdgeEndStar from './EdgeEndStar'\nimport System from '../../../../java/lang/System'\nimport Label from './Label'\nimport ArrayList from '../../../../java/util/ArrayList'\nimport Quadrant from './Quadrant'\nimport Assert from '../util/Assert'\nexport default class DirectedEdgeStar extends EdgeEndStar {\n  constructor () {\n    super()\n    DirectedEdgeStar.constructor_.apply(this, arguments)\n  }\n\n  linkResultDirectedEdges () {\n    this.getResultAreaEdges()\n    let firstOut = null\n    let incoming = null\n    let state = this._SCANNING_FOR_INCOMING\n    for (let i = 0; i < this._resultAreaEdgeList.size(); i++) {\n      const nextOut = this._resultAreaEdgeList.get(i)\n      const nextIn = nextOut.getSym()\n      if (!nextOut.getLabel().isArea()) continue\n      if (firstOut === null && nextOut.isInResult()) firstOut = nextOut\n      switch (state) {\n        case this._SCANNING_FOR_INCOMING:\n          if (!nextIn.isInResult()) continue\n          incoming = nextIn\n          state = this._LINKING_TO_OUTGOING\n          break\n        case this._LINKING_TO_OUTGOING:\n          if (!nextOut.isInResult()) continue\n          incoming.setNext(nextOut)\n          state = this._SCANNING_FOR_INCOMING\n          break\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      if (firstOut === null) throw new TopologyException('no outgoing dirEdge found', this.getCoordinate())\n      Assert.isTrue(firstOut.isInResult(), 'unable to link last incoming dirEdge')\n      incoming.setNext(firstOut)\n    }\n  }\n\n  insert (ee) {\n    const de = ee\n    this.insertEdgeEnd(de, de)\n  }\n\n  getRightmostEdge () {\n    const edges = this.getEdges()\n    const size = edges.size()\n    if (size < 1) return null\n    const de0 = edges.get(0)\n    if (size === 1) return de0\n    const deLast = edges.get(size - 1)\n    const quad0 = de0.getQuadrant()\n    const quad1 = deLast.getQuadrant()\n    if (Quadrant.isNorthern(quad0) && Quadrant.isNorthern(quad1)) return de0; else if (!Quadrant.isNorthern(quad0) && !Quadrant.isNorthern(quad1)) return deLast; else {\n      const nonHorizontalEdge = null\n      if (de0.getDy() !== 0) return de0; else if (deLast.getDy() !== 0) return deLast\n    }\n    Assert.shouldNeverReachHere('found two horizontal edges incident on node')\n    return null\n  }\n\n  print (out) {\n    System.out.println('DirectedEdgeStar: ' + this.getCoordinate())\n    for (let it = this.iterator(); it.hasNext();) {\n      const de = it.next()\n      out.print('out ')\n      de.print(out)\n      out.println()\n      out.print('in ')\n      de.getSym().print(out)\n      out.println()\n    }\n  }\n\n  getResultAreaEdges () {\n    if (this._resultAreaEdgeList !== null) return this._resultAreaEdgeList\n    this._resultAreaEdgeList = new ArrayList()\n    for (let it = this.iterator(); it.hasNext();) {\n      const de = it.next()\n      if (de.isInResult() || de.getSym().isInResult()) this._resultAreaEdgeList.add(de)\n    }\n    return this._resultAreaEdgeList\n  }\n\n  updateLabelling (nodeLabel) {\n    for (let it = this.iterator(); it.hasNext();) {\n      const de = it.next()\n      const label = de.getLabel()\n      label.setAllLocationsIfNull(0, nodeLabel.getLocation(0))\n      label.setAllLocationsIfNull(1, nodeLabel.getLocation(1))\n    }\n  }\n\n  linkAllDirectedEdges () {\n    this.getEdges()\n    let prevOut = null\n    let firstIn = null\n    for (let i = this._edgeList.size() - 1; i >= 0; i--) {\n      const nextOut = this._edgeList.get(i)\n      const nextIn = nextOut.getSym()\n      if (firstIn === null) firstIn = nextIn\n      if (prevOut !== null) nextIn.setNext(prevOut)\n      prevOut = nextOut\n    }\n    firstIn.setNext(prevOut)\n  }\n\n  computeDepths () {\n    if (arguments.length === 1) {\n      const de = arguments[0]\n      const edgeIndex = this.findIndex(de)\n      const startDepth = de.getDepth(Position.LEFT)\n      const targetLastDepth = de.getDepth(Position.RIGHT)\n      const nextDepth = this.computeDepths(edgeIndex + 1, this._edgeList.size(), startDepth)\n      const lastDepth = this.computeDepths(0, edgeIndex, nextDepth)\n      if (lastDepth !== targetLastDepth) throw new TopologyException('depth mismatch at ' + de.getCoordinate())\n    } else if (arguments.length === 3) {\n      const startIndex = arguments[0]; const endIndex = arguments[1]; const startDepth = arguments[2]\n      let currDepth = startDepth\n      for (let i = startIndex; i < endIndex; i++) {\n        const nextDe = this._edgeList.get(i)\n        nextDe.setEdgeDepths(Position.RIGHT, currDepth)\n        currDepth = nextDe.getDepth(Position.LEFT)\n      }\n      return currDepth\n    }\n  }\n\n  mergeSymLabels () {\n    for (let it = this.iterator(); it.hasNext();) {\n      const de = it.next()\n      const label = de.getLabel()\n      label.merge(de.getSym().getLabel())\n    }\n  }\n\n  linkMinimalDirectedEdges (er) {\n    let firstOut = null\n    let incoming = null\n    let state = this._SCANNING_FOR_INCOMING\n    for (let i = this._resultAreaEdgeList.size() - 1; i >= 0; i--) {\n      const nextOut = this._resultAreaEdgeList.get(i)\n      const nextIn = nextOut.getSym()\n      if (firstOut === null && nextOut.getEdgeRing() === er) firstOut = nextOut\n      switch (state) {\n        case this._SCANNING_FOR_INCOMING:\n          if (nextIn.getEdgeRing() !== er) continue\n          incoming = nextIn\n          state = this._LINKING_TO_OUTGOING\n          break\n        case this._LINKING_TO_OUTGOING:\n          if (nextOut.getEdgeRing() !== er) continue\n          incoming.setNextMin(nextOut)\n          state = this._SCANNING_FOR_INCOMING\n          break\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      Assert.isTrue(firstOut !== null, 'found null for first outgoing dirEdge')\n      Assert.isTrue(firstOut.getEdgeRing() === er, 'unable to link last incoming dirEdge')\n      incoming.setNextMin(firstOut)\n    }\n  }\n\n  getOutgoingDegree () {\n    if (arguments.length === 0) {\n      let degree = 0\n      for (let it = this.iterator(); it.hasNext();) {\n        const de = it.next()\n        if (de.isInResult()) degree++\n      }\n      return degree\n    } else if (arguments.length === 1) {\n      const er = arguments[0]\n      let degree = 0\n      for (let it = this.iterator(); it.hasNext();) {\n        const de = it.next()\n        if (de.getEdgeRing() === er) degree++\n      }\n      return degree\n    }\n  }\n\n  getLabel () {\n    return this._label\n  }\n\n  findCoveredLineEdges () {\n    let startLoc = Location.NONE\n    for (let it = this.iterator(); it.hasNext();) {\n      const nextOut = it.next()\n      const nextIn = nextOut.getSym()\n      if (!nextOut.isLineEdge()) {\n        if (nextOut.isInResult()) {\n          startLoc = Location.INTERIOR\n          break\n        }\n        if (nextIn.isInResult()) {\n          startLoc = Location.EXTERIOR\n          break\n        }\n      }\n    }\n    if (startLoc === Location.NONE) return null\n    let currLoc = startLoc\n    for (let it = this.iterator(); it.hasNext();) {\n      const nextOut = it.next()\n      const nextIn = nextOut.getSym()\n      if (nextOut.isLineEdge()) {\n        nextOut.getEdge().setCovered(currLoc === Location.INTERIOR)\n      } else {\n        if (nextOut.isInResult()) currLoc = Location.EXTERIOR\n        if (nextIn.isInResult()) currLoc = Location.INTERIOR\n      }\n    }\n  }\n\n  computeLabelling (geom) {\n    super.computeLabelling.call(this, geom)\n    this._label = new Label(Location.NONE)\n    for (let it = this.iterator(); it.hasNext();) {\n      const ee = it.next()\n      const e = ee.getEdge()\n      const eLabel = e.getLabel()\n      for (let i = 0; i < 2; i++) {\n        const eLoc = eLabel.getLocation(i)\n        if (eLoc === Location.INTERIOR || eLoc === Location.BOUNDARY) this._label.setLocation(i, Location.INTERIOR)\n      }\n    }\n  }\n\n  getClass () {\n    return DirectedEdgeStar\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nDirectedEdgeStar.constructor_ = function () {\n  this._resultAreaEdgeList = null\n  this._label = null\n  this._SCANNING_FOR_INCOMING = 1\n  this._LINKING_TO_OUTGOING = 2\n}\n","import DirectedEdgeStar from '../../geomgraph/DirectedEdgeStar'\nimport Node from '../../geomgraph/Node'\nimport NodeFactory from '../../geomgraph/NodeFactory'\nexport default class OverlayNodeFactory extends NodeFactory {\n  constructor () {\n    super()\n    OverlayNodeFactory.constructor_.apply(this, arguments)\n  }\n\n  createNode (coord) {\n    return new Node(coord, new DirectedEdgeStar())\n  }\n\n  getClass () {\n    return OverlayNodeFactory\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nOverlayNodeFactory.constructor_ = function () {}\n","import Comparable from '../../../../java/lang/Comparable'\nimport CoordinateArrays from '../geom/CoordinateArrays'\nexport default class OrientedCoordinateArray {\n  constructor () {\n    OrientedCoordinateArray.constructor_.apply(this, arguments)\n  }\n\n  static orientation (pts) {\n    return CoordinateArrays.increasingDirection(pts) === 1\n  }\n\n  static compareOriented (pts1, orientation1, pts2, orientation2) {\n    const dir1 = orientation1 ? 1 : -1\n    const dir2 = orientation2 ? 1 : -1\n    const limit1 = orientation1 ? pts1.length : -1\n    const limit2 = orientation2 ? pts2.length : -1\n    let i1 = orientation1 ? 0 : pts1.length - 1\n    let i2 = orientation2 ? 0 : pts2.length - 1\n    const comp = 0\n    while (true) {\n      const compPt = pts1[i1].compareTo(pts2[i2])\n      if (compPt !== 0) return compPt\n      i1 += dir1\n      i2 += dir2\n      const done1 = i1 === limit1\n      const done2 = i2 === limit2\n      if (done1 && !done2) return -1\n      if (!done1 && done2) return 1\n      if (done1 && done2) return 0\n    }\n  }\n\n  compareTo (o1) {\n    const oca = o1\n    const comp = OrientedCoordinateArray.compareOriented(this._pts, this._orientation, oca._pts, oca._orientation)\n    return comp\n  }\n\n  getClass () {\n    return OrientedCoordinateArray\n  }\n\n  get interfaces_ () {\n    return [Comparable]\n  }\n}\nOrientedCoordinateArray.constructor_ = function () {\n  this._pts = null\n  this._orientation = null\n  const pts = arguments[0]\n  this._pts = pts\n  this._orientation = OrientedCoordinateArray.orientation(pts)\n}\n","import OrientedCoordinateArray from '../noding/OrientedCoordinateArray'\nimport ArrayList from '../../../../java/util/ArrayList'\nimport TreeMap from '../../../../java/util/TreeMap'\nexport default class EdgeList {\n  constructor () {\n    EdgeList.constructor_.apply(this, arguments)\n  }\n\n  print (out) {\n    out.print('MULTILINESTRING ( ')\n    for (let j = 0; j < this._edges.size(); j++) {\n      const e = this._edges.get(j)\n      if (j > 0) out.print(',')\n      out.print('(')\n      const pts = e.getCoordinates()\n      for (let i = 0; i < pts.length; i++) {\n        if (i > 0) out.print(',')\n        out.print(pts[i].x + ' ' + pts[i].y)\n      }\n      out.println(')')\n    }\n    out.print(')  ')\n  }\n\n  addAll (edgeColl) {\n    for (let i = edgeColl.iterator(); i.hasNext();) {\n      this.add(i.next())\n    }\n  }\n\n  findEdgeIndex (e) {\n    for (let i = 0; i < this._edges.size(); i++) {\n      if (this._edges.get(i).equals(e)) return i\n    }\n    return -1\n  }\n\n  iterator () {\n    return this._edges.iterator()\n  }\n\n  getEdges () {\n    return this._edges\n  }\n\n  get (i) {\n    return this._edges.get(i)\n  }\n\n  findEqualEdge (e) {\n    const oca = new OrientedCoordinateArray(e.getCoordinates())\n    const matchEdge = this._ocaMap.get(oca)\n    return matchEdge\n  }\n\n  add (e) {\n    this._edges.add(e)\n    const oca = new OrientedCoordinateArray(e.getCoordinates())\n    this._ocaMap.put(oca, e)\n  }\n\n  getClass () {\n    return EdgeList\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nEdgeList.constructor_ = function () {\n  this._edges = new ArrayList()\n  this._ocaMap = new TreeMap()\n}\n","export default class SegmentIntersector {\n  constructor () {\n    SegmentIntersector.constructor_.apply(this, arguments)\n  }\n\n  processIntersections (e0, segIndex0, e1, segIndex1) {}\n  isDone () {}\n  getClass () {\n    return SegmentIntersector\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nSegmentIntersector.constructor_ = function () {}\n","import SegmentIntersector from './SegmentIntersector'\nexport default class IntersectionAdder {\n  constructor () {\n    IntersectionAdder.constructor_.apply(this, arguments)\n  }\n\n  static isAdjacentSegments (i1, i2) {\n    return Math.abs(i1 - i2) === 1\n  }\n\n  isTrivialIntersection (e0, segIndex0, e1, segIndex1) {\n    if (e0 === e1) {\n      if (this._li.getIntersectionNum() === 1) {\n        if (IntersectionAdder.isAdjacentSegments(segIndex0, segIndex1)) return true\n        if (e0.isClosed()) {\n          const maxSegIndex = e0.size() - 1\n          if (segIndex0 === 0 && segIndex1 === maxSegIndex || segIndex1 === 0 && segIndex0 === maxSegIndex) {\n            return true\n          }\n        }\n      }\n    }\n    return false\n  }\n\n  getProperIntersectionPoint () {\n    return this._properIntersectionPoint\n  }\n\n  hasProperInteriorIntersection () {\n    return this._hasProperInterior\n  }\n\n  getLineIntersector () {\n    return this._li\n  }\n\n  hasProperIntersection () {\n    return this._hasProper\n  }\n\n  processIntersections (e0, segIndex0, e1, segIndex1) {\n    if (e0 === e1 && segIndex0 === segIndex1) return null\n    this.numTests++\n    const p00 = e0.getCoordinates()[segIndex0]\n    const p01 = e0.getCoordinates()[segIndex0 + 1]\n    const p10 = e1.getCoordinates()[segIndex1]\n    const p11 = e1.getCoordinates()[segIndex1 + 1]\n    this._li.computeIntersection(p00, p01, p10, p11)\n    if (this._li.hasIntersection()) {\n      this.numIntersections++\n      if (this._li.isInteriorIntersection()) {\n        this.numInteriorIntersections++\n        this._hasInterior = true\n      }\n      if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n        this._hasIntersection = true\n        e0.addIntersections(this._li, segIndex0, 0)\n        e1.addIntersections(this._li, segIndex1, 1)\n        if (this._li.isProper()) {\n          this.numProperIntersections++\n          this._hasProper = true\n          this._hasProperInterior = true\n        }\n      }\n    }\n  }\n\n  hasIntersection () {\n    return this._hasIntersection\n  }\n\n  isDone () {\n    return false\n  }\n\n  hasInteriorIntersection () {\n    return this._hasInterior\n  }\n\n  getClass () {\n    return IntersectionAdder\n  }\n\n  get interfaces_ () {\n    return [SegmentIntersector]\n  }\n}\nIntersectionAdder.constructor_ = function () {\n  this._hasIntersection = false\n  this._hasProper = false\n  this._hasProperInterior = false\n  this._hasInterior = false\n  this._properIntersectionPoint = null\n  this._li = null\n  this._isSelfIntersection = null\n  this.numIntersections = 0\n  this.numInteriorIntersections = 0\n  this.numProperIntersections = 0\n  this.numTests = 0\n  const li = arguments[0]\n  this._li = li\n}\n","import Location from '../../geom/Location'\nimport BufferSubgraph from './BufferSubgraph'\nimport PolygonBuilder from '../overlay/PolygonBuilder'\nimport GeometryFactory from '../../geom/GeometryFactory'\nimport Position from '../../geomgraph/Position'\nimport MCIndexNoder from '../../noding/MCIndexNoder'\nimport OffsetCurveBuilder from './OffsetCurveBuilder'\nimport Collections from '../../../../../java/util/Collections'\nimport SubgraphDepthLocater from './SubgraphDepthLocater'\nimport OffsetCurveSetBuilder from './OffsetCurveSetBuilder'\nimport Label from '../../geomgraph/Label'\nimport OverlayNodeFactory from '../overlay/OverlayNodeFactory'\nimport EdgeList from '../../geomgraph/EdgeList'\nimport ArrayList from '../../../../../java/util/ArrayList'\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector'\nimport IntersectionAdder from '../../noding/IntersectionAdder'\nimport Edge from '../../geomgraph/Edge'\nimport PlanarGraph from '../../geomgraph/PlanarGraph'\nexport default class BufferBuilder {\n  constructor () {\n    BufferBuilder.constructor_.apply(this, arguments)\n  }\n\n  static depthDelta (label) {\n    const lLoc = label.getLocation(0, Position.LEFT)\n    const rLoc = label.getLocation(0, Position.RIGHT)\n    if (lLoc === Location.INTERIOR && rLoc === Location.EXTERIOR) return 1; else if (lLoc === Location.EXTERIOR && rLoc === Location.INTERIOR) return -1\n    return 0\n  }\n\n  static convertSegStrings (it) {\n    const fact = new GeometryFactory()\n    const lines = new ArrayList()\n    while (it.hasNext()) {\n      const ss = it.next()\n      const line = fact.createLineString(ss.getCoordinates())\n      lines.add(line)\n    }\n    return fact.buildGeometry(lines)\n  }\n\n  setWorkingPrecisionModel (pm) {\n    this._workingPrecisionModel = pm\n  }\n\n  insertUniqueEdge (e) {\n    const existingEdge = this._edgeList.findEqualEdge(e)\n    if (existingEdge !== null) {\n      const existingLabel = existingEdge.getLabel()\n      let labelToMerge = e.getLabel()\n      if (!existingEdge.isPointwiseEqual(e)) {\n        labelToMerge = new Label(e.getLabel())\n        labelToMerge.flip()\n      }\n      existingLabel.merge(labelToMerge)\n      const mergeDelta = BufferBuilder.depthDelta(labelToMerge)\n      const existingDelta = existingEdge.getDepthDelta()\n      const newDelta = existingDelta + mergeDelta\n      existingEdge.setDepthDelta(newDelta)\n    } else {\n      this._edgeList.add(e)\n      e.setDepthDelta(BufferBuilder.depthDelta(e.getLabel()))\n    }\n  }\n\n  buildSubgraphs (subgraphList, polyBuilder) {\n    const processedGraphs = new ArrayList()\n    for (let i = subgraphList.iterator(); i.hasNext();) {\n      const subgraph = i.next()\n      const p = subgraph.getRightmostCoordinate()\n      const locater = new SubgraphDepthLocater(processedGraphs)\n      const outsideDepth = locater.getDepth(p)\n      subgraph.computeDepth(outsideDepth)\n      subgraph.findResultEdges()\n      processedGraphs.add(subgraph)\n      polyBuilder.add(subgraph.getDirectedEdges(), subgraph.getNodes())\n    }\n  }\n\n  createSubgraphs (graph) {\n    const subgraphList = new ArrayList()\n    for (let i = graph.getNodes().iterator(); i.hasNext();) {\n      const node = i.next()\n      if (!node.isVisited()) {\n        const subgraph = new BufferSubgraph()\n        subgraph.create(node)\n        subgraphList.add(subgraph)\n      }\n    }\n    Collections.sort(subgraphList, Collections.reverseOrder())\n    return subgraphList\n  }\n\n  createEmptyResultGeometry () {\n    const emptyGeom = this._geomFact.createPolygon()\n    return emptyGeom\n  }\n\n  getNoder (precisionModel) {\n    if (this._workingNoder !== null) return this._workingNoder\n    const noder = new MCIndexNoder()\n    const li = new RobustLineIntersector()\n    li.setPrecisionModel(precisionModel)\n    noder.setSegmentIntersector(new IntersectionAdder(li))\n    return noder\n  }\n\n  buffer (g, distance) {\n    let precisionModel = this._workingPrecisionModel\n    if (precisionModel === null) precisionModel = g.getPrecisionModel()\n    this._geomFact = g.getFactory()\n    const curveBuilder = new OffsetCurveBuilder(precisionModel, this._bufParams)\n    const curveSetBuilder = new OffsetCurveSetBuilder(g, distance, curveBuilder)\n    const bufferSegStrList = curveSetBuilder.getCurves()\n    if (bufferSegStrList.size() <= 0) {\n      return this.createEmptyResultGeometry()\n    }\n    this.computeNodedEdges(bufferSegStrList, precisionModel)\n    this._graph = new PlanarGraph(new OverlayNodeFactory())\n    this._graph.addEdges(this._edgeList.getEdges())\n    const subgraphList = this.createSubgraphs(this._graph)\n    const polyBuilder = new PolygonBuilder(this._geomFact)\n    this.buildSubgraphs(subgraphList, polyBuilder)\n    const resultPolyList = polyBuilder.getPolygons()\n    if (resultPolyList.size() <= 0) {\n      return this.createEmptyResultGeometry()\n    }\n    const resultGeom = this._geomFact.buildGeometry(resultPolyList)\n    return resultGeom\n  }\n\n  computeNodedEdges (bufferSegStrList, precisionModel) {\n    const noder = this.getNoder(precisionModel)\n    noder.computeNodes(bufferSegStrList)\n    const nodedSegStrings = noder.getNodedSubstrings()\n    for (let i = nodedSegStrings.iterator(); i.hasNext();) {\n      const segStr = i.next()\n      const pts = segStr.getCoordinates()\n      if (pts.length === 2 && pts[0].equals2D(pts[1])) continue\n      const oldLabel = segStr.getData()\n      const edge = new Edge(segStr.getCoordinates(), new Label(oldLabel))\n      this.insertUniqueEdge(edge)\n    }\n  }\n\n  setNoder (noder) {\n    this._workingNoder = noder\n  }\n\n  getClass () {\n    return BufferBuilder\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nBufferBuilder.constructor_ = function () {\n  this._bufParams = null\n  this._workingPrecisionModel = null\n  this._workingNoder = null\n  this._geomFact = null\n  this._graph = null\n  this._edgeList = new EdgeList()\n  const bufParams = arguments[0]\n  this._bufParams = bufParams\n}\n","import GeometryFactory from '../geom/GeometryFactory'\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector'\nimport RuntimeException from '../../../../java/lang/RuntimeException'\nexport default class NodingValidator {\n  constructor () {\n    NodingValidator.constructor_.apply(this, arguments)\n  }\n\n  checkEndPtVertexIntersections () {\n    if (arguments.length === 0) {\n      for (let i = this._segStrings.iterator(); i.hasNext();) {\n        const ss = i.next()\n        const pts = ss.getCoordinates()\n        this.checkEndPtVertexIntersections(pts[0], this._segStrings)\n        this.checkEndPtVertexIntersections(pts[pts.length - 1], this._segStrings)\n      }\n    } else if (arguments.length === 2) {\n      const testPt = arguments[0]; const segStrings = arguments[1]\n      for (let i = segStrings.iterator(); i.hasNext();) {\n        const ss = i.next()\n        const pts = ss.getCoordinates()\n        for (let j = 1; j < pts.length - 1; j++) {\n          if (pts[j].equals(testPt)) throw new RuntimeException('found endpt/interior pt intersection at index ' + j + ' :pt ' + testPt)\n        }\n      }\n    }\n  }\n\n  checkInteriorIntersections () {\n    if (arguments.length === 0) {\n      for (let i = this._segStrings.iterator(); i.hasNext();) {\n        const ss0 = i.next()\n        for (let j = this._segStrings.iterator(); j.hasNext();) {\n          const ss1 = j.next()\n          this.checkInteriorIntersections(ss0, ss1)\n        }\n      }\n    } else if (arguments.length === 2) {\n      const ss0 = arguments[0]; const ss1 = arguments[1]\n      const pts0 = ss0.getCoordinates()\n      const pts1 = ss1.getCoordinates()\n      for (let i0 = 0; i0 < pts0.length - 1; i0++) {\n        for (let i1 = 0; i1 < pts1.length - 1; i1++) {\n          this.checkInteriorIntersections(ss0, i0, ss1, i1)\n        }\n      }\n    } else if (arguments.length === 4) {\n      const e0 = arguments[0]; const segIndex0 = arguments[1]; const e1 = arguments[2]; const segIndex1 = arguments[3]\n      if (e0 === e1 && segIndex0 === segIndex1) return null\n      const p00 = e0.getCoordinates()[segIndex0]\n      const p01 = e0.getCoordinates()[segIndex0 + 1]\n      const p10 = e1.getCoordinates()[segIndex1]\n      const p11 = e1.getCoordinates()[segIndex1 + 1]\n      this._li.computeIntersection(p00, p01, p10, p11)\n      if (this._li.hasIntersection()) {\n        if (this._li.isProper() || this.hasInteriorIntersection(this._li, p00, p01) || this.hasInteriorIntersection(this._li, p10, p11)) {\n          throw new RuntimeException('found non-noded intersection at ' + p00 + '-' + p01 + ' and ' + p10 + '-' + p11)\n        }\n      }\n    }\n  }\n\n  checkValid () {\n    this.checkEndPtVertexIntersections()\n    this.checkInteriorIntersections()\n    this.checkCollapses()\n  }\n\n  checkCollapses () {\n    if (arguments.length === 0) {\n      for (let i = this._segStrings.iterator(); i.hasNext();) {\n        const ss = i.next()\n        this.checkCollapses(ss)\n      }\n    } else if (arguments.length === 1) {\n      const ss = arguments[0]\n      const pts = ss.getCoordinates()\n      for (let i = 0; i < pts.length - 2; i++) {\n        this.checkCollapse(pts[i], pts[i + 1], pts[i + 2])\n      }\n    }\n  }\n\n  hasInteriorIntersection (li, p0, p1) {\n    for (let i = 0; i < li.getIntersectionNum(); i++) {\n      const intPt = li.getIntersection(i)\n      if (!(intPt.equals(p0) || intPt.equals(p1))) return true\n    }\n    return false\n  }\n\n  checkCollapse (p0, p1, p2) {\n    if (p0.equals(p2)) throw new RuntimeException('found non-noded collapse at ' + NodingValidator.fact.createLineString([p0, p1, p2]))\n  }\n\n  getClass () {\n    return NodingValidator\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nNodingValidator.constructor_ = function () {\n  this._li = new RobustLineIntersector()\n  this._segStrings = null\n  const segStrings = arguments[0]\n  this._segStrings = segStrings\n}\nNodingValidator.fact = new GeometryFactory()\n","import Coordinate from '../../geom/Coordinate'\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException'\nimport Envelope from '../../geom/Envelope'\nimport Assert from '../../util/Assert'\nexport default class HotPixel {\n  constructor () {\n    HotPixel.constructor_.apply(this, arguments)\n  }\n\n  intersectsScaled (p0, p1) {\n    const segMinx = Math.min(p0.x, p1.x)\n    const segMaxx = Math.max(p0.x, p1.x)\n    const segMiny = Math.min(p0.y, p1.y)\n    const segMaxy = Math.max(p0.y, p1.y)\n    const isOutsidePixelEnv = this._maxx < segMinx || this._minx > segMaxx || this._maxy < segMiny || this._miny > segMaxy\n    if (isOutsidePixelEnv) return false\n    const intersects = this.intersectsToleranceSquare(p0, p1)\n    Assert.isTrue(!(isOutsidePixelEnv && intersects), 'Found bad envelope test')\n    return intersects\n  }\n\n  initCorners (pt) {\n    const tolerance = 0.5\n    this._minx = pt.x - tolerance\n    this._maxx = pt.x + tolerance\n    this._miny = pt.y - tolerance\n    this._maxy = pt.y + tolerance\n    this._corner[0] = new Coordinate(this._maxx, this._maxy)\n    this._corner[1] = new Coordinate(this._minx, this._maxy)\n    this._corner[2] = new Coordinate(this._minx, this._miny)\n    this._corner[3] = new Coordinate(this._maxx, this._miny)\n  }\n\n  intersects (p0, p1) {\n    if (this._scaleFactor === 1.0) return this.intersectsScaled(p0, p1)\n    this.copyScaled(p0, this._p0Scaled)\n    this.copyScaled(p1, this._p1Scaled)\n    return this.intersectsScaled(this._p0Scaled, this._p1Scaled)\n  }\n\n  scale (val) {\n    return Math.round(val * this._scaleFactor)\n  }\n\n  getCoordinate () {\n    return this._originalPt\n  }\n\n  copyScaled (p, pScaled) {\n    pScaled.x = this.scale(p.x)\n    pScaled.y = this.scale(p.y)\n  }\n\n  getSafeEnvelope () {\n    if (this._safeEnv === null) {\n      const safeTolerance = HotPixel.SAFE_ENV_EXPANSION_FACTOR / this._scaleFactor\n      this._safeEnv = new Envelope(this._originalPt.x - safeTolerance, this._originalPt.x + safeTolerance, this._originalPt.y - safeTolerance, this._originalPt.y + safeTolerance)\n    }\n    return this._safeEnv\n  }\n\n  intersectsPixelClosure (p0, p1) {\n    this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1])\n    if (this._li.hasIntersection()) return true\n    this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2])\n    if (this._li.hasIntersection()) return true\n    this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3])\n    if (this._li.hasIntersection()) return true\n    this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0])\n    if (this._li.hasIntersection()) return true\n    return false\n  }\n\n  intersectsToleranceSquare (p0, p1) {\n    let intersectsLeft = false\n    let intersectsBottom = false\n    this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1])\n    if (this._li.isProper()) return true\n    this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2])\n    if (this._li.isProper()) return true\n    if (this._li.hasIntersection()) intersectsLeft = true\n    this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3])\n    if (this._li.isProper()) return true\n    if (this._li.hasIntersection()) intersectsBottom = true\n    this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0])\n    if (this._li.isProper()) return true\n    if (intersectsLeft && intersectsBottom) return true\n    if (p0.equals(this._pt)) return true\n    if (p1.equals(this._pt)) return true\n    return false\n  }\n\n  addSnappedNode (segStr, segIndex) {\n    const p0 = segStr.getCoordinate(segIndex)\n    const p1 = segStr.getCoordinate(segIndex + 1)\n    if (this.intersects(p0, p1)) {\n      segStr.addIntersection(this.getCoordinate(), segIndex)\n      return true\n    }\n    return false\n  }\n\n  getClass () {\n    return HotPixel\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nHotPixel.constructor_ = function () {\n  this._li = null\n  this._pt = null\n  this._originalPt = null\n  this._ptScaled = null\n  this._p0Scaled = null\n  this._p1Scaled = null\n  this._scaleFactor = null\n  this._minx = null\n  this._maxx = null\n  this._miny = null\n  this._maxy = null\n  this._corner = new Array(4).fill(null)\n  this._safeEnv = null\n  const pt = arguments[0]; const scaleFactor = arguments[1]; const li = arguments[2]\n  this._originalPt = pt\n  this._pt = pt\n  this._scaleFactor = scaleFactor\n  this._li = li\n  if (scaleFactor <= 0) throw new IllegalArgumentException('Scale factor must be non-zero')\n  if (scaleFactor !== 1.0) {\n    this._pt = new Coordinate(this.scale(pt.x), this.scale(pt.y))\n    this._p0Scaled = new Coordinate()\n    this._p1Scaled = new Coordinate()\n  }\n  this.initCorners(this._pt)\n}\nHotPixel.SAFE_ENV_EXPANSION_FACTOR = 0.75\n","import LineSegment from '../../geom/LineSegment'\nexport default class MonotoneChainSelectAction {\n  constructor () {\n    MonotoneChainSelectAction.constructor_.apply(this, arguments)\n  }\n\n  select () {\n    if (arguments.length === 1) {\n      const seg = arguments[0]\n    } else if (arguments.length === 2) {\n      const mc = arguments[0]; const startIndex = arguments[1]\n      mc.getLineSegment(startIndex, this.selectedSegment)\n      this.select(this.selectedSegment)\n    }\n  }\n\n  getClass () {\n    return MonotoneChainSelectAction\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nMonotoneChainSelectAction.constructor_ = function () {\n  this.selectedSegment = new LineSegment()\n}\n","import MonotoneChainSelectAction from '../../index/chain/MonotoneChainSelectAction'\nimport MonotoneChain from '../../index/chain/MonotoneChain'\nimport ItemVisitor from '../../index/ItemVisitor'\nexport default class MCIndexPointSnapper {\n  constructor () {\n    MCIndexPointSnapper.constructor_.apply(this, arguments)\n  }\n\n  snap () {\n    if (arguments.length === 1) {\n      const hotPixel = arguments[0]\n      return this.snap(hotPixel, null, -1)\n    } else if (arguments.length === 3) {\n      const hotPixel = arguments[0]; const parentEdge = arguments[1]; const hotPixelVertexIndex = arguments[2]\n      const pixelEnv = hotPixel.getSafeEnvelope()\n      const hotPixelSnapAction = new HotPixelSnapAction(hotPixel, parentEdge, hotPixelVertexIndex)\n      this._index.query(pixelEnv, new (class {\n        get interfaces_ () {\n          return [ItemVisitor]\n        }\n\n        visitItem (item) {\n          const testChain = item\n          testChain.select(pixelEnv, hotPixelSnapAction)\n        }\n      })())\n      return hotPixelSnapAction.isNodeAdded()\n    }\n  }\n\n  getClass () {\n    return MCIndexPointSnapper\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nclass HotPixelSnapAction extends MonotoneChainSelectAction {\n  constructor () {\n    super()\n    HotPixelSnapAction.constructor_.apply(this, arguments)\n  }\n\n  isNodeAdded () {\n    return this._isNodeAdded\n  }\n\n  select () {\n    if (arguments.length === 2 && (Number.isInteger(arguments[1]) && arguments[0] instanceof MonotoneChain)) {\n      const mc = arguments[0]; const startIndex = arguments[1]\n      const ss = mc.getContext()\n      if (this._parentEdge !== null) {\n        if (ss === this._parentEdge && startIndex === this._hotPixelVertexIndex) return null\n      }\n      this._isNodeAdded = this._hotPixel.addSnappedNode(ss, startIndex)\n    } else return super.select.apply(this, arguments)\n  }\n\n  getClass () {\n    return HotPixelSnapAction\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nHotPixelSnapAction.constructor_ = function () {\n  this._hotPixel = null\n  this._parentEdge = null\n  this._hotPixelVertexIndex = null\n  this._isNodeAdded = false\n  const hotPixel = arguments[0]; const parentEdge = arguments[1]; const hotPixelVertexIndex = arguments[2]\n  this._hotPixel = hotPixel\n  this._parentEdge = parentEdge\n  this._hotPixelVertexIndex = hotPixelVertexIndex\n}\nMCIndexPointSnapper.HotPixelSnapAction = HotPixelSnapAction\nMCIndexPointSnapper.constructor_ = function () {\n  this._index = null\n  const index = arguments[0]\n  this._index = index\n}\n","import SegmentIntersector from './SegmentIntersector'\nimport ArrayList from '../../../../java/util/ArrayList'\nexport default class InteriorIntersectionFinderAdder {\n  constructor () {\n    InteriorIntersectionFinderAdder.constructor_.apply(this, arguments)\n  }\n\n  processIntersections (e0, segIndex0, e1, segIndex1) {\n    if (e0 === e1 && segIndex0 === segIndex1) return null\n    const p00 = e0.getCoordinates()[segIndex0]\n    const p01 = e0.getCoordinates()[segIndex0 + 1]\n    const p10 = e1.getCoordinates()[segIndex1]\n    const p11 = e1.getCoordinates()[segIndex1 + 1]\n    this._li.computeIntersection(p00, p01, p10, p11)\n    if (this._li.hasIntersection()) {\n      if (this._li.isInteriorIntersection()) {\n        for (let intIndex = 0; intIndex < this._li.getIntersectionNum(); intIndex++) {\n          this._interiorIntersections.add(this._li.getIntersection(intIndex))\n        }\n        e0.addIntersections(this._li, segIndex0, 0)\n        e1.addIntersections(this._li, segIndex1, 1)\n      }\n    }\n  }\n\n  isDone () {\n    return false\n  }\n\n  getInteriorIntersections () {\n    return this._interiorIntersections\n  }\n\n  getClass () {\n    return InteriorIntersectionFinderAdder\n  }\n\n  get interfaces_ () {\n    return [SegmentIntersector]\n  }\n}\nInteriorIntersectionFinderAdder.constructor_ = function () {\n  this._li = null\n  this._interiorIntersections = null\n  const li = arguments[0]\n  this._li = li\n  this._interiorIntersections = new ArrayList()\n}\n","import NodingValidator from '../NodingValidator'\nimport hasInterface from '../../../../../hasInterface'\nimport Collection from '../../../../../java/util/Collection'\nimport Noder from '../Noder'\nimport MCIndexNoder from '../MCIndexNoder'\nimport NodedSegmentString from '../NodedSegmentString'\nimport HotPixel from './HotPixel'\nimport Exception from '../../../../../java/lang/Exception'\nimport MCIndexPointSnapper from './MCIndexPointSnapper'\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector'\nimport InteriorIntersectionFinderAdder from '../InteriorIntersectionFinderAdder'\nexport default class MCIndexSnapRounder {\n  constructor () {\n    MCIndexSnapRounder.constructor_.apply(this, arguments)\n  }\n\n  checkCorrectness (inputSegmentStrings) {\n    const resultSegStrings = NodedSegmentString.getNodedSubstrings(inputSegmentStrings)\n    const nv = new NodingValidator(resultSegStrings)\n    try {\n      nv.checkValid()\n    } catch (ex) {\n      if (ex instanceof Exception) {\n        ex.printStackTrace()\n      } else throw ex\n    } finally {}\n  }\n\n  getNodedSubstrings () {\n    return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n  }\n\n  snapRound (segStrings, li) {\n    const intersections = this.findInteriorIntersections(segStrings, li)\n    this.computeIntersectionSnaps(intersections)\n    this.computeVertexSnaps(segStrings)\n  }\n\n  findInteriorIntersections (segStrings, li) {\n    const intFinderAdder = new InteriorIntersectionFinderAdder(li)\n    this._noder.setSegmentIntersector(intFinderAdder)\n    this._noder.computeNodes(segStrings)\n    return intFinderAdder.getInteriorIntersections()\n  }\n\n  computeVertexSnaps () {\n    if (hasInterface(arguments[0], Collection)) {\n      const edges = arguments[0]\n      for (let i0 = edges.iterator(); i0.hasNext();) {\n        const edge0 = i0.next()\n        this.computeVertexSnaps(edge0)\n      }\n    } else if (arguments[0] instanceof NodedSegmentString) {\n      const e = arguments[0]\n      const pts0 = e.getCoordinates()\n      for (let i = 0; i < pts0.length; i++) {\n        const hotPixel = new HotPixel(pts0[i], this._scaleFactor, this._li)\n        const isNodeAdded = this._pointSnapper.snap(hotPixel, e, i)\n        if (isNodeAdded) {\n          e.addIntersection(pts0[i], i)\n        }\n      }\n    }\n  }\n\n  computeNodes (inputSegmentStrings) {\n    this._nodedSegStrings = inputSegmentStrings\n    this._noder = new MCIndexNoder()\n    this._pointSnapper = new MCIndexPointSnapper(this._noder.getIndex())\n    this.snapRound(inputSegmentStrings, this._li)\n  }\n\n  computeIntersectionSnaps (snapPts) {\n    for (let it = snapPts.iterator(); it.hasNext();) {\n      const snapPt = it.next()\n      const hotPixel = new HotPixel(snapPt, this._scaleFactor, this._li)\n      this._pointSnapper.snap(hotPixel)\n    }\n  }\n\n  getClass () {\n    return MCIndexSnapRounder\n  }\n\n  get interfaces_ () {\n    return [Noder]\n  }\n}\nMCIndexSnapRounder.constructor_ = function () {\n  this._pm = null\n  this._li = null\n  this._scaleFactor = null\n  this._noder = null\n  this._pointSnapper = null\n  this._nodedSegStrings = null\n  const pm = arguments[0]\n  this._pm = pm\n  this._li = new RobustLineIntersector()\n  this._li.setPrecisionModel(pm)\n  this._scaleFactor = pm.getScale()\n}\n","import BufferParameters from './BufferParameters'\nimport Geometry from '../../geom/Geometry'\nimport BufferBuilder from './BufferBuilder'\nimport ScaledNoder from '../../noding/ScaledNoder'\nimport TopologyException from '../../geom/TopologyException'\nimport MathUtil from '../../math/MathUtil'\nimport PrecisionModel from '../../geom/PrecisionModel'\nimport RuntimeException from '../../../../../java/lang/RuntimeException'\nimport MCIndexSnapRounder from '../../noding/snapround/MCIndexSnapRounder'\nexport default class BufferOp {\n  constructor () {\n    BufferOp.constructor_.apply(this, arguments)\n  }\n\n  static bufferOp () {\n    if (arguments.length === 2) {\n      const g = arguments[0]; const distance = arguments[1]\n      const gBuf = new BufferOp(g)\n      const geomBuf = gBuf.getResultGeometry(distance)\n      return geomBuf\n    } else if (arguments.length === 3) {\n      if (Number.isInteger(arguments[2]) && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n        const g = arguments[0]; const distance = arguments[1]; const quadrantSegments = arguments[2]\n        const bufOp = new BufferOp(g)\n        bufOp.setQuadrantSegments(quadrantSegments)\n        const geomBuf = bufOp.getResultGeometry(distance)\n        return geomBuf\n      } else if (arguments[2] instanceof BufferParameters && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n        const g = arguments[0]; const distance = arguments[1]; const params = arguments[2]\n        const bufOp = new BufferOp(g, params)\n        const geomBuf = bufOp.getResultGeometry(distance)\n        return geomBuf\n      }\n    } else if (arguments.length === 4) {\n      const g = arguments[0]; const distance = arguments[1]; const quadrantSegments = arguments[2]; const endCapStyle = arguments[3]\n      const bufOp = new BufferOp(g)\n      bufOp.setQuadrantSegments(quadrantSegments)\n      bufOp.setEndCapStyle(endCapStyle)\n      const geomBuf = bufOp.getResultGeometry(distance)\n      return geomBuf\n    }\n  }\n\n  static precisionScaleFactor (g, distance, maxPrecisionDigits) {\n    const env = g.getEnvelopeInternal()\n    const envMax = MathUtil.max(Math.abs(env.getMaxX()), Math.abs(env.getMaxY()), Math.abs(env.getMinX()), Math.abs(env.getMinY()))\n    const expandByDistance = distance > 0.0 ? distance : 0.0\n    const bufEnvMax = envMax + 2 * expandByDistance\n    const bufEnvPrecisionDigits = Math.trunc(Math.log(bufEnvMax) / Math.log(10) + 1.0)\n    const minUnitLog10 = maxPrecisionDigits - bufEnvPrecisionDigits\n    const scaleFactor = Math.pow(10.0, minUnitLog10)\n    return scaleFactor\n  }\n\n  bufferFixedPrecision (fixedPM) {\n    const noder = new ScaledNoder(new MCIndexSnapRounder(new PrecisionModel(1.0)), fixedPM.getScale())\n    const bufBuilder = new BufferBuilder(this._bufParams)\n    bufBuilder.setWorkingPrecisionModel(fixedPM)\n    bufBuilder.setNoder(noder)\n    this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance)\n  }\n\n  bufferReducedPrecision () {\n    if (arguments.length === 0) {\n      for (let precDigits = BufferOp.MAX_PRECISION_DIGITS; precDigits >= 0; precDigits--) {\n        try {\n          this.bufferReducedPrecision(precDigits)\n        } catch (ex) {\n          if (ex instanceof TopologyException) {\n            this._saveException = ex\n          } else throw ex\n        } finally {}\n        if (this._resultGeometry !== null) return null\n      }\n      throw this._saveException\n    } else if (arguments.length === 1) {\n      const precisionDigits = arguments[0]\n      const sizeBasedScaleFactor = BufferOp.precisionScaleFactor(this._argGeom, this._distance, precisionDigits)\n      const fixedPM = new PrecisionModel(sizeBasedScaleFactor)\n      this.bufferFixedPrecision(fixedPM)\n    }\n  }\n\n  computeGeometry () {\n    this.bufferOriginalPrecision()\n    if (this._resultGeometry !== null) return null\n    const argPM = this._argGeom.getFactory().getPrecisionModel()\n    if (argPM.getType() === PrecisionModel.FIXED) this.bufferFixedPrecision(argPM); else this.bufferReducedPrecision()\n  }\n\n  setQuadrantSegments (quadrantSegments) {\n    this._bufParams.setQuadrantSegments(quadrantSegments)\n  }\n\n  bufferOriginalPrecision () {\n    try {\n      const bufBuilder = new BufferBuilder(this._bufParams)\n      this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance)\n    } catch (ex) {\n      if (ex instanceof RuntimeException) {\n        this._saveException = ex\n      } else throw ex\n    } finally {}\n  }\n\n  getResultGeometry (distance) {\n    this._distance = distance\n    this.computeGeometry()\n    return this._resultGeometry\n  }\n\n  setEndCapStyle (endCapStyle) {\n    this._bufParams.setEndCapStyle(endCapStyle)\n  }\n\n  getClass () {\n    return BufferOp\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nBufferOp.constructor_ = function () {\n  this._argGeom = null\n  this._distance = null\n  this._bufParams = new BufferParameters()\n  this._resultGeometry = null\n  this._saveException = null\n  if (arguments.length === 1) {\n    const g = arguments[0]\n    this._argGeom = g\n  } else if (arguments.length === 2) {\n    const g = arguments[0]; const bufParams = arguments[1]\n    this._argGeom = g\n    this._bufParams = bufParams\n  }\n}\nBufferOp.CAP_ROUND = BufferParameters.CAP_ROUND\nBufferOp.CAP_BUTT = BufferParameters.CAP_FLAT\nBufferOp.CAP_FLAT = BufferParameters.CAP_FLAT\nBufferOp.CAP_SQUARE = BufferParameters.CAP_SQUARE\nBufferOp.MAX_PRECISION_DIGITS = 12\n","export default class GeometryLocation {\n  constructor () {\n    GeometryLocation.constructor_.apply(this, arguments)\n  }\n\n  isInsideArea () {\n    return this._segIndex === GeometryLocation.INSIDE_AREA\n  }\n\n  getCoordinate () {\n    return this._pt\n  }\n\n  getGeometryComponent () {\n    return this._component\n  }\n\n  getSegmentIndex () {\n    return this._segIndex\n  }\n\n  getClass () {\n    return GeometryLocation\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nGeometryLocation.constructor_ = function () {\n  this._component = null\n  this._segIndex = null\n  this._pt = null\n  if (arguments.length === 2) {\n    const component = arguments[0]; const pt = arguments[1]\n    GeometryLocation.constructor_.call(this, component, GeometryLocation.INSIDE_AREA, pt)\n  } else if (arguments.length === 3) {\n    const component = arguments[0]; const segIndex = arguments[1]; const pt = arguments[2]\n    this._component = component\n    this._segIndex = segIndex\n    this._pt = pt\n  }\n}\nGeometryLocation.INSIDE_AREA = -1\n","import LineString from '../../geom/LineString'\nimport Point from '../../geom/Point'\nimport Polygon from '../../geom/Polygon'\nimport GeometryLocation from './GeometryLocation'\nimport ArrayList from '../../../../../java/util/ArrayList'\nimport GeometryFilter from '../../geom/GeometryFilter'\nexport default class ConnectedElementLocationFilter {\n  constructor () {\n    ConnectedElementLocationFilter.constructor_.apply(this, arguments)\n  }\n\n  static getLocations (geom) {\n    const locations = new ArrayList()\n    geom.apply(new ConnectedElementLocationFilter(locations))\n    return locations\n  }\n\n  filter (geom) {\n    if (geom instanceof Point || geom instanceof LineString || geom instanceof Polygon) this._locations.add(new GeometryLocation(geom, 0, geom.getCoordinate()))\n  }\n\n  getClass () {\n    return ConnectedElementLocationFilter\n  }\n\n  get interfaces_ () {\n    return [GeometryFilter]\n  }\n}\nConnectedElementLocationFilter.constructor_ = function () {\n  this._locations = null\n  const locations = arguments[0]\n  this._locations = locations\n}\n","import PointLocator from '../../algorithm/PointLocator'\nimport PolygonExtracter from '../../geom/util/PolygonExtracter'\nimport Location from '../../geom/Location'\nimport LineString from '../../geom/LineString'\nimport hasInterface from '../../../../../hasInterface'\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException'\nimport Point from '../../geom/Point'\nimport Polygon from '../../geom/Polygon'\nimport GeometryLocation from './GeometryLocation'\nimport Double from '../../../../../java/lang/Double'\nimport PointExtracter from '../../geom/util/PointExtracter'\nimport ConnectedElementLocationFilter from './ConnectedElementLocationFilter'\nimport LineSegment from '../../geom/LineSegment'\nimport LinearComponentExtracter from '../../geom/util/LinearComponentExtracter'\nimport List from '../../../../../java/util/List'\nimport Distance from '../../algorithm/Distance'\nexport default class DistanceOp {\n  constructor () {\n    DistanceOp.constructor_.apply(this, arguments)\n  }\n\n  static distance (g0, g1) {\n    const distOp = new DistanceOp(g0, g1)\n    return distOp.distance()\n  }\n\n  static isWithinDistance (g0, g1, distance) {\n    const envDist = g0.getEnvelopeInternal().distance(g1.getEnvelopeInternal())\n    if (envDist > distance) return false\n    const distOp = new DistanceOp(g0, g1, distance)\n    return distOp.distance() <= distance\n  }\n\n  static nearestPoints (g0, g1) {\n    const distOp = new DistanceOp(g0, g1)\n    return distOp.nearestPoints()\n  }\n\n  computeContainmentDistance () {\n    if (arguments.length === 0) {\n      const locPtPoly = new Array(2).fill(null)\n      this.computeContainmentDistance(0, locPtPoly)\n      if (this._minDistance <= this._terminateDistance) return null\n      this.computeContainmentDistance(1, locPtPoly)\n    } else if (arguments.length === 2) {\n      const polyGeomIndex = arguments[0]; const locPtPoly = arguments[1]\n      const polyGeom = this._geom[polyGeomIndex]\n      if (polyGeom.getDimension() < 2) return null\n      const locationsIndex = 1 - polyGeomIndex\n      const polys = PolygonExtracter.getPolygons(polyGeom)\n      if (polys.size() > 0) {\n        const insideLocs = ConnectedElementLocationFilter.getLocations(this._geom[locationsIndex])\n        this.computeContainmentDistance(insideLocs, polys, locPtPoly)\n        if (this._minDistance <= this._terminateDistance) {\n          this._minDistanceLocation[locationsIndex] = locPtPoly[0]\n          this._minDistanceLocation[polyGeomIndex] = locPtPoly[1]\n          return null\n        }\n      }\n    } else if (arguments.length === 3) {\n      if (arguments[2] instanceof Array && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n        const locs = arguments[0]; const polys = arguments[1]; const locPtPoly = arguments[2]\n        for (let i = 0; i < locs.size(); i++) {\n          const loc = locs.get(i)\n          for (let j = 0; j < polys.size(); j++) {\n            this.computeContainmentDistance(loc, polys.get(j), locPtPoly)\n            if (this._minDistance <= this._terminateDistance) return null\n          }\n        }\n      } else if (arguments[2] instanceof Array && (arguments[0] instanceof GeometryLocation && arguments[1] instanceof Polygon)) {\n        const ptLoc = arguments[0]; const poly = arguments[1]; const locPtPoly = arguments[2]\n        const pt = ptLoc.getCoordinate()\n        if (Location.EXTERIOR !== this._ptLocator.locate(pt, poly)) {\n          this._minDistance = 0.0\n          locPtPoly[0] = ptLoc\n          locPtPoly[1] = new GeometryLocation(poly, pt)\n\n          return null\n        }\n      }\n    }\n  }\n\n  computeMinDistanceLinesPoints (lines, points, locGeom) {\n    for (let i = 0; i < lines.size(); i++) {\n      const line = lines.get(i)\n      for (let j = 0; j < points.size(); j++) {\n        const pt = points.get(j)\n        this.computeMinDistance(line, pt, locGeom)\n        if (this._minDistance <= this._terminateDistance) return null\n      }\n    }\n  }\n\n  computeFacetDistance () {\n    const locGeom = new Array(2).fill(null)\n    const lines0 = LinearComponentExtracter.getLines(this._geom[0])\n    const lines1 = LinearComponentExtracter.getLines(this._geom[1])\n    const pts0 = PointExtracter.getPoints(this._geom[0])\n    const pts1 = PointExtracter.getPoints(this._geom[1])\n    this.computeMinDistanceLines(lines0, lines1, locGeom)\n    this.updateMinDistance(locGeom, false)\n    if (this._minDistance <= this._terminateDistance) return null\n    locGeom[0] = null\n    locGeom[1] = null\n    this.computeMinDistanceLinesPoints(lines0, pts1, locGeom)\n    this.updateMinDistance(locGeom, false)\n    if (this._minDistance <= this._terminateDistance) return null\n    locGeom[0] = null\n    locGeom[1] = null\n    this.computeMinDistanceLinesPoints(lines1, pts0, locGeom)\n    this.updateMinDistance(locGeom, true)\n    if (this._minDistance <= this._terminateDistance) return null\n    locGeom[0] = null\n    locGeom[1] = null\n    this.computeMinDistancePoints(pts0, pts1, locGeom)\n    this.updateMinDistance(locGeom, false)\n  }\n\n  nearestLocations () {\n    this.computeMinDistance()\n    return this._minDistanceLocation\n  }\n\n  updateMinDistance (locGeom, flip) {\n    if (locGeom[0] === null) return null\n    if (flip) {\n      this._minDistanceLocation[0] = locGeom[1]\n      this._minDistanceLocation[1] = locGeom[0]\n    } else {\n      this._minDistanceLocation[0] = locGeom[0]\n      this._minDistanceLocation[1] = locGeom[1]\n    }\n  }\n\n  nearestPoints () {\n    this.computeMinDistance()\n    const nearestPts = [this._minDistanceLocation[0].getCoordinate(), this._minDistanceLocation[1].getCoordinate()]\n    return nearestPts\n  }\n\n  computeMinDistance () {\n    if (arguments.length === 0) {\n      if (this._minDistanceLocation !== null) return null\n      this._minDistanceLocation = new Array(2).fill(null)\n      this.computeContainmentDistance()\n      if (this._minDistance <= this._terminateDistance) return null\n      this.computeFacetDistance()\n    } else if (arguments.length === 3) {\n      if (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof Point)) {\n        const line = arguments[0]; const pt = arguments[1]; const locGeom = arguments[2]\n        if (line.getEnvelopeInternal().distance(pt.getEnvelopeInternal()) > this._minDistance) return null\n        const coord0 = line.getCoordinates()\n        const coord = pt.getCoordinate()\n        for (let i = 0; i < coord0.length - 1; i++) {\n          const dist = Distance.pointToSegment(coord, coord0[i], coord0[i + 1])\n          if (dist < this._minDistance) {\n            this._minDistance = dist\n            const seg = new LineSegment(coord0[i], coord0[i + 1])\n            const segClosestPoint = seg.closestPoint(coord)\n            locGeom[0] = new GeometryLocation(line, i, segClosestPoint)\n            locGeom[1] = new GeometryLocation(pt, 0, coord)\n          }\n          if (this._minDistance <= this._terminateDistance) return null\n        }\n      } else if (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof LineString)) {\n        const line0 = arguments[0]; const line1 = arguments[1]; const locGeom = arguments[2]\n        if (line0.getEnvelopeInternal().distance(line1.getEnvelopeInternal()) > this._minDistance) return null\n        const coord0 = line0.getCoordinates()\n        const coord1 = line1.getCoordinates()\n        for (let i = 0; i < coord0.length - 1; i++) {\n          for (let j = 0; j < coord1.length - 1; j++) {\n            const dist = Distance.segmentToSegment(coord0[i], coord0[i + 1], coord1[j], coord1[j + 1])\n            if (dist < this._minDistance) {\n              this._minDistance = dist\n              const seg0 = new LineSegment(coord0[i], coord0[i + 1])\n              const seg1 = new LineSegment(coord1[j], coord1[j + 1])\n              const closestPt = seg0.closestPoints(seg1)\n              locGeom[0] = new GeometryLocation(line0, i, closestPt[0])\n              locGeom[1] = new GeometryLocation(line1, j, closestPt[1])\n            }\n            if (this._minDistance <= this._terminateDistance) return null\n          }\n        }\n      }\n    }\n  }\n\n  computeMinDistancePoints (points0, points1, locGeom) {\n    for (let i = 0; i < points0.size(); i++) {\n      const pt0 = points0.get(i)\n      for (let j = 0; j < points1.size(); j++) {\n        const pt1 = points1.get(j)\n        const dist = pt0.getCoordinate().distance(pt1.getCoordinate())\n        if (dist < this._minDistance) {\n          this._minDistance = dist\n          locGeom[0] = new GeometryLocation(pt0, 0, pt0.getCoordinate())\n          locGeom[1] = new GeometryLocation(pt1, 0, pt1.getCoordinate())\n        }\n        if (this._minDistance <= this._terminateDistance) return null\n      }\n    }\n  }\n\n  distance () {\n    if (this._geom[0] === null || this._geom[1] === null) throw new IllegalArgumentException('null geometries are not supported')\n    if (this._geom[0].isEmpty() || this._geom[1].isEmpty()) return 0.0\n    this.computeMinDistance()\n    return this._minDistance\n  }\n\n  computeMinDistanceLines (lines0, lines1, locGeom) {\n    for (let i = 0; i < lines0.size(); i++) {\n      const line0 = lines0.get(i)\n      for (let j = 0; j < lines1.size(); j++) {\n        const line1 = lines1.get(j)\n        this.computeMinDistance(line0, line1, locGeom)\n        if (this._minDistance <= this._terminateDistance) return null\n      }\n    }\n  }\n\n  getClass () {\n    return DistanceOp\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nDistanceOp.constructor_ = function () {\n  this._geom = null\n  this._terminateDistance = 0.0\n  this._ptLocator = new PointLocator()\n  this._minDistanceLocation = null\n  this._minDistance = Double.MAX_VALUE\n  if (arguments.length === 2) {\n    const g0 = arguments[0]; const g1 = arguments[1]\n    DistanceOp.constructor_.call(this, g0, g1, 0.0)\n  } else if (arguments.length === 3) {\n    const g0 = arguments[0]; const g1 = arguments[1]; const terminateDistance = arguments[2]\n    this._geom = new Array(2).fill(null)\n    this._geom[0] = g0\n    this._geom[1] = g1\n    this._terminateDistance = terminateDistance\n  }\n}\n","import CoordinateList from '../../geom/CoordinateList'\nimport CoordinateArrays from '../../geom/CoordinateArrays'\nimport ArrayList from '../../../../../java/util/ArrayList'\nexport default class EdgeString {\n  constructor () {\n    EdgeString.constructor_.apply(this, arguments)\n  }\n\n  getCoordinates () {\n    if (this._coordinates === null) {\n      let forwardDirectedEdges = 0\n      let reverseDirectedEdges = 0\n      const coordinateList = new CoordinateList()\n      for (let i = this._directedEdges.iterator(); i.hasNext();) {\n        const directedEdge = i.next()\n        if (directedEdge.getEdgeDirection()) {\n          forwardDirectedEdges++\n        } else {\n          reverseDirectedEdges++\n        }\n        coordinateList.add(directedEdge.getEdge().getLine().getCoordinates(), false, directedEdge.getEdgeDirection())\n      }\n      this._coordinates = coordinateList.toCoordinateArray()\n      if (reverseDirectedEdges > forwardDirectedEdges) {\n        CoordinateArrays.reverse(this._coordinates)\n      }\n    }\n    return this._coordinates\n  }\n\n  toLineString () {\n    return this._factory.createLineString(this.getCoordinates())\n  }\n\n  add (directedEdge) {\n    this._directedEdges.add(directedEdge)\n  }\n\n  getClass () {\n    return EdgeString\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nEdgeString.constructor_ = function () {\n  this._factory = null\n  this._directedEdges = new ArrayList()\n  this._coordinates = null\n  const factory = arguments[0]\n  this._factory = factory\n}\n","export default class GraphComponent {\n  constructor () {\n    GraphComponent.constructor_.apply(this, arguments)\n  }\n\n  static getComponentWithVisitedState (i, visitedState) {\n    while (i.hasNext()) {\n      const comp = i.next()\n      if (comp.isVisited() === visitedState) return comp\n    }\n    return null\n  }\n\n  static setVisited (i, visited) {\n    while (i.hasNext()) {\n      const comp = i.next()\n      comp.setVisited(visited)\n    }\n  }\n\n  static setMarked (i, marked) {\n    while (i.hasNext()) {\n      const comp = i.next()\n      comp.setMarked(marked)\n    }\n  }\n\n  setVisited (isVisited) {\n    this._isVisited = isVisited\n  }\n\n  isMarked () {\n    return this._isMarked\n  }\n\n  setData (data) {\n    this._data = data\n  }\n\n  getData () {\n    return this._data\n  }\n\n  setMarked (isMarked) {\n    this._isMarked = isMarked\n  }\n\n  getContext () {\n    return this._data\n  }\n\n  isVisited () {\n    return this._isVisited\n  }\n\n  setContext (data) {\n    this._data = data\n  }\n\n  getClass () {\n    return GraphComponent\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nGraphComponent.constructor_ = function () {\n  this._isMarked = false\n  this._isVisited = false\n  this._data = null\n}\n","import Orientation from '../algorithm/Orientation'\nimport Comparable from '../../../../java/lang/Comparable'\nimport ArrayList from '../../../../java/util/ArrayList'\nimport Quadrant from '../geomgraph/Quadrant'\nimport GraphComponent from './GraphComponent'\nexport default class DirectedEdge extends GraphComponent {\n  constructor () {\n    super()\n    DirectedEdge.constructor_.apply(this, arguments)\n  }\n\n  static toEdges (dirEdges) {\n    const edges = new ArrayList()\n    for (let i = dirEdges.iterator(); i.hasNext();) {\n      edges.add(i.next()._parentEdge)\n    }\n    return edges\n  }\n\n  isRemoved () {\n    return this._parentEdge === null\n  }\n\n  compareDirection (e) {\n    if (this._quadrant > e._quadrant) return 1\n    if (this._quadrant < e._quadrant) return -1\n    return Orientation.index(e._p0, e._p1, this._p1)\n  }\n\n  getCoordinate () {\n    return this._from.getCoordinate()\n  }\n\n  print (out) {\n    const className = this.getClass().getName()\n    const lastDotPos = className.lastIndexOf('.')\n    const name = className.substring(lastDotPos + 1)\n    out.print('  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + this._angle)\n  }\n\n  getDirectionPt () {\n    return this._p1\n  }\n\n  getAngle () {\n    return this._angle\n  }\n\n  compareTo (obj) {\n    const de = obj\n    return this.compareDirection(de)\n  }\n\n  getFromNode () {\n    return this._from\n  }\n\n  getSym () {\n    return this._sym\n  }\n\n  setEdge (parentEdge) {\n    this._parentEdge = parentEdge\n  }\n\n  remove () {\n    this._sym = null\n    this._parentEdge = null\n  }\n\n  getEdge () {\n    return this._parentEdge\n  }\n\n  getQuadrant () {\n    return this._quadrant\n  }\n\n  setSym (sym) {\n    this._sym = sym\n  }\n\n  getToNode () {\n    return this._to\n  }\n\n  getEdgeDirection () {\n    return this._edgeDirection\n  }\n\n  getClass () {\n    return DirectedEdge\n  }\n\n  get interfaces_ () {\n    return [Comparable]\n  }\n}\nDirectedEdge.constructor_ = function () {\n  this._parentEdge = null\n  this._from = null\n  this._to = null\n  this._p0 = null\n  this._p1 = null\n  this._sym = null\n  this._edgeDirection = null\n  this._quadrant = null\n  this._angle = null\n  if (arguments.length === 0) {} else if (arguments.length === 4) {\n    const from = arguments[0]; const to = arguments[1]; const directionPt = arguments[2]; const edgeDirection = arguments[3]\n    this._from = from\n    this._to = to\n    this._edgeDirection = edgeDirection\n    this._p0 = from.getCoordinate()\n    this._p1 = directionPt\n    const dx = this._p1.x - this._p0.x\n    const dy = this._p1.y - this._p0.y\n    this._quadrant = Quadrant.quadrant(dx, dy)\n    this._angle = Math.atan2(dy, dx)\n  }\n}\n","import DirectedEdge from '../../planargraph/DirectedEdge'\nimport Assert from '../../util/Assert'\nexport default class LineMergeDirectedEdge extends DirectedEdge {\n  constructor () {\n    super()\n    LineMergeDirectedEdge.constructor_.apply(this, arguments)\n  }\n\n  getNext () {\n    if (this.getToNode().getDegree() !== 2) {\n      return null\n    }\n    if (this.getToNode().getOutEdges().getEdges().get(0) === this.getSym()) {\n      return this.getToNode().getOutEdges().getEdges().get(1)\n    }\n    Assert.isTrue(this.getToNode().getOutEdges().getEdges().get(1) === this.getSym())\n    return this.getToNode().getOutEdges().getEdges().get(0)\n  }\n\n  getClass () {\n    return LineMergeDirectedEdge\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nLineMergeDirectedEdge.constructor_ = function () {\n  const from = arguments[0]; const to = arguments[1]; const directionPt = arguments[2]; const edgeDirection = arguments[3]\n  DirectedEdge.constructor_.call(this, from, to, directionPt, edgeDirection)\n}\n","import Node from './Node'\nimport GraphComponent from './GraphComponent'\nexport default class Edge extends GraphComponent {\n  constructor () {\n    super()\n    Edge.constructor_.apply(this, arguments)\n  }\n\n  isRemoved () {\n    return this._dirEdge === null\n  }\n\n  setDirectedEdges (de0, de1) {\n    this._dirEdge = [de0, de1]\n    de0.setEdge(this)\n    de1.setEdge(this)\n    de0.setSym(de1)\n    de1.setSym(de0)\n    de0.getFromNode().addOutEdge(de0)\n    de1.getFromNode().addOutEdge(de1)\n  }\n\n  getDirEdge () {\n    if (Number.isInteger(arguments[0])) {\n      const i = arguments[0]\n      return this._dirEdge[i]\n    } else if (arguments[0] instanceof Node) {\n      const fromNode = arguments[0]\n      if (this._dirEdge[0].getFromNode() === fromNode) return this._dirEdge[0]\n      if (this._dirEdge[1].getFromNode() === fromNode) return this._dirEdge[1]\n      return null\n    }\n  }\n\n  remove () {\n    this._dirEdge = null\n  }\n\n  getOppositeNode (node) {\n    if (this._dirEdge[0].getFromNode() === node) return this._dirEdge[0].getToNode()\n    if (this._dirEdge[1].getFromNode() === node) return this._dirEdge[1].getToNode()\n    return null\n  }\n\n  getClass () {\n    return Edge\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nEdge.constructor_ = function () {\n  this._dirEdge = null\n  if (arguments.length === 0) {} else if (arguments.length === 2) {\n    const de0 = arguments[0]; const de1 = arguments[1]\n    this.setDirectedEdges(de0, de1)\n  }\n}\n","import Collections from '../../../../java/util/Collections'\nimport DirectedEdge from './DirectedEdge'\nimport ArrayList from '../../../../java/util/ArrayList'\nimport Edge from './Edge'\nexport default class DirectedEdgeStar {\n  constructor () {\n    DirectedEdgeStar.constructor_.apply(this, arguments)\n  }\n\n  getNextEdge (dirEdge) {\n    const i = this.getIndex(dirEdge)\n    return this._outEdges.get(this.getIndex(i + 1))\n  }\n\n  getCoordinate () {\n    const it = this.iterator()\n    if (!it.hasNext()) return null\n    const e = it.next()\n    return e.getCoordinate()\n  }\n\n  iterator () {\n    this.sortEdges()\n    return this._outEdges.iterator()\n  }\n\n  sortEdges () {\n    if (!this._sorted) {\n      Collections.sort(this._outEdges)\n      this._sorted = true\n    }\n  }\n\n  remove (de) {\n    this._outEdges.remove(de)\n  }\n\n  getEdges () {\n    this.sortEdges()\n    return this._outEdges\n  }\n\n  getNextCWEdge (dirEdge) {\n    const i = this.getIndex(dirEdge)\n    return this._outEdges.get(this.getIndex(i - 1))\n  }\n\n  getIndex () {\n    if (arguments[0] instanceof Edge) {\n      const edge = arguments[0]\n      this.sortEdges()\n      for (let i = 0; i < this._outEdges.size(); i++) {\n        const de = this._outEdges.get(i)\n        if (de.getEdge() === edge) return i\n      }\n      return -1\n    } else if (arguments[0] instanceof DirectedEdge) {\n      const dirEdge = arguments[0]\n      this.sortEdges()\n      for (let i = 0; i < this._outEdges.size(); i++) {\n        const de = this._outEdges.get(i)\n        if (de === dirEdge) return i\n      }\n      return -1\n    } else if (Number.isInteger(arguments[0])) {\n      const i = arguments[0]\n      let modi = i % this._outEdges.size()\n      if (modi < 0) modi += this._outEdges.size()\n      return modi\n    }\n  }\n\n  add (de) {\n    this._outEdges.add(de)\n    this._sorted = false\n  }\n\n  getDegree () {\n    return this._outEdges.size()\n  }\n\n  getClass () {\n    return DirectedEdgeStar\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nDirectedEdgeStar.constructor_ = function () {\n  this._outEdges = new ArrayList()\n  this._sorted = false\n}\n","import DirectedEdgeStar from './DirectedEdgeStar'\nimport HashSet from '../../../../java/util/HashSet'\nimport DirectedEdge from './DirectedEdge'\nimport GraphComponent from './GraphComponent'\nexport default class Node extends GraphComponent {\n  constructor () {\n    super()\n    Node.constructor_.apply(this, arguments)\n  }\n\n  static getEdgesBetween (node0, node1) {\n    const edges0 = DirectedEdge.toEdges(node0.getOutEdges().getEdges())\n    const commonEdges = new HashSet(edges0)\n    const edges1 = DirectedEdge.toEdges(node1.getOutEdges().getEdges())\n    commonEdges.retainAll(edges1)\n    return commonEdges\n  }\n\n  isRemoved () {\n    return this._pt === null\n  }\n\n  addOutEdge (de) {\n    this._deStar.add(de)\n  }\n\n  getCoordinate () {\n    return this._pt\n  }\n\n  getOutEdges () {\n    return this._deStar\n  }\n\n  remove () {\n    if (arguments.length === 0) {\n      this._pt = null\n    } else if (arguments.length === 1) {\n      const de = arguments[0]\n      this._deStar.remove(de)\n    }\n  }\n\n  getIndex (edge) {\n    return this._deStar.getIndex(edge)\n  }\n\n  getDegree () {\n    return this._deStar.getDegree()\n  }\n\n  getClass () {\n    return Node\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nNode.constructor_ = function () {\n  this._pt = null\n  this._deStar = null\n  if (arguments.length === 1) {\n    const pt = arguments[0]\n    Node.constructor_.call(this, pt, new DirectedEdgeStar())\n  } else if (arguments.length === 2) {\n    const pt = arguments[0]; const deStar = arguments[1]\n    this._pt = pt\n    this._deStar = deStar\n  }\n}\n","import Edge from '../../planargraph/Edge'\nexport default class LineMergeEdge extends Edge {\n  constructor () {\n    super()\n    LineMergeEdge.constructor_.apply(this, arguments)\n  }\n\n  getLine () {\n    return this._line\n  }\n\n  getClass () {\n    return LineMergeEdge\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nLineMergeEdge.constructor_ = function () {\n  this._line = null\n  const line = arguments[0]\n  this._line = line\n}\n","import TreeMap from '../../../../java/util/TreeMap'\nexport default class NodeMap {\n  constructor () {\n    NodeMap.constructor_.apply(this, arguments)\n  }\n\n  find (coord) {\n    return this._nodeMap.get(coord)\n  }\n\n  iterator () {\n    return this._nodeMap.values().iterator()\n  }\n\n  remove (pt) {\n    return this._nodeMap.remove(pt)\n  }\n\n  values () {\n    return this._nodeMap.values()\n  }\n\n  add (n) {\n    this._nodeMap.put(n.getCoordinate(), n)\n    return n\n  }\n\n  getClass () {\n    return NodeMap\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nNodeMap.constructor_ = function () {\n  this._nodeMap = new TreeMap()\n}\n","import HashSet from '../../../../java/util/HashSet'\nimport Node from './Node'\nimport NodeMap from './NodeMap'\nimport DirectedEdge from './DirectedEdge'\nimport ArrayList from '../../../../java/util/ArrayList'\nimport Edge from './Edge'\nexport default class PlanarGraph {\n  constructor () {\n    PlanarGraph.constructor_.apply(this, arguments)\n  }\n\n  findNodesOfDegree (degree) {\n    const nodesFound = new ArrayList()\n    for (let i = this.nodeIterator(); i.hasNext();) {\n      const node = i.next()\n      if (node.getDegree() === degree) nodesFound.add(node)\n    }\n    return nodesFound\n  }\n\n  dirEdgeIterator () {\n    return this._dirEdges.iterator()\n  }\n\n  edgeIterator () {\n    return this._edges.iterator()\n  }\n\n  remove () {\n    if (arguments[0] instanceof Edge) {\n      const edge = arguments[0]\n      this.remove(edge.getDirEdge(0))\n      this.remove(edge.getDirEdge(1))\n      this._edges.remove(edge)\n      edge.remove()\n    } else if (arguments[0] instanceof DirectedEdge) {\n      const de = arguments[0]\n      const sym = de.getSym()\n      if (sym !== null) sym.setSym(null)\n      de.getFromNode().remove(de)\n      de.remove()\n      this._dirEdges.remove(de)\n    } else if (arguments[0] instanceof Node) {\n      const node = arguments[0]\n      const outEdges = node.getOutEdges().getEdges()\n      for (let i = outEdges.iterator(); i.hasNext();) {\n        const de = i.next()\n        const sym = de.getSym()\n        if (sym !== null) this.remove(sym)\n        this._dirEdges.remove(de)\n        const edge = de.getEdge()\n        if (edge !== null) {\n          this._edges.remove(edge)\n        }\n      }\n      this._nodeMap.remove(node.getCoordinate())\n      node.remove()\n    }\n  }\n\n  findNode (pt) {\n    return this._nodeMap.find(pt)\n  }\n\n  getEdges () {\n    return this._edges\n  }\n\n  nodeIterator () {\n    return this._nodeMap.iterator()\n  }\n\n  contains () {\n    if (arguments[0] instanceof Edge) {\n      const e = arguments[0]\n      return this._edges.contains(e)\n    } else if (arguments[0] instanceof DirectedEdge) {\n      const de = arguments[0]\n      return this._dirEdges.contains(de)\n    }\n  }\n\n  add () {\n    if (arguments[0] instanceof Node) {\n      const node = arguments[0]\n      this._nodeMap.add(node)\n    } else if (arguments[0] instanceof Edge) {\n      const edge = arguments[0]\n      this._edges.add(edge)\n      this.add(edge.getDirEdge(0))\n      this.add(edge.getDirEdge(1))\n    } else if (arguments[0] instanceof DirectedEdge) {\n      const dirEdge = arguments[0]\n      this._dirEdges.add(dirEdge)\n    }\n  }\n\n  getNodes () {\n    return this._nodeMap.values()\n  }\n\n  getClass () {\n    return PlanarGraph\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nPlanarGraph.constructor_ = function () {\n  this._edges = new HashSet()\n  this._dirEdges = new HashSet()\n  this._nodeMap = new NodeMap()\n}\n","import LineMergeDirectedEdge from './LineMergeDirectedEdge'\nimport Node from '../../planargraph/Node'\nimport CoordinateArrays from '../../geom/CoordinateArrays'\nimport LineMergeEdge from './LineMergeEdge'\nimport PlanarGraph from '../../planargraph/PlanarGraph'\nexport default class LineMergeGraph extends PlanarGraph {\n  constructor () {\n    super()\n    LineMergeGraph.constructor_.apply(this, arguments)\n  }\n\n  addEdge (lineString) {\n    if (lineString.isEmpty()) {\n      return null\n    }\n    const coordinates = CoordinateArrays.removeRepeatedPoints(lineString.getCoordinates())\n    if (coordinates.length <= 1) return null\n    const startCoordinate = coordinates[0]\n    const endCoordinate = coordinates[coordinates.length - 1]\n    const startNode = this.getNode(startCoordinate)\n    const endNode = this.getNode(endCoordinate)\n    const directedEdge0 = new LineMergeDirectedEdge(startNode, endNode, coordinates[1], true)\n    const directedEdge1 = new LineMergeDirectedEdge(endNode, startNode, coordinates[coordinates.length - 2], false)\n    const edge = new LineMergeEdge(lineString)\n    edge.setDirectedEdges(directedEdge0, directedEdge1)\n    this.add(edge)\n  }\n\n  getNode (coordinate) {\n    let node = this.findNode(coordinate)\n    if (node === null) {\n      node = new Node(coordinate)\n      this.add(node)\n    }\n    return node\n  }\n\n  getClass () {\n    return LineMergeGraph\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nLineMergeGraph.constructor_ = function () {}\n","import LineString from '../../geom/LineString'\nimport Geometry from '../../geom/Geometry'\nimport hasInterface from '../../../../../hasInterface'\nimport Collection from '../../../../../java/util/Collection'\nimport EdgeString from './EdgeString'\nimport LineMergeGraph from './LineMergeGraph'\nimport ArrayList from '../../../../../java/util/ArrayList'\nimport Assert from '../../util/Assert'\nimport GraphComponent from '../../planargraph/GraphComponent'\nexport default class LineMerger {\n  constructor () {\n    LineMerger.constructor_.apply(this, arguments)\n  }\n\n  buildEdgeStringsForUnprocessedNodes () {\n    for (let i = this._graph.getNodes().iterator(); i.hasNext();) {\n      const node = i.next()\n      if (!node.isMarked()) {\n        Assert.isTrue(node.getDegree() === 2)\n        this.buildEdgeStringsStartingAt(node)\n        node.setMarked(true)\n      }\n    }\n  }\n\n  buildEdgeStringsForNonDegree2Nodes () {\n    for (let i = this._graph.getNodes().iterator(); i.hasNext();) {\n      const node = i.next()\n      if (node.getDegree() !== 2) {\n        this.buildEdgeStringsStartingAt(node)\n        node.setMarked(true)\n      }\n    }\n  }\n\n  buildEdgeStringsForObviousStartNodes () {\n    this.buildEdgeStringsForNonDegree2Nodes()\n  }\n\n  getMergedLineStrings () {\n    this.merge()\n    return this._mergedLineStrings\n  }\n\n  buildEdgeStringsStartingAt (node) {\n    for (let i = node.getOutEdges().iterator(); i.hasNext();) {\n      const directedEdge = i.next()\n      if (directedEdge.getEdge().isMarked()) {\n        continue\n      }\n      this._edgeStrings.add(this.buildEdgeStringStartingWith(directedEdge))\n    }\n  }\n\n  merge () {\n    if (this._mergedLineStrings !== null) {\n      return null\n    }\n    GraphComponent.setMarked(this._graph.nodeIterator(), false)\n    GraphComponent.setMarked(this._graph.edgeIterator(), false)\n    this._edgeStrings = new ArrayList()\n    this.buildEdgeStringsForObviousStartNodes()\n    this.buildEdgeStringsForIsolatedLoops()\n    this._mergedLineStrings = new ArrayList()\n    for (let i = this._edgeStrings.iterator(); i.hasNext();) {\n      const edgeString = i.next()\n      this._mergedLineStrings.add(edgeString.toLineString())\n    }\n  }\n\n  addLineString (lineString) {\n    if (this._factory === null) {\n      this._factory = lineString.getFactory()\n    }\n    this._graph.addEdge(lineString)\n  }\n\n  buildEdgeStringStartingWith (start) {\n    const edgeString = new EdgeString(this._factory)\n    let current = start\n    do {\n      edgeString.add(current)\n      current.getEdge().setMarked(true)\n      current = current.getNext()\n    } while (current !== null && current !== start)\n    return edgeString\n  }\n\n  add () {\n    if (arguments[0] instanceof Geometry) {\n      const geometry = arguments[0]\n      for (let i = 0; i < geometry.getNumGeometries(); i++) {\n        const component = geometry.getGeometryN(i)\n        if (component instanceof LineString) {\n          this.addLineString(component)\n        }\n      }\n      ;\n    } else if (hasInterface(arguments[0], Collection)) {\n      const geometries = arguments[0]\n      this._mergedLineStrings = null\n      for (let i = geometries.iterator(); i.hasNext();) {\n        const geometry = i.next()\n        this.add(geometry)\n      }\n    }\n  }\n\n  buildEdgeStringsForIsolatedLoops () {\n    this.buildEdgeStringsForUnprocessedNodes()\n  }\n\n  getClass () {\n    return LineMerger\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nLineMerger.constructor_ = function () {\n  this._graph = new LineMergeGraph()\n  this._mergedLineStrings = null\n  this._factory = null\n  this._edgeStrings = null\n}\n","import HashSet from '../../../../java/util/HashSet'\nimport NodeMap from './NodeMap'\nimport ArrayList from '../../../../java/util/ArrayList'\nexport default class Subgraph {\n  constructor () {\n    Subgraph.constructor_.apply(this, arguments)\n  }\n\n  dirEdgeIterator () {\n    return this._dirEdges.iterator()\n  }\n\n  edgeIterator () {\n    return this._edges.iterator()\n  }\n\n  getParent () {\n    return this._parentGraph\n  }\n\n  nodeIterator () {\n    return this._nodeMap.iterator()\n  }\n\n  contains (e) {\n    return this._edges.contains(e)\n  }\n\n  add (e) {\n    if (this._edges.contains(e)) return null\n    this._edges.add(e)\n    this._dirEdges.add(e.getDirEdge(0))\n    this._dirEdges.add(e.getDirEdge(1))\n    this._nodeMap.add(e.getDirEdge(0).getFromNode())\n    this._nodeMap.add(e.getDirEdge(1).getFromNode())\n  }\n\n  getClass () {\n    return Subgraph\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nSubgraph.constructor_ = function () {\n  this._parentGraph = null\n  this._edges = new HashSet()\n  this._dirEdges = new ArrayList()\n  this._nodeMap = new NodeMap()\n  const parentGraph = arguments[0]\n  this._parentGraph = parentGraph\n}\n","import Stack from '../../../../../java/util/Stack'\nimport Subgraph from '../Subgraph'\nimport ArrayList from '../../../../../java/util/ArrayList'\nimport GraphComponent from '../GraphComponent'\nexport default class ConnectedSubgraphFinder {\n  constructor () {\n    ConnectedSubgraphFinder.constructor_.apply(this, arguments)\n  }\n\n  addReachable (startNode, subgraph) {\n    const nodeStack = new Stack()\n    nodeStack.add(startNode)\n    while (!nodeStack.empty()) {\n      const node = nodeStack.pop()\n      this.addEdges(node, nodeStack, subgraph)\n    }\n  }\n\n  findSubgraph (node) {\n    const subgraph = new Subgraph(this._graph)\n    this.addReachable(node, subgraph)\n    return subgraph\n  }\n\n  getConnectedSubgraphs () {\n    const subgraphs = new ArrayList()\n    GraphComponent.setVisited(this._graph.nodeIterator(), false)\n    for (let i = this._graph.edgeIterator(); i.hasNext();) {\n      const e = i.next()\n      const node = e.getDirEdge(0).getFromNode()\n      if (!node.isVisited()) {\n        subgraphs.add(this.findSubgraph(node))\n      }\n    }\n    return subgraphs\n  }\n\n  addEdges (node, nodeStack, subgraph) {\n    node.setVisited(true)\n    for (let i = node.getOutEdges().iterator(); i.hasNext();) {\n      const de = i.next()\n      subgraph.add(de.getEdge())\n      const toNode = de.getToNode()\n      if (!toNode.isVisited()) nodeStack.push(toNode)\n    }\n  }\n\n  getClass () {\n    return ConnectedSubgraphFinder\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nConnectedSubgraphFinder.constructor_ = function () {\n  this._graph = null\n  const graph = arguments[0]\n  this._graph = graph\n}\n","import TreeSet from '../../../../../java/util/TreeSet'\nimport LineString from '../../geom/LineString'\nimport Geometry from '../../geom/Geometry'\nimport hasInterface from '../../../../../hasInterface'\nimport GeometryFactory from '../../geom/GeometryFactory'\nimport Collection from '../../../../../java/util/Collection'\nimport Coordinate from '../../geom/Coordinate'\nimport Integer from '../../../../../java/lang/Integer'\nimport LineMergeGraph from './LineMergeGraph'\nimport LinkedList from '../../../../../java/util/LinkedList'\nimport GeometryComponentFilter from '../../geom/GeometryComponentFilter'\nimport ArrayList from '../../../../../java/util/ArrayList'\nimport ConnectedSubgraphFinder from '../../planargraph/algorithm/ConnectedSubgraphFinder'\nimport Assert from '../../util/Assert'\nimport MultiLineString from '../../geom/MultiLineString'\nimport GraphComponent from '../../planargraph/GraphComponent'\nexport default class LineSequencer {\n  constructor () {\n    LineSequencer.constructor_.apply(this, arguments)\n  }\n\n  static findUnvisitedBestOrientedDE (node) {\n    let wellOrientedDE = null\n    let unvisitedDE = null\n    for (let i = node.getOutEdges().iterator(); i.hasNext();) {\n      const de = i.next()\n      if (!de.getEdge().isVisited()) {\n        unvisitedDE = de\n        if (de.getEdgeDirection()) wellOrientedDE = de\n      }\n    }\n    if (wellOrientedDE !== null) return wellOrientedDE\n    return unvisitedDE\n  }\n\n  static findLowestDegreeNode (graph) {\n    let minDegree = Integer.MAX_VALUE\n    let minDegreeNode = null\n    for (let i = graph.nodeIterator(); i.hasNext();) {\n      const node = i.next()\n      if (minDegreeNode === null || node.getDegree() < minDegree) {\n        minDegree = node.getDegree()\n        minDegreeNode = node\n      }\n    }\n    return minDegreeNode\n  }\n\n  static isSequenced (geom) {\n    if (!(geom instanceof MultiLineString)) {\n      return true\n    }\n    const mls = geom\n    const prevSubgraphNodes = new TreeSet()\n    let lastNode = null\n    const currNodes = new ArrayList()\n    for (let i = 0; i < mls.getNumGeometries(); i++) {\n      const line = mls.getGeometryN(i)\n      const startNode = line.getCoordinateN(0)\n      const endNode = line.getCoordinateN(line.getNumPoints() - 1)\n      if (prevSubgraphNodes.contains(startNode)) return false\n      if (prevSubgraphNodes.contains(endNode)) return false\n      if (lastNode !== null) {\n        if (!startNode.equals(lastNode)) {\n          prevSubgraphNodes.addAll(currNodes)\n          currNodes.clear()\n        }\n      }\n      currNodes.add(startNode)\n      currNodes.add(endNode)\n      lastNode = endNode\n    }\n    return true\n  }\n\n  static reverse (line) {\n    const pts = line.getCoordinates()\n    const revPts = new Array(pts.length).fill(null)\n    const len = pts.length\n    for (let i = 0; i < len; i++) {\n      revPts[len - 1 - i] = new Coordinate(pts[i])\n    }\n    return line.getFactory().createLineString(revPts)\n  }\n\n  static sequence (geom) {\n    const sequencer = new LineSequencer()\n    sequencer.add(geom)\n    return sequencer.getSequencedLineStrings()\n  }\n\n  addLine (lineString) {\n    if (this._factory === null) {\n      this._factory = lineString.getFactory()\n    }\n    this._graph.addEdge(lineString)\n    this._lineCount++\n  }\n\n  hasSequence (graph) {\n    let oddDegreeCount = 0\n    for (let i = graph.nodeIterator(); i.hasNext();) {\n      const node = i.next()\n      if (node.getDegree() % 2 === 1) oddDegreeCount++\n    }\n    return oddDegreeCount <= 2\n  }\n\n  computeSequence () {\n    if (this._isRun) {\n      return null\n    }\n    this._isRun = true\n    const sequences = this.findSequences()\n    if (sequences === null) return null\n    this._sequencedGeometry = this.buildSequencedGeometry(sequences)\n    this._isSequenceable = true\n    const finalLineCount = this._sequencedGeometry.getNumGeometries()\n    Assert.isTrue(this._lineCount === finalLineCount, 'Lines were missing from result')\n    Assert.isTrue(this._sequencedGeometry instanceof LineString || this._sequencedGeometry instanceof MultiLineString, 'Result is not lineal')\n  }\n\n  findSequences () {\n    const sequences = new ArrayList()\n    const csFinder = new ConnectedSubgraphFinder(this._graph)\n    const subgraphs = csFinder.getConnectedSubgraphs()\n    for (let i = subgraphs.iterator(); i.hasNext();) {\n      const subgraph = i.next()\n      if (this.hasSequence(subgraph)) {\n        const seq = this.findSequence(subgraph)\n        sequences.add(seq)\n      } else {\n        return null\n      }\n    }\n    return sequences\n  }\n\n  addReverseSubpath (de, lit, expectedClosed) {\n    const endNode = de.getToNode()\n    let fromNode = null\n    while (true) {\n      lit.add(de.getSym())\n      de.getEdge().setVisited(true)\n      fromNode = de.getFromNode()\n      const unvisitedOutDE = LineSequencer.findUnvisitedBestOrientedDE(fromNode)\n      if (unvisitedOutDE === null) break\n      de = unvisitedOutDE.getSym()\n    }\n    if (expectedClosed) {\n      Assert.isTrue(fromNode === endNode, 'path not contiguous')\n    }\n  }\n\n  findSequence (graph) {\n    GraphComponent.setVisited(graph.edgeIterator(), false)\n    const startNode = LineSequencer.findLowestDegreeNode(graph)\n    const startDE = startNode.getOutEdges().iterator().next()\n    const startDESym = startDE.getSym()\n    const seq = new LinkedList()\n    const lit = seq.listIterator()\n    this.addReverseSubpath(startDESym, lit, false)\n    while (lit.hasPrevious()) {\n      const prev = lit.previous()\n      const unvisitedOutDE = LineSequencer.findUnvisitedBestOrientedDE(prev.getFromNode())\n      if (unvisitedOutDE !== null) this.addReverseSubpath(unvisitedOutDE.getSym(), lit, true)\n    }\n    const orientedSeq = this.orient(seq)\n    return orientedSeq\n  }\n\n  reverse (seq) {\n    const newSeq = new LinkedList()\n    for (let i = seq.iterator(); i.hasNext();) {\n      const de = i.next()\n      newSeq.addFirst(de.getSym())\n    }\n    return newSeq\n  }\n\n  orient (seq) {\n    const startEdge = seq.get(0)\n    const endEdge = seq.get(seq.size() - 1)\n    const startNode = startEdge.getFromNode()\n    const endNode = endEdge.getToNode()\n    let flipSeq = false\n    const hasDegree1Node = startNode.getDegree() === 1 || endNode.getDegree() === 1\n    if (hasDegree1Node) {\n      let hasObviousStartNode = false\n      if (endEdge.getToNode().getDegree() === 1 && endEdge.getEdgeDirection() === false) {\n        hasObviousStartNode = true\n        flipSeq = true\n      }\n      if (startEdge.getFromNode().getDegree() === 1 && startEdge.getEdgeDirection() === true) {\n        hasObviousStartNode = true\n        flipSeq = false\n      }\n      if (!hasObviousStartNode) {\n        if (startEdge.getFromNode().getDegree() === 1) flipSeq = true\n      }\n    }\n    if (flipSeq) return this.reverse(seq)\n    return seq\n  }\n\n  buildSequencedGeometry (sequences) {\n    const lines = new ArrayList()\n    for (let i1 = sequences.iterator(); i1.hasNext();) {\n      const seq = i1.next()\n      for (let i2 = seq.iterator(); i2.hasNext();) {\n        const de = i2.next()\n        const e = de.getEdge()\n        const line = e.getLine()\n        let lineToAdd = line\n        if (!de.getEdgeDirection() && !line.isClosed()) lineToAdd = LineSequencer.reverse(line)\n        lines.add(lineToAdd)\n      }\n    }\n    if (lines.size() === 0) return this._factory.createMultiLineString(new Array(0).fill(null))\n    return this._factory.buildGeometry(lines)\n  }\n\n  getSequencedLineStrings () {\n    this.computeSequence()\n    return this._sequencedGeometry\n  }\n\n  isSequenceable () {\n    this.computeSequence()\n    return this._isSequenceable\n  }\n\n  add () {\n    if (hasInterface(arguments[0], Collection)) {\n      const geometries = arguments[0]\n      for (let i = geometries.iterator(); i.hasNext();) {\n        const geometry = i.next()\n        this.add(geometry)\n      }\n    } else if (arguments[0] instanceof Geometry) {\n      const geometry = arguments[0]\n      geometry.apply(new (class {\n        get interfaces_ () {\n          return [GeometryComponentFilter]\n        }\n\n        filter (component) {\n          if (component instanceof LineString) {\n            this.addLine(component)\n          }\n        }\n      })())\n    }\n  }\n\n  getClass () {\n    return LineSequencer\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nLineSequencer.constructor_ = function () {\n  this._graph = new LineMergeGraph()\n  this._factory = new GeometryFactory()\n  this._lineCount = 0\n  this._isRun = false\n  this._sequencedGeometry = null\n  this._isSequenceable = false\n}\n","import LineString from '../../../geom/LineString'\nimport CoordinateList from '../../../geom/CoordinateList'\nimport Coordinate from '../../../geom/Coordinate'\nimport Double from '../../../../../../java/lang/Double'\nimport LineSegment from '../../../geom/LineSegment'\nexport default class LineStringSnapper {\n  constructor () {\n    LineStringSnapper.constructor_.apply(this, arguments)\n  }\n\n  static isClosed (pts) {\n    if (pts.length <= 1) return false\n    return pts[0].equals2D(pts[pts.length - 1])\n  }\n\n  snapVertices (srcCoords, snapPts) {\n    const end = this._isClosed ? srcCoords.size() - 1 : srcCoords.size()\n    for (let i = 0; i < end; i++) {\n      const srcPt = srcCoords.get(i)\n      const snapVert = this.findSnapForVertex(srcPt, snapPts)\n      if (snapVert !== null) {\n        srcCoords.set(i, new Coordinate(snapVert))\n        if (i === 0 && this._isClosed) srcCoords.set(srcCoords.size() - 1, new Coordinate(snapVert))\n      }\n    }\n  }\n\n  findSnapForVertex (pt, snapPts) {\n    for (let i = 0; i < snapPts.length; i++) {\n      if (pt.equals2D(snapPts[i])) return null\n      if (pt.distance(snapPts[i]) < this._snapTolerance) return snapPts[i]\n    }\n    return null\n  }\n\n  snapTo (snapPts) {\n    const coordList = new CoordinateList(this._srcPts)\n    this.snapVertices(coordList, snapPts)\n    this.snapSegments(coordList, snapPts)\n    const newPts = coordList.toCoordinateArray()\n    return newPts\n  }\n\n  snapSegments (srcCoords, snapPts) {\n    if (snapPts.length === 0) return null\n    let distinctPtCount = snapPts.length\n    if (snapPts[0].equals2D(snapPts[snapPts.length - 1])) distinctPtCount = snapPts.length - 1\n    for (let i = 0; i < distinctPtCount; i++) {\n      const snapPt = snapPts[i]\n      const index = this.findSegmentIndexToSnap(snapPt, srcCoords)\n      if (index >= 0) {\n        srcCoords.add(index + 1, new Coordinate(snapPt), false)\n      }\n    }\n  }\n\n  findSegmentIndexToSnap (snapPt, srcCoords) {\n    let minDist = Double.MAX_VALUE\n    let snapIndex = -1\n    for (let i = 0; i < srcCoords.size() - 1; i++) {\n      this._seg.p0 = srcCoords.get(i)\n      this._seg.p1 = srcCoords.get(i + 1)\n      if (this._seg.p0.equals2D(snapPt) || this._seg.p1.equals2D(snapPt)) {\n        if (this._allowSnappingToSourceVertices) continue; else return -1\n      }\n      const dist = this._seg.distance(snapPt)\n      if (dist < this._snapTolerance && dist < minDist) {\n        minDist = dist\n        snapIndex = i\n      }\n    }\n    return snapIndex\n  }\n\n  setAllowSnappingToSourceVertices (allowSnappingToSourceVertices) {\n    this._allowSnappingToSourceVertices = allowSnappingToSourceVertices\n  }\n\n  getClass () {\n    return LineStringSnapper\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nLineStringSnapper.constructor_ = function () {\n  this._snapTolerance = 0.0\n  this._srcPts = null\n  this._seg = new LineSegment()\n  this._allowSnappingToSourceVertices = false\n  this._isClosed = false\n  if (arguments[0] instanceof LineString && typeof arguments[1] === 'number') {\n    const srcLine = arguments[0]; const snapTolerance = arguments[1]\n    LineStringSnapper.constructor_.call(this, srcLine.getCoordinates(), snapTolerance)\n  } else if (arguments[0] instanceof Array && typeof arguments[1] === 'number') {\n    const srcPts = arguments[0]; const snapTolerance = arguments[1]\n    this._srcPts = srcPts\n    this._isClosed = LineStringSnapper.isClosed(srcPts)\n    this._snapTolerance = snapTolerance\n  }\n}\n","import TreeSet from '../../../../../../java/util/TreeSet'\nimport GeometryTransformer from '../../../geom/util/GeometryTransformer'\nimport hasInterface from '../../../../../../hasInterface'\nimport Double from '../../../../../../java/lang/Double'\nimport LineStringSnapper from './LineStringSnapper'\nimport PrecisionModel from '../../../geom/PrecisionModel'\nimport Polygonal from '../../../geom/Polygonal'\nexport default class GeometrySnapper {\n  constructor () {\n    GeometrySnapper.constructor_.apply(this, arguments)\n  }\n\n  static snap (g0, g1, snapTolerance) {\n    const snapGeom = new Array(2).fill(null)\n    const snapper0 = new GeometrySnapper(g0)\n    snapGeom[0] = snapper0.snapTo(g1, snapTolerance)\n    const snapper1 = new GeometrySnapper(g1)\n    snapGeom[1] = snapper1.snapTo(snapGeom[0], snapTolerance)\n    return snapGeom\n  }\n\n  static computeOverlaySnapTolerance () {\n    if (arguments.length === 1) {\n      const g = arguments[0]\n      let snapTolerance = GeometrySnapper.computeSizeBasedSnapTolerance(g)\n      const pm = g.getPrecisionModel()\n      if (pm.getType() === PrecisionModel.FIXED) {\n        const fixedSnapTol = 1 / pm.getScale() * 2 / 1.415\n        if (fixedSnapTol > snapTolerance) snapTolerance = fixedSnapTol\n      }\n      return snapTolerance\n    } else if (arguments.length === 2) {\n      const g0 = arguments[0]; const g1 = arguments[1]\n      return Math.min(GeometrySnapper.computeOverlaySnapTolerance(g0), GeometrySnapper.computeOverlaySnapTolerance(g1))\n    }\n  }\n\n  static computeSizeBasedSnapTolerance (g) {\n    const env = g.getEnvelopeInternal()\n    const minDimension = Math.min(env.getHeight(), env.getWidth())\n    const snapTol = minDimension * GeometrySnapper.SNAP_PRECISION_FACTOR\n    return snapTol\n  }\n\n  static snapToSelf (geom, snapTolerance, cleanResult) {\n    const snapper0 = new GeometrySnapper(geom)\n    return snapper0.snapToSelf(snapTolerance, cleanResult)\n  }\n\n  snapTo (snapGeom, snapTolerance) {\n    const snapPts = this.extractTargetCoordinates(snapGeom)\n    const snapTrans = new SnapTransformer(snapTolerance, snapPts)\n    return snapTrans.transform(this._srcGeom)\n  }\n\n  snapToSelf (snapTolerance, cleanResult) {\n    const snapPts = this.extractTargetCoordinates(this._srcGeom)\n    const snapTrans = new SnapTransformer(snapTolerance, snapPts, true)\n    const snappedGeom = snapTrans.transform(this._srcGeom)\n    let result = snappedGeom\n    if (cleanResult && hasInterface(result, Polygonal)) {\n      result = snappedGeom.buffer(0)\n    }\n    return result\n  }\n\n  computeSnapTolerance (ringPts) {\n    const minSegLen = this.computeMinimumSegmentLength(ringPts)\n    const snapTol = minSegLen / 10\n    return snapTol\n  }\n\n  extractTargetCoordinates (g) {\n    const ptSet = new TreeSet()\n    const pts = g.getCoordinates()\n    for (let i = 0; i < pts.length; i++) {\n      ptSet.add(pts[i])\n    }\n    return ptSet.toArray(new Array(0).fill(null))\n  }\n\n  computeMinimumSegmentLength (pts) {\n    let minSegLen = Double.MAX_VALUE\n    for (let i = 0; i < pts.length - 1; i++) {\n      const segLen = pts[i].distance(pts[i + 1])\n      if (segLen < minSegLen) minSegLen = segLen\n    }\n    return minSegLen\n  }\n\n  getClass () {\n    return GeometrySnapper\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nGeometrySnapper.constructor_ = function () {\n  this._srcGeom = null\n  const srcGeom = arguments[0]\n  this._srcGeom = srcGeom\n}\nGeometrySnapper.SNAP_PRECISION_FACTOR = 1e-9\nclass SnapTransformer extends GeometryTransformer {\n  constructor () {\n    super()\n    SnapTransformer.constructor_.apply(this, arguments)\n  }\n\n  snapLine (srcPts, snapPts) {\n    const snapper = new LineStringSnapper(srcPts, this._snapTolerance)\n    snapper.setAllowSnappingToSourceVertices(this._isSelfSnap)\n    return snapper.snapTo(snapPts)\n  }\n\n  transformCoordinates (coords, parent) {\n    const srcPts = coords.toCoordinateArray()\n    const newPts = this.snapLine(srcPts, this._snapPts)\n    return this._factory.getCoordinateSequenceFactory().create(newPts)\n  }\n\n  getClass () {\n    return SnapTransformer\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nSnapTransformer.constructor_ = function () {\n  this._snapTolerance = null\n  this._snapPts = null\n  this._isSelfSnap = false\n  if (arguments.length === 2) {\n    const snapTolerance = arguments[0]; const snapPts = arguments[1]\n    this._snapTolerance = snapTolerance\n    this._snapPts = snapPts\n  } else if (arguments.length === 3) {\n    const snapTolerance = arguments[0]; const snapPts = arguments[1]; const isSelfSnap = arguments[2]\n    this._snapTolerance = snapTolerance\n    this._snapPts = snapPts\n    this._isSelfSnap = isSelfSnap\n  }\n}\n","import WKTWriter from '../io/WKTWriter'\nimport CoordinateArraySequence from '../geom/impl/CoordinateArraySequence'\nimport Octant from './Octant'\nimport SegmentString from './SegmentString'\nexport default class BasicSegmentString {\n  constructor () {\n    BasicSegmentString.constructor_.apply(this, arguments)\n  }\n\n  getCoordinates () {\n    return this._pts\n  }\n\n  size () {\n    return this._pts.length\n  }\n\n  getCoordinate (i) {\n    return this._pts[i]\n  }\n\n  isClosed () {\n    return this._pts[0].equals(this._pts[this._pts.length - 1])\n  }\n\n  getSegmentOctant (index) {\n    if (index === this._pts.length - 1) return -1\n    return Octant.octant(this.getCoordinate(index), this.getCoordinate(index + 1))\n  }\n\n  setData (data) {\n    this._data = data\n  }\n\n  getData () {\n    return this._data\n  }\n\n  toString () {\n    return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n  }\n\n  getClass () {\n    return BasicSegmentString\n  }\n\n  get interfaces_ () {\n    return [SegmentString]\n  }\n}\nBasicSegmentString.constructor_ = function () {\n  this._pts = null\n  this._data = null\n  const pts = arguments[0]; const data = arguments[1]\n  this._pts = pts\n  this._data = data\n}\n","import SegmentIntersector from './SegmentIntersector'\nimport ArrayList from '../../../../java/util/ArrayList'\nexport default class InteriorIntersectionFinder {\n  constructor () {\n    InteriorIntersectionFinder.constructor_.apply(this, arguments)\n  }\n\n  static createAllIntersectionsFinder (li) {\n    const finder = new InteriorIntersectionFinder(li)\n    finder.setFindAllIntersections(true)\n    return finder\n  }\n\n  static createAnyIntersectionFinder (li) {\n    return new InteriorIntersectionFinder(li)\n  }\n\n  static createIntersectionCounter (li) {\n    const finder = new InteriorIntersectionFinder(li)\n    finder.setFindAllIntersections(true)\n    finder.setKeepIntersections(false)\n    return finder\n  }\n\n  getInteriorIntersection () {\n    return this._interiorIntersection\n  }\n\n  setCheckEndSegmentsOnly (isCheckEndSegmentsOnly) {\n    this._isCheckEndSegmentsOnly = isCheckEndSegmentsOnly\n  }\n\n  getIntersectionSegments () {\n    return this._intSegments\n  }\n\n  count () {\n    return this._intersectionCount\n  }\n\n  getIntersections () {\n    return this._intersections\n  }\n\n  setFindAllIntersections (findAllIntersections) {\n    this._findAllIntersections = findAllIntersections\n  }\n\n  setKeepIntersections (keepIntersections) {\n    this._keepIntersections = keepIntersections\n  }\n\n  processIntersections (e0, segIndex0, e1, segIndex1) {\n    if (!this._findAllIntersections && this.hasIntersection()) return null\n    if (e0 === e1 && segIndex0 === segIndex1) return null\n    if (this._isCheckEndSegmentsOnly) {\n      const isEndSegPresent = this.isEndSegment(e0, segIndex0) || this.isEndSegment(e1, segIndex1)\n      if (!isEndSegPresent) return null\n    }\n    const p00 = e0.getCoordinates()[segIndex0]\n    const p01 = e0.getCoordinates()[segIndex0 + 1]\n    const p10 = e1.getCoordinates()[segIndex1]\n    const p11 = e1.getCoordinates()[segIndex1 + 1]\n    this._li.computeIntersection(p00, p01, p10, p11)\n    if (this._li.hasIntersection()) {\n      if (this._li.isInteriorIntersection()) {\n        this._intSegments = new Array(4).fill(null)\n        this._intSegments[0] = p00\n        this._intSegments[1] = p01\n        this._intSegments[2] = p10\n        this._intSegments[3] = p11\n        this._interiorIntersection = this._li.getIntersection(0)\n        if (this._keepIntersections) this._intersections.add(this._interiorIntersection)\n        this._intersectionCount++\n      }\n    }\n  }\n\n  isEndSegment (segStr, index) {\n    if (index === 0) return true\n    if (index >= segStr.size() - 2) return true\n    return false\n  }\n\n  hasIntersection () {\n    return this._interiorIntersection !== null\n  }\n\n  isDone () {\n    if (this._findAllIntersections) return false\n    return this._interiorIntersection !== null\n  }\n\n  getClass () {\n    return InteriorIntersectionFinder\n  }\n\n  get interfaces_ () {\n    return [SegmentIntersector]\n  }\n}\nInteriorIntersectionFinder.constructor_ = function () {\n  this._findAllIntersections = false\n  this._isCheckEndSegmentsOnly = false\n  this._li = null\n  this._interiorIntersection = null\n  this._intSegments = null\n  this._intersections = new ArrayList()\n  this._intersectionCount = 0\n  this._keepIntersections = true\n  const li = arguments[0]\n  this._li = li\n  this._interiorIntersection = null\n}\n","import WKTWriter from '../io/WKTWriter'\nimport MCIndexNoder from './MCIndexNoder'\nimport TopologyException from '../geom/TopologyException'\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector'\nimport InteriorIntersectionFinder from './InteriorIntersectionFinder'\nexport default class FastNodingValidator {\n  constructor () {\n    FastNodingValidator.constructor_.apply(this, arguments)\n  }\n\n  static computeIntersections (segStrings) {\n    const nv = new FastNodingValidator(segStrings)\n    nv.setFindAllIntersections(true)\n    nv.isValid()\n    return nv.getIntersections()\n  }\n\n  execute () {\n    if (this._segInt !== null) return null\n    this.checkInteriorIntersections()\n  }\n\n  getIntersections () {\n    return this._segInt.getIntersections()\n  }\n\n  isValid () {\n    this.execute()\n    return this._isValid\n  }\n\n  setFindAllIntersections (findAllIntersections) {\n    this._findAllIntersections = findAllIntersections\n  }\n\n  checkInteriorIntersections () {\n    this._isValid = true\n    this._segInt = new InteriorIntersectionFinder(this._li)\n    this._segInt.setFindAllIntersections(this._findAllIntersections)\n    const noder = new MCIndexNoder()\n    noder.setSegmentIntersector(this._segInt)\n    noder.computeNodes(this._segStrings)\n    if (this._segInt.hasIntersection()) {\n      this._isValid = false\n      return null\n    }\n  }\n\n  checkValid () {\n    this.execute()\n    if (!this._isValid) throw new TopologyException(this.getErrorMessage(), this._segInt.getInteriorIntersection())\n  }\n\n  getErrorMessage () {\n    if (this._isValid) return 'no intersections found'\n    const intSegs = this._segInt.getIntersectionSegments()\n    return 'found non-noded intersection between ' + WKTWriter.toLineString(intSegs[0], intSegs[1]) + ' and ' + WKTWriter.toLineString(intSegs[2], intSegs[3])\n  }\n\n  getClass () {\n    return FastNodingValidator\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nFastNodingValidator.constructor_ = function () {\n  this._li = new RobustLineIntersector()\n  this._segStrings = null\n  this._findAllIntersections = false\n  this._segInt = null\n  this._isValid = true\n  const segStrings = arguments[0]\n  this._segStrings = segStrings\n}\n","import BasicSegmentString from '../noding/BasicSegmentString'\nimport FastNodingValidator from '../noding/FastNodingValidator'\nimport ArrayList from '../../../../java/util/ArrayList'\nexport default class EdgeNodingValidator {\n  constructor () {\n    EdgeNodingValidator.constructor_.apply(this, arguments)\n  }\n\n  static toSegmentStrings (edges) {\n    const segStrings = new ArrayList()\n    for (let i = edges.iterator(); i.hasNext();) {\n      const e = i.next()\n      segStrings.add(new BasicSegmentString(e.getCoordinates(), e))\n    }\n    return segStrings\n  }\n\n  static checkValid (edges) {\n    const validator = new EdgeNodingValidator(edges)\n    validator.checkValid()\n  }\n\n  checkValid () {\n    this._nv.checkValid()\n  }\n\n  getClass () {\n    return EdgeNodingValidator\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nEdgeNodingValidator.constructor_ = function () {\n  this._nv = null\n  const edges = arguments[0]\n  this._nv = new FastNodingValidator(EdgeNodingValidator.toSegmentStrings(edges))\n}\n","import ArrayList from '../../../../../java/util/ArrayList'\nimport Assert from '../../util/Assert'\nimport OverlayOp from './OverlayOp'\nexport default class LineBuilder {\n  constructor () {\n    LineBuilder.constructor_.apply(this, arguments)\n  }\n\n  collectLines (opCode) {\n    for (let it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n      const de = it.next()\n      this.collectLineEdge(de, opCode, this._lineEdgesList)\n      this.collectBoundaryTouchEdge(de, opCode, this._lineEdgesList)\n    }\n  }\n\n  labelIsolatedLine (e, targetIndex) {\n    const loc = this._ptLocator.locate(e.getCoordinate(), this._op.getArgGeometry(targetIndex))\n    e.getLabel().setLocation(targetIndex, loc)\n  }\n\n  build (opCode) {\n    this.findCoveredLineEdges()\n    this.collectLines(opCode)\n    this.buildLines(opCode)\n    return this._resultLineList\n  }\n\n  collectLineEdge (de, opCode, edges) {\n    const label = de.getLabel()\n    const e = de.getEdge()\n    if (de.isLineEdge()) {\n      if (!de.isVisited() && OverlayOp.isResultOfOp(label, opCode) && !e.isCovered()) {\n        edges.add(e)\n        de.setVisitedEdge(true)\n      }\n    }\n  }\n\n  findCoveredLineEdges () {\n    for (let nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n      const node = nodeit.next()\n      node.getEdges().findCoveredLineEdges()\n    }\n    for (let it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n      const de = it.next()\n      const e = de.getEdge()\n      if (de.isLineEdge() && !e.isCoveredSet()) {\n        const isCovered = this._op.isCoveredByA(de.getCoordinate())\n        e.setCovered(isCovered)\n      }\n    }\n  }\n\n  labelIsolatedLines (edgesList) {\n    for (let it = edgesList.iterator(); it.hasNext();) {\n      const e = it.next()\n      const label = e.getLabel()\n      if (e.isIsolated()) {\n        if (label.isNull(0)) this.labelIsolatedLine(e, 0); else this.labelIsolatedLine(e, 1)\n      }\n    }\n  }\n\n  buildLines (opCode) {\n    for (let it = this._lineEdgesList.iterator(); it.hasNext();) {\n      const e = it.next()\n      const label = e.getLabel()\n      const line = this._geometryFactory.createLineString(e.getCoordinates())\n      this._resultLineList.add(line)\n      e.setInResult(true)\n    }\n  }\n\n  collectBoundaryTouchEdge (de, opCode, edges) {\n    const label = de.getLabel()\n    if (de.isLineEdge()) return null\n    if (de.isVisited()) return null\n    if (de.isInteriorAreaEdge()) return null\n    if (de.getEdge().isInResult()) return null\n    Assert.isTrue(!(de.isInResult() || de.getSym().isInResult()) || !de.getEdge().isInResult())\n    if (OverlayOp.isResultOfOp(label, opCode) && opCode === OverlayOp.INTERSECTION) {\n      edges.add(de.getEdge())\n      de.setVisitedEdge(true)\n    }\n  }\n\n  getClass () {\n    return LineBuilder\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nLineBuilder.constructor_ = function () {\n  this._op = null\n  this._geometryFactory = null\n  this._ptLocator = null\n  this._lineEdgesList = new ArrayList()\n  this._resultLineList = new ArrayList()\n  const op = arguments[0]; const geometryFactory = arguments[1]; const ptLocator = arguments[2]\n  this._op = op\n  this._geometryFactory = geometryFactory\n  this._ptLocator = ptLocator\n}\n","import ArrayList from '../../../../../java/util/ArrayList'\nimport OverlayOp from './OverlayOp'\nexport default class PointBuilder {\n  constructor () {\n    PointBuilder.constructor_.apply(this, arguments)\n  }\n\n  filterCoveredNodeToPoint (n) {\n    const coord = n.getCoordinate()\n    if (!this._op.isCoveredByLA(coord)) {\n      const pt = this._geometryFactory.createPoint(coord)\n      this._resultPointList.add(pt)\n    }\n  }\n\n  extractNonCoveredResultNodes (opCode) {\n    for (let nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n      const n = nodeit.next()\n      if (n.isInResult()) continue\n      if (n.isIncidentEdgeInResult()) continue\n      if (n.getEdges().getDegree() === 0 || opCode === OverlayOp.INTERSECTION) {\n        const label = n.getLabel()\n        if (OverlayOp.isResultOfOp(label, opCode)) {\n          this.filterCoveredNodeToPoint(n)\n        }\n      }\n    }\n  }\n\n  build (opCode) {\n    this.extractNonCoveredResultNodes(opCode)\n    return this._resultPointList\n  }\n\n  getClass () {\n    return PointBuilder\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nPointBuilder.constructor_ = function () {\n  this._op = null\n  this._geometryFactory = null\n  this._resultPointList = new ArrayList()\n  const op = arguments[0]; const geometryFactory = arguments[1]; const ptLocator = arguments[2]\n  this._op = op\n  this._geometryFactory = geometryFactory\n}\n","import Double from '../../../../java/lang/Double'\nimport Long from '../../../../java/lang/Long'\nexport default class CommonBits {\n  constructor () {\n    this._isFirst = true\n    this._commonMantissaBitsCount = 53\n    this._commonBits = new Long()\n    this._commonSignExp = null\n  }\n\n  getCommon () {\n    return Double.longBitsToDouble(this._commonBits)\n  }\n\n  add (num) {\n    const numBits = Double.doubleToLongBits(num)\n    if (this._isFirst) {\n      this._commonBits = numBits\n      this._commonSignExp = CommonBits.signExpBits(this._commonBits)\n      this._isFirst = false\n      return null\n    }\n    const numSignExp = CommonBits.signExpBits(numBits)\n    if (numSignExp !== this._commonSignExp) {\n      this._commonBits.high = 0 | 0\n      this._commonBits.low = 0 | 0\n      return null\n    }\n    this._commonMantissaBitsCount = CommonBits.numCommonMostSigMantissaBits(this._commonBits, numBits)\n    this._commonBits = CommonBits.zeroLowerBits(this._commonBits, 64 - (12 + this._commonMantissaBitsCount))\n  }\n\n  toString () {\n    if (arguments.length === 1) {\n      const bits = arguments[0]\n      const x = Double.longBitsToDouble(bits)\n      const numStr = Long.toBinaryString(bits)\n      const padStr = '0000000000000000000000000000000000000000000000000000000000000000' + numStr\n      const bitStr = padStr.substring(padStr.length - 64)\n      const str = bitStr.substring(0, 1) + '  ' + bitStr.substring(1, 12) + '(exp) ' + bitStr.substring(12) + ' [ ' + x + ' ]'\n      return str\n    }\n  }\n\n  getClass () {\n    return CommonBits\n  }\n\n  get interfaces_ () {\n    return []\n  }\n\n  static getBit (bits, i) {\n    const mask = (1 << (i % 32))\n    if (i < 32) {\n      return (bits.low & mask) !== 0 ? 1 : 0\n    }\n    return (bits.high & mask) !== 0 ? 1 : 0\n  }\n\n  static signExpBits (num) {\n    return num.high >>> 20\n  }\n\n  static zeroLowerBits (bits, nBits) {\n    let prop = 'low'\n    if (nBits > 32) {\n      bits.low = 0 | 0\n      nBits %= 32\n      prop = 'high'\n    }\n    if (nBits > 0) {\n      const mask = (nBits < 32) ? (~((1 << nBits) - 1)) : 0\n      bits[prop] &= mask\n    }\n    return bits\n  }\n\n  static numCommonMostSigMantissaBits (num1, num2) {\n    let count = 0\n    for (let i = 52; i >= 0; i--) {\n      if (CommonBits.getBit(num1, i) !== CommonBits.getBit(num2, i)) return count\n      count++\n    }\n    return 52\n  }\n}\n","import CommonBits from './CommonBits'\nimport CoordinateFilter from '../geom/CoordinateFilter'\nimport Coordinate from '../geom/Coordinate'\nimport CoordinateSequenceFilter from '../geom/CoordinateSequenceFilter'\nexport default class CommonBitsRemover {\n  constructor () {\n    CommonBitsRemover.constructor_.apply(this, arguments)\n  }\n\n  addCommonBits (geom) {\n    const trans = new Translater(this._commonCoord)\n    geom.apply(trans)\n    geom.geometryChanged()\n  }\n\n  removeCommonBits (geom) {\n    if (this._commonCoord.x === 0.0 && this._commonCoord.y === 0.0) return geom\n    const invCoord = new Coordinate(this._commonCoord)\n    invCoord.x = -invCoord.x\n    invCoord.y = -invCoord.y\n    const trans = new Translater(invCoord)\n    geom.apply(trans)\n    geom.geometryChanged()\n    return geom\n  }\n\n  getCommonCoordinate () {\n    return this._commonCoord\n  }\n\n  add (geom) {\n    geom.apply(this._ccFilter)\n    this._commonCoord = this._ccFilter.getCommonCoordinate()\n  }\n\n  getClass () {\n    return CommonBitsRemover\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nclass CommonCoordinateFilter {\n  constructor () {\n    CommonCoordinateFilter.constructor_.apply(this, arguments)\n  }\n\n  filter (coord) {\n    this._commonBitsX.add(coord.x)\n    this._commonBitsY.add(coord.y)\n  }\n\n  getCommonCoordinate () {\n    return new Coordinate(this._commonBitsX.getCommon(), this._commonBitsY.getCommon())\n  }\n\n  getClass () {\n    return CommonCoordinateFilter\n  }\n\n  get interfaces_ () {\n    return [CoordinateFilter]\n  }\n}\nCommonCoordinateFilter.constructor_ = function () {\n  this._commonBitsX = new CommonBits()\n  this._commonBitsY = new CommonBits()\n}\nclass Translater {\n  constructor () {\n    Translater.constructor_.apply(this, arguments)\n  }\n\n  filter (seq, i) {\n    const xp = seq.getOrdinate(i, 0) + this.trans.x\n    const yp = seq.getOrdinate(i, 1) + this.trans.y\n    seq.setOrdinate(i, 0, xp)\n    seq.setOrdinate(i, 1, yp)\n  }\n\n  isDone () {\n    return false\n  }\n\n  isGeometryChanged () {\n    return true\n  }\n\n  getClass () {\n    return Translater\n  }\n\n  get interfaces_ () {\n    return [CoordinateSequenceFilter]\n  }\n}\nTranslater.constructor_ = function () {\n  this.trans = null\n  const trans = arguments[0]\n  this.trans = trans\n}\nCommonBitsRemover.CommonCoordinateFilter = CommonCoordinateFilter\nCommonBitsRemover.Translater = Translater\nCommonBitsRemover.constructor_ = function () {\n  this._commonCoord = null\n  this._ccFilter = new CommonCoordinateFilter()\n}\n","import GeometrySnapper from './GeometrySnapper'\nimport System from '../../../../../../java/lang/System'\nimport CommonBitsRemover from '../../../precision/CommonBitsRemover'\nimport OverlayOp from '../OverlayOp'\nexport default class SnapOverlayOp {\n  constructor () {\n    SnapOverlayOp.constructor_.apply(this, arguments)\n  }\n\n  static overlayOp (g0, g1, opCode) {\n    const op = new SnapOverlayOp(g0, g1)\n    return op.getResultGeometry(opCode)\n  }\n\n  static union (g0, g1) {\n    return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n  }\n\n  static intersection (g0, g1) {\n    return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n  }\n\n  static symDifference (g0, g1) {\n    return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n  }\n\n  static difference (g0, g1) {\n    return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n  }\n\n  selfSnap (geom) {\n    const snapper0 = new GeometrySnapper(geom)\n    const snapGeom = snapper0.snapTo(geom, this._snapTolerance)\n    return snapGeom\n  }\n\n  removeCommonBits (geom) {\n    this._cbr = new CommonBitsRemover()\n    this._cbr.add(geom[0])\n    this._cbr.add(geom[1])\n    const remGeom = new Array(2).fill(null)\n    remGeom[0] = this._cbr.removeCommonBits(geom[0].copy())\n    remGeom[1] = this._cbr.removeCommonBits(geom[1].copy())\n    return remGeom\n  }\n\n  prepareResult (geom) {\n    this._cbr.addCommonBits(geom)\n    return geom\n  }\n\n  getResultGeometry (opCode) {\n    const prepGeom = this.snap(this._geom)\n    const result = OverlayOp.overlayOp(prepGeom[0], prepGeom[1], opCode)\n    return this.prepareResult(result)\n  }\n\n  checkValid (g) {\n    if (!g.isValid()) {\n      System.out.println('Snapped geometry is invalid')\n    }\n  }\n\n  computeSnapTolerance () {\n    this._snapTolerance = GeometrySnapper.computeOverlaySnapTolerance(this._geom[0], this._geom[1])\n  }\n\n  snap (geom) {\n    const remGeom = this.removeCommonBits(geom)\n    const snapGeom = GeometrySnapper.snap(remGeom[0], remGeom[1], this._snapTolerance)\n    return snapGeom\n  }\n\n  getClass () {\n    return SnapOverlayOp\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nSnapOverlayOp.constructor_ = function () {\n  this._geom = new Array(2).fill(null)\n  this._snapTolerance = null\n  this._cbr = null\n  const g1 = arguments[0]; const g2 = arguments[1]\n  this._geom[0] = g1\n  this._geom[1] = g2\n  this.computeSnapTolerance()\n}\n","import SnapOverlayOp from './SnapOverlayOp'\nimport RuntimeException from '../../../../../../java/lang/RuntimeException'\nimport OverlayOp from '../OverlayOp'\nexport default class SnapIfNeededOverlayOp {\n  constructor () {\n    SnapIfNeededOverlayOp.constructor_.apply(this, arguments)\n  }\n\n  static overlayOp (g0, g1, opCode) {\n    const op = new SnapIfNeededOverlayOp(g0, g1)\n    return op.getResultGeometry(opCode)\n  }\n\n  static union (g0, g1) {\n    return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n  }\n\n  static intersection (g0, g1) {\n    return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n  }\n\n  static symDifference (g0, g1) {\n    return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n  }\n\n  static difference (g0, g1) {\n    return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n  }\n\n  getResultGeometry (opCode) {\n    let result = null\n    let isSuccess = false\n    let savedException = null\n    try {\n      result = OverlayOp.overlayOp(this._geom[0], this._geom[1], opCode)\n      const isValid = true\n      if (isValid) isSuccess = true\n    } catch (ex) {\n      if (ex instanceof RuntimeException) {\n        savedException = ex\n      } else throw ex\n    } finally {}\n    if (!isSuccess) {\n      try {\n        result = SnapOverlayOp.overlayOp(this._geom[0], this._geom[1], opCode)\n      } catch (ex) {\n        if (ex instanceof RuntimeException) {\n          throw savedException\n        } else throw ex\n      } finally {}\n    }\n    return result\n  }\n\n  getClass () {\n    return SnapIfNeededOverlayOp\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nSnapIfNeededOverlayOp.constructor_ = function () {\n  this._geom = new Array(2).fill(null)\n  const g1 = arguments[0]; const g2 = arguments[1]\n  this._geom[0] = g1\n  this._geom[1] = g2\n}\n","import BoundaryNodeRule from '../algorithm/BoundaryNodeRule'\nimport GeometryGraph from '../geomgraph/GeometryGraph'\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector'\nexport default class GeometryGraphOperation {\n  constructor () {\n    GeometryGraphOperation.constructor_.apply(this, arguments)\n  }\n\n  getArgGeometry (i) {\n    return this._arg[i].getGeometry()\n  }\n\n  setComputationPrecision (pm) {\n    this._resultPrecisionModel = pm\n    this._li.setPrecisionModel(this._resultPrecisionModel)\n  }\n\n  getClass () {\n    return GeometryGraphOperation\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nGeometryGraphOperation.constructor_ = function () {\n  this._li = new RobustLineIntersector()\n  this._resultPrecisionModel = null\n  this._arg = null\n  if (arguments.length === 1) {\n    const g0 = arguments[0]\n    this.setComputationPrecision(g0.getPrecisionModel())\n    this._arg = new Array(1).fill(null)\n    this._arg[0] = new GeometryGraph(0, g0)\n  } else if (arguments.length === 2) {\n    const g0 = arguments[0]; const g1 = arguments[1]\n    GeometryGraphOperation.constructor_.call(this, g0, g1, BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE)\n  } else if (arguments.length === 3) {\n    const g0 = arguments[0]; const g1 = arguments[1]; const boundaryNodeRule = arguments[2]\n    if (g0.getPrecisionModel().compareTo(g1.getPrecisionModel()) >= 0) this.setComputationPrecision(g0.getPrecisionModel()); else this.setComputationPrecision(g1.getPrecisionModel())\n    this._arg = new Array(2).fill(null)\n    this._arg[0] = new GeometryGraph(0, g0, boundaryNodeRule)\n    this._arg[1] = new GeometryGraph(1, g1, boundaryNodeRule)\n  }\n}\n","import PointLocator from '../../algorithm/PointLocator'\nimport Location from '../../geom/Location'\nimport EdgeNodingValidator from '../../geomgraph/EdgeNodingValidator'\nimport GeometryCollectionMapper from '../../geom/util/GeometryCollectionMapper'\nimport PolygonBuilder from './PolygonBuilder'\nimport Position from '../../geomgraph/Position'\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException'\nimport MapOp from '../../geom/util/MapOp'\nimport LineBuilder from './LineBuilder'\nimport PointBuilder from './PointBuilder'\nimport SnapIfNeededOverlayOp from './snap/SnapIfNeededOverlayOp'\nimport Label from '../../geomgraph/Label'\nimport OverlayNodeFactory from './OverlayNodeFactory'\nimport GeometryGraphOperation from '../GeometryGraphOperation'\nimport EdgeList from '../../geomgraph/EdgeList'\nimport ArrayList from '../../../../../java/util/ArrayList'\nimport Assert from '../../util/Assert'\nimport PlanarGraph from '../../geomgraph/PlanarGraph'\nexport default class OverlayOp extends GeometryGraphOperation {\n  constructor () {\n    super()\n    OverlayOp.constructor_.apply(this, arguments)\n  }\n\n  static overlayOp (geom0, geom1, opCode) {\n    const gov = new OverlayOp(geom0, geom1)\n    const geomOv = gov.getResultGeometry(opCode)\n    return geomOv\n  }\n\n  static union (geom, other) {\n    if (geom.isEmpty() || other.isEmpty()) {\n      if (geom.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.UNION, geom, other, geom.getFactory())\n      if (geom.isEmpty()) return other.copy()\n      if (other.isEmpty()) return geom.copy()\n    }\n    if (geom.isGeometryCollection() || other.isGeometryCollection()) throw new IllegalArgumentException('This method does not support GeometryCollection arguments')\n    return SnapIfNeededOverlayOp.overlayOp(geom, other, OverlayOp.UNION)\n  }\n\n  static intersection (geom, other) {\n    if (geom.isEmpty() || other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.INTERSECTION, geom, other, geom.getFactory())\n    if (geom.isGeometryCollection()) {\n      const g2 = other\n      return GeometryCollectionMapper.map(geom, new (class {\n        get interfaces_ () {\n          return [MapOp]\n        }\n\n        map (g) {\n          return OverlayOp.intersection(g, g2)\n        }\n      })())\n    }\n    return SnapIfNeededOverlayOp.overlayOp(geom, other, OverlayOp.INTERSECTION)\n  }\n\n  static symDifference (geom, other) {\n    if (geom.isEmpty() || other.isEmpty()) {\n      if (geom.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.SYMDIFFERENCE, geom, other, geom.getFactory())\n      if (geom.isEmpty()) return other.copy()\n      if (other.isEmpty()) return geom.copy()\n    }\n    if (geom.isGeometryCollection() || other.isGeometryCollection()) throw new IllegalArgumentException('This method does not support GeometryCollection arguments')\n    return SnapIfNeededOverlayOp.overlayOp(geom, other, OverlayOp.SYMDIFFERENCE)\n  }\n\n  static resultDimension (opCode, g0, g1) {\n    const dim0 = g0.getDimension()\n    const dim1 = g1.getDimension()\n    let resultDimension = -1\n    switch (opCode) {\n      case OverlayOp.INTERSECTION:\n        resultDimension = Math.min(dim0, dim1)\n        break\n      case OverlayOp.UNION:\n        resultDimension = Math.max(dim0, dim1)\n        break\n      case OverlayOp.DIFFERENCE:\n        resultDimension = dim0\n        break\n      case OverlayOp.SYMDIFFERENCE:\n        resultDimension = Math.max(dim0, dim1)\n        break\n    }\n    return resultDimension\n  }\n\n  static createEmptyResult (overlayOpCode, a, b, geomFact) {\n    let result = null\n    switch (OverlayOp.resultDimension(overlayOpCode, a, b)) {\n      case -1:\n        result = geomFact.createGeometryCollection()\n        break\n      case 0:\n        result = geomFact.createPoint()\n        break\n      case 1:\n        result = geomFact.createLineString()\n        break\n      case 2:\n        result = geomFact.createPolygon()\n        break\n    }\n    return result\n  }\n\n  static difference (geom, other) {\n    if (geom.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.DIFFERENCE, geom, other, geom.getFactory())\n    if (other.isEmpty()) return geom.copy()\n    if (geom.isGeometryCollection() || other.isGeometryCollection()) throw new IllegalArgumentException('This method does not support GeometryCollection arguments')\n    return SnapIfNeededOverlayOp.overlayOp(geom, other, OverlayOp.DIFFERENCE)\n  }\n\n  static isResultOfOp () {\n    if (arguments.length === 2) {\n      const label = arguments[0]; const opCode = arguments[1]\n      const loc0 = label.getLocation(0)\n      const loc1 = label.getLocation(1)\n      return OverlayOp.isResultOfOp(loc0, loc1, opCode)\n    } else if (arguments.length === 3) {\n      let loc0 = arguments[0]; let loc1 = arguments[1]; const overlayOpCode = arguments[2]\n      if (loc0 === Location.BOUNDARY) loc0 = Location.INTERIOR\n      if (loc1 === Location.BOUNDARY) loc1 = Location.INTERIOR\n      switch (overlayOpCode) {\n        case OverlayOp.INTERSECTION:\n          return loc0 === Location.INTERIOR && loc1 === Location.INTERIOR\n        case OverlayOp.UNION:\n          return loc0 === Location.INTERIOR || loc1 === Location.INTERIOR\n        case OverlayOp.DIFFERENCE:\n          return loc0 === Location.INTERIOR && loc1 !== Location.INTERIOR\n        case OverlayOp.SYMDIFFERENCE:\n          return loc0 === Location.INTERIOR && loc1 !== Location.INTERIOR || loc0 !== Location.INTERIOR && loc1 === Location.INTERIOR\n      }\n      return false\n    }\n  }\n\n  insertUniqueEdge (e) {\n    const existingEdge = this._edgeList.findEqualEdge(e)\n    if (existingEdge !== null) {\n      const existingLabel = existingEdge.getLabel()\n      let labelToMerge = e.getLabel()\n      if (!existingEdge.isPointwiseEqual(e)) {\n        labelToMerge = new Label(e.getLabel())\n        labelToMerge.flip()\n      }\n      const depth = existingEdge.getDepth()\n      if (depth.isNull()) {\n        depth.add(existingLabel)\n      }\n      depth.add(labelToMerge)\n      existingLabel.merge(labelToMerge)\n    } else {\n      this._edgeList.add(e)\n    }\n  }\n\n  getGraph () {\n    return this._graph\n  }\n\n  cancelDuplicateResultEdges () {\n    for (let it = this._graph.getEdgeEnds().iterator(); it.hasNext();) {\n      const de = it.next()\n      const sym = de.getSym()\n      if (de.isInResult() && sym.isInResult()) {\n        de.setInResult(false)\n        sym.setInResult(false)\n      }\n    }\n  }\n\n  isCoveredByLA (coord) {\n    if (this.isCovered(coord, this._resultLineList)) return true\n    if (this.isCovered(coord, this._resultPolyList)) return true\n    return false\n  }\n\n  computeGeometry (resultPointList, resultLineList, resultPolyList, opcode) {\n    const geomList = new ArrayList()\n    geomList.addAll(resultPointList)\n    geomList.addAll(resultLineList)\n    geomList.addAll(resultPolyList)\n    if (geomList.isEmpty()) return OverlayOp.createEmptyResult(opcode, this._arg[0].getGeometry(), this._arg[1].getGeometry(), this._geomFact)\n    return this._geomFact.buildGeometry(geomList)\n  }\n\n  mergeSymLabels () {\n    for (let nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      const node = nodeit.next()\n      node.getEdges().mergeSymLabels()\n    }\n  }\n\n  isCovered (coord, geomList) {\n    for (let it = geomList.iterator(); it.hasNext();) {\n      const geom = it.next()\n      const loc = this._ptLocator.locate(coord, geom)\n      if (loc !== Location.EXTERIOR) return true\n    }\n    return false\n  }\n\n  replaceCollapsedEdges () {\n    const newEdges = new ArrayList()\n    for (let it = this._edgeList.iterator(); it.hasNext();) {\n      const e = it.next()\n      if (e.isCollapsed()) {\n        it.remove()\n        newEdges.add(e.getCollapsedEdge())\n      }\n    }\n    this._edgeList.addAll(newEdges)\n  }\n\n  updateNodeLabelling () {\n    for (let nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      const node = nodeit.next()\n      const lbl = node.getEdges().getLabel()\n      node.getLabel().merge(lbl)\n    }\n  }\n\n  getResultGeometry (overlayOpCode) {\n    this.computeOverlay(overlayOpCode)\n    return this._resultGeom\n  }\n\n  insertUniqueEdges (edges) {\n    for (let i = edges.iterator(); i.hasNext();) {\n      const e = i.next()\n      this.insertUniqueEdge(e)\n    }\n  }\n\n  computeOverlay (opCode) {\n    this.copyPoints(0)\n    this.copyPoints(1)\n    this._arg[0].computeSelfNodes(this._li, false)\n    this._arg[1].computeSelfNodes(this._li, false)\n    this._arg[0].computeEdgeIntersections(this._arg[1], this._li, true)\n    const baseSplitEdges = new ArrayList()\n    this._arg[0].computeSplitEdges(baseSplitEdges)\n    this._arg[1].computeSplitEdges(baseSplitEdges)\n    const splitEdges = baseSplitEdges\n    this.insertUniqueEdges(baseSplitEdges)\n    this.computeLabelsFromDepths()\n    this.replaceCollapsedEdges()\n    EdgeNodingValidator.checkValid(this._edgeList.getEdges())\n    this._graph.addEdges(this._edgeList.getEdges())\n    this.computeLabelling()\n    this.labelIncompleteNodes()\n    this.findResultAreaEdges(opCode)\n    this.cancelDuplicateResultEdges()\n    const polyBuilder = new PolygonBuilder(this._geomFact)\n    polyBuilder.add(this._graph)\n    this._resultPolyList = polyBuilder.getPolygons()\n    const lineBuilder = new LineBuilder(this, this._geomFact, this._ptLocator)\n    this._resultLineList = lineBuilder.build(opCode)\n    const pointBuilder = new PointBuilder(this, this._geomFact, this._ptLocator)\n    this._resultPointList = pointBuilder.build(opCode)\n    this._resultGeom = this.computeGeometry(this._resultPointList, this._resultLineList, this._resultPolyList, opCode)\n  }\n\n  labelIncompleteNode (n, targetIndex) {\n    const loc = this._ptLocator.locate(n.getCoordinate(), this._arg[targetIndex].getGeometry())\n    n.getLabel().setLocation(targetIndex, loc)\n  }\n\n  copyPoints (argIndex) {\n    for (let i = this._arg[argIndex].getNodeIterator(); i.hasNext();) {\n      const graphNode = i.next()\n      const newNode = this._graph.addNode(graphNode.getCoordinate())\n      newNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex))\n    }\n  }\n\n  findResultAreaEdges (opCode) {\n    for (let it = this._graph.getEdgeEnds().iterator(); it.hasNext();) {\n      const de = it.next()\n      const label = de.getLabel()\n      if (label.isArea() && !de.isInteriorAreaEdge() && OverlayOp.isResultOfOp(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), opCode)) {\n        de.setInResult(true)\n      }\n    }\n  }\n\n  computeLabelsFromDepths () {\n    for (let it = this._edgeList.iterator(); it.hasNext();) {\n      const e = it.next()\n      const lbl = e.getLabel()\n      const depth = e.getDepth()\n      if (!depth.isNull()) {\n        depth.normalize()\n        for (let i = 0; i < 2; i++) {\n          if (!lbl.isNull(i) && lbl.isArea() && !depth.isNull(i)) {\n            if (depth.getDelta(i) === 0) {\n              lbl.toLine(i)\n            } else {\n              Assert.isTrue(!depth.isNull(i, Position.LEFT), 'depth of LEFT side has not been initialized')\n              lbl.setLocation(i, Position.LEFT, depth.getLocation(i, Position.LEFT))\n              Assert.isTrue(!depth.isNull(i, Position.RIGHT), 'depth of RIGHT side has not been initialized')\n              lbl.setLocation(i, Position.RIGHT, depth.getLocation(i, Position.RIGHT))\n            }\n          }\n        }\n      }\n    }\n  }\n\n  computeLabelling () {\n    for (let nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      const node = nodeit.next()\n      node.getEdges().computeLabelling(this._arg)\n    }\n    this.mergeSymLabels()\n    this.updateNodeLabelling()\n  }\n\n  labelIncompleteNodes () {\n    let nodeCount = 0\n    for (let ni = this._graph.getNodes().iterator(); ni.hasNext();) {\n      const n = ni.next()\n      const label = n.getLabel()\n      if (n.isIsolated()) {\n        nodeCount++\n        if (label.isNull(0)) this.labelIncompleteNode(n, 0); else this.labelIncompleteNode(n, 1)\n      }\n      n.getEdges().updateLabelling(label)\n    }\n  }\n\n  isCoveredByA (coord) {\n    if (this.isCovered(coord, this._resultPolyList)) return true\n    return false\n  }\n\n  getClass () {\n    return OverlayOp\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nOverlayOp.constructor_ = function () {\n  this._ptLocator = new PointLocator()\n  this._geomFact = null\n  this._resultGeom = null\n  this._graph = null\n  this._edgeList = new EdgeList()\n  this._resultPolyList = new ArrayList()\n  this._resultLineList = new ArrayList()\n  this._resultPointList = new ArrayList()\n  const g0 = arguments[0]; const g1 = arguments[1]\n  GeometryGraphOperation.constructor_.call(this, g0, g1)\n  this._graph = new PlanarGraph(new OverlayNodeFactory())\n  this._geomFact = g0.getFactory()\n}\nOverlayOp.INTERSECTION = 1\nOverlayOp.UNION = 2\nOverlayOp.DIFFERENCE = 3\nOverlayOp.SYMDIFFERENCE = 4\n","import DirectedEdge from '../../planargraph/DirectedEdge'\nexport default class PolygonizeDirectedEdge extends DirectedEdge {\n  constructor () {\n    super()\n    PolygonizeDirectedEdge.constructor_.apply(this, arguments)\n  }\n\n  getNext () {\n    return this._next\n  }\n\n  isInRing () {\n    return this._edgeRing !== null\n  }\n\n  setRing (edgeRing) {\n    this._edgeRing = edgeRing\n  }\n\n  setLabel (label) {\n    this._label = label\n  }\n\n  getLabel () {\n    return this._label\n  }\n\n  setNext (next) {\n    this._next = next\n  }\n\n  getRing () {\n    return this._edgeRing\n  }\n\n  getClass () {\n    return PolygonizeDirectedEdge\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nPolygonizeDirectedEdge.constructor_ = function () {\n  this._edgeRing = null\n  this._next = null\n  this._label = -1\n  const from = arguments[0]; const to = arguments[1]; const directionPt = arguments[2]; const edgeDirection = arguments[3]\n  DirectedEdge.constructor_.call(this, from, to, directionPt, edgeDirection)\n}\n","import Edge from '../../planargraph/Edge'\nexport default class PolygonizeEdge extends Edge {\n  constructor () {\n    super()\n    PolygonizeEdge.constructor_.apply(this, arguments)\n  }\n\n  getLine () {\n    return this._line\n  }\n\n  getClass () {\n    return PolygonizeEdge\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nPolygonizeEdge.constructor_ = function () {\n  this._line = null\n  const line = arguments[0]\n  this._line = line\n}\n","import Location from '../../geom/Location'\nimport GeometryFactory from '../../geom/GeometryFactory'\nimport Position from '../../geomgraph/Position'\nimport Polygon from '../../geom/Polygon'\nimport MultiPolygon from '../../geom/MultiPolygon'\nimport MaximalEdgeRing from '../overlay/MaximalEdgeRing'\nimport OverlayNodeFactory from '../overlay/OverlayNodeFactory'\nimport ArrayList from '../../../../../java/util/ArrayList'\nimport Assert from '../../util/Assert'\nimport PlanarGraph from '../../geomgraph/PlanarGraph'\nexport default class ConnectedInteriorTester {\n  constructor () {\n    ConnectedInteriorTester.constructor_.apply(this, arguments)\n  }\n\n  static findDifferentPoint (coord, pt) {\n    for (let i = 0; i < coord.length; i++) {\n      if (!coord[i].equals(pt)) return coord[i]\n    }\n    return null\n  }\n\n  visitInteriorRing (ring, graph) {\n    const pts = ring.getCoordinates()\n    const pt0 = pts[0]\n    const pt1 = ConnectedInteriorTester.findDifferentPoint(pts, pt0)\n    const e = graph.findEdgeInSameDirection(pt0, pt1)\n    const de = graph.findEdgeEnd(e)\n    let intDe = null\n    if (de.getLabel().getLocation(0, Position.RIGHT) === Location.INTERIOR) {\n      intDe = de\n    } else if (de.getSym().getLabel().getLocation(0, Position.RIGHT) === Location.INTERIOR) {\n      intDe = de.getSym()\n    }\n    Assert.isTrue(intDe !== null, 'unable to find dirEdge with Interior on RHS')\n    this.visitLinkedDirectedEdges(intDe)\n  }\n\n  visitShellInteriors (g, graph) {\n    if (g instanceof Polygon) {\n      const p = g\n      this.visitInteriorRing(p.getExteriorRing(), graph)\n    }\n    if (g instanceof MultiPolygon) {\n      const mp = g\n      for (let i = 0; i < mp.getNumGeometries(); i++) {\n        const p = mp.getGeometryN(i)\n        this.visitInteriorRing(p.getExteriorRing(), graph)\n      }\n    }\n  }\n\n  getCoordinate () {\n    return this._disconnectedRingcoord\n  }\n\n  setInteriorEdgesInResult (graph) {\n    for (let it = graph.getEdgeEnds().iterator(); it.hasNext();) {\n      const de = it.next()\n      if (de.getLabel().getLocation(0, Position.RIGHT) === Location.INTERIOR) {\n        de.setInResult(true)\n      }\n    }\n  }\n\n  visitLinkedDirectedEdges (start) {\n    const startDe = start\n    let de = start\n    do {\n      Assert.isTrue(de !== null, 'found null Directed Edge')\n      de.setVisited(true)\n      de = de.getNext()\n    } while (de !== startDe)\n  }\n\n  buildEdgeRings (dirEdges) {\n    const edgeRings = new ArrayList()\n    for (let it = dirEdges.iterator(); it.hasNext();) {\n      const de = it.next()\n      if (de.isInResult() && de.getEdgeRing() === null) {\n        const er = new MaximalEdgeRing(de, this._geometryFactory)\n        er.linkDirectedEdgesForMinimalEdgeRings()\n        const minEdgeRings = er.buildMinimalRings()\n        edgeRings.addAll(minEdgeRings)\n      }\n    }\n    return edgeRings\n  }\n\n  hasUnvisitedShellEdge (edgeRings) {\n    for (let i = 0; i < edgeRings.size(); i++) {\n      const er = edgeRings.get(i)\n      if (er.isHole()) continue\n      const edges = er.getEdges()\n      let de = edges.get(0)\n      if (de.getLabel().getLocation(0, Position.RIGHT) !== Location.INTERIOR) continue\n      for (let j = 0; j < edges.size(); j++) {\n        de = edges.get(j)\n        if (!de.isVisited()) {\n          this._disconnectedRingcoord = de.getCoordinate()\n          return true\n        }\n      }\n    }\n    return false\n  }\n\n  isInteriorsConnected () {\n    const splitEdges = new ArrayList()\n    this._geomGraph.computeSplitEdges(splitEdges)\n    const graph = new PlanarGraph(new OverlayNodeFactory())\n    graph.addEdges(splitEdges)\n    this.setInteriorEdgesInResult(graph)\n    graph.linkResultDirectedEdges()\n    const edgeRings = this.buildEdgeRings(graph.getEdgeEnds())\n    this.visitShellInteriors(this._geomGraph.getGeometry(), graph)\n    return !this.hasUnvisitedShellEdge(edgeRings)\n  }\n\n  getClass () {\n    return ConnectedInteriorTester\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nConnectedInteriorTester.constructor_ = function () {\n  this._geometryFactory = new GeometryFactory()\n  this._geomGraph = null\n  this._disconnectedRingcoord = null\n  const geomGraph = arguments[0]\n  this._geomGraph = geomGraph\n}\n","import EdgeEnd from '../../geomgraph/EdgeEnd'\nimport Label from '../../geomgraph/Label'\nimport ArrayList from '../../../../../java/util/ArrayList'\nexport default class EdgeEndBuilder {\n  constructor () {\n    EdgeEndBuilder.constructor_.apply(this, arguments)\n  }\n\n  createEdgeEndForNext (edge, l, eiCurr, eiNext) {\n    const iNext = eiCurr.segmentIndex + 1\n    if (iNext >= edge.getNumPoints() && eiNext === null) return null\n    let pNext = edge.getCoordinate(iNext)\n    if (eiNext !== null && eiNext.segmentIndex === eiCurr.segmentIndex) pNext = eiNext.coord\n    const e = new EdgeEnd(edge, eiCurr.coord, pNext, new Label(edge.getLabel()))\n    l.add(e)\n  }\n\n  createEdgeEndForPrev (edge, l, eiCurr, eiPrev) {\n    let iPrev = eiCurr.segmentIndex\n    if (eiCurr.dist === 0.0) {\n      if (iPrev === 0) return null\n      iPrev--\n    }\n    let pPrev = edge.getCoordinate(iPrev)\n    if (eiPrev !== null && eiPrev.segmentIndex >= iPrev) pPrev = eiPrev.coord\n    const label = new Label(edge.getLabel())\n    label.flip()\n    const e = new EdgeEnd(edge, eiCurr.coord, pPrev, label)\n    l.add(e)\n  }\n\n  computeEdgeEnds () {\n    if (arguments.length === 1) {\n      const edges = arguments[0]\n      const l = new ArrayList()\n      for (let i = edges; i.hasNext();) {\n        const e = i.next()\n        this.computeEdgeEnds(e, l)\n      }\n      return l\n    } else if (arguments.length === 2) {\n      const edge = arguments[0]; const l = arguments[1]\n      const eiList = edge.getEdgeIntersectionList()\n      eiList.addEndpoints()\n      const it = eiList.iterator()\n      let eiPrev = null\n      let eiCurr = null\n      if (!it.hasNext()) return null\n      let eiNext = it.next()\n      do {\n        eiPrev = eiCurr\n        eiCurr = eiNext\n        eiNext = null\n        if (it.hasNext()) eiNext = it.next()\n        if (eiCurr !== null) {\n          this.createEdgeEndForPrev(edge, l, eiCurr, eiPrev)\n          this.createEdgeEndForNext(edge, l, eiCurr, eiNext)\n        }\n      } while (eiCurr !== null)\n    }\n  }\n\n  getClass () {\n    return EdgeEndBuilder\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nEdgeEndBuilder.constructor_ = function () {}\n","import Location from '../../geom/Location'\nimport EdgeEnd from '../../geomgraph/EdgeEnd'\nimport Position from '../../geomgraph/Position'\nimport GeometryGraph from '../../geomgraph/GeometryGraph'\nimport Label from '../../geomgraph/Label'\nimport ArrayList from '../../../../../java/util/ArrayList'\nimport Edge from '../../geomgraph/Edge'\nexport default class EdgeEndBundle extends EdgeEnd {\n  constructor () {\n    super()\n    EdgeEndBundle.constructor_.apply(this, arguments)\n  }\n\n  insert (e) {\n    this._edgeEnds.add(e)\n  }\n\n  print (out) {\n    out.println('EdgeEndBundle--> Label: ' + this._label)\n    for (let it = this.iterator(); it.hasNext();) {\n      const ee = it.next()\n      ee.print(out)\n      out.println()\n    }\n  }\n\n  iterator () {\n    return this._edgeEnds.iterator()\n  }\n\n  getEdgeEnds () {\n    return this._edgeEnds\n  }\n\n  computeLabelOn (geomIndex, boundaryNodeRule) {\n    let boundaryCount = 0\n    let foundInterior = false\n    for (let it = this.iterator(); it.hasNext();) {\n      const e = it.next()\n      const loc = e.getLabel().getLocation(geomIndex)\n      if (loc === Location.BOUNDARY) boundaryCount++\n      if (loc === Location.INTERIOR) foundInterior = true\n    }\n    let loc = Location.NONE\n    if (foundInterior) loc = Location.INTERIOR\n    if (boundaryCount > 0) {\n      loc = GeometryGraph.determineBoundary(boundaryNodeRule, boundaryCount)\n    }\n    this._label.setLocation(geomIndex, loc)\n  }\n\n  computeLabelSide (geomIndex, side) {\n    for (let it = this.iterator(); it.hasNext();) {\n      const e = it.next()\n      if (e.getLabel().isArea()) {\n        const loc = e.getLabel().getLocation(geomIndex, side)\n        if (loc === Location.INTERIOR) {\n          this._label.setLocation(geomIndex, side, Location.INTERIOR)\n          return null\n        } else if (loc === Location.EXTERIOR) this._label.setLocation(geomIndex, side, Location.EXTERIOR)\n      }\n    }\n  }\n\n  getLabel () {\n    return this._label\n  }\n\n  computeLabelSides (geomIndex) {\n    this.computeLabelSide(geomIndex, Position.LEFT)\n    this.computeLabelSide(geomIndex, Position.RIGHT)\n  }\n\n  updateIM (im) {\n    Edge.updateIM(this._label, im)\n  }\n\n  computeLabel (boundaryNodeRule) {\n    let isArea = false\n    for (let it = this.iterator(); it.hasNext();) {\n      const e = it.next()\n      if (e.getLabel().isArea()) isArea = true\n    }\n    if (isArea) this._label = new Label(Location.NONE, Location.NONE, Location.NONE); else this._label = new Label(Location.NONE)\n    for (let i = 0; i < 2; i++) {\n      this.computeLabelOn(i, boundaryNodeRule)\n      if (isArea) this.computeLabelSides(i)\n    }\n  }\n\n  getClass () {\n    return EdgeEndBundle\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nEdgeEndBundle.constructor_ = function () {\n  this._edgeEnds = new ArrayList()\n  if (arguments.length === 1) {\n    const e = arguments[0]\n    EdgeEndBundle.constructor_.call(this, null, e)\n  } else if (arguments.length === 2) {\n    const boundaryNodeRule = arguments[0]; const e = arguments[1]\n    EdgeEnd.constructor_.call(this, e.getEdge(), e.getCoordinate(), e.getDirectedCoordinate(), new Label(e.getLabel()))\n    this.insert(e)\n  }\n}\n","import EdgeEndStar from '../../geomgraph/EdgeEndStar'\nimport EdgeEndBundle from './EdgeEndBundle'\nexport default class EdgeEndBundleStar extends EdgeEndStar {\n  constructor () {\n    super()\n    EdgeEndBundleStar.constructor_.apply(this, arguments)\n  }\n\n  updateIM (im) {\n    for (let it = this.iterator(); it.hasNext();) {\n      const esb = it.next()\n      esb.updateIM(im)\n    }\n  }\n\n  insert (e) {\n    let eb = this._edgeMap.get(e)\n    if (eb === null) {\n      eb = new EdgeEndBundle(e)\n      this.insertEdgeEnd(e, eb)\n    } else {\n      eb.insert(e)\n    }\n  }\n\n  getClass () {\n    return EdgeEndBundleStar\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nEdgeEndBundleStar.constructor_ = function () {}\n","import Node from '../../geomgraph/Node'\nexport default class RelateNode extends Node {\n  constructor () {\n    super()\n    RelateNode.constructor_.apply(this, arguments)\n  }\n\n  updateIMFromEdges (im) {\n    this._edges.updateIM(im)\n  }\n\n  computeIM (im) {\n    im.setAtLeastIfValid(this._label.getLocation(0), this._label.getLocation(1), 0)\n  }\n\n  getClass () {\n    return RelateNode\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nRelateNode.constructor_ = function () {\n  const coord = arguments[0]; const edges = arguments[1]\n  Node.constructor_.call(this, coord, edges)\n}\n","import EdgeEndBundleStar from './EdgeEndBundleStar'\nimport RelateNode from './RelateNode'\nimport NodeFactory from '../../geomgraph/NodeFactory'\nexport default class RelateNodeFactory extends NodeFactory {\n  constructor () {\n    super()\n    RelateNodeFactory.constructor_.apply(this, arguments)\n  }\n\n  createNode (coord) {\n    return new RelateNode(coord, new EdgeEndBundleStar())\n  }\n\n  getClass () {\n    return RelateNodeFactory\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nRelateNodeFactory.constructor_ = function () {}\n","import Location from '../../geom/Location'\nimport EdgeEndBuilder from './EdgeEndBuilder'\nimport NodeMap from '../../geomgraph/NodeMap'\nimport RelateNodeFactory from './RelateNodeFactory'\nexport default class RelateNodeGraph {\n  constructor () {\n    RelateNodeGraph.constructor_.apply(this, arguments)\n  }\n\n  insertEdgeEnds (ee) {\n    for (let i = ee.iterator(); i.hasNext();) {\n      const e = i.next()\n      this._nodes.add(e)\n    }\n  }\n\n  getNodeIterator () {\n    return this._nodes.iterator()\n  }\n\n  copyNodesAndLabels (geomGraph, argIndex) {\n    for (let nodeIt = geomGraph.getNodeIterator(); nodeIt.hasNext();) {\n      const graphNode = nodeIt.next()\n      const newNode = this._nodes.addNode(graphNode.getCoordinate())\n      newNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex))\n    }\n  }\n\n  build (geomGraph) {\n    this.computeIntersectionNodes(geomGraph, 0)\n    this.copyNodesAndLabels(geomGraph, 0)\n    const eeBuilder = new EdgeEndBuilder()\n    const eeList = eeBuilder.computeEdgeEnds(geomGraph.getEdgeIterator())\n    this.insertEdgeEnds(eeList)\n  }\n\n  computeIntersectionNodes (geomGraph, argIndex) {\n    for (let edgeIt = geomGraph.getEdgeIterator(); edgeIt.hasNext();) {\n      const e = edgeIt.next()\n      const eLoc = e.getLabel().getLocation(argIndex)\n      for (let eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext();) {\n        const ei = eiIt.next()\n        const n = this._nodes.addNode(ei.coord)\n        if (eLoc === Location.BOUNDARY) n.setLabelBoundary(argIndex); else {\n          if (n.getLabel().isNull(argIndex)) n.setLabel(argIndex, Location.INTERIOR)\n        }\n      }\n    }\n  }\n\n  getClass () {\n    return RelateNodeGraph\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nRelateNodeGraph.constructor_ = function () {\n  this._nodes = new NodeMap(new RelateNodeFactory())\n}\n","import RelateNodeGraph from '../relate/RelateNodeGraph'\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector'\nexport default class ConsistentAreaTester {\n  constructor () {\n    ConsistentAreaTester.constructor_.apply(this, arguments)\n  }\n\n  isNodeEdgeAreaLabelsConsistent () {\n    for (let nodeIt = this._nodeGraph.getNodeIterator(); nodeIt.hasNext();) {\n      const node = nodeIt.next()\n      if (!node.getEdges().isAreaLabelsConsistent(this._geomGraph)) {\n        this._invalidPoint = node.getCoordinate().copy()\n        return false\n      }\n    }\n    return true\n  }\n\n  getInvalidPoint () {\n    return this._invalidPoint\n  }\n\n  hasDuplicateRings () {\n    for (let nodeIt = this._nodeGraph.getNodeIterator(); nodeIt.hasNext();) {\n      const node = nodeIt.next()\n      for (let i = node.getEdges().iterator(); i.hasNext();) {\n        const eeb = i.next()\n        if (eeb.getEdgeEnds().size() > 1) {\n          this._invalidPoint = eeb.getEdge().getCoordinate(0)\n          return true\n        }\n      }\n    }\n    return false\n  }\n\n  isNodeConsistentArea () {\n    const intersector = this._geomGraph.computeSelfNodes(this._li, true, true)\n    if (intersector.hasProperIntersection()) {\n      this._invalidPoint = intersector.getProperIntersectionPoint()\n      return false\n    }\n    this._nodeGraph.build(this._geomGraph)\n    return this.isNodeEdgeAreaLabelsConsistent()\n  }\n\n  getClass () {\n    return ConsistentAreaTester\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nConsistentAreaTester.constructor_ = function () {\n  this._li = new RobustLineIntersector()\n  this._geomGraph = null\n  this._nodeGraph = new RelateNodeGraph()\n  this._invalidPoint = null\n  const geomGraph = arguments[0]\n  this._geomGraph = geomGraph\n}\n","import STRtree from '../../index/strtree/STRtree'\nimport IsValidOp from './IsValidOp'\nimport PointLocation from '../../algorithm/PointLocation'\nimport ArrayList from '../../../../../java/util/ArrayList'\nimport Envelope from '../../geom/Envelope'\nexport default class IndexedNestedRingTester {\n  constructor () {\n    IndexedNestedRingTester.constructor_.apply(this, arguments)\n  }\n\n  buildIndex () {\n    this._index = new STRtree()\n    for (let i = 0; i < this._rings.size(); i++) {\n      const ring = this._rings.get(i)\n      const env = ring.getEnvelopeInternal()\n      this._index.insert(env, ring)\n    }\n  }\n\n  getNestedPoint () {\n    return this._nestedPt\n  }\n\n  isNonNested () {\n    this.buildIndex()\n    for (let i = 0; i < this._rings.size(); i++) {\n      const innerRing = this._rings.get(i)\n      const innerRingPts = innerRing.getCoordinates()\n      const results = this._index.query(innerRing.getEnvelopeInternal())\n      for (let j = 0; j < results.size(); j++) {\n        const searchRing = results.get(j)\n        const searchRingPts = searchRing.getCoordinates()\n        if (innerRing === searchRing) continue\n        if (!innerRing.getEnvelopeInternal().intersects(searchRing.getEnvelopeInternal())) continue\n        const innerRingPt = IsValidOp.findPtNotNode(innerRingPts, searchRing, this._graph)\n        if (innerRingPt === null) continue\n        const isInside = PointLocation.isInRing(innerRingPt, searchRingPts)\n        if (isInside) {\n          this._nestedPt = innerRingPt\n          return false\n        }\n      }\n    }\n    return true\n  }\n\n  add (ring) {\n    this._rings.add(ring)\n    this._totalEnv.expandToInclude(ring.getEnvelopeInternal())\n  }\n\n  getClass () {\n    return IndexedNestedRingTester\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nIndexedNestedRingTester.constructor_ = function () {\n  this._graph = null\n  this._rings = new ArrayList()\n  this._totalEnv = new Envelope()\n  this._index = null\n  this._nestedPt = null\n  const graph = arguments[0]\n  this._graph = graph\n}\n","export default class TopologyValidationError {\n  constructor () {\n    TopologyValidationError.constructor_.apply(this, arguments)\n  }\n\n  getErrorType () {\n    return this._errorType\n  }\n\n  getMessage () {\n    return TopologyValidationError.errMsg[this._errorType]\n  }\n\n  getCoordinate () {\n    return this._pt\n  }\n\n  toString () {\n    let locStr = ''\n    if (this._pt !== null) locStr = ' at or near point ' + this._pt\n    return this.getMessage() + locStr\n  }\n\n  getClass () {\n    return TopologyValidationError\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nTopologyValidationError.constructor_ = function () {\n  this._errorType = null\n  this._pt = null\n  if (arguments.length === 1) {\n    const errorType = arguments[0]\n    TopologyValidationError.constructor_.call(this, errorType, null)\n  } else if (arguments.length === 2) {\n    const errorType = arguments[0]; const pt = arguments[1]\n    this._errorType = errorType\n    if (pt !== null) this._pt = pt.copy()\n  }\n}\nTopologyValidationError.ERROR = 0\nTopologyValidationError.REPEATED_POINT = 1\nTopologyValidationError.HOLE_OUTSIDE_SHELL = 2\nTopologyValidationError.NESTED_HOLES = 3\nTopologyValidationError.DISCONNECTED_INTERIOR = 4\nTopologyValidationError.SELF_INTERSECTION = 5\nTopologyValidationError.RING_SELF_INTERSECTION = 6\nTopologyValidationError.NESTED_SHELLS = 7\nTopologyValidationError.DUPLICATE_RINGS = 8\nTopologyValidationError.TOO_FEW_POINTS = 9\nTopologyValidationError.INVALID_COORDINATE = 10\nTopologyValidationError.RING_NOT_CLOSED = 11\nTopologyValidationError.errMsg = ['Topology Validation Error', 'Repeated Point', 'Hole lies outside shell', 'Holes are nested', 'Interior is disconnected', 'Self-intersection', 'Ring Self-intersection', 'Nested shells', 'Duplicate Rings', 'Too few distinct points in geometry component', 'Invalid Coordinate', 'Ring is not closed']\n","import Location from '../../geom/Location'\nimport TreeSet from '../../../../../java/util/TreeSet'\nimport LineString from '../../geom/LineString'\nimport Geometry from '../../geom/Geometry'\nimport ConnectedInteriorTester from './ConnectedInteriorTester'\nimport Coordinate from '../../geom/Coordinate'\nimport Point from '../../geom/Point'\nimport Polygon from '../../geom/Polygon'\nimport MultiPoint from '../../geom/MultiPoint'\nimport PointLocation from '../../algorithm/PointLocation'\nimport LinearRing from '../../geom/LinearRing'\nimport Double from '../../../../../java/lang/Double'\nimport GeometryGraph from '../../geomgraph/GeometryGraph'\nimport MultiPolygon from '../../geom/MultiPolygon'\nimport ConsistentAreaTester from './ConsistentAreaTester'\nimport GeometryCollection from '../../geom/GeometryCollection'\nimport UnsupportedOperationException from '../../../../../java/lang/UnsupportedOperationException'\nimport IndexedNestedRingTester from './IndexedNestedRingTester'\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector'\nimport TopologyValidationError from './TopologyValidationError'\nimport IndexedPointInAreaLocator from '../../algorithm/locate/IndexedPointInAreaLocator'\nimport Assert from '../../util/Assert'\nexport default class IsValidOp {\n  constructor () {\n    IsValidOp.constructor_.apply(this, arguments)\n  }\n\n  static findPtNotNode (testCoords, searchRing, graph) {\n    const searchEdge = graph.findEdge(searchRing)\n    const eiList = searchEdge.getEdgeIntersectionList()\n    for (let i = 0; i < testCoords.length; i++) {\n      const pt = testCoords[i]\n      if (!eiList.isIntersection(pt)) return pt\n    }\n    return null\n  }\n\n  static isValid () {\n    if (arguments[0] instanceof Geometry) {\n      const geom = arguments[0]\n      const isValidOp = new IsValidOp(geom)\n      return isValidOp.isValid()\n    } else if (arguments[0] instanceof Coordinate) {\n      const coord = arguments[0]\n      if (Double.isNaN(coord.x)) return false\n      if (Double.isInfinite(coord.x)) return false\n      if (Double.isNaN(coord.y)) return false\n      if (Double.isInfinite(coord.y)) return false\n      return true\n    }\n  }\n\n  checkInvalidCoordinates () {\n    if (arguments[0] instanceof Array) {\n      const coords = arguments[0]\n      for (let i = 0; i < coords.length; i++) {\n        if (!IsValidOp.isValid(coords[i])) {\n          this._validErr = new TopologyValidationError(TopologyValidationError.INVALID_COORDINATE, coords[i])\n          return null\n        }\n      }\n    } else if (arguments[0] instanceof Polygon) {\n      const poly = arguments[0]\n      this.checkInvalidCoordinates(poly.getExteriorRing().getCoordinates())\n      if (this._validErr !== null) return null\n      for (let i = 0; i < poly.getNumInteriorRing(); i++) {\n        this.checkInvalidCoordinates(poly.getInteriorRingN(i).getCoordinates())\n        if (this._validErr !== null) return null\n      }\n    }\n  }\n\n  checkHolesNotNested (p, graph) {\n    const nestedTester = new IndexedNestedRingTester(graph)\n    for (let i = 0; i < p.getNumInteriorRing(); i++) {\n      const innerHole = p.getInteriorRingN(i)\n      nestedTester.add(innerHole)\n    }\n    const isNonNested = nestedTester.isNonNested()\n    if (!isNonNested) {\n      this._validErr = new TopologyValidationError(TopologyValidationError.NESTED_HOLES, nestedTester.getNestedPoint())\n    }\n  }\n\n  checkConsistentArea (graph) {\n    const cat = new ConsistentAreaTester(graph)\n    const isValidArea = cat.isNodeConsistentArea()\n    if (!isValidArea) {\n      this._validErr = new TopologyValidationError(TopologyValidationError.SELF_INTERSECTION, cat.getInvalidPoint())\n      return null\n    }\n    if (cat.hasDuplicateRings()) {\n      this._validErr = new TopologyValidationError(TopologyValidationError.DUPLICATE_RINGS, cat.getInvalidPoint())\n    }\n  }\n\n  isValid () {\n    this.checkValid(this._parentGeometry)\n    return this._validErr === null\n  }\n\n  checkShellInsideHole (shell, hole, graph) {\n    const shellPts = shell.getCoordinates()\n    const holePts = hole.getCoordinates()\n    const shellPt = IsValidOp.findPtNotNode(shellPts, hole, graph)\n    if (shellPt !== null) {\n      const insideHole = PointLocation.isInRing(shellPt, holePts)\n      if (!insideHole) {\n        return shellPt\n      }\n    }\n    const holePt = IsValidOp.findPtNotNode(holePts, shell, graph)\n    if (holePt !== null) {\n      const insideShell = PointLocation.isInRing(holePt, shellPts)\n      if (insideShell) {\n        return holePt\n      }\n      return null\n    }\n    Assert.shouldNeverReachHere('points in shell and hole appear to be equal')\n    return null\n  }\n\n  checkNoSelfIntersectingRings (graph) {\n    for (let i = graph.getEdgeIterator(); i.hasNext();) {\n      const e = i.next()\n      this.checkNoSelfIntersectingRing(e.getEdgeIntersectionList())\n      if (this._validErr !== null) return null\n    }\n  }\n\n  checkConnectedInteriors (graph) {\n    const cit = new ConnectedInteriorTester(graph)\n    if (!cit.isInteriorsConnected()) this._validErr = new TopologyValidationError(TopologyValidationError.DISCONNECTED_INTERIOR, cit.getCoordinate())\n  }\n\n  checkNoSelfIntersectingRing (eiList) {\n    const nodeSet = new TreeSet()\n    let isFirst = true\n    for (let i = eiList.iterator(); i.hasNext();) {\n      const ei = i.next()\n      if (isFirst) {\n        isFirst = false\n        continue\n      }\n      if (nodeSet.contains(ei.coord)) {\n        this._validErr = new TopologyValidationError(TopologyValidationError.RING_SELF_INTERSECTION, ei.coord)\n        return null\n      } else {\n        nodeSet.add(ei.coord)\n      }\n    }\n  }\n\n  checkHolesInShell (p, graph) {\n    const shell = p.getExteriorRing()\n    const pir = new IndexedPointInAreaLocator(shell)\n    for (let i = 0; i < p.getNumInteriorRing(); i++) {\n      const hole = p.getInteriorRingN(i)\n      const holePt = IsValidOp.findPtNotNode(hole.getCoordinates(), shell, graph)\n      if (holePt === null) return null\n      const outside = Location.EXTERIOR === pir.locate(holePt)\n      if (outside) {\n        this._validErr = new TopologyValidationError(TopologyValidationError.HOLE_OUTSIDE_SHELL, holePt)\n        return null\n      }\n    }\n  }\n\n  checkTooFewPoints (graph) {\n    if (graph.hasTooFewPoints()) {\n      this._validErr = new TopologyValidationError(TopologyValidationError.TOO_FEW_POINTS, graph.getInvalidPoint())\n      return null\n    }\n  }\n\n  getValidationError () {\n    this.checkValid(this._parentGeometry)\n    return this._validErr\n  }\n\n  checkValid () {\n    if (arguments[0] instanceof Point) {\n      const g = arguments[0]\n      this.checkInvalidCoordinates(g.getCoordinates())\n    } else if (arguments[0] instanceof MultiPoint) {\n      const g = arguments[0]\n      this.checkInvalidCoordinates(g.getCoordinates())\n    } else if (arguments[0] instanceof LinearRing) {\n      const g = arguments[0]\n      this.checkInvalidCoordinates(g.getCoordinates())\n      if (this._validErr !== null) return null\n      this.checkClosedRing(g)\n      if (this._validErr !== null) return null\n      const graph = new GeometryGraph(0, g)\n      this.checkTooFewPoints(graph)\n      if (this._validErr !== null) return null\n      const li = new RobustLineIntersector()\n      graph.computeSelfNodes(li, true, true)\n      this.checkNoSelfIntersectingRings(graph)\n    } else if (arguments[0] instanceof LineString) {\n      const g = arguments[0]\n      this.checkInvalidCoordinates(g.getCoordinates())\n      if (this._validErr !== null) return null\n      const graph = new GeometryGraph(0, g)\n      this.checkTooFewPoints(graph)\n    } else if (arguments[0] instanceof Polygon) {\n      const g = arguments[0]\n      this.checkInvalidCoordinates(g)\n      if (this._validErr !== null) return null\n      this.checkClosedRings(g)\n      if (this._validErr !== null) return null\n      const graph = new GeometryGraph(0, g)\n      this.checkTooFewPoints(graph)\n      if (this._validErr !== null) return null\n      this.checkConsistentArea(graph)\n      if (this._validErr !== null) return null\n      if (!this._isSelfTouchingRingFormingHoleValid) {\n        this.checkNoSelfIntersectingRings(graph)\n        if (this._validErr !== null) return null\n      }\n      this.checkHolesInShell(g, graph)\n      if (this._validErr !== null) return null\n      this.checkHolesNotNested(g, graph)\n      if (this._validErr !== null) return null\n      this.checkConnectedInteriors(graph)\n    } else if (arguments[0] instanceof MultiPolygon) {\n      const g = arguments[0]\n      for (let i = 0; i < g.getNumGeometries(); i++) {\n        const p = g.getGeometryN(i)\n        this.checkInvalidCoordinates(p)\n        if (this._validErr !== null) return null\n        this.checkClosedRings(p)\n        if (this._validErr !== null) return null\n      }\n      const graph = new GeometryGraph(0, g)\n      this.checkTooFewPoints(graph)\n      if (this._validErr !== null) return null\n      this.checkConsistentArea(graph)\n      if (this._validErr !== null) return null\n      if (!this._isSelfTouchingRingFormingHoleValid) {\n        this.checkNoSelfIntersectingRings(graph)\n        if (this._validErr !== null) return null\n      }\n      for (let i = 0; i < g.getNumGeometries(); i++) {\n        const p = g.getGeometryN(i)\n        this.checkHolesInShell(p, graph)\n        if (this._validErr !== null) return null\n      }\n      for (let i = 0; i < g.getNumGeometries(); i++) {\n        const p = g.getGeometryN(i)\n        this.checkHolesNotNested(p, graph)\n        if (this._validErr !== null) return null\n      }\n      this.checkShellsNotNested(g, graph)\n      if (this._validErr !== null) return null\n      this.checkConnectedInteriors(graph)\n    } else if (arguments[0] instanceof GeometryCollection) {\n      const gc = arguments[0]\n      for (let i = 0; i < gc.getNumGeometries(); i++) {\n        const g = gc.getGeometryN(i)\n        this.checkValid(g)\n        if (this._validErr !== null) return null\n      }\n    } else if (arguments[0] instanceof Geometry) {\n      const g = arguments[0]\n      this._validErr = null\n      if (g.isEmpty()) return null\n      if (g instanceof Point) this.checkValid(g); else if (g instanceof MultiPoint) this.checkValid(g); else if (g instanceof LinearRing) this.checkValid(g); else if (g instanceof LineString) this.checkValid(g); else if (g instanceof Polygon) this.checkValid(g); else if (g instanceof MultiPolygon) this.checkValid(g); else if (g instanceof GeometryCollection) this.checkValid(g); else throw new UnsupportedOperationException(g.getClass().getName())\n    }\n  }\n\n  setSelfTouchingRingFormingHoleValid (isValid) {\n    this._isSelfTouchingRingFormingHoleValid = isValid\n  }\n\n  checkShellNotNested (shell, p, graph) {\n    const shellPts = shell.getCoordinates()\n    const polyShell = p.getExteriorRing()\n    const polyPts = polyShell.getCoordinates()\n    const shellPt = IsValidOp.findPtNotNode(shellPts, polyShell, graph)\n    if (shellPt === null) return null\n    const insidePolyShell = PointLocation.isInRing(shellPt, polyPts)\n    if (!insidePolyShell) return null\n    if (p.getNumInteriorRing() <= 0) {\n      this._validErr = new TopologyValidationError(TopologyValidationError.NESTED_SHELLS, shellPt)\n      return null\n    }\n    let badNestedPt = null\n    for (let i = 0; i < p.getNumInteriorRing(); i++) {\n      const hole = p.getInteriorRingN(i)\n      badNestedPt = this.checkShellInsideHole(shell, hole, graph)\n      if (badNestedPt === null) return null\n    }\n    this._validErr = new TopologyValidationError(TopologyValidationError.NESTED_SHELLS, badNestedPt)\n  }\n\n  checkClosedRings (poly) {\n    this.checkClosedRing(poly.getExteriorRing())\n    if (this._validErr !== null) return null\n    for (let i = 0; i < poly.getNumInteriorRing(); i++) {\n      this.checkClosedRing(poly.getInteriorRingN(i))\n      if (this._validErr !== null) return null\n    }\n  }\n\n  checkClosedRing (ring) {\n    if (!ring.isClosed()) {\n      let pt = null\n      if (ring.getNumPoints() >= 1) pt = ring.getCoordinateN(0)\n      this._validErr = new TopologyValidationError(TopologyValidationError.RING_NOT_CLOSED, pt)\n    }\n  }\n\n  checkShellsNotNested (mp, graph) {\n    for (let i = 0; i < mp.getNumGeometries(); i++) {\n      const p = mp.getGeometryN(i)\n      const shell = p.getExteriorRing()\n      for (let j = 0; j < mp.getNumGeometries(); j++) {\n        if (i === j) continue\n        const p2 = mp.getGeometryN(j)\n        this.checkShellNotNested(shell, p2, graph)\n        if (this._validErr !== null) return null\n      }\n    }\n  }\n\n  getClass () {\n    return IsValidOp\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nIsValidOp.constructor_ = function () {\n  this._parentGeometry = null\n  this._isSelfTouchingRingFormingHoleValid = false\n  this._validErr = null\n  const parentGeometry = arguments[0]\n  this._parentGeometry = parentGeometry\n}\n","import CoordinateList from '../../geom/CoordinateList'\nimport WKTWriter from '../../io/WKTWriter'\nimport CoordinateArraySequence from '../../geom/impl/CoordinateArraySequence'\nimport IsValidOp from '../valid/IsValidOp'\nimport PointLocation from '../../algorithm/PointLocation'\nimport LinearRing from '../../geom/LinearRing'\nimport Exception from '../../../../../java/lang/Exception'\nimport Orientation from '../../algorithm/Orientation'\nimport System from '../../../../../java/lang/System'\nimport CoordinateArrays from '../../geom/CoordinateArrays'\nimport ArrayList from '../../../../../java/util/ArrayList'\nimport Comparator from '../../../../../java/util/Comparator'\nimport Assert from '../../util/Assert'\nexport default class EdgeRing {\n  constructor () {\n    EdgeRing.constructor_.apply(this, arguments)\n  }\n\n  static findDirEdgesInRing (startDE) {\n    let de = startDE\n    const edges = new ArrayList()\n    do {\n      edges.add(de)\n      de = de.getNext()\n      Assert.isTrue(de !== null, 'found null DE in ring')\n      Assert.isTrue(de === startDE || !de.isInRing(), 'found DE already in ring')\n    } while (de !== startDE)\n    return edges\n  }\n\n  static addEdge (coords, isForward, coordList) {\n    if (isForward) {\n      for (let i = 0; i < coords.length; i++) {\n        coordList.add(coords[i], false)\n      }\n    } else {\n      for (let i = coords.length - 1; i >= 0; i--) {\n        coordList.add(coords[i], false)\n      }\n    }\n  }\n\n  static findEdgeRingContaining (testEr, shellList) {\n    const testRing = testEr.getRing()\n    const testEnv = testRing.getEnvelopeInternal()\n    let testPt = testRing.getCoordinateN(0)\n    let minShell = null\n    let minShellEnv = null\n    for (let it = shellList.iterator(); it.hasNext();) {\n      const tryShell = it.next()\n      const tryShellRing = tryShell.getRing()\n      const tryShellEnv = tryShellRing.getEnvelopeInternal()\n      if (tryShellEnv.equals(testEnv)) continue\n      if (!tryShellEnv.contains(testEnv)) continue\n      testPt = CoordinateArrays.ptNotInList(testRing.getCoordinates(), tryShellRing.getCoordinates())\n      let isContained = false\n      if (PointLocation.isInRing(testPt, tryShellRing.getCoordinates())) isContained = true\n      if (isContained) {\n        if (minShell === null || minShellEnv.contains(tryShellEnv)) {\n          minShell = tryShell\n          minShellEnv = minShell.getRing().getEnvelopeInternal()\n        }\n      }\n    }\n    return minShell\n  }\n\n  isIncluded () {\n    return this._isIncluded\n  }\n\n  getCoordinates () {\n    if (this._ringPts === null) {\n      const coordList = new CoordinateList()\n      for (let i = this._deList.iterator(); i.hasNext();) {\n        const de = i.next()\n        const edge = de.getEdge()\n        EdgeRing.addEdge(edge.getLine().getCoordinates(), de.getEdgeDirection(), coordList)\n      }\n      this._ringPts = coordList.toCoordinateArray()\n    }\n    return this._ringPts\n  }\n\n  isIncludedSet () {\n    return this._isIncludedSet\n  }\n\n  isValid () {\n    this.getCoordinates()\n    if (this._ringPts.length <= 3) return false\n    this.getRing()\n    return IsValidOp.isValid(this._ring)\n  }\n\n  build (startDE) {\n    let de = startDE\n    do {\n      this.add(de)\n      de.setRing(this)\n      de = de.getNext()\n      Assert.isTrue(de !== null, 'found null DE in ring')\n      Assert.isTrue(de === startDE || !de.isInRing(), 'found DE already in ring')\n    } while (de !== startDE)\n  }\n\n  isOuterHole () {\n    if (!this._isHole) return false\n    return !this.hasShell()\n  }\n\n  getPolygon () {\n    let holeLR = null\n    if (this._holes !== null) {\n      holeLR = new Array(this._holes.size()).fill(null)\n      for (let i = 0; i < this._holes.size(); i++) {\n        holeLR[i] = this._holes.get(i)\n      }\n    }\n    const poly = this._factory.createPolygon(this._ring, holeLR)\n    return poly\n  }\n\n  isHole () {\n    return this._isHole\n  }\n\n  isProcessed () {\n    return this._isProcessed\n  }\n\n  addHole () {\n    if (arguments[0] instanceof LinearRing) {\n      const hole = arguments[0]\n      if (this._holes === null) this._holes = new ArrayList()\n      this._holes.add(hole)\n    } else if (arguments[0] instanceof EdgeRing) {\n      const holeER = arguments[0]\n      holeER.setShell(this)\n      const hole = holeER.getRing()\n      if (this._holes === null) this._holes = new ArrayList()\n      this._holes.add(hole)\n    }\n  }\n\n  setIncluded (isIncluded) {\n    this._isIncluded = isIncluded\n    this._isIncludedSet = true\n  }\n\n  getOuterHole () {\n    if (this.isHole()) return null\n    for (let i = 0; i < this._deList.size(); i++) {\n      const de = this._deList.get(i)\n      const adjRing = de.getSym().getRing()\n      if (adjRing.isOuterHole()) return adjRing\n    }\n    return null\n  }\n\n  computeHole () {\n    const ring = this.getRing()\n    this._isHole = Orientation.isCCW(ring.getCoordinates())\n  }\n\n  hasShell () {\n    return this._shell !== null\n  }\n\n  isOuterShell () {\n    return this.getOuterHole() !== null\n  }\n\n  getLineString () {\n    this.getCoordinates()\n    return this._factory.createLineString(this._ringPts)\n  }\n\n  toString () {\n    return WKTWriter.toLineString(new CoordinateArraySequence(this.getCoordinates()))\n  }\n\n  getShell () {\n    if (this.isHole()) return this._shell\n    return this\n  }\n\n  add (de) {\n    this._deList.add(de)\n  }\n\n  getRing () {\n    if (this._ring !== null) return this._ring\n    this.getCoordinates()\n    if (this._ringPts.length < 3) System.out.println(this._ringPts)\n    try {\n      this._ring = this._factory.createLinearRing(this._ringPts)\n    } catch (ex) {\n      if (ex instanceof Exception) {\n        System.out.println(this._ringPts)\n      } else throw ex\n    } finally {}\n    return this._ring\n  }\n\n  updateIncluded () {\n    if (this.isHole()) return null\n    for (let i = 0; i < this._deList.size(); i++) {\n      const de = this._deList.get(i)\n      const adjShell = de.getSym().getRing().getShell()\n      if (adjShell !== null && adjShell.isIncludedSet()) {\n        this.setIncluded(!adjShell.isIncluded())\n        return null\n      }\n    }\n  }\n\n  setShell (shell) {\n    this._shell = shell\n  }\n\n  setProcessed (isProcessed) {\n    this._isProcessed = isProcessed\n  }\n\n  getClass () {\n    return EdgeRing\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nclass EnvelopeComparator {\n  constructor () {\n    EnvelopeComparator.constructor_.apply(this, arguments)\n  }\n\n  compare (obj0, obj1) {\n    const r0 = obj0\n    const r1 = obj1\n    return r0.getRing().getEnvelope().compareTo(r1.getRing().getEnvelope())\n  }\n\n  getClass () {\n    return EnvelopeComparator\n  }\n\n  get interfaces_ () {\n    return [Comparator]\n  }\n}\nEnvelopeComparator.constructor_ = function () {}\nEdgeRing.EnvelopeComparator = EnvelopeComparator\nEdgeRing.constructor_ = function () {\n  this._factory = null\n  this._deList = new ArrayList()\n  this._lowestEdge = null\n  this._ring = null\n  this._ringPts = null\n  this._holes = null\n  this._shell = null\n  this._isHole = null\n  this._isProcessed = false\n  this._isIncludedSet = false\n  this._isIncluded = false\n  const factory = arguments[0]\n  this._factory = factory\n}\n","import PolygonizeDirectedEdge from './PolygonizeDirectedEdge'\nimport HashSet from '../../../../../java/util/HashSet'\nimport Stack from '../../../../../java/util/Stack'\nimport Node from '../../planargraph/Node'\nimport PolygonizeEdge from './PolygonizeEdge'\nimport EdgeRing from './EdgeRing'\nimport CoordinateArrays from '../../geom/CoordinateArrays'\nimport ArrayList from '../../../../../java/util/ArrayList'\nimport Assert from '../../util/Assert'\nimport PlanarGraph from '../../planargraph/PlanarGraph'\nexport default class PolygonizeGraph extends PlanarGraph {\n  constructor () {\n    super()\n    PolygonizeGraph.constructor_.apply(this, arguments)\n  }\n\n  static findLabeledEdgeRings (dirEdges) {\n    const edgeRingStarts = new ArrayList()\n    let currLabel = 1\n    for (let i = dirEdges.iterator(); i.hasNext();) {\n      const de = i.next()\n      if (de.isMarked()) continue\n      if (de.getLabel() >= 0) continue\n      edgeRingStarts.add(de)\n      const edges = EdgeRing.findDirEdgesInRing(de)\n      PolygonizeGraph.label(edges, currLabel)\n      currLabel++\n    }\n    return edgeRingStarts\n  }\n\n  static getDegreeNonDeleted (node) {\n    const edges = node.getOutEdges().getEdges()\n    let degree = 0\n    for (let i = edges.iterator(); i.hasNext();) {\n      const de = i.next()\n      if (!de.isMarked()) degree++\n    }\n    return degree\n  }\n\n  static deleteAllEdges (node) {\n    const edges = node.getOutEdges().getEdges()\n    for (let i = edges.iterator(); i.hasNext();) {\n      const de = i.next()\n      de.setMarked(true)\n      const sym = de.getSym()\n      if (sym !== null) sym.setMarked(true)\n    }\n  }\n\n  static label (dirEdges, label) {\n    for (let i = dirEdges.iterator(); i.hasNext();) {\n      const de = i.next()\n      de.setLabel(label)\n    }\n  }\n\n  static computeNextCWEdges (node) {\n    const deStar = node.getOutEdges()\n    let startDE = null\n    let prevDE = null\n    for (let i = deStar.getEdges().iterator(); i.hasNext();) {\n      const outDE = i.next()\n      if (outDE.isMarked()) continue\n      if (startDE === null) startDE = outDE\n      if (prevDE !== null) {\n        const sym = prevDE.getSym()\n        sym.setNext(outDE)\n      }\n      prevDE = outDE\n    }\n    if (prevDE !== null) {\n      const sym = prevDE.getSym()\n      sym.setNext(startDE)\n    }\n  }\n\n  static computeNextCCWEdges (node, label) {\n    const deStar = node.getOutEdges()\n    let firstOutDE = null\n    let prevInDE = null\n    const edges = deStar.getEdges()\n    for (let i = edges.size() - 1; i >= 0; i--) {\n      const de = edges.get(i)\n      const sym = de.getSym()\n      let outDE = null\n      if (de.getLabel() === label) outDE = de\n      let inDE = null\n      if (sym.getLabel() === label) inDE = sym\n      if (outDE === null && inDE === null) continue\n      if (inDE !== null) {\n        prevInDE = inDE\n      }\n      if (outDE !== null) {\n        if (prevInDE !== null) {\n          prevInDE.setNext(outDE)\n          prevInDE = null\n        }\n        if (firstOutDE === null) firstOutDE = outDE\n      }\n    }\n    if (prevInDE !== null) {\n      Assert.isTrue(firstOutDE !== null)\n      prevInDE.setNext(firstOutDE)\n    }\n  }\n\n  static getDegree (node, label) {\n    const edges = node.getOutEdges().getEdges()\n    let degree = 0\n    for (let i = edges.iterator(); i.hasNext();) {\n      const de = i.next()\n      if (de.getLabel() === label) degree++\n    }\n    return degree\n  }\n\n  static findIntersectionNodes (startDE, label) {\n    let de = startDE\n    let intNodes = null\n    do {\n      const node = de.getFromNode()\n      if (PolygonizeGraph.getDegree(node, label) > 1) {\n        if (intNodes === null) intNodes = new ArrayList()\n        intNodes.add(node)\n      }\n      de = de.getNext()\n      Assert.isTrue(de !== null, 'found null DE in ring')\n      Assert.isTrue(de === startDE || !de.isInRing(), 'found DE already in ring')\n    } while (de !== startDE)\n    return intNodes\n  }\n\n  findEdgeRing (startDE) {\n    const er = new EdgeRing(this._factory)\n    er.build(startDE)\n    return er\n  }\n\n  computeDepthParity () {\n    if (arguments.length === 0) {\n      while (true) {\n        const de = null\n        if (de === null) return null\n        this.computeDepthParity(de)\n      }\n    } else if (arguments.length === 1) {\n      const de = arguments[0]\n    }\n  }\n\n  computeNextCWEdges () {\n    for (let iNode = this.nodeIterator(); iNode.hasNext();) {\n      const node = iNode.next()\n      PolygonizeGraph.computeNextCWEdges(node)\n    }\n  }\n\n  addEdge (line) {\n    if (line.isEmpty()) {\n      return null\n    }\n    const linePts = CoordinateArrays.removeRepeatedPoints(line.getCoordinates())\n    if (linePts.length < 2) {\n      return null\n    }\n    const startPt = linePts[0]\n    const endPt = linePts[linePts.length - 1]\n    const nStart = this.getNode(startPt)\n    const nEnd = this.getNode(endPt)\n    const de0 = new PolygonizeDirectedEdge(nStart, nEnd, linePts[1], true)\n    const de1 = new PolygonizeDirectedEdge(nEnd, nStart, linePts[linePts.length - 2], false)\n    const edge = new PolygonizeEdge(line)\n    edge.setDirectedEdges(de0, de1)\n    this.add(edge)\n  }\n\n  deleteCutEdges () {\n    this.computeNextCWEdges()\n    PolygonizeGraph.findLabeledEdgeRings(this._dirEdges)\n    const cutLines = new ArrayList()\n    for (let i = this._dirEdges.iterator(); i.hasNext();) {\n      const de = i.next()\n      if (de.isMarked()) continue\n      const sym = de.getSym()\n      if (de.getLabel() === sym.getLabel()) {\n        de.setMarked(true)\n        sym.setMarked(true)\n        const e = de.getEdge()\n        cutLines.add(e.getLine())\n      }\n    }\n    return cutLines\n  }\n\n  getEdgeRings () {\n    this.computeNextCWEdges()\n    PolygonizeGraph.label(this._dirEdges, -1)\n    const maximalRings = PolygonizeGraph.findLabeledEdgeRings(this._dirEdges)\n    this.convertMaximalToMinimalEdgeRings(maximalRings)\n    const edgeRingList = new ArrayList()\n    for (let i = this._dirEdges.iterator(); i.hasNext();) {\n      const de = i.next()\n      if (de.isMarked()) continue\n      if (de.isInRing()) continue\n      const er = this.findEdgeRing(de)\n      edgeRingList.add(er)\n    }\n    return edgeRingList\n  }\n\n  getNode (pt) {\n    let node = this.findNode(pt)\n    if (node === null) {\n      node = new Node(pt)\n      this.add(node)\n    }\n    return node\n  }\n\n  convertMaximalToMinimalEdgeRings (ringEdges) {\n    for (let i = ringEdges.iterator(); i.hasNext();) {\n      const de = i.next()\n      const label = de.getLabel()\n      const intNodes = PolygonizeGraph.findIntersectionNodes(de, label)\n      if (intNodes === null) continue\n      for (let iNode = intNodes.iterator(); iNode.hasNext();) {\n        const node = iNode.next()\n        PolygonizeGraph.computeNextCCWEdges(node, label)\n      }\n    }\n  }\n\n  deleteDangles () {\n    const nodesToRemove = this.findNodesOfDegree(1)\n    const dangleLines = new HashSet()\n    const nodeStack = new Stack()\n    for (let i = nodesToRemove.iterator(); i.hasNext();) {\n      nodeStack.push(i.next())\n    }\n    while (!nodeStack.isEmpty()) {\n      const node = nodeStack.pop()\n      PolygonizeGraph.deleteAllEdges(node)\n      const nodeOutEdges = node.getOutEdges().getEdges()\n      for (let i = nodeOutEdges.iterator(); i.hasNext();) {\n        const de = i.next()\n        de.setMarked(true)\n        const sym = de.getSym()\n        if (sym !== null) sym.setMarked(true)\n        const e = de.getEdge()\n        dangleLines.add(e.getLine())\n        const toNode = de.getToNode()\n        if (PolygonizeGraph.getDegreeNonDeleted(toNode) === 1) nodeStack.push(toNode)\n      }\n    }\n    return dangleLines\n  }\n\n  getClass () {\n    return PolygonizeGraph\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nPolygonizeGraph.constructor_ = function () {\n  this._factory = null\n  const factory = arguments[0]\n  this._factory = factory\n}\n","import LineString from '../../geom/LineString'\nimport Geometry from '../../geom/Geometry'\nimport PolygonizeGraph from './PolygonizeGraph'\nimport hasInterface from '../../../../../hasInterface'\nimport GeometryFactory from '../../geom/GeometryFactory'\nimport Collection from '../../../../../java/util/Collection'\nimport Collections from '../../../../../java/util/Collections'\nimport EdgeRing from './EdgeRing'\nimport GeometryComponentFilter from '../../geom/GeometryComponentFilter'\nimport ArrayList from '../../../../../java/util/ArrayList'\nexport default class Polygonizer {\n  constructor () {\n    Polygonizer.constructor_.apply(this, arguments)\n  }\n\n  static findOuterShells (shellList) {\n    for (let i = shellList.iterator(); i.hasNext();) {\n      const er = i.next()\n      const outerHoleER = er.getOuterHole()\n      if (outerHoleER !== null && !outerHoleER.isProcessed()) {\n        er.setIncluded(true)\n        outerHoleER.setProcessed(true)\n      }\n    }\n  }\n\n  static extractPolygons (shellList, includeAll) {\n    const polyList = new ArrayList()\n    for (let i = shellList.iterator(); i.hasNext();) {\n      const er = i.next()\n      if (includeAll || er.isIncluded()) {\n        polyList.add(er.getPolygon())\n      }\n    }\n    return polyList\n  }\n\n  static assignHolesToShells (holeList, shellList) {\n    for (let i = holeList.iterator(); i.hasNext();) {\n      const holeER = i.next()\n      Polygonizer.assignHoleToShell(holeER, shellList)\n    }\n  }\n\n  static assignHoleToShell (holeER, shellList) {\n    const shell = EdgeRing.findEdgeRingContaining(holeER, shellList)\n    if (shell !== null) {\n      shell.addHole(holeER)\n    }\n  }\n\n  static findDisjointShells (shellList) {\n    Polygonizer.findOuterShells(shellList)\n    let isMoreToScan = null\n    do {\n      isMoreToScan = false\n      for (let i = shellList.iterator(); i.hasNext();) {\n        const er = i.next()\n        if (er.isIncludedSet()) continue\n        er.updateIncluded()\n        if (!er.isIncludedSet()) {\n          isMoreToScan = true\n        }\n      }\n    } while (isMoreToScan)\n  }\n\n  getGeometry () {\n    if (this._geomFactory === null) this._geomFactory = new GeometryFactory()\n    this.polygonize()\n    if (this._extractOnlyPolygonal) {\n      return this._geomFactory.buildGeometry(this._polyList)\n    }\n    return this._geomFactory.createGeometryCollection(GeometryFactory.toGeometryArray(this._polyList))\n  }\n\n  getInvalidRingLines () {\n    this.polygonize()\n    return this._invalidRingLines\n  }\n\n  findValidRings (edgeRingList, validEdgeRingList, invalidRingList) {\n    for (let i = edgeRingList.iterator(); i.hasNext();) {\n      const er = i.next()\n      if (er.isValid()) validEdgeRingList.add(er); else invalidRingList.add(er.getLineString())\n    }\n  }\n\n  polygonize () {\n    if (this._polyList !== null) return null\n    this._polyList = new ArrayList()\n    if (this._graph === null) return null\n    this._dangles = this._graph.deleteDangles()\n    this._cutEdges = this._graph.deleteCutEdges()\n    const edgeRingList = this._graph.getEdgeRings()\n    let validEdgeRingList = new ArrayList()\n    this._invalidRingLines = new ArrayList()\n    if (this._isCheckingRingsValid) {\n      this.findValidRings(edgeRingList, validEdgeRingList, this._invalidRingLines)\n    } else {\n      validEdgeRingList = edgeRingList\n    }\n    this.findShellsAndHoles(validEdgeRingList)\n    Polygonizer.assignHolesToShells(this._holeList, this._shellList)\n    Collections.sort(this._shellList, new EdgeRing.EnvelopeComparator())\n    let includeAll = true\n    if (this._extractOnlyPolygonal) {\n      Polygonizer.findDisjointShells(this._shellList)\n      includeAll = false\n    }\n    this._polyList = Polygonizer.extractPolygons(this._shellList, includeAll)\n  }\n\n  getDangles () {\n    this.polygonize()\n    return this._dangles\n  }\n\n  getCutEdges () {\n    this.polygonize()\n    return this._cutEdges\n  }\n\n  getPolygons () {\n    this.polygonize()\n    return this._polyList\n  }\n\n  add () {\n    if (hasInterface(arguments[0], Collection)) {\n      const geomList = arguments[0]\n      for (let i = geomList.iterator(); i.hasNext();) {\n        const geometry = i.next()\n        this.add(geometry)\n      }\n    } else if (arguments[0] instanceof LineString) {\n      const line = arguments[0]\n      this._geomFactory = line.getFactory()\n      if (this._graph === null) this._graph = new PolygonizeGraph(this._geomFactory)\n      this._graph.addEdge(line)\n    } else if (arguments[0] instanceof Geometry) {\n      const g = arguments[0]\n      g.apply(this._lineStringAdder)\n    }\n  }\n\n  setCheckRingsValid (isCheckingRingsValid) {\n    this._isCheckingRingsValid = isCheckingRingsValid\n  }\n\n  findShellsAndHoles (edgeRingList) {\n    this._holeList = new ArrayList()\n    this._shellList = new ArrayList()\n    for (let i = edgeRingList.iterator(); i.hasNext();) {\n      const er = i.next()\n      er.computeHole()\n      if (er.isHole()) this._holeList.add(er); else this._shellList.add(er)\n    }\n  }\n\n  getClass () {\n    return Polygonizer\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nclass LineStringAdder {\n  constructor () {\n    LineStringAdder.constructor_.apply(this, arguments)\n  }\n\n  filter (g) {\n    if (g instanceof LineString) this.p.add(g)\n  }\n\n  getClass () {\n    return LineStringAdder\n  }\n\n  get interfaces_ () {\n    return [GeometryComponentFilter]\n  }\n}\nLineStringAdder.constructor_ = function () {\n  this.p = null\n  const p = arguments[0]\n  this.p = p\n}\nPolygonizer.LineStringAdder = LineStringAdder\nPolygonizer.constructor_ = function () {\n  this._lineStringAdder = new LineStringAdder(this)\n  this._graph = null\n  this._dangles = new ArrayList()\n  this._cutEdges = new ArrayList()\n  this._invalidRingLines = new ArrayList()\n  this._holeList = null\n  this._shellList = null\n  this._polyList = null\n  this._isCheckingRingsValid = true\n  this._extractOnlyPolygonal = null\n  this._geomFactory = null\n  if (arguments.length === 0) {\n    Polygonizer.constructor_.call(this, false)\n  } else if (arguments.length === 1) {\n    const extractOnlyPolygonal = arguments[0]\n    this._extractOnlyPolygonal = extractOnlyPolygonal\n  }\n}\n","import PointLocator from '../../algorithm/PointLocator'\nimport Location from '../../geom/Location'\nimport IntersectionMatrix from '../../geom/IntersectionMatrix'\nimport EdgeEndBuilder from './EdgeEndBuilder'\nimport NodeMap from '../../geomgraph/NodeMap'\nimport RelateNodeFactory from './RelateNodeFactory'\nimport ArrayList from '../../../../../java/util/ArrayList'\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector'\nimport Assert from '../../util/Assert'\nexport default class RelateComputer {\n  constructor () {\n    RelateComputer.constructor_.apply(this, arguments)\n  }\n\n  insertEdgeEnds (ee) {\n    for (let i = ee.iterator(); i.hasNext();) {\n      const e = i.next()\n      this._nodes.add(e)\n    }\n  }\n\n  computeProperIntersectionIM (intersector, im) {\n    const dimA = this._arg[0].getGeometry().getDimension()\n    const dimB = this._arg[1].getGeometry().getDimension()\n    const hasProper = intersector.hasProperIntersection()\n    const hasProperInterior = intersector.hasProperInteriorIntersection()\n    if (dimA === 2 && dimB === 2) {\n      if (hasProper) im.setAtLeast('212101212')\n    } else if (dimA === 2 && dimB === 1) {\n      if (hasProper) im.setAtLeast('FFF0FFFF2')\n      if (hasProperInterior) im.setAtLeast('1FFFFF1FF')\n    } else if (dimA === 1 && dimB === 2) {\n      if (hasProper) im.setAtLeast('F0FFFFFF2')\n      if (hasProperInterior) im.setAtLeast('1F1FFFFFF')\n    } else if (dimA === 1 && dimB === 1) {\n      if (hasProperInterior) im.setAtLeast('0FFFFFFFF')\n    }\n  }\n\n  labelIsolatedEdges (thisIndex, targetIndex) {\n    for (let ei = this._arg[thisIndex].getEdgeIterator(); ei.hasNext();) {\n      const e = ei.next()\n      if (e.isIsolated()) {\n        this.labelIsolatedEdge(e, targetIndex, this._arg[targetIndex].getGeometry())\n        this._isolatedEdges.add(e)\n      }\n    }\n  }\n\n  labelIsolatedEdge (e, targetIndex, target) {\n    if (target.getDimension() > 0) {\n      const loc = this._ptLocator.locate(e.getCoordinate(), target)\n      e.getLabel().setAllLocations(targetIndex, loc)\n    } else {\n      e.getLabel().setAllLocations(targetIndex, Location.EXTERIOR)\n    }\n  }\n\n  computeIM () {\n    const im = new IntersectionMatrix()\n    im.set(Location.EXTERIOR, Location.EXTERIOR, 2)\n    if (!this._arg[0].getGeometry().getEnvelopeInternal().intersects(this._arg[1].getGeometry().getEnvelopeInternal())) {\n      this.computeDisjointIM(im)\n      return im\n    }\n    this._arg[0].computeSelfNodes(this._li, false)\n    this._arg[1].computeSelfNodes(this._li, false)\n    const intersector = this._arg[0].computeEdgeIntersections(this._arg[1], this._li, false)\n    this.computeIntersectionNodes(0)\n    this.computeIntersectionNodes(1)\n    this.copyNodesAndLabels(0)\n    this.copyNodesAndLabels(1)\n    this.labelIsolatedNodes()\n    this.computeProperIntersectionIM(intersector, im)\n    const eeBuilder = new EdgeEndBuilder()\n    const ee0 = eeBuilder.computeEdgeEnds(this._arg[0].getEdgeIterator())\n    this.insertEdgeEnds(ee0)\n    const ee1 = eeBuilder.computeEdgeEnds(this._arg[1].getEdgeIterator())\n    this.insertEdgeEnds(ee1)\n    this.labelNodeEdges()\n    this.labelIsolatedEdges(0, 1)\n    this.labelIsolatedEdges(1, 0)\n    this.updateIM(im)\n    return im\n  }\n\n  labelNodeEdges () {\n    for (let ni = this._nodes.iterator(); ni.hasNext();) {\n      const node = ni.next()\n      node.getEdges().computeLabelling(this._arg)\n    }\n  }\n\n  copyNodesAndLabels (argIndex) {\n    for (let i = this._arg[argIndex].getNodeIterator(); i.hasNext();) {\n      const graphNode = i.next()\n      const newNode = this._nodes.addNode(graphNode.getCoordinate())\n      newNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex))\n    }\n  }\n\n  labelIntersectionNodes (argIndex) {\n    for (let i = this._arg[argIndex].getEdgeIterator(); i.hasNext();) {\n      const e = i.next()\n      const eLoc = e.getLabel().getLocation(argIndex)\n      for (let eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext();) {\n        const ei = eiIt.next()\n        const n = this._nodes.find(ei.coord)\n        if (n.getLabel().isNull(argIndex)) {\n          if (eLoc === Location.BOUNDARY) n.setLabelBoundary(argIndex); else n.setLabel(argIndex, Location.INTERIOR)\n        }\n      }\n    }\n  }\n\n  labelIsolatedNode (n, targetIndex) {\n    const loc = this._ptLocator.locate(n.getCoordinate(), this._arg[targetIndex].getGeometry())\n    n.getLabel().setAllLocations(targetIndex, loc)\n  }\n\n  computeIntersectionNodes (argIndex) {\n    for (let i = this._arg[argIndex].getEdgeIterator(); i.hasNext();) {\n      const e = i.next()\n      const eLoc = e.getLabel().getLocation(argIndex)\n      for (let eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext();) {\n        const ei = eiIt.next()\n        const n = this._nodes.addNode(ei.coord)\n        if (eLoc === Location.BOUNDARY) n.setLabelBoundary(argIndex); else {\n          if (n.getLabel().isNull(argIndex)) n.setLabel(argIndex, Location.INTERIOR)\n        }\n      }\n    }\n  }\n\n  labelIsolatedNodes () {\n    for (let ni = this._nodes.iterator(); ni.hasNext();) {\n      const n = ni.next()\n      const label = n.getLabel()\n      Assert.isTrue(label.getGeometryCount() > 0, 'node with empty label found')\n      if (n.isIsolated()) {\n        if (label.isNull(0)) this.labelIsolatedNode(n, 0); else this.labelIsolatedNode(n, 1)\n      }\n    }\n  }\n\n  updateIM (im) {\n    for (let ei = this._isolatedEdges.iterator(); ei.hasNext();) {\n      const e = ei.next()\n      e.updateIM(im)\n    }\n    for (let ni = this._nodes.iterator(); ni.hasNext();) {\n      const node = ni.next()\n      node.updateIM(im)\n      node.updateIMFromEdges(im)\n    }\n  }\n\n  computeDisjointIM (im) {\n    const ga = this._arg[0].getGeometry()\n    if (!ga.isEmpty()) {\n      im.set(Location.INTERIOR, Location.EXTERIOR, ga.getDimension())\n      im.set(Location.BOUNDARY, Location.EXTERIOR, ga.getBoundaryDimension())\n    }\n    const gb = this._arg[1].getGeometry()\n    if (!gb.isEmpty()) {\n      im.set(Location.EXTERIOR, Location.INTERIOR, gb.getDimension())\n      im.set(Location.EXTERIOR, Location.BOUNDARY, gb.getBoundaryDimension())\n    }\n  }\n\n  getClass () {\n    return RelateComputer\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nRelateComputer.constructor_ = function () {\n  this._li = new RobustLineIntersector()\n  this._ptLocator = new PointLocator()\n  this._arg = null\n  this._nodes = new NodeMap(new RelateNodeFactory())\n  this._im = null\n  this._isolatedEdges = new ArrayList()\n  this._invalidPoint = null\n  const arg = arguments[0]\n  this._arg = arg\n}\n","import LineString from '../../geom/LineString'\nimport Coordinate from '../../geom/Coordinate'\nimport Point from '../../geom/Point'\nimport Polygon from '../../geom/Polygon'\nexport default class RectangleContains {\n  constructor () {\n    RectangleContains.constructor_.apply(this, arguments)\n  }\n\n  static contains (rectangle, b) {\n    const rc = new RectangleContains(rectangle)\n    return rc.contains(b)\n  }\n\n  isContainedInBoundary (geom) {\n    if (geom instanceof Polygon) return false\n    if (geom instanceof Point) return this.isPointContainedInBoundary(geom)\n    if (geom instanceof LineString) return this.isLineStringContainedInBoundary(geom)\n    for (let i = 0; i < geom.getNumGeometries(); i++) {\n      const comp = geom.getGeometryN(i)\n      if (!this.isContainedInBoundary(comp)) return false\n    }\n    return true\n  }\n\n  isLineSegmentContainedInBoundary (p0, p1) {\n    if (p0.equals(p1)) return this.isPointContainedInBoundary(p0)\n    if (p0.x === p1.x) {\n      if (p0.x === this._rectEnv.getMinX() || p0.x === this._rectEnv.getMaxX()) return true\n    } else if (p0.y === p1.y) {\n      if (p0.y === this._rectEnv.getMinY() || p0.y === this._rectEnv.getMaxY()) return true\n    }\n    return false\n  }\n\n  isLineStringContainedInBoundary (line) {\n    const seq = line.getCoordinateSequence()\n    const p0 = new Coordinate()\n    const p1 = new Coordinate()\n    for (let i = 0; i < seq.size() - 1; i++) {\n      seq.getCoordinate(i, p0)\n      seq.getCoordinate(i + 1, p1)\n      if (!this.isLineSegmentContainedInBoundary(p0, p1)) return false\n    }\n    return true\n  }\n\n  isPointContainedInBoundary () {\n    if (arguments[0] instanceof Point) {\n      const point = arguments[0]\n      return this.isPointContainedInBoundary(point.getCoordinate())\n    } else if (arguments[0] instanceof Coordinate) {\n      const pt = arguments[0]\n      return pt.x === this._rectEnv.getMinX() || pt.x === this._rectEnv.getMaxX() || pt.y === this._rectEnv.getMinY() || pt.y === this._rectEnv.getMaxY()\n    }\n  }\n\n  contains (geom) {\n    if (!this._rectEnv.contains(geom.getEnvelopeInternal())) return false\n    if (this.isContainedInBoundary(geom)) return false\n    return true\n  }\n\n  getClass () {\n    return RectangleContains\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nRectangleContains.constructor_ = function () {\n  this._rectEnv = null\n  const rectangle = arguments[0]\n  this._rectEnv = rectangle.getEnvelopeInternal()\n}\n","import Coordinate from '../geom/Coordinate'\nimport RobustLineIntersector from './RobustLineIntersector'\nimport Envelope from '../geom/Envelope'\nexport default class RectangleLineIntersector {\n  constructor () {\n    RectangleLineIntersector.constructor_.apply(this, arguments)\n  }\n\n  intersects (p0, p1) {\n    const segEnv = new Envelope(p0, p1)\n    if (!this._rectEnv.intersects(segEnv)) return false\n    if (this._rectEnv.intersects(p0)) return true\n    if (this._rectEnv.intersects(p1)) return true\n    if (p0.compareTo(p1) > 0) {\n      const tmp = p0\n      p0 = p1\n      p1 = tmp\n    }\n    let isSegUpwards = false\n    if (p1.y > p0.y) isSegUpwards = true\n    if (isSegUpwards) {\n      this._li.computeIntersection(p0, p1, this._diagDown0, this._diagDown1)\n    } else {\n      this._li.computeIntersection(p0, p1, this._diagUp0, this._diagUp1)\n    }\n    if (this._li.hasIntersection()) return true\n    return false\n  }\n\n  getClass () {\n    return RectangleLineIntersector\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nRectangleLineIntersector.constructor_ = function () {\n  this._li = new RobustLineIntersector()\n  this._rectEnv = null\n  this._diagUp0 = null\n  this._diagUp1 = null\n  this._diagDown0 = null\n  this._diagDown1 = null\n  const rectEnv = arguments[0]\n  this._rectEnv = rectEnv\n  this._diagUp0 = new Coordinate(rectEnv.getMinX(), rectEnv.getMinY())\n  this._diagUp1 = new Coordinate(rectEnv.getMaxX(), rectEnv.getMaxY())\n  this._diagDown0 = new Coordinate(rectEnv.getMinX(), rectEnv.getMaxY())\n  this._diagDown1 = new Coordinate(rectEnv.getMaxX(), rectEnv.getMinY())\n}\n","import Coordinate from '../../geom/Coordinate'\nimport Polygon from '../../geom/Polygon'\nimport RectangleLineIntersector from '../../algorithm/RectangleLineIntersector'\nimport ShortCircuitedGeometryVisitor from '../../geom/util/ShortCircuitedGeometryVisitor'\nimport SimplePointInAreaLocator from '../../algorithm/locate/SimplePointInAreaLocator'\nimport LinearComponentExtracter from '../../geom/util/LinearComponentExtracter'\nexport default class RectangleIntersects {\n  constructor () {\n    RectangleIntersects.constructor_.apply(this, arguments)\n  }\n\n  static intersects (rectangle, b) {\n    const rp = new RectangleIntersects(rectangle)\n    return rp.intersects(b)\n  }\n\n  intersects (geom) {\n    if (!this._rectEnv.intersects(geom.getEnvelopeInternal())) return false\n    const visitor = new EnvelopeIntersectsVisitor(this._rectEnv)\n    visitor.applyTo(geom)\n    if (visitor.intersects()) return true\n    const ecpVisitor = new GeometryContainsPointVisitor(this._rectangle)\n    ecpVisitor.applyTo(geom)\n    if (ecpVisitor.containsPoint()) return true\n    const riVisitor = new RectangleIntersectsSegmentVisitor(this._rectangle)\n    riVisitor.applyTo(geom)\n    if (riVisitor.intersects()) return true\n    return false\n  }\n\n  getClass () {\n    return RectangleIntersects\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nRectangleIntersects.constructor_ = function () {\n  this._rectangle = null\n  this._rectEnv = null\n  const rectangle = arguments[0]\n  this._rectangle = rectangle\n  this._rectEnv = rectangle.getEnvelopeInternal()\n}\nclass EnvelopeIntersectsVisitor extends ShortCircuitedGeometryVisitor {\n  constructor () {\n    super()\n    EnvelopeIntersectsVisitor.constructor_.apply(this, arguments)\n  }\n\n  isDone () {\n    return this._intersects === true\n  }\n\n  visit (element) {\n    const elementEnv = element.getEnvelopeInternal()\n    if (!this._rectEnv.intersects(elementEnv)) {\n      return null\n    }\n    if (this._rectEnv.contains(elementEnv)) {\n      this._intersects = true\n      return null\n    }\n    if (elementEnv.getMinX() >= this._rectEnv.getMinX() && elementEnv.getMaxX() <= this._rectEnv.getMaxX()) {\n      this._intersects = true\n      return null\n    }\n    if (elementEnv.getMinY() >= this._rectEnv.getMinY() && elementEnv.getMaxY() <= this._rectEnv.getMaxY()) {\n      this._intersects = true\n      return null\n    }\n  }\n\n  intersects () {\n    return this._intersects\n  }\n\n  getClass () {\n    return EnvelopeIntersectsVisitor\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nEnvelopeIntersectsVisitor.constructor_ = function () {\n  this._rectEnv = null\n  this._intersects = false\n  const rectEnv = arguments[0]\n  this._rectEnv = rectEnv\n}\nclass GeometryContainsPointVisitor extends ShortCircuitedGeometryVisitor {\n  constructor () {\n    super()\n    GeometryContainsPointVisitor.constructor_.apply(this, arguments)\n  }\n\n  isDone () {\n    return this._containsPoint === true\n  }\n\n  visit (geom) {\n    if (!(geom instanceof Polygon)) return null\n    const elementEnv = geom.getEnvelopeInternal()\n    if (!this._rectEnv.intersects(elementEnv)) return null\n    const rectPt = new Coordinate()\n    for (let i = 0; i < 4; i++) {\n      this._rectSeq.getCoordinate(i, rectPt)\n      if (!elementEnv.contains(rectPt)) continue\n      if (SimplePointInAreaLocator.containsPointInPolygon(rectPt, geom)) {\n        this._containsPoint = true\n        return null\n      }\n    }\n  }\n\n  containsPoint () {\n    return this._containsPoint\n  }\n\n  getClass () {\n    return GeometryContainsPointVisitor\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nGeometryContainsPointVisitor.constructor_ = function () {\n  this._rectSeq = null\n  this._rectEnv = null\n  this._containsPoint = false\n  const rectangle = arguments[0]\n  this._rectSeq = rectangle.getExteriorRing().getCoordinateSequence()\n  this._rectEnv = rectangle.getEnvelopeInternal()\n}\nclass RectangleIntersectsSegmentVisitor extends ShortCircuitedGeometryVisitor {\n  constructor () {\n    super()\n    RectangleIntersectsSegmentVisitor.constructor_.apply(this, arguments)\n  }\n\n  intersects () {\n    return this._hasIntersection\n  }\n\n  isDone () {\n    return this._hasIntersection === true\n  }\n\n  visit (geom) {\n    const elementEnv = geom.getEnvelopeInternal()\n    if (!this._rectEnv.intersects(elementEnv)) return null\n    const lines = LinearComponentExtracter.getLines(geom)\n    this.checkIntersectionWithLineStrings(lines)\n  }\n\n  checkIntersectionWithLineStrings (lines) {\n    for (let i = lines.iterator(); i.hasNext();) {\n      const testLine = i.next()\n      this.checkIntersectionWithSegments(testLine)\n      if (this._hasIntersection) return null\n    }\n  }\n\n  checkIntersectionWithSegments (testLine) {\n    const seq1 = testLine.getCoordinateSequence()\n    for (let j = 1; j < seq1.size(); j++) {\n      seq1.getCoordinate(j - 1, this._p0)\n      seq1.getCoordinate(j, this._p1)\n      if (this._rectIntersector.intersects(this._p0, this._p1)) {\n        this._hasIntersection = true\n        return null\n      }\n    }\n  }\n\n  getClass () {\n    return RectangleIntersectsSegmentVisitor\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nRectangleIntersectsSegmentVisitor.constructor_ = function () {\n  this._rectEnv = null\n  this._rectIntersector = null\n  this._hasIntersection = false\n  this._p0 = new Coordinate()\n  this._p1 = new Coordinate()\n  const rectangle = arguments[0]\n  this._rectEnv = rectangle.getEnvelopeInternal()\n  this._rectIntersector = new RectangleLineIntersector(this._rectEnv)\n}\n","import RelateComputer from './RelateComputer'\nimport GeometryGraphOperation from '../GeometryGraphOperation'\nimport RectangleContains from '../predicate/RectangleContains'\nimport RectangleIntersects from '../predicate/RectangleIntersects'\nexport default class RelateOp extends GeometryGraphOperation {\n  constructor () {\n    super()\n    RelateOp.constructor_.apply(this, arguments)\n  }\n\n  static covers (g1, g2) {\n    if (g2.getDimension() === 2 && g1.getDimension() < 2) {\n      return false\n    }\n    if (g2.getDimension() === 1 && g1.getDimension() < 1 && g2.getLength() > 0.0) {\n      return false\n    }\n    if (!g1.getEnvelopeInternal().covers(g2.getEnvelopeInternal())) return false\n    if (g1.isRectangle()) {\n      return true\n    }\n    return new RelateOp(g1, g2).getIntersectionMatrix().isCovers()\n  }\n\n  static intersects (g1, g2) {\n    if (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false\n    if (g1.isRectangle()) {\n      return RectangleIntersects.intersects(g1, g2)\n    }\n    if (g2.isRectangle()) {\n      return RectangleIntersects.intersects(g2, g1)\n    }\n    if (g1.isGeometryCollection() || g2.isGeometryCollection()) {\n      const r = false\n      for (let i = 0; i < g1.getNumGeometries(); i++) {\n        for (let j = 0; j < g2.getNumGeometries(); j++) {\n          if (g1.getGeometryN(i).intersects(g2.getGeometryN(j))) {\n            return true\n          }\n        }\n      }\n      return false\n    }\n    return new RelateOp(g1, g2).getIntersectionMatrix().isIntersects()\n  }\n\n  static touches (g1, g2) {\n    if (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false\n    return new RelateOp(g1, g2).getIntersectionMatrix().isTouches(g1.getDimension(), g2.getDimension())\n  }\n\n  static equalsTopo (g1, g2) {\n    if (!g1.getEnvelopeInternal().equals(g2.getEnvelopeInternal())) return false\n    return RelateOp.relate(g1, g2).isEquals(g1.getDimension(), g2.getDimension())\n  }\n\n  static relate () {\n    if (arguments.length === 2) {\n      const a = arguments[0]; const b = arguments[1]\n      const relOp = new RelateOp(a, b)\n      const im = relOp.getIntersectionMatrix()\n      return im\n    } else if (arguments.length === 3) {\n      const a = arguments[0]; const b = arguments[1]; const boundaryNodeRule = arguments[2]\n      const relOp = new RelateOp(a, b, boundaryNodeRule)\n      const im = relOp.getIntersectionMatrix()\n      return im\n    }\n  }\n\n  static overlaps (g1, g2) {\n    if (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false\n    return new RelateOp(g1, g2).getIntersectionMatrix().isOverlaps(g1.getDimension(), g2.getDimension())\n  }\n\n  static crosses (g1, g2) {\n    if (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false\n    return new RelateOp(g1, g2).getIntersectionMatrix().isCrosses(g1.getDimension(), g2.getDimension())\n  }\n\n  static contains (g1, g2) {\n    if (g2.getDimension() === 2 && g1.getDimension() < 2) {\n      return false\n    }\n    if (g2.getDimension() === 1 && g1.getDimension() < 1 && g2.getLength() > 0.0) {\n      return false\n    }\n    if (!g1.getEnvelopeInternal().contains(g2.getEnvelopeInternal())) return false\n    if (g1.isRectangle()) {\n      return RectangleContains.contains(g1, g2)\n    }\n    return new RelateOp(g1, g2).getIntersectionMatrix().isContains()\n  }\n\n  getIntersectionMatrix () {\n    return this._relate.computeIM()\n  }\n\n  getClass () {\n    return RelateOp\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nRelateOp.constructor_ = function () {\n  this._relate = null\n  if (arguments.length === 2) {\n    const g0 = arguments[0]; const g1 = arguments[1]\n    GeometryGraphOperation.constructor_.call(this, g0, g1)\n    this._relate = new RelateComputer(this._arg)\n  } else if (arguments.length === 3) {\n    const g0 = arguments[0]; const g1 = arguments[1]; const boundaryNodeRule = arguments[2]\n    GeometryGraphOperation.constructor_.call(this, g0, g1, boundaryNodeRule)\n    this._relate = new RelateComputer(this._arg)\n  }\n}\n","import PointLocator from '../../algorithm/PointLocator'\nimport Location from '../../geom/Location'\nimport TreeSet from '../../../../../java/util/TreeSet'\nimport GeometryCombiner from '../../geom/util/GeometryCombiner'\nimport CoordinateArrays from '../../geom/CoordinateArrays'\nexport default class PointGeometryUnion {\n  constructor () {\n    PointGeometryUnion.constructor_.apply(this, arguments)\n  }\n\n  static union (pointGeom, otherGeom) {\n    const unioner = new PointGeometryUnion(pointGeom, otherGeom)\n    return unioner.union()\n  }\n\n  union () {\n    const locater = new PointLocator()\n    const exteriorCoords = new TreeSet()\n    for (let i = 0; i < this._pointGeom.getNumGeometries(); i++) {\n      const point = this._pointGeom.getGeometryN(i)\n      const coord = point.getCoordinate()\n      const loc = locater.locate(coord, this._otherGeom)\n      if (loc === Location.EXTERIOR) exteriorCoords.add(coord)\n    }\n    if (exteriorCoords.size() === 0) return this._otherGeom\n    let ptComp = null\n    const coords = CoordinateArrays.toCoordinateArray(exteriorCoords)\n    if (coords.length === 1) {\n      ptComp = this._geomFact.createPoint(coords[0])\n    } else {\n      ptComp = this._geomFact.createMultiPointFromCoords(coords)\n    }\n    return GeometryCombiner.combine(ptComp, this._otherGeom)\n  }\n\n  getClass () {\n    return PointGeometryUnion\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nPointGeometryUnion.constructor_ = function () {\n  this._pointGeom = null\n  this._otherGeom = null\n  this._geomFact = null\n  const pointGeom = arguments[0]; const otherGeom = arguments[1]\n  this._pointGeom = pointGeom\n  this._otherGeom = otherGeom\n  this._geomFact = otherGeom.getFactory()\n}\n","import PolygonExtracter from '../../geom/util/PolygonExtracter'\nimport STRtree from '../../index/strtree/STRtree'\nimport Geometry from '../../geom/Geometry'\nimport hasInterface from '../../../../../hasInterface'\nimport GeometryFactory from '../../geom/GeometryFactory'\nimport GeometryCombiner from '../../geom/util/GeometryCombiner'\nimport Polygonal from '../../geom/Polygonal'\nimport ArrayList from '../../../../../java/util/ArrayList'\nimport List from '../../../../../java/util/List'\nexport default class CascadedPolygonUnion {\n  constructor () {\n    CascadedPolygonUnion.constructor_.apply(this, arguments)\n  }\n\n  static restrictToPolygons (g) {\n    if (hasInterface(g, Polygonal)) {\n      return g\n    }\n    const polygons = PolygonExtracter.getPolygons(g)\n    if (polygons.size() === 1) return polygons.get(0)\n    return g.getFactory().createMultiPolygon(GeometryFactory.toPolygonArray(polygons))\n  }\n\n  static getGeometry (list, index) {\n    if (index >= list.size()) return null\n    return list.get(index)\n  }\n\n  static union (polys) {\n    const op = new CascadedPolygonUnion(polys)\n    return op.union()\n  }\n\n  reduceToGeometries (geomTree) {\n    const geoms = new ArrayList()\n    for (let i = geomTree.iterator(); i.hasNext();) {\n      const o = i.next()\n      let geom = null\n      if (hasInterface(o, List)) {\n        geom = this.unionTree(o)\n      } else if (o instanceof Geometry) {\n        geom = o\n      }\n      geoms.add(geom)\n    }\n    return geoms\n  }\n\n  extractByEnvelope (env, geom, disjointGeoms) {\n    const intersectingGeoms = new ArrayList()\n    for (let i = 0; i < geom.getNumGeometries(); i++) {\n      const elem = geom.getGeometryN(i)\n      if (elem.getEnvelopeInternal().intersects(env)) intersectingGeoms.add(elem); else disjointGeoms.add(elem)\n    }\n    return this._geomFactory.buildGeometry(intersectingGeoms)\n  }\n\n  unionOptimized (g0, g1) {\n    const g0Env = g0.getEnvelopeInternal()\n    const g1Env = g1.getEnvelopeInternal()\n    if (!g0Env.intersects(g1Env)) {\n      const combo = GeometryCombiner.combine(g0, g1)\n      return combo\n    }\n    if (g0.getNumGeometries() <= 1 && g1.getNumGeometries() <= 1) return this.unionActual(g0, g1)\n    const commonEnv = g0Env.intersection(g1Env)\n    return this.unionUsingEnvelopeIntersection(g0, g1, commonEnv)\n  }\n\n  union () {\n    if (this._inputPolys === null) throw new IllegalStateException('union() method cannot be called twice')\n    if (this._inputPolys.isEmpty()) return null\n    this._geomFactory = this._inputPolys.iterator().next().getFactory()\n    const index = new STRtree(CascadedPolygonUnion.STRTREE_NODE_CAPACITY)\n    for (let i = this._inputPolys.iterator(); i.hasNext();) {\n      const item = i.next()\n      index.insert(item.getEnvelopeInternal(), item)\n    }\n    this._inputPolys = null\n    const itemTree = index.itemsTree()\n    const unionAll = this.unionTree(itemTree)\n    return unionAll\n  }\n\n  binaryUnion () {\n    if (arguments.length === 1) {\n      const geoms = arguments[0]\n      return this.binaryUnion(geoms, 0, geoms.size())\n    } else if (arguments.length === 3) {\n      const geoms = arguments[0]; const start = arguments[1]; const end = arguments[2]\n      if (end - start <= 1) {\n        const g0 = CascadedPolygonUnion.getGeometry(geoms, start)\n        return this.unionSafe(g0, null)\n      } else if (end - start === 2) {\n        return this.unionSafe(CascadedPolygonUnion.getGeometry(geoms, start), CascadedPolygonUnion.getGeometry(geoms, start + 1))\n      } else {\n        const mid = Math.trunc((end + start) / 2)\n        const g0 = this.binaryUnion(geoms, start, mid)\n        const g1 = this.binaryUnion(geoms, mid, end)\n        return this.unionSafe(g0, g1)\n      }\n    }\n  }\n\n  repeatedUnion (geoms) {\n    let union = null\n    for (let i = geoms.iterator(); i.hasNext();) {\n      const g = i.next()\n      if (union === null) union = g.copy(); else union = union.union(g)\n    }\n    return union\n  }\n\n  unionSafe (g0, g1) {\n    if (g0 === null && g1 === null) return null\n    if (g0 === null) return g1.copy()\n    if (g1 === null) return g0.copy()\n    return this.unionOptimized(g0, g1)\n  }\n\n  unionActual (g0, g1) {\n    return CascadedPolygonUnion.restrictToPolygons(g0.union(g1))\n  }\n\n  unionTree (geomTree) {\n    const geoms = this.reduceToGeometries(geomTree)\n    const union = this.binaryUnion(geoms)\n    return union\n  }\n\n  unionUsingEnvelopeIntersection (g0, g1, common) {\n    const disjointPolys = new ArrayList()\n    const g0Int = this.extractByEnvelope(common, g0, disjointPolys)\n    const g1Int = this.extractByEnvelope(common, g1, disjointPolys)\n    const union = this.unionActual(g0Int, g1Int)\n    disjointPolys.add(union)\n    const overallUnion = GeometryCombiner.combine(disjointPolys)\n    return overallUnion\n  }\n\n  bufferUnion () {\n    if (arguments.length === 1) {\n      const geoms = arguments[0]\n      const factory = geoms.get(0).getFactory()\n      const gColl = factory.buildGeometry(geoms)\n      const unionAll = gColl.buffer(0.0)\n      return unionAll\n    } else if (arguments.length === 2) {\n      const g0 = arguments[0]; const g1 = arguments[1]\n      const factory = g0.getFactory()\n      const gColl = factory.createGeometryCollection([g0, g1])\n      const unionAll = gColl.buffer(0.0)\n      return unionAll\n    }\n  }\n\n  getClass () {\n    return CascadedPolygonUnion\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nCascadedPolygonUnion.constructor_ = function () {\n  this._inputPolys = null\n  this._geomFactory = null\n  const polys = arguments[0]\n  this._inputPolys = polys\n  if (this._inputPolys === null) this._inputPolys = new ArrayList()\n}\nCascadedPolygonUnion.STRTREE_NODE_CAPACITY = 4\n","import Geometry from '../../geom/Geometry'\nimport PointGeometryUnion from './PointGeometryUnion'\nimport hasInterface from '../../../../../hasInterface'\nimport Collection from '../../../../../java/util/Collection'\nimport SnapIfNeededOverlayOp from '../overlay/snap/SnapIfNeededOverlayOp'\nimport ArrayList from '../../../../../java/util/ArrayList'\nimport GeometryExtracter from '../../geom/util/GeometryExtracter'\nimport OverlayOp from '../overlay/OverlayOp'\nimport CascadedPolygonUnion from './CascadedPolygonUnion'\nexport default class UnaryUnionOp {\n  constructor () {\n    UnaryUnionOp.constructor_.apply(this, arguments)\n  }\n\n  static union () {\n    if (arguments.length === 1) {\n      if (hasInterface(arguments[0], Collection)) {\n        const geoms = arguments[0]\n        const op = new UnaryUnionOp(geoms)\n        return op.union()\n      } else if (arguments[0] instanceof Geometry) {\n        const geom = arguments[0]\n        const op = new UnaryUnionOp(geom)\n        return op.union()\n      }\n    } else if (arguments.length === 2) {\n      const geoms = arguments[0]; const geomFact = arguments[1]\n      const op = new UnaryUnionOp(geoms, geomFact)\n      return op.union()\n    }\n  }\n\n  unionNoOpt (g0) {\n    const empty = this._geomFact.createPoint()\n    return SnapIfNeededOverlayOp.overlayOp(g0, empty, OverlayOp.UNION)\n  }\n\n  unionWithNull (g0, g1) {\n    if (g0 === null && g1 === null) return null\n    if (g1 === null) return g0\n    if (g0 === null) return g1\n    return g0.union(g1)\n  }\n\n  extract () {\n    if (hasInterface(arguments[0], Collection)) {\n      const geoms = arguments[0]\n      for (let i = geoms.iterator(); i.hasNext();) {\n        const geom = i.next()\n        this.extract(geom)\n      }\n    } else if (arguments[0] instanceof Geometry) {\n      const geom = arguments[0]\n      if (this._geomFact === null) this._geomFact = geom.getFactory()\n      GeometryExtracter.extract(geom, Geometry.TYPENAME_POLYGON, this._polygons)\n      GeometryExtracter.extract(geom, Geometry.TYPENAME_LINESTRING, this._lines)\n      GeometryExtracter.extract(geom, Geometry.TYPENAME_POINT, this._points)\n    }\n  }\n\n  union () {\n    if (this._geomFact === null) {\n      return null\n    }\n    let unionPoints = null\n    if (this._points.size() > 0) {\n      const ptGeom = this._geomFact.buildGeometry(this._points)\n      unionPoints = this.unionNoOpt(ptGeom)\n    }\n    let unionLines = null\n    if (this._lines.size() > 0) {\n      const lineGeom = this._geomFact.buildGeometry(this._lines)\n      unionLines = this.unionNoOpt(lineGeom)\n    }\n    let unionPolygons = null\n    if (this._polygons.size() > 0) {\n      unionPolygons = CascadedPolygonUnion.union(this._polygons)\n    }\n    const unionLA = this.unionWithNull(unionLines, unionPolygons)\n    let union = null\n    if (unionPoints === null) union = unionLA; else if (unionLA === null) union = unionPoints; else union = PointGeometryUnion.union(unionPoints, unionLA)\n    if (union === null) return this._geomFact.createGeometryCollection()\n    return union\n  }\n\n  getClass () {\n    return UnaryUnionOp\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nUnaryUnionOp.constructor_ = function () {\n  this._polygons = new ArrayList()\n  this._lines = new ArrayList()\n  this._points = new ArrayList()\n  this._geomFact = null\n  if (arguments.length === 1) {\n    if (hasInterface(arguments[0], Collection)) {\n      const geoms = arguments[0]\n      this.extract(geoms)\n    } else if (arguments[0] instanceof Geometry) {\n      const geom = arguments[0]\n      this.extract(geom)\n    }\n  } else if (arguments.length === 2) {\n    const geoms = arguments[0]; const geomFact = arguments[1]\n    this._geomFact = geomFact\n    this.extract(geoms)\n  }\n}\n","import LineString from '../geom/LineString'\nimport CoordinateList from '../geom/CoordinateList'\nimport Geometry from '../geom/Geometry'\nimport Coordinate from '../geom/Coordinate'\nimport GeometryEditor from '../geom/util/GeometryEditor'\nimport LinearRing from '../geom/LinearRing'\nexport default class PrecisionReducerCoordinateOperation extends GeometryEditor.CoordinateOperation {\n  constructor () {\n    super()\n    PrecisionReducerCoordinateOperation.constructor_.apply(this, arguments)\n  }\n\n  edit () {\n    if (arguments.length === 2 && (arguments[1] instanceof Geometry && arguments[0] instanceof Array)) {\n      const coordinates = arguments[0]; const geom = arguments[1]\n      if (coordinates.length === 0) return null\n      const reducedCoords = new Array(coordinates.length).fill(null)\n      for (let i = 0; i < coordinates.length; i++) {\n        const coord = new Coordinate(coordinates[i])\n        this._targetPM.makePrecise(coord)\n        reducedCoords[i] = coord\n      }\n      const noRepeatedCoordList = new CoordinateList(reducedCoords, false)\n      const noRepeatedCoords = noRepeatedCoordList.toCoordinateArray()\n      let minLength = 0\n      if (geom instanceof LineString) minLength = 2\n      if (geom instanceof LinearRing) minLength = 4\n      let collapsedCoords = reducedCoords\n      if (this._removeCollapsed) collapsedCoords = null\n      if (noRepeatedCoords.length < minLength) {\n        return collapsedCoords\n      }\n      return noRepeatedCoords\n    } else return super.edit.apply(this, arguments)\n  }\n\n  getClass () {\n    return PrecisionReducerCoordinateOperation\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nPrecisionReducerCoordinateOperation.constructor_ = function () {\n  this._targetPM = null\n  this._removeCollapsed = true\n  const targetPM = arguments[0]; const removeCollapsed = arguments[1]\n  this._targetPM = targetPM\n  this._removeCollapsed = removeCollapsed\n}\n","import hasInterface from '../../../../hasInterface'\nimport GeometryFactory from '../geom/GeometryFactory'\nimport IsValidOp from '../operation/valid/IsValidOp'\nimport GeometryEditor from '../geom/util/GeometryEditor'\nimport BufferOp from '../operation/buffer/BufferOp'\nimport Polygonal from '../geom/Polygonal'\nimport PrecisionReducerCoordinateOperation from './PrecisionReducerCoordinateOperation'\nexport default class GeometryPrecisionReducer {\n  constructor () {\n    GeometryPrecisionReducer.constructor_.apply(this, arguments)\n  }\n\n  static reduce (g, precModel) {\n    const reducer = new GeometryPrecisionReducer(precModel)\n    return reducer.reduce(g)\n  }\n\n  static reducePointwise (g, precModel) {\n    const reducer = new GeometryPrecisionReducer(precModel)\n    reducer.setPointwise(true)\n    return reducer.reduce(g)\n  }\n\n  fixPolygonalTopology (geom) {\n    let geomToBuffer = geom\n    if (!this._changePrecisionModel) {\n      geomToBuffer = this.changePM(geom, this._targetPM)\n    }\n    const bufGeom = BufferOp.bufferOp(geomToBuffer, 0)\n    let finalGeom = bufGeom\n    if (!this._changePrecisionModel) {\n      finalGeom = geom.getFactory().createGeometry(bufGeom)\n    }\n    return finalGeom\n  }\n\n  reducePointwise (geom) {\n    let geomEdit = null\n    if (this._changePrecisionModel) {\n      const newFactory = this.createFactory(geom.getFactory(), this._targetPM)\n      geomEdit = new GeometryEditor(newFactory)\n    } else geomEdit = new GeometryEditor()\n    let finalRemoveCollapsed = this._removeCollapsed\n    if (geom.getDimension() >= 2) finalRemoveCollapsed = true\n    const reduceGeom = geomEdit.edit(geom, new PrecisionReducerCoordinateOperation(this._targetPM, finalRemoveCollapsed))\n    return reduceGeom\n  }\n\n  changePM (geom, newPM) {\n    const geomEditor = this.createEditor(geom.getFactory(), newPM)\n    return geomEditor.edit(geom, new GeometryEditor.NoOpGeometryOperation())\n  }\n\n  setRemoveCollapsedComponents (removeCollapsed) {\n    this._removeCollapsed = removeCollapsed\n  }\n\n  createFactory (inputFactory, pm) {\n    const newFactory = new GeometryFactory(pm, inputFactory.getSRID(), inputFactory.getCoordinateSequenceFactory())\n    return newFactory\n  }\n\n  setChangePrecisionModel (changePrecisionModel) {\n    this._changePrecisionModel = changePrecisionModel\n  }\n\n  reduce (geom) {\n    const reducePW = this.reducePointwise(geom)\n    if (this._isPointwise) return reducePW\n    if (!hasInterface(reducePW, Polygonal)) return reducePW\n    if (IsValidOp.isValid(reducePW)) return reducePW\n    return this.fixPolygonalTopology(reducePW)\n  }\n\n  setPointwise (isPointwise) {\n    this._isPointwise = isPointwise\n  }\n\n  createEditor (geomFactory, newPM) {\n    if (geomFactory.getPrecisionModel() === newPM) return new GeometryEditor()\n    const newFactory = this.createFactory(geomFactory, newPM)\n    const geomEdit = new GeometryEditor(newFactory)\n    return geomEdit\n  }\n\n  getClass () {\n    return GeometryPrecisionReducer\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nGeometryPrecisionReducer.constructor_ = function () {\n  this._targetPM = null\n  this._removeCollapsed = true\n  this._changePrecisionModel = false\n  this._isPointwise = false\n  const pm = arguments[0]\n  this._targetPM = pm\n}\n","import CoordinateList from '../geom/CoordinateList'\nimport Coordinate from '../geom/Coordinate'\nimport LineSegment from '../geom/LineSegment'\nexport default class DouglasPeuckerLineSimplifier {\n  constructor () {\n    DouglasPeuckerLineSimplifier.constructor_.apply(this, arguments)\n  }\n\n  static simplify (pts, distanceTolerance) {\n    const simp = new DouglasPeuckerLineSimplifier(pts)\n    simp.setDistanceTolerance(distanceTolerance)\n    return simp.simplify()\n  }\n\n  simplifySection (i, j) {\n    if (i + 1 === j) {\n      return null\n    }\n    this._seg.p0 = this._pts[i]\n    this._seg.p1 = this._pts[j]\n    let maxDistance = -1.0\n    let maxIndex = i\n    for (let k = i + 1; k < j; k++) {\n      const distance = this._seg.distance(this._pts[k])\n      if (distance > maxDistance) {\n        maxDistance = distance\n        maxIndex = k\n      }\n    }\n    if (maxDistance <= this._distanceTolerance) {\n      for (let k = i + 1; k < j; k++) {\n        this._usePt[k] = false\n      }\n    } else {\n      this.simplifySection(i, maxIndex)\n      this.simplifySection(maxIndex, j)\n    }\n  }\n\n  setDistanceTolerance (distanceTolerance) {\n    this._distanceTolerance = distanceTolerance\n  }\n\n  simplify () {\n    this._usePt = new Array(this._pts.length).fill(null)\n    for (let i = 0; i < this._pts.length; i++) {\n      this._usePt[i] = true\n    }\n    this.simplifySection(0, this._pts.length - 1)\n    const coordList = new CoordinateList()\n    for (let i = 0; i < this._pts.length; i++) {\n      if (this._usePt[i]) coordList.add(new Coordinate(this._pts[i]))\n    }\n    return coordList.toCoordinateArray()\n  }\n\n  getClass () {\n    return DouglasPeuckerLineSimplifier\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nDouglasPeuckerLineSimplifier.constructor_ = function () {\n  this._pts = null\n  this._usePt = null\n  this._distanceTolerance = null\n  this._seg = new LineSegment()\n  const pts = arguments[0]\n  this._pts = pts\n}\n","import DouglasPeuckerLineSimplifier from './DouglasPeuckerLineSimplifier'\nimport GeometryTransformer from '../geom/util/GeometryTransformer'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException'\nimport Polygon from '../geom/Polygon'\nimport LinearRing from '../geom/LinearRing'\nimport MultiPolygon from '../geom/MultiPolygon'\nexport default class DouglasPeuckerSimplifier {\n  constructor () {\n    DouglasPeuckerSimplifier.constructor_.apply(this, arguments)\n  }\n\n  static simplify (geom, distanceTolerance) {\n    const tss = new DouglasPeuckerSimplifier(geom)\n    tss.setDistanceTolerance(distanceTolerance)\n    return tss.getResultGeometry()\n  }\n\n  setEnsureValid (isEnsureValidTopology) {\n    this._isEnsureValidTopology = isEnsureValidTopology\n  }\n\n  getResultGeometry () {\n    if (this._inputGeom.isEmpty()) return this._inputGeom.copy()\n    return new DPTransformer(this._isEnsureValidTopology, this._distanceTolerance).transform(this._inputGeom)\n  }\n\n  setDistanceTolerance (distanceTolerance) {\n    if (distanceTolerance < 0.0) throw new IllegalArgumentException('Tolerance must be non-negative')\n    this._distanceTolerance = distanceTolerance\n  }\n\n  getClass () {\n    return DouglasPeuckerSimplifier\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nclass DPTransformer extends GeometryTransformer {\n  constructor () {\n    super()\n    DPTransformer.constructor_.apply(this, arguments)\n  }\n\n  transformPolygon (geom, parent) {\n    if (geom.isEmpty()) return null\n    const rawGeom = super.transformPolygon.call(this, geom, parent)\n    if (parent instanceof MultiPolygon) {\n      return rawGeom\n    }\n    return this.createValidArea(rawGeom)\n  }\n\n  createValidArea (rawAreaGeom) {\n    if (this._isEnsureValidTopology) return rawAreaGeom.buffer(0.0)\n    return rawAreaGeom\n  }\n\n  transformCoordinates (coords, parent) {\n    const inputPts = coords.toCoordinateArray()\n    let newPts = null\n    if (inputPts.length === 0) {\n      newPts = new Array(0).fill(null)\n    } else {\n      newPts = DouglasPeuckerLineSimplifier.simplify(inputPts, this._distanceTolerance)\n    }\n    return this._factory.getCoordinateSequenceFactory().create(newPts)\n  }\n\n  transformMultiPolygon (geom, parent) {\n    const rawGeom = super.transformMultiPolygon.call(this, geom, parent)\n    return this.createValidArea(rawGeom)\n  }\n\n  transformLinearRing (geom, parent) {\n    const removeDegenerateRings = parent instanceof Polygon\n    const simpResult = super.transformLinearRing.call(this, geom, parent)\n    if (removeDegenerateRings && !(simpResult instanceof LinearRing)) return null\n\n    return simpResult\n  }\n\n  getClass () {\n    return DPTransformer\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nDPTransformer.constructor_ = function () {\n  this._isEnsureValidTopology = true\n  this._distanceTolerance = null\n  const isEnsureValidTopology = arguments[0]; const distanceTolerance = arguments[1]\n  this._isEnsureValidTopology = isEnsureValidTopology\n  this._distanceTolerance = distanceTolerance\n}\nDouglasPeuckerSimplifier.DPTransformer = DPTransformer\nDouglasPeuckerSimplifier.constructor_ = function () {\n  this._inputGeom = null\n  this._distanceTolerance = null\n  this._isEnsureValidTopology = true\n  const inputGeom = arguments[0]\n  this._inputGeom = inputGeom\n}\n","import LineSegment from '../geom/LineSegment'\nexport default class TaggedLineSegment extends LineSegment {\n  constructor () {\n    super()\n    TaggedLineSegment.constructor_.apply(this, arguments)\n  }\n\n  getIndex () {\n    return this._index\n  }\n\n  getParent () {\n    return this._parent\n  }\n\n  getClass () {\n    return TaggedLineSegment\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nTaggedLineSegment.constructor_ = function () {\n  this._parent = null\n  this._index = null\n  if (arguments.length === 2) {\n    const p0 = arguments[0]; const p1 = arguments[1]\n    TaggedLineSegment.constructor_.call(this, p0, p1, null, -1)\n  } else if (arguments.length === 4) {\n    const p0 = arguments[0]; const p1 = arguments[1]; const parent = arguments[2]; const index = arguments[3]\n    LineSegment.constructor_.call(this, p0, p1)\n    this._parent = parent\n    this._index = index\n  }\n}\n","import TaggedLineSegment from './TaggedLineSegment'\nimport ArrayList from '../../../../java/util/ArrayList'\nexport default class TaggedLineString {\n  constructor () {\n    TaggedLineString.constructor_.apply(this, arguments)\n  }\n\n  static extractCoordinates (segs) {\n    const pts = new Array(segs.size() + 1).fill(null)\n    let seg = null\n    for (let i = 0; i < segs.size(); i++) {\n      seg = segs.get(i)\n      pts[i] = seg.p0\n    }\n    pts[pts.length - 1] = seg.p1\n    return pts\n  }\n\n  addToResult (seg) {\n    this._resultSegs.add(seg)\n  }\n\n  asLineString () {\n    return this._parentLine.getFactory().createLineString(TaggedLineString.extractCoordinates(this._resultSegs))\n  }\n\n  getResultSize () {\n    const resultSegsSize = this._resultSegs.size()\n    return resultSegsSize === 0 ? 0 : resultSegsSize + 1\n  }\n\n  getParent () {\n    return this._parentLine\n  }\n\n  getSegment (i) {\n    return this._segs[i]\n  }\n\n  getParentCoordinates () {\n    return this._parentLine.getCoordinates()\n  }\n\n  getMinimumSize () {\n    return this._minimumSize\n  }\n\n  asLinearRing () {\n    return this._parentLine.getFactory().createLinearRing(TaggedLineString.extractCoordinates(this._resultSegs))\n  }\n\n  getSegments () {\n    return this._segs\n  }\n\n  init () {\n    const pts = this._parentLine.getCoordinates()\n    this._segs = new Array(pts.length - 1).fill(null)\n    for (let i = 0; i < pts.length - 1; i++) {\n      const seg = new TaggedLineSegment(pts[i], pts[i + 1], this._parentLine, i)\n      this._segs[i] = seg\n    }\n  }\n\n  getResultCoordinates () {\n    return TaggedLineString.extractCoordinates(this._resultSegs)\n  }\n\n  getClass () {\n    return TaggedLineString\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nTaggedLineString.constructor_ = function () {\n  this._parentLine = null\n  this._segs = null\n  this._resultSegs = new ArrayList()\n  this._minimumSize = null\n  if (arguments.length === 1) {\n    const parentLine = arguments[0]\n    TaggedLineString.constructor_.call(this, parentLine, 2)\n  } else if (arguments.length === 2) {\n    const parentLine = arguments[0]; const minimumSize = arguments[1]\n    this._parentLine = parentLine\n    this._minimumSize = minimumSize\n    this.init()\n  }\n}\n","import Quadtree from '../index/quadtree/Quadtree'\nimport ItemVisitor from '../index/ItemVisitor'\nimport LineSegment from '../geom/LineSegment'\nimport ArrayList from '../../../../java/util/ArrayList'\nimport Envelope from '../geom/Envelope'\nimport TaggedLineString from './TaggedLineString'\nexport default class LineSegmentIndex {\n  constructor () {\n    LineSegmentIndex.constructor_.apply(this, arguments)\n  }\n\n  remove (seg) {\n    this._index.remove(new Envelope(seg.p0, seg.p1), seg)\n  }\n\n  add () {\n    if (arguments[0] instanceof TaggedLineString) {\n      const line = arguments[0]\n      const segs = line.getSegments()\n      for (let i = 0; i < segs.length; i++) {\n        const seg = segs[i]\n        this.add(seg)\n      }\n    } else if (arguments[0] instanceof LineSegment) {\n      const seg = arguments[0]\n      this._index.insert(new Envelope(seg.p0, seg.p1), seg)\n    }\n  }\n\n  query (querySeg) {\n    const env = new Envelope(querySeg.p0, querySeg.p1)\n    const visitor = new LineSegmentVisitor(querySeg)\n    this._index.query(env, visitor)\n    const itemsFound = visitor.getItems()\n    return itemsFound\n  }\n\n  getClass () {\n    return LineSegmentIndex\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nLineSegmentIndex.constructor_ = function () {\n  this._index = new Quadtree()\n}\nclass LineSegmentVisitor {\n  constructor () {\n    LineSegmentVisitor.constructor_.apply(this, arguments)\n  }\n\n  visitItem (item) {\n    const seg = item\n    if (Envelope.intersects(seg.p0, seg.p1, this._querySeg.p0, this._querySeg.p1)) this._items.add(item)\n  }\n\n  getItems () {\n    return this._items\n  }\n\n  getClass () {\n    return LineSegmentVisitor\n  }\n\n  get interfaces_ () {\n    return [ItemVisitor]\n  }\n}\nLineSegmentVisitor.constructor_ = function () {\n  this._querySeg = null\n  this._items = new ArrayList()\n  const querySeg = arguments[0]\n  this._querySeg = querySeg\n}\n","import LineSegment from '../geom/LineSegment'\nimport LineSegmentIndex from './LineSegmentIndex'\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector'\nexport default class TaggedLineStringSimplifier {\n  constructor () {\n    TaggedLineStringSimplifier.constructor_.apply(this, arguments)\n  }\n\n  static isInLineSection (line, sectionIndex, seg) {\n    if (seg.getParent() !== line.getParent()) return false\n    const segIndex = seg.getIndex()\n    if (segIndex >= sectionIndex[0] && segIndex < sectionIndex[1]) return true\n    return false\n  }\n\n  flatten (start, end) {\n    const p0 = this._linePts[start]\n    const p1 = this._linePts[end]\n    const newSeg = new LineSegment(p0, p1)\n    this.remove(this._line, start, end)\n    this._outputIndex.add(newSeg)\n    return newSeg\n  }\n\n  hasBadIntersection (parentLine, sectionIndex, candidateSeg) {\n    if (this.hasBadOutputIntersection(candidateSeg)) return true\n    if (this.hasBadInputIntersection(parentLine, sectionIndex, candidateSeg)) return true\n    return false\n  }\n\n  setDistanceTolerance (distanceTolerance) {\n    this._distanceTolerance = distanceTolerance\n  }\n\n  simplifySection (i, j, depth) {\n    depth += 1\n    const sectionIndex = new Array(2).fill(null)\n    if (i + 1 === j) {\n      const newSeg = this._line.getSegment(i)\n      this._line.addToResult(newSeg)\n      return null\n    }\n    let isValidToSimplify = true\n    if (this._line.getResultSize() < this._line.getMinimumSize()) {\n      const worstCaseSize = depth + 1\n      if (worstCaseSize < this._line.getMinimumSize()) isValidToSimplify = false\n    }\n    const distance = new Array(1).fill(null)\n    const furthestPtIndex = this.findFurthestPoint(this._linePts, i, j, distance)\n    if (distance[0] > this._distanceTolerance) isValidToSimplify = false\n    const candidateSeg = new LineSegment()\n    candidateSeg.p0 = this._linePts[i]\n    candidateSeg.p1 = this._linePts[j]\n    sectionIndex[0] = i\n    sectionIndex[1] = j\n    if (this.hasBadIntersection(this._line, sectionIndex, candidateSeg)) isValidToSimplify = false\n    if (isValidToSimplify) {\n      const newSeg = this.flatten(i, j)\n      this._line.addToResult(newSeg)\n      return null\n    }\n    this.simplifySection(i, furthestPtIndex, depth)\n    this.simplifySection(furthestPtIndex, j, depth)\n  }\n\n  hasBadOutputIntersection (candidateSeg) {\n    const querySegs = this._outputIndex.query(candidateSeg)\n    for (let i = querySegs.iterator(); i.hasNext();) {\n      const querySeg = i.next()\n      if (this.hasInteriorIntersection(querySeg, candidateSeg)) {\n        return true\n      }\n    }\n    return false\n  }\n\n  findFurthestPoint (pts, i, j, maxDistance) {\n    const seg = new LineSegment()\n    seg.p0 = pts[i]\n    seg.p1 = pts[j]\n    let maxDist = -1.0\n    let maxIndex = i\n    for (let k = i + 1; k < j; k++) {\n      const midPt = pts[k]\n      const distance = seg.distance(midPt)\n      if (distance > maxDist) {\n        maxDist = distance\n        maxIndex = k\n      }\n    }\n    maxDistance[0] = maxDist\n    return maxIndex\n  }\n\n  simplify (line) {\n    this._line = line\n    this._linePts = line.getParentCoordinates()\n    this.simplifySection(0, this._linePts.length - 1, 0)\n  }\n\n  remove (line, start, end) {\n    for (let i = start; i < end; i++) {\n      const seg = line.getSegment(i)\n      this._inputIndex.remove(seg)\n    }\n  }\n\n  hasInteriorIntersection (seg0, seg1) {\n    this._li.computeIntersection(seg0.p0, seg0.p1, seg1.p0, seg1.p1)\n    return this._li.isInteriorIntersection()\n  }\n\n  hasBadInputIntersection (parentLine, sectionIndex, candidateSeg) {\n    const querySegs = this._inputIndex.query(candidateSeg)\n    for (let i = querySegs.iterator(); i.hasNext();) {\n      const querySeg = i.next()\n      if (this.hasInteriorIntersection(querySeg, candidateSeg)) {\n        if (TaggedLineStringSimplifier.isInLineSection(parentLine, sectionIndex, querySeg)) continue\n        return true\n      }\n    }\n    return false\n  }\n\n  getClass () {\n    return TaggedLineStringSimplifier\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nTaggedLineStringSimplifier.constructor_ = function () {\n  this._li = new RobustLineIntersector()\n  this._inputIndex = new LineSegmentIndex()\n  this._outputIndex = new LineSegmentIndex()\n  this._line = null\n  this._linePts = null\n  this._distanceTolerance = 0.0\n  const inputIndex = arguments[0]; const outputIndex = arguments[1]\n  this._inputIndex = inputIndex\n  this._outputIndex = outputIndex\n}\n","import TaggedLineStringSimplifier from './TaggedLineStringSimplifier'\nimport LineSegmentIndex from './LineSegmentIndex'\nexport default class TaggedLinesSimplifier {\n  constructor () {\n    TaggedLinesSimplifier.constructor_.apply(this, arguments)\n  }\n\n  setDistanceTolerance (distanceTolerance) {\n    this._distanceTolerance = distanceTolerance\n  }\n\n  simplify (taggedLines) {\n    for (let i = taggedLines.iterator(); i.hasNext();) {\n      this._inputIndex.add(i.next())\n    }\n    for (let i = taggedLines.iterator(); i.hasNext();) {\n      const tlss = new TaggedLineStringSimplifier(this._inputIndex, this._outputIndex)\n      tlss.setDistanceTolerance(this._distanceTolerance)\n      tlss.simplify(i.next())\n    }\n  }\n\n  getClass () {\n    return TaggedLinesSimplifier\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nTaggedLinesSimplifier.constructor_ = function () {\n  this._inputIndex = new LineSegmentIndex()\n  this._outputIndex = new LineSegmentIndex()\n  this._distanceTolerance = 0.0\n}\n","import LineString from '../geom/LineString'\nimport HashMap from '../../../../java/util/HashMap'\nimport GeometryTransformer from '../geom/util/GeometryTransformer'\nimport TaggedLinesSimplifier from './TaggedLinesSimplifier'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException'\nimport GeometryComponentFilter from '../geom/GeometryComponentFilter'\nimport TaggedLineString from './TaggedLineString'\nexport default class TopologyPreservingSimplifier {\n  constructor () {\n    TopologyPreservingSimplifier.constructor_.apply(this, arguments)\n  }\n\n  static simplify (geom, distanceTolerance) {\n    const tss = new TopologyPreservingSimplifier(geom)\n    tss.setDistanceTolerance(distanceTolerance)\n    return tss.getResultGeometry()\n  }\n\n  getResultGeometry () {\n    if (this._inputGeom.isEmpty()) return this._inputGeom.copy()\n    this._linestringMap = new HashMap()\n    this._inputGeom.apply(new LineStringMapBuilderFilter(this))\n    this._lineSimplifier.simplify(this._linestringMap.values())\n    const result = new LineStringTransformer(this._linestringMap).transform(this._inputGeom)\n    return result\n  }\n\n  setDistanceTolerance (distanceTolerance) {\n    if (distanceTolerance < 0.0) throw new IllegalArgumentException('Tolerance must be non-negative')\n    this._lineSimplifier.setDistanceTolerance(distanceTolerance)\n  }\n\n  getClass () {\n    return TopologyPreservingSimplifier\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nclass LineStringTransformer extends GeometryTransformer {\n  constructor () {\n    super()\n    LineStringTransformer.constructor_.apply(this, arguments)\n  }\n\n  transformCoordinates (coords, parent) {\n    if (coords.size() === 0) return null\n    if (parent instanceof LineString) {\n      const taggedLine = this._linestringMap.get(parent)\n      return this.createCoordinateSequence(taggedLine.getResultCoordinates())\n    }\n    return super.transformCoordinates.call(this, coords, parent)\n  }\n\n  getClass () {\n    return LineStringTransformer\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nLineStringTransformer.constructor_ = function () {\n  this._linestringMap = null\n  const linestringMap = arguments[0]\n  this._linestringMap = linestringMap\n}\nclass LineStringMapBuilderFilter {\n  constructor () {\n    LineStringMapBuilderFilter.constructor_.apply(this, arguments)\n  }\n\n  filter (geom) {\n    if (geom instanceof LineString) {\n      const line = geom\n      if (line.isEmpty()) return null\n      const minSize = line.isClosed() ? 4 : 2\n      const taggedLine = new TaggedLineString(line, minSize)\n      this.tps._linestringMap.put(line, taggedLine)\n    }\n  }\n\n  getClass () {\n    return LineStringMapBuilderFilter\n  }\n\n  get interfaces_ () {\n    return [GeometryComponentFilter]\n  }\n}\nLineStringMapBuilderFilter.constructor_ = function () {\n  this.tps = null\n  const tps = arguments[0]\n  this.tps = tps\n}\nTopologyPreservingSimplifier.LineStringTransformer = LineStringTransformer\nTopologyPreservingSimplifier.LineStringMapBuilderFilter = LineStringMapBuilderFilter\nTopologyPreservingSimplifier.constructor_ = function () {\n  this._inputGeom = null\n  this._lineSimplifier = new TaggedLinesSimplifier()\n  this._linestringMap = null\n  const inputGeom = arguments[0]\n  this._inputGeom = inputGeom\n}\n","import CoordinateList from '../geom/CoordinateList'\nimport Coordinate from '../geom/Coordinate'\nimport Double from '../../../../java/lang/Double'\nimport Triangle from '../geom/Triangle'\nexport default class VWLineSimplifier {\n  constructor () {\n    VWLineSimplifier.constructor_.apply(this, arguments)\n  }\n\n  static simplify (pts, distanceTolerance) {\n    const simp = new VWLineSimplifier(pts, distanceTolerance)\n    return simp.simplify()\n  }\n\n  simplifyVertex (vwLine) {\n    let curr = vwLine\n    let minArea = curr.getArea()\n    let minVertex = null\n    while (curr !== null) {\n      const area = curr.getArea()\n      if (area < minArea) {\n        minArea = area\n        minVertex = curr\n      }\n      curr = curr._next\n    }\n    if (minVertex !== null && minArea < this._tolerance) {\n      minVertex.remove()\n    }\n    if (!vwLine.isLive()) return -1\n    return minArea\n  }\n\n  simplify () {\n    const vwLine = VWVertex.buildLine(this._pts)\n    let minArea = this._tolerance\n    do {\n      minArea = this.simplifyVertex(vwLine)\n    } while (minArea < this._tolerance)\n    const simp = vwLine.getCoordinates()\n    if (simp.length < 2) {\n      return [simp[0], new Coordinate(simp[0])]\n    }\n    return simp\n  }\n\n  getClass () {\n    return VWLineSimplifier\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nclass VWVertex {\n  constructor () {\n    VWVertex.constructor_.apply(this, arguments)\n  }\n\n  static buildLine (pts) {\n    let first = null\n    let prev = null\n    for (let i = 0; i < pts.length; i++) {\n      const v = new VWVertex(pts[i])\n      if (first === null) first = v\n      v.setPrev(prev)\n      if (prev !== null) {\n        prev.setNext(v)\n        prev.updateArea()\n      }\n      prev = v\n    }\n    return first\n  }\n\n  getCoordinates () {\n    const coords = new CoordinateList()\n    let curr = this\n    do {\n      coords.add(curr._pt, false)\n      curr = curr._next\n    } while (curr !== null)\n    return coords.toCoordinateArray()\n  }\n\n  getArea () {\n    return this._area\n  }\n\n  updateArea () {\n    if (this._prev === null || this._next === null) {\n      this._area = VWVertex.MAX_AREA\n      return null\n    }\n    this._area = Math.abs(Triangle.area(this._prev._pt, this._pt, this._next._pt))\n  }\n\n  remove () {\n    const tmpPrev = this._prev\n    const tmpNext = this._next\n    let result = null\n    if (this._prev !== null) {\n      this._prev.setNext(tmpNext)\n      this._prev.updateArea()\n      result = this._prev\n    }\n    if (this._next !== null) {\n      this._next.setPrev(tmpPrev)\n      this._next.updateArea()\n      if (result === null) result = this._next\n    }\n    this._isLive = false\n    return result\n  }\n\n  isLive () {\n    return this._isLive\n  }\n\n  setPrev (prev) {\n    this._prev = prev\n  }\n\n  setNext (next) {\n    this._next = next\n  }\n\n  getClass () {\n    return VWVertex\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nVWVertex.constructor_ = function () {\n  this._pt = null\n  this._prev = null\n  this._next = null\n  this._area = VWVertex.MAX_AREA\n  this._isLive = true\n  const pt = arguments[0]\n  this._pt = pt\n}\nVWVertex.MAX_AREA = Double.MAX_VALUE\nVWLineSimplifier.VWVertex = VWVertex\nVWLineSimplifier.constructor_ = function () {\n  this._pts = null\n  this._tolerance = null\n  const pts = arguments[0]; const distanceTolerance = arguments[1]\n  this._pts = pts\n  this._tolerance = distanceTolerance * distanceTolerance\n}\n","import GeometryTransformer from '../geom/util/GeometryTransformer'\nimport VWLineSimplifier from './VWLineSimplifier'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException'\nimport Polygon from '../geom/Polygon'\nimport LinearRing from '../geom/LinearRing'\nimport MultiPolygon from '../geom/MultiPolygon'\nexport default class VWSimplifier {\n  constructor () {\n    VWSimplifier.constructor_.apply(this, arguments)\n  }\n\n  static simplify (geom, distanceTolerance) {\n    const simp = new VWSimplifier(geom)\n    simp.setDistanceTolerance(distanceTolerance)\n    return simp.getResultGeometry()\n  }\n\n  setEnsureValid (isEnsureValidTopology) {\n    this._isEnsureValidTopology = isEnsureValidTopology\n  }\n\n  getResultGeometry () {\n    if (this._inputGeom.isEmpty()) return this._inputGeom.copy()\n    return new VWTransformer(this._isEnsureValidTopology, this._distanceTolerance).transform(this._inputGeom)\n  }\n\n  setDistanceTolerance (distanceTolerance) {\n    if (distanceTolerance < 0.0) throw new IllegalArgumentException('Tolerance must be non-negative')\n    this._distanceTolerance = distanceTolerance\n  }\n\n  getClass () {\n    return VWSimplifier\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nclass VWTransformer extends GeometryTransformer {\n  constructor () {\n    super()\n    VWTransformer.constructor_.apply(this, arguments)\n  }\n\n  transformPolygon (geom, parent) {\n    if (geom.isEmpty()) return null\n    const rawGeom = super.transformPolygon.call(this, geom, parent)\n    if (parent instanceof MultiPolygon) {\n      return rawGeom\n    }\n    return this.createValidArea(rawGeom)\n  }\n\n  createValidArea (rawAreaGeom) {\n    if (this._isEnsureValidTopology) return rawAreaGeom.buffer(0.0)\n    return rawAreaGeom\n  }\n\n  transformCoordinates (coords, parent) {\n    const inputPts = coords.toCoordinateArray()\n    let newPts = null\n    if (inputPts.length === 0) {\n      newPts = new Array(0).fill(null)\n    } else {\n      newPts = VWLineSimplifier.simplify(inputPts, this._distanceTolerance)\n    }\n    return this._factory.getCoordinateSequenceFactory().create(newPts)\n  }\n\n  transformMultiPolygon (geom, parent) {\n    const rawGeom = super.transformMultiPolygon.call(this, geom, parent)\n    return this.createValidArea(rawGeom)\n  }\n\n  transformLinearRing (geom, parent) {\n    const removeDegenerateRings = parent instanceof Polygon\n    const simpResult = super.transformLinearRing.call(this, geom, parent)\n    if (removeDegenerateRings && !(simpResult instanceof LinearRing)) return null\n\n    return simpResult\n  }\n\n  getClass () {\n    return VWTransformer\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nVWTransformer.constructor_ = function () {\n  this._isEnsureValidTopology = true\n  this._distanceTolerance = null\n  const isEnsureValidTopology = arguments[0]; const distanceTolerance = arguments[1]\n  this._isEnsureValidTopology = isEnsureValidTopology\n  this._distanceTolerance = distanceTolerance\n}\nVWSimplifier.VWTransformer = VWTransformer\nVWSimplifier.constructor_ = function () {\n  this._inputGeom = null\n  this._distanceTolerance = null\n  this._isEnsureValidTopology = true\n  const inputGeom = arguments[0]\n  this._inputGeom = inputGeom\n}\n","import Coordinate from '../geom/Coordinate'\nexport default class SplitSegment {\n  constructor () {\n    SplitSegment.constructor_.apply(this, arguments)\n  }\n\n  static pointAlongReverse (seg, segmentLengthFraction) {\n    const coord = new Coordinate()\n    coord.x = seg.p1.x - segmentLengthFraction * (seg.p1.x - seg.p0.x)\n    coord.y = seg.p1.y - segmentLengthFraction * (seg.p1.y - seg.p0.y)\n    return coord\n  }\n\n  splitAt () {\n    if (arguments.length === 1) {\n      const pt = arguments[0]\n      const minFrac = this._minimumLen / this._segLen\n      if (pt.distance(this._seg.p0) < this._minimumLen) {\n        this._splitPt = this._seg.pointAlong(minFrac)\n        return null\n      }\n      if (pt.distance(this._seg.p1) < this._minimumLen) {\n        this._splitPt = SplitSegment.pointAlongReverse(this._seg, minFrac)\n        return null\n      }\n      this._splitPt = pt\n    } else if (arguments.length === 2) {\n      const length = arguments[0]; const endPt = arguments[1]\n      const actualLen = this.getConstrainedLength(length)\n      const frac = actualLen / this._segLen\n      if (endPt.equals2D(this._seg.p0)) this._splitPt = this._seg.pointAlong(frac); else this._splitPt = SplitSegment.pointAlongReverse(this._seg, frac)\n    }\n  }\n\n  setMinimumLength (minLen) {\n    this._minimumLen = minLen\n  }\n\n  getConstrainedLength (len) {\n    if (len < this._minimumLen) return this._minimumLen\n    return len\n  }\n\n  getSplitPoint () {\n    return this._splitPt\n  }\n\n  getClass () {\n    return SplitSegment\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nSplitSegment.constructor_ = function () {\n  this._seg = null\n  this._segLen = null\n  this._splitPt = null\n  this._minimumLen = 0.0\n  const seg = arguments[0]\n  this._seg = seg\n  this._segLen = seg.getLength()\n}\n","export default class ConstraintSplitPointFinder {\n  constructor () {\n    ConstraintSplitPointFinder.constructor_.apply(this, arguments)\n  }\n\n  findSplitPoint (seg, encroachPt) {}\n  getClass () {\n    return ConstraintSplitPointFinder\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nConstraintSplitPointFinder.constructor_ = function () {}\n","import SplitSegment from './SplitSegment'\nimport ConstraintSplitPointFinder from './ConstraintSplitPointFinder'\nexport default class NonEncroachingSplitPointFinder {\n  constructor () {\n    NonEncroachingSplitPointFinder.constructor_.apply(this, arguments)\n  }\n\n  static projectedSplitPoint (seg, encroachPt) {\n    const lineSeg = seg.getLineSegment()\n    const projPt = lineSeg.project(encroachPt)\n    return projPt\n  }\n\n  findSplitPoint (seg, encroachPt) {\n    const lineSeg = seg.getLineSegment()\n    const segLen = lineSeg.getLength()\n    const midPtLen = segLen / 2\n    const splitSeg = new SplitSegment(lineSeg)\n    const projPt = NonEncroachingSplitPointFinder.projectedSplitPoint(seg, encroachPt)\n    const nonEncroachDiam = projPt.distance(encroachPt) * 2 * 0.8\n    let maxSplitLen = nonEncroachDiam\n    if (maxSplitLen > midPtLen) {\n      maxSplitLen = midPtLen\n    }\n    splitSeg.setMinimumLength(maxSplitLen)\n    splitSeg.splitAt(projPt)\n    return splitSeg.getSplitPoint()\n  }\n\n  getClass () {\n    return NonEncroachingSplitPointFinder\n  }\n\n  get interfaces_ () {\n    return [ConstraintSplitPointFinder]\n  }\n}\nNonEncroachingSplitPointFinder.constructor_ = function () {}\n","import WKTWriter from '../../io/WKTWriter'\nimport CoordinateArraySequence from '../../geom/impl/CoordinateArraySequence'\nimport DD from '../../math/DD'\nimport System from '../../../../../java/lang/System'\nimport Triangle from '../../geom/Triangle'\nexport default class TrianglePredicate {\n  constructor () {\n    TrianglePredicate.constructor_.apply(this, arguments)\n  }\n\n  static triArea (a, b, c) {\n    return (b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x)\n  }\n\n  static isInCircleDDNormalized (a, b, c, p) {\n    const adx = DD.valueOf(a.x).selfSubtract(p.x)\n    const ady = DD.valueOf(a.y).selfSubtract(p.y)\n    const bdx = DD.valueOf(b.x).selfSubtract(p.x)\n    const bdy = DD.valueOf(b.y).selfSubtract(p.y)\n    const cdx = DD.valueOf(c.x).selfSubtract(p.x)\n    const cdy = DD.valueOf(c.y).selfSubtract(p.y)\n    const abdet = adx.multiply(bdy).selfSubtract(bdx.multiply(ady))\n    const bcdet = bdx.multiply(cdy).selfSubtract(cdx.multiply(bdy))\n    const cadet = cdx.multiply(ady).selfSubtract(adx.multiply(cdy))\n    const alift = adx.multiply(adx).selfAdd(ady.multiply(ady))\n    const blift = bdx.multiply(bdx).selfAdd(bdy.multiply(bdy))\n    const clift = cdx.multiply(cdx).selfAdd(cdy.multiply(cdy))\n    const sum = alift.selfMultiply(bcdet).selfAdd(blift.selfMultiply(cadet)).selfAdd(clift.selfMultiply(abdet))\n    const isInCircle = sum.doubleValue() > 0\n    return isInCircle\n  }\n\n  static checkRobustInCircle (a, b, c, p) {\n    const nonRobustInCircle = TrianglePredicate.isInCircleNonRobust(a, b, c, p)\n    const isInCircleDD = TrianglePredicate.isInCircleDDSlow(a, b, c, p)\n    const isInCircleCC = TrianglePredicate.isInCircleCC(a, b, c, p)\n    const circumCentre = Triangle.circumcentre(a, b, c)\n    System.out.println('p radius diff a = ' + Math.abs(p.distance(circumCentre) - a.distance(circumCentre)) / a.distance(circumCentre))\n    if (nonRobustInCircle !== isInCircleDD || nonRobustInCircle !== isInCircleCC) {\n      System.out.println('inCircle robustness failure (double result = ' + nonRobustInCircle + ', DD result = ' + isInCircleDD + ', CC result = ' + isInCircleCC + ')')\n      System.out.println(WKTWriter.toLineString(new CoordinateArraySequence([a, b, c, p])))\n      System.out.println('Circumcentre = ' + WKTWriter.toPoint(circumCentre) + ' radius = ' + a.distance(circumCentre))\n      System.out.println('p radius diff a = ' + Math.abs(p.distance(circumCentre) / a.distance(circumCentre) - 1))\n      System.out.println('p radius diff b = ' + Math.abs(p.distance(circumCentre) / b.distance(circumCentre) - 1))\n      System.out.println('p radius diff c = ' + Math.abs(p.distance(circumCentre) / c.distance(circumCentre) - 1))\n      System.out.println()\n    }\n  }\n\n  static isInCircleDDFast (a, b, c, p) {\n    const aTerm = DD.sqr(a.x).selfAdd(DD.sqr(a.y)).selfMultiply(TrianglePredicate.triAreaDDFast(b, c, p))\n    const bTerm = DD.sqr(b.x).selfAdd(DD.sqr(b.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a, c, p))\n    const cTerm = DD.sqr(c.x).selfAdd(DD.sqr(c.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a, b, p))\n    const pTerm = DD.sqr(p.x).selfAdd(DD.sqr(p.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a, b, c))\n    const sum = aTerm.selfSubtract(bTerm).selfAdd(cTerm).selfSubtract(pTerm)\n    const isInCircle = sum.doubleValue() > 0\n    return isInCircle\n  }\n\n  static isInCircleCC (a, b, c, p) {\n    const cc = Triangle.circumcentre(a, b, c)\n    const ccRadius = a.distance(cc)\n    const pRadiusDiff = p.distance(cc) - ccRadius\n    return pRadiusDiff <= 0\n  }\n\n  static isInCircleNormalized (a, b, c, p) {\n    const adx = a.x - p.x\n    const ady = a.y - p.y\n    const bdx = b.x - p.x\n    const bdy = b.y - p.y\n    const cdx = c.x - p.x\n    const cdy = c.y - p.y\n    const abdet = adx * bdy - bdx * ady\n    const bcdet = bdx * cdy - cdx * bdy\n    const cadet = cdx * ady - adx * cdy\n    const alift = adx * adx + ady * ady\n    const blift = bdx * bdx + bdy * bdy\n    const clift = cdx * cdx + cdy * cdy\n    const disc = alift * bcdet + blift * cadet + clift * abdet\n    return disc > 0\n  }\n\n  static isInCircleDDSlow (a, b, c, p) {\n    const px = DD.valueOf(p.x)\n    const py = DD.valueOf(p.y)\n    const ax = DD.valueOf(a.x)\n    const ay = DD.valueOf(a.y)\n    const bx = DD.valueOf(b.x)\n    const by = DD.valueOf(b.y)\n    const cx = DD.valueOf(c.x)\n    const cy = DD.valueOf(c.y)\n    const aTerm = ax.multiply(ax).add(ay.multiply(ay)).multiply(TrianglePredicate.triAreaDDSlow(bx, by, cx, cy, px, py))\n    const bTerm = bx.multiply(bx).add(by.multiply(by)).multiply(TrianglePredicate.triAreaDDSlow(ax, ay, cx, cy, px, py))\n    const cTerm = cx.multiply(cx).add(cy.multiply(cy)).multiply(TrianglePredicate.triAreaDDSlow(ax, ay, bx, by, px, py))\n    const pTerm = px.multiply(px).add(py.multiply(py)).multiply(TrianglePredicate.triAreaDDSlow(ax, ay, bx, by, cx, cy))\n    const sum = aTerm.subtract(bTerm).add(cTerm).subtract(pTerm)\n    const isInCircle = sum.doubleValue() > 0\n    return isInCircle\n  }\n\n  static isInCircleNonRobust (a, b, c, p) {\n    const isInCircle = (a.x * a.x + a.y * a.y) * TrianglePredicate.triArea(b, c, p) - (b.x * b.x + b.y * b.y) * TrianglePredicate.triArea(a, c, p) + (c.x * c.x + c.y * c.y) * TrianglePredicate.triArea(a, b, p) - (p.x * p.x + p.y * p.y) * TrianglePredicate.triArea(a, b, c) > 0\n    return isInCircle\n  }\n\n  static isInCircleRobust (a, b, c, p) {\n    return TrianglePredicate.isInCircleNormalized(a, b, c, p)\n  }\n\n  static triAreaDDSlow (ax, ay, bx, by, cx, cy) {\n    return bx.subtract(ax).multiply(cy.subtract(ay)).subtract(by.subtract(ay).multiply(cx.subtract(ax)))\n  }\n\n  static triAreaDDFast (a, b, c) {\n    const t1 = DD.valueOf(b.x).selfSubtract(a.x).selfMultiply(DD.valueOf(c.y).selfSubtract(a.y))\n    const t2 = DD.valueOf(b.y).selfSubtract(a.y).selfMultiply(DD.valueOf(c.x).selfSubtract(a.x))\n    return t1.selfSubtract(t2)\n  }\n\n  getClass () {\n    return TrianglePredicate\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nTrianglePredicate.constructor_ = function () {}\n","import NotRepresentableException from '../../algorithm/NotRepresentableException'\nimport Coordinate from '../../geom/Coordinate'\nimport TrianglePredicate from './TrianglePredicate'\nimport System from '../../../../../java/lang/System'\nimport HCoordinate from '../../algorithm/HCoordinate'\nexport default class Vertex {\n  constructor () {\n    Vertex.constructor_.apply(this, arguments)\n  }\n\n  static interpolateZ () {\n    if (arguments.length === 3) {\n      const p = arguments[0]; const p0 = arguments[1]; const p1 = arguments[2]\n      const segLen = p0.distance(p1)\n      const ptLen = p.distance(p0)\n      const dz = p1.z - p0.z\n      const pz = p0.z + dz * (ptLen / segLen)\n      return pz\n    } else if (arguments.length === 4) {\n      const p = arguments[0]; const v0 = arguments[1]; const v1 = arguments[2]; const v2 = arguments[3]\n      const x0 = v0.x\n      const y0 = v0.y\n      const a = v1.x - x0\n      const b = v2.x - x0\n      const c = v1.y - y0\n      const d = v2.y - y0\n      const det = a * d - b * c\n      const dx = p.x - x0\n      const dy = p.y - y0\n      const t = (d * dx - b * dy) / det\n      const u = (-c * dx + a * dy) / det\n      const z = v0.z + t * (v1.z - v0.z) + u * (v2.z - v0.z)\n      return z\n    }\n  }\n\n  circleCenter (b, c) {\n    const a = new Vertex(this.getX(), this.getY())\n    const cab = this.bisector(a, b)\n    const cbc = this.bisector(b, c)\n    const hcc = new HCoordinate(cab, cbc)\n    let cc = null\n    try {\n      cc = new Vertex(hcc.getX(), hcc.getY())\n    } catch (nre) {\n      if (nre instanceof NotRepresentableException) {\n        System.err.println('a: ' + a + '  b: ' + b + '  c: ' + c)\n        System.err.println(nre)\n      } else throw nre\n    } finally {}\n    return cc\n  }\n\n  dot (v) {\n    return this._p.x * v.getX() + this._p.y * v.getY()\n  }\n\n  magn () {\n    return Math.sqrt(this._p.x * this._p.x + this._p.y * this._p.y)\n  }\n\n  getZ () {\n    return this._p.z\n  }\n\n  bisector (a, b) {\n    const dx = b.getX() - a.getX()\n    const dy = b.getY() - a.getY()\n    const l1 = new HCoordinate(a.getX() + dx / 2.0, a.getY() + dy / 2.0, 1.0)\n    const l2 = new HCoordinate(a.getX() - dy + dx / 2.0, a.getY() + dx + dy / 2.0, 1.0)\n    return new HCoordinate(l1, l2)\n  }\n\n  equals () {\n    if (arguments.length === 1) {\n      const _x = arguments[0]\n      if (this._p.x === _x.getX() && this._p.y === _x.getY()) {\n        return true\n      } else {\n        return false\n      }\n    } else if (arguments.length === 2) {\n      const _x = arguments[0]; const tolerance = arguments[1]\n      if (this._p.distance(_x.getCoordinate()) < tolerance) {\n        return true\n      } else {\n        return false\n      }\n    }\n  }\n\n  getCoordinate () {\n    return this._p\n  }\n\n  isInCircle (a, b, c) {\n    return TrianglePredicate.isInCircleRobust(a._p, b._p, c._p, this._p)\n  }\n\n  interpolateZValue (v0, v1, v2) {\n    const x0 = v0.getX()\n    const y0 = v0.getY()\n    const a = v1.getX() - x0\n    const b = v2.getX() - x0\n    const c = v1.getY() - y0\n    const d = v2.getY() - y0\n    const det = a * d - b * c\n    const dx = this.getX() - x0\n    const dy = this.getY() - y0\n    const t = (d * dx - b * dy) / det\n    const u = (-c * dx + a * dy) / det\n    const z = v0.getZ() + t * (v1.getZ() - v0.getZ()) + u * (v2.getZ() - v0.getZ())\n    return z\n  }\n\n  midPoint (a) {\n    const xm = (this._p.x + a.getX()) / 2.0\n    const ym = (this._p.y + a.getY()) / 2.0\n    const zm = (this._p.z + a.getZ()) / 2.0\n    return new Vertex(xm, ym, zm)\n  }\n\n  rightOf (e) {\n    return this.isCCW(e.dest(), e.orig())\n  }\n\n  isCCW (b, c) {\n    return (b._p.x - this._p.x) * (c._p.y - this._p.y) - (b._p.y - this._p.y) * (c._p.x - this._p.x) > 0\n  }\n\n  getX () {\n    return this._p.x\n  }\n\n  crossProduct (v) {\n    return this._p.x * v.getY() - this._p.y * v.getX()\n  }\n\n  setZ (_z) {\n    this._p.z = _z\n  }\n\n  times (c) {\n    return new Vertex(c * this._p.x, c * this._p.y)\n  }\n\n  cross () {\n    return new Vertex(this._p.y, -this._p.x)\n  }\n\n  leftOf (e) {\n    return this.isCCW(e.orig(), e.dest())\n  }\n\n  toString () {\n    return 'POINT (' + this._p.x + ' ' + this._p.y + ')'\n  }\n\n  sub (v) {\n    return new Vertex(this._p.x - v.getX(), this._p.y - v.getY())\n  }\n\n  getY () {\n    return this._p.y\n  }\n\n  classify (p0, p1) {\n    const p2 = this\n    const a = p1.sub(p0)\n    const b = p2.sub(p0)\n    const sa = a.crossProduct(b)\n    if (sa > 0.0) return Vertex.LEFT\n    if (sa < 0.0) return Vertex.RIGHT\n    if (a.getX() * b.getX() < 0.0 || a.getY() * b.getY() < 0.0) return Vertex.BEHIND\n    if (a.magn() < b.magn()) return Vertex.BEYOND\n    if (p0.equals(p2)) return Vertex.ORIGIN\n    if (p1.equals(p2)) return Vertex.DESTINATION\n    return Vertex.BETWEEN\n  }\n\n  sum (v) {\n    return new Vertex(this._p.x + v.getX(), this._p.y + v.getY())\n  }\n\n  distance (v1, v2) {\n    return Math.sqrt(Math.pow(v2.getX() - v1.getX(), 2.0) + Math.pow(v2.getY() - v1.getY(), 2.0))\n  }\n\n  circumRadiusRatio (b, c) {\n    const x = this.circleCenter(b, c)\n    const radius = this.distance(x, b)\n    let edgeLength = this.distance(this, b)\n    let el = this.distance(b, c)\n    if (el < edgeLength) {\n      edgeLength = el\n    }\n    el = this.distance(c, this)\n    if (el < edgeLength) {\n      edgeLength = el\n    }\n    return radius / edgeLength\n  }\n\n  getClass () {\n    return Vertex\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nVertex.constructor_ = function () {\n  this._p = null\n  if (arguments.length === 1) {\n    const _p = arguments[0]\n    this._p = new Coordinate(_p)\n  } else if (arguments.length === 2) {\n    const _x = arguments[0]; const _y = arguments[1]\n    this._p = new Coordinate(_x, _y)\n  } else if (arguments.length === 3) {\n    const _x = arguments[0]; const _y = arguments[1]; const _z = arguments[2]\n    this._p = new Coordinate(_x, _y, _z)\n  }\n}\nVertex.LEFT = 0\nVertex.RIGHT = 1\nVertex.BEYOND = 2\nVertex.BEHIND = 3\nVertex.BETWEEN = 4\nVertex.ORIGIN = 5\nVertex.DESTINATION = 6\n","import Vertex from './quadedge/Vertex'\nexport default class ConstraintVertex extends Vertex {\n  constructor () {\n    super()\n    ConstraintVertex.constructor_.apply(this, arguments)\n  }\n\n  getConstraint () {\n    return this._constraint\n  }\n\n  setOnConstraint (isOnConstraint) {\n    this._isOnConstraint = isOnConstraint\n  }\n\n  merge (other) {\n    if (other._isOnConstraint) {\n      this._isOnConstraint = true\n      this._constraint = other._constraint\n    }\n  }\n\n  isOnConstraint () {\n    return this._isOnConstraint\n  }\n\n  setConstraint (constraint) {\n    this._isOnConstraint = true\n    this._constraint = constraint\n  }\n\n  getClass () {\n    return ConstraintVertex\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nConstraintVertex.constructor_ = function () {\n  this._isOnConstraint = null\n  this._constraint = null\n  const p = arguments[0]\n  Vertex.constructor_.call(this, p)\n}\n","import WKTWriter from '../../io/WKTWriter'\nimport LineSegment from '../../geom/LineSegment'\nexport default class QuadEdge {\n  constructor () {\n    QuadEdge.constructor_.apply(this, arguments)\n  }\n\n  static makeEdge (o, d) {\n    const q0 = new QuadEdge()\n    const q1 = new QuadEdge()\n    const q2 = new QuadEdge()\n    const q3 = new QuadEdge()\n    q0._rot = q1\n    q1._rot = q2\n    q2._rot = q3\n    q3._rot = q0\n    q0.setNext(q0)\n    q1.setNext(q3)\n    q2.setNext(q2)\n    q3.setNext(q1)\n    const base = q0\n    base.setOrig(o)\n    base.setDest(d)\n    return base\n  }\n\n  static swap (e) {\n    const a = e.oPrev()\n    const b = e.sym().oPrev()\n    QuadEdge.splice(e, a)\n    QuadEdge.splice(e.sym(), b)\n    QuadEdge.splice(e, a.lNext())\n    QuadEdge.splice(e.sym(), b.lNext())\n    e.setOrig(a.dest())\n    e.setDest(b.dest())\n  }\n\n  static splice (a, b) {\n    const alpha = a.oNext().rot()\n    const beta = b.oNext().rot()\n    const t1 = b.oNext()\n    const t2 = a.oNext()\n    const t3 = beta.oNext()\n    const t4 = alpha.oNext()\n    a.setNext(t1)\n    b.setNext(t2)\n    alpha.setNext(t3)\n    beta.setNext(t4)\n  }\n\n  static connect (a, b) {\n    const e = QuadEdge.makeEdge(a.dest(), b.orig())\n    QuadEdge.splice(e, a.lNext())\n    QuadEdge.splice(e.sym(), b)\n    return e\n  }\n\n  equalsNonOriented (qe) {\n    if (this.equalsOriented(qe)) return true\n    if (this.equalsOriented(qe.sym())) return true\n    return false\n  }\n\n  toLineSegment () {\n    return new LineSegment(this._vertex.getCoordinate(), this.dest().getCoordinate())\n  }\n\n  dest () {\n    return this.sym().orig()\n  }\n\n  oNext () {\n    return this._next\n  }\n\n  equalsOriented (qe) {\n    if (this.orig().getCoordinate().equals2D(qe.orig().getCoordinate()) && this.dest().getCoordinate().equals2D(qe.dest().getCoordinate())) return true\n    return false\n  }\n\n  dNext () {\n    return this.sym().oNext().sym()\n  }\n\n  lPrev () {\n    return this._next.sym()\n  }\n\n  rPrev () {\n    return this.sym().oNext()\n  }\n\n  rot () {\n    return this._rot\n  }\n\n  oPrev () {\n    return this._rot._next._rot\n  }\n\n  sym () {\n    return this._rot._rot\n  }\n\n  setOrig (o) {\n    this._vertex = o\n  }\n\n  lNext () {\n    return this.invRot().oNext().rot()\n  }\n\n  getLength () {\n    return this.orig().getCoordinate().distance(this.dest().getCoordinate())\n  }\n\n  invRot () {\n    return this._rot.sym()\n  }\n\n  setDest (d) {\n    this.sym().setOrig(d)\n  }\n\n  setData (data) {\n    this._data = data\n  }\n\n  getData () {\n    return this._data\n  }\n\n  delete () {\n    this._rot = null\n  }\n\n  orig () {\n    return this._vertex\n  }\n\n  rNext () {\n    return this._rot._next.invRot()\n  }\n\n  toString () {\n    const p0 = this._vertex.getCoordinate()\n    const p1 = this.dest().getCoordinate()\n    return WKTWriter.toLineString(p0, p1)\n  }\n\n  isLive () {\n    return this._rot !== null\n  }\n\n  getPrimary () {\n    if (this.orig().getCoordinate().compareTo(this.dest().getCoordinate()) <= 0) return this; else return this.sym()\n  }\n\n  dPrev () {\n    return this.invRot().oNext().invRot()\n  }\n\n  setNext (next) {\n    this._next = next\n  }\n\n  getClass () {\n    return QuadEdge\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nQuadEdge.constructor_ = function () {\n  this._rot = null\n  this._vertex = null\n  this._next = null\n  this._data = null\n}\n","import QuadEdge from './quadedge/QuadEdge'\nexport default class IncrementalDelaunayTriangulator {\n  constructor () {\n    IncrementalDelaunayTriangulator.constructor_.apply(this, arguments)\n  }\n\n  insertSite (v) {\n    let e = this._subdiv.locate(v)\n    if (this._subdiv.isVertexOfEdge(e, v)) {\n      return e\n    } else if (this._subdiv.isOnEdge(e, v.getCoordinate())) {\n      e = e.oPrev()\n      this._subdiv.delete(e.oNext())\n    }\n    let base = this._subdiv.makeEdge(e.orig(), v)\n    QuadEdge.splice(base, e)\n    const startEdge = base\n    do {\n      base = this._subdiv.connect(e, base.sym())\n      e = base.oPrev()\n    } while (e.lNext() !== startEdge)\n    do {\n      const t = e.oPrev()\n      if (t.dest().rightOf(e) && v.isInCircle(e.orig(), t.dest(), e.dest())) {\n        QuadEdge.swap(e)\n        e = e.oPrev()\n      } else if (e.oNext() === startEdge) {\n        return base\n      } else {\n        e = e.oNext().lPrev()\n      }\n    } while (true)\n  }\n\n  insertSites (vertices) {\n    for (let i = vertices.iterator(); i.hasNext();) {\n      const v = i.next()\n      this.insertSite(v)\n    }\n  }\n\n  getClass () {\n    return IncrementalDelaunayTriangulator\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nIncrementalDelaunayTriangulator.constructor_ = function () {\n  this._subdiv = null\n  this._isUsingTolerance = false\n  const subdiv = arguments[0]\n  this._subdiv = subdiv\n  this._isUsingTolerance = subdiv.getTolerance() > 0.0\n}\n","export default class QuadEdgeLocator {\n  constructor () {\n    QuadEdgeLocator.constructor_.apply(this, arguments)\n  }\n\n  locate (v) {}\n  getClass () {\n    return QuadEdgeLocator\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nQuadEdgeLocator.constructor_ = function () {}\n","import QuadEdgeLocator from './QuadEdgeLocator'\nexport default class LastFoundQuadEdgeLocator {\n  constructor () {\n    LastFoundQuadEdgeLocator.constructor_.apply(this, arguments)\n  }\n\n  init () {\n    this._lastEdge = this.findEdge()\n  }\n\n  locate (v) {\n    if (!this._lastEdge.isLive()) {\n      this.init()\n    }\n    const e = this._subdiv.locateFromEdge(v, this._lastEdge)\n    this._lastEdge = e\n    return e\n  }\n\n  findEdge () {\n    const edges = this._subdiv.getEdges()\n    return edges.iterator().next()\n  }\n\n  getClass () {\n    return LastFoundQuadEdgeLocator\n  }\n\n  get interfaces_ () {\n    return [QuadEdgeLocator]\n  }\n}\nLastFoundQuadEdgeLocator.constructor_ = function () {\n  this._subdiv = null\n  this._lastEdge = null\n  const subdiv = arguments[0]\n  this._subdiv = subdiv\n  this.init()\n}\n","import LineSegment from '../../geom/LineSegment'\nimport RuntimeException from '../../../../../java/lang/RuntimeException'\nexport default class LocateFailureException extends RuntimeException {\n  constructor () {\n    super()\n    LocateFailureException.constructor_.apply(this, arguments)\n  }\n\n  static msgWithSpatial (msg, seg) {\n    if (seg !== null) return msg + ' [ ' + seg + ' ]'\n    return msg\n  }\n\n  getSegment () {\n    return this._seg\n  }\n\n  getClass () {\n    return LocateFailureException\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nLocateFailureException.constructor_ = function () {\n  this._seg = null\n  if (arguments.length === 1) {\n    if (typeof arguments[0] === 'string') {\n      const msg = arguments[0]\n      RuntimeException.constructor_.call(this, msg)\n    } else if (arguments[0] instanceof LineSegment) {\n      const seg = arguments[0]\n      RuntimeException.constructor_.call(this, 'Locate failed to converge (at edge: ' + seg + ').  Possible causes include invalid Subdivision topology or very close sites')\n      this._seg = new LineSegment(seg)\n    }\n  } else if (arguments.length === 2) {\n    const msg = arguments[0]; const seg = arguments[1]\n    RuntimeException.constructor_.call(this, LocateFailureException.msgWithSpatial(msg, seg))\n    this._seg = new LineSegment(seg)\n  }\n}\n","export default class TriangleVisitor {\n  constructor () {\n    TriangleVisitor.constructor_.apply(this, arguments)\n  }\n\n  visit (triEdges) {}\n  getClass () {\n    return TriangleVisitor\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nTriangleVisitor.constructor_ = function () {}\n","import QuadEdge from './QuadEdge'\nimport CoordinateList from '../../geom/CoordinateList'\nimport HashSet from '../../../../../java/util/HashSet'\nimport WKTWriter from '../../io/WKTWriter'\nimport GeometryFactory from '../../geom/GeometryFactory'\nimport Coordinate from '../../geom/Coordinate'\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException'\nimport Stack from '../../../../../java/util/Stack'\nimport LastFoundQuadEdgeLocator from './LastFoundQuadEdgeLocator'\nimport LocateFailureException from './LocateFailureException'\nimport Vertex from './Vertex'\nimport System from '../../../../../java/lang/System'\nimport LineSegment from '../../geom/LineSegment'\nimport ArrayList from '../../../../../java/util/ArrayList'\nimport Envelope from '../../geom/Envelope'\nimport Triangle from '../../geom/Triangle'\nimport TriangleVisitor from './TriangleVisitor'\nexport default class QuadEdgeSubdivision {\n  constructor () {\n    QuadEdgeSubdivision.constructor_.apply(this, arguments)\n  }\n\n  static getTriangleEdges (startQE, triEdge) {\n    triEdge[0] = startQE\n    triEdge[1] = triEdge[0].lNext()\n    triEdge[2] = triEdge[1].lNext()\n    if (triEdge[2].lNext() !== triEdge[0]) throw new IllegalArgumentException('Edges do not form a triangle')\n  }\n\n  getTriangleVertices (includeFrame) {\n    const visitor = new TriangleVertexListVisitor()\n    this.visitTriangles(visitor, includeFrame)\n    return visitor.getTriangleVertices()\n  }\n\n  isFrameVertex (v) {\n    if (v.equals(this._frameVertex[0])) return true\n    if (v.equals(this._frameVertex[1])) return true\n    if (v.equals(this._frameVertex[2])) return true\n    return false\n  }\n\n  isVertexOfEdge (e, v) {\n    if (v.equals(e.orig(), this._tolerance) || v.equals(e.dest(), this._tolerance)) {\n      return true\n    }\n    return false\n  }\n\n  connect (a, b) {\n    const q = QuadEdge.connect(a, b)\n    this._quadEdges.add(q)\n    return q\n  }\n\n  getVoronoiCellPolygon (qe, geomFact) {\n    const cellPts = new ArrayList()\n    const startQE = qe\n    do {\n      const cc = qe.rot().orig().getCoordinate()\n      cellPts.add(cc)\n      qe = qe.oPrev()\n    } while (qe !== startQE)\n    const coordList = new CoordinateList()\n    coordList.addAll(cellPts, false)\n    coordList.closeRing()\n    if (coordList.size() < 4) {\n      System.out.println(coordList)\n      coordList.add(coordList.get(coordList.size() - 1), true)\n    }\n    const pts = coordList.toCoordinateArray()\n    const cellPoly = geomFact.createPolygon(geomFact.createLinearRing(pts))\n    const v = startQE.orig()\n    cellPoly.setUserData(v.getCoordinate())\n    return cellPoly\n  }\n\n  setLocator (locator) {\n    this._locator = locator\n  }\n\n  initSubdiv () {\n    const ea = this.makeEdge(this._frameVertex[0], this._frameVertex[1])\n    const eb = this.makeEdge(this._frameVertex[1], this._frameVertex[2])\n    QuadEdge.splice(ea.sym(), eb)\n    const ec = this.makeEdge(this._frameVertex[2], this._frameVertex[0])\n    QuadEdge.splice(eb.sym(), ec)\n    QuadEdge.splice(ec.sym(), ea)\n    return ea\n  }\n\n  isFrameBorderEdge (e) {\n    const leftTri = new Array(3).fill(null)\n    QuadEdgeSubdivision.getTriangleEdges(e, leftTri)\n    const rightTri = new Array(3).fill(null)\n    QuadEdgeSubdivision.getTriangleEdges(e.sym(), rightTri)\n    const vLeftTriOther = e.lNext().dest()\n    if (this.isFrameVertex(vLeftTriOther)) return true\n    const vRightTriOther = e.sym().lNext().dest()\n    if (this.isFrameVertex(vRightTriOther)) return true\n    return false\n  }\n\n  makeEdge (o, d) {\n    const q = QuadEdge.makeEdge(o, d)\n    this._quadEdges.add(q)\n    return q\n  }\n\n  visitTriangles (triVisitor, includeFrame) {\n    this._visitedKey++\n    const edgeStack = new Stack()\n    edgeStack.push(this._startingEdge)\n    const visitedEdges = new HashSet()\n    while (!edgeStack.empty()) {\n      const edge = edgeStack.pop()\n      if (!visitedEdges.contains(edge)) {\n        const triEdges = this.fetchTriangleToVisit(edge, edgeStack, includeFrame, visitedEdges)\n        if (triEdges !== null) triVisitor.visit(triEdges)\n      }\n    }\n  }\n\n  isFrameEdge (e) {\n    if (this.isFrameVertex(e.orig()) || this.isFrameVertex(e.dest())) return true\n    return false\n  }\n\n  isOnEdge (e, p) {\n    this._seg.setCoordinates(e.orig().getCoordinate(), e.dest().getCoordinate())\n    const dist = this._seg.distance(p)\n    return dist < this._edgeCoincidenceTolerance\n  }\n\n  getEnvelope () {\n    return new Envelope(this._frameEnv)\n  }\n\n  createFrame (env) {\n    const deltaX = env.getWidth()\n    const deltaY = env.getHeight()\n    let offset = 0.0\n    if (deltaX > deltaY) {\n      offset = deltaX * 10.0\n    } else {\n      offset = deltaY * 10.0\n    }\n    this._frameVertex[0] = new Vertex((env.getMaxX() + env.getMinX()) / 2.0, env.getMaxY() + offset)\n    this._frameVertex[1] = new Vertex(env.getMinX() - offset, env.getMinY() - offset)\n    this._frameVertex[2] = new Vertex(env.getMaxX() + offset, env.getMinY() - offset)\n    this._frameEnv = new Envelope(this._frameVertex[0].getCoordinate(), this._frameVertex[1].getCoordinate())\n    this._frameEnv.expandToInclude(this._frameVertex[2].getCoordinate())\n  }\n\n  getTriangleCoordinates (includeFrame) {\n    const visitor = new TriangleCoordinatesVisitor()\n    this.visitTriangles(visitor, includeFrame)\n    return visitor.getTriangles()\n  }\n\n  getVertices (includeFrame) {\n    const vertices = new HashSet()\n    for (let i = this._quadEdges.iterator(); i.hasNext();) {\n      const qe = i.next()\n      const v = qe.orig()\n      if (includeFrame || !this.isFrameVertex(v)) vertices.add(v)\n      const vd = qe.dest()\n      if (includeFrame || !this.isFrameVertex(vd)) vertices.add(vd)\n    }\n    return vertices\n  }\n\n  fetchTriangleToVisit (edge, edgeStack, includeFrame, visitedEdges) {\n    let curr = edge\n    let edgeCount = 0\n    let isFrame = false\n    do {\n      this._triEdges[edgeCount] = curr\n      if (this.isFrameEdge(curr)) isFrame = true\n      const sym = curr.sym()\n      if (!visitedEdges.contains(sym)) edgeStack.push(sym)\n      visitedEdges.add(curr)\n      edgeCount++\n      curr = curr.lNext()\n    } while (curr !== edge)\n    if (isFrame && !includeFrame) return null\n    return this._triEdges\n  }\n\n  getEdges () {\n    if (arguments.length === 0) {\n      return this._quadEdges\n    } else if (arguments.length === 1) {\n      const geomFact = arguments[0]\n      const quadEdges = this.getPrimaryEdges(false)\n      const edges = new Array(quadEdges.size()).fill(null)\n      let i = 0\n      for (let it = quadEdges.iterator(); it.hasNext();) {\n        const qe = it.next()\n        edges[i++] = geomFact.createLineString([qe.orig().getCoordinate(), qe.dest().getCoordinate()])\n      }\n      return geomFact.createMultiLineString(edges)\n    }\n  }\n\n  getVertexUniqueEdges (includeFrame) {\n    const edges = new ArrayList()\n    const visitedVertices = new HashSet()\n    for (let i = this._quadEdges.iterator(); i.hasNext();) {\n      const qe = i.next()\n      const v = qe.orig()\n      if (!visitedVertices.contains(v)) {\n        visitedVertices.add(v)\n        if (includeFrame || !this.isFrameVertex(v)) {\n          edges.add(qe)\n        }\n      }\n      const qd = qe.sym()\n      const vd = qd.orig()\n      if (!visitedVertices.contains(vd)) {\n        visitedVertices.add(vd)\n        if (includeFrame || !this.isFrameVertex(vd)) {\n          edges.add(qd)\n        }\n      }\n    }\n    return edges\n  }\n\n  getTriangleEdges (includeFrame) {\n    const visitor = new TriangleEdgesListVisitor()\n    this.visitTriangles(visitor, includeFrame)\n    return visitor.getTriangleEdges()\n  }\n\n  getPrimaryEdges (includeFrame) {\n    this._visitedKey++\n    const edges = new ArrayList()\n    const edgeStack = new Stack()\n    edgeStack.push(this._startingEdge)\n    const visitedEdges = new HashSet()\n    while (!edgeStack.empty()) {\n      const edge = edgeStack.pop()\n      if (!visitedEdges.contains(edge)) {\n        const priQE = edge.getPrimary()\n        if (includeFrame || !this.isFrameEdge(priQE)) edges.add(priQE)\n        edgeStack.push(edge.oNext())\n        edgeStack.push(edge.sym().oNext())\n        visitedEdges.add(edge)\n        visitedEdges.add(edge.sym())\n      }\n    }\n    return edges\n  }\n\n  delete (e) {\n    QuadEdge.splice(e, e.oPrev())\n    QuadEdge.splice(e.sym(), e.sym().oPrev())\n    const eSym = e.sym()\n    const eRot = e.rot()\n    const eRotSym = e.rot().sym()\n    this._quadEdges.remove(e)\n    this._quadEdges.remove(eSym)\n    this._quadEdges.remove(eRot)\n    this._quadEdges.remove(eRotSym)\n    e.delete()\n    eSym.delete()\n    eRot.delete()\n    eRotSym.delete()\n  }\n\n  locateFromEdge (v, startEdge) {\n    let iter = 0\n    const maxIter = this._quadEdges.size()\n    let e = startEdge\n    while (true) {\n      iter++\n      if (iter > maxIter) {\n        throw new LocateFailureException(e.toLineSegment())\n      }\n      if (v.equals(e.orig()) || v.equals(e.dest())) {\n        break\n      } else if (v.rightOf(e)) {\n        e = e.sym()\n      } else if (!v.rightOf(e.oNext())) {\n        e = e.oNext()\n      } else if (!v.rightOf(e.dPrev())) {\n        e = e.dPrev()\n      } else {\n        break\n      }\n    }\n    return e\n  }\n\n  getTolerance () {\n    return this._tolerance\n  }\n\n  getVoronoiCellPolygons (geomFact) {\n    this.visitTriangles(new TriangleCircumcentreVisitor(), true)\n    const cells = new ArrayList()\n    const edges = this.getVertexUniqueEdges(false)\n    for (let i = edges.iterator(); i.hasNext();) {\n      const qe = i.next()\n      cells.add(this.getVoronoiCellPolygon(qe, geomFact))\n    }\n    return cells\n  }\n\n  getVoronoiDiagram (geomFact) {\n    const vorCells = this.getVoronoiCellPolygons(geomFact)\n    return geomFact.createGeometryCollection(GeometryFactory.toGeometryArray(vorCells))\n  }\n\n  getTriangles (geomFact) {\n    const triPtsList = this.getTriangleCoordinates(false)\n    const tris = new Array(triPtsList.size()).fill(null)\n    let i = 0\n    for (let it = triPtsList.iterator(); it.hasNext();) {\n      const triPt = it.next()\n      tris[i++] = geomFact.createPolygon(geomFact.createLinearRing(triPt))\n    }\n    return geomFact.createGeometryCollection(tris)\n  }\n\n  insertSite (v) {\n    let e = this.locate(v)\n    if (v.equals(e.orig(), this._tolerance) || v.equals(e.dest(), this._tolerance)) {\n      return e\n    }\n    let base = this.makeEdge(e.orig(), v)\n    QuadEdge.splice(base, e)\n    const startEdge = base\n    do {\n      base = this.connect(e, base.sym())\n      e = base.oPrev()\n    } while (e.lNext() !== startEdge)\n    return startEdge\n  }\n\n  locate () {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Vertex) {\n        const v = arguments[0]\n        return this._locator.locate(v)\n      } else if (arguments[0] instanceof Coordinate) {\n        const p = arguments[0]\n        return this._locator.locate(new Vertex(p))\n      }\n    } else if (arguments.length === 2) {\n      const p0 = arguments[0]; const p1 = arguments[1]\n      const e = this._locator.locate(new Vertex(p0))\n      if (e === null) return null\n      let base = e\n      if (e.dest().getCoordinate().equals2D(p0)) base = e.sym()\n      let locEdge = base\n      do {\n        if (locEdge.dest().getCoordinate().equals2D(p1)) return locEdge\n        locEdge = locEdge.oNext()\n      } while (locEdge !== base)\n      return null\n    }\n  }\n\n  getClass () {\n    return QuadEdgeSubdivision\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nclass TriangleCircumcentreVisitor {\n  constructor () {\n    TriangleCircumcentreVisitor.constructor_.apply(this, arguments)\n  }\n\n  visit (triEdges) {\n    const a = triEdges[0].orig().getCoordinate()\n    const b = triEdges[1].orig().getCoordinate()\n    const c = triEdges[2].orig().getCoordinate()\n    const cc = Triangle.circumcentre(a, b, c)\n    const ccVertex = new Vertex(cc)\n    for (let i = 0; i < 3; i++) {\n      triEdges[i].rot().setOrig(ccVertex)\n    }\n  }\n\n  getClass () {\n    return TriangleCircumcentreVisitor\n  }\n\n  get interfaces_ () {\n    return [TriangleVisitor]\n  }\n}\nTriangleCircumcentreVisitor.constructor_ = function () {}\nclass TriangleEdgesListVisitor {\n  constructor () {\n    TriangleEdgesListVisitor.constructor_.apply(this, arguments)\n  }\n\n  getTriangleEdges () {\n    return this._triList\n  }\n\n  visit (triEdges) {\n    this._triList.add(triEdges)\n  }\n\n  getClass () {\n    return TriangleEdgesListVisitor\n  }\n\n  get interfaces_ () {\n    return [TriangleVisitor]\n  }\n}\nTriangleEdgesListVisitor.constructor_ = function () {\n  this._triList = new ArrayList()\n}\nclass TriangleVertexListVisitor {\n  constructor () {\n    TriangleVertexListVisitor.constructor_.apply(this, arguments)\n  }\n\n  visit (triEdges) {\n    this._triList.add([triEdges[0].orig(), triEdges[1].orig(), triEdges[2].orig()])\n  }\n\n  getTriangleVertices () {\n    return this._triList\n  }\n\n  getClass () {\n    return TriangleVertexListVisitor\n  }\n\n  get interfaces_ () {\n    return [TriangleVisitor]\n  }\n}\nTriangleVertexListVisitor.constructor_ = function () {\n  this._triList = new ArrayList()\n}\nclass TriangleCoordinatesVisitor {\n  constructor () {\n    TriangleCoordinatesVisitor.constructor_.apply(this, arguments)\n  }\n\n  checkTriangleSize (pts) {\n    let loc = ''\n    if (pts.length >= 2) loc = WKTWriter.toLineString(pts[0], pts[1]); else {\n      if (pts.length >= 1) loc = WKTWriter.toPoint(pts[0])\n    }\n  }\n\n  visit (triEdges) {\n    this._coordList.clear()\n    for (let i = 0; i < 3; i++) {\n      const v = triEdges[i].orig()\n      this._coordList.add(v.getCoordinate())\n    }\n    if (this._coordList.size() > 0) {\n      this._coordList.closeRing()\n      const pts = this._coordList.toCoordinateArray()\n      if (pts.length !== 4) {\n        return null\n      }\n      this._triCoords.add(pts)\n    }\n  }\n\n  getTriangles () {\n    return this._triCoords\n  }\n\n  getClass () {\n    return TriangleCoordinatesVisitor\n  }\n\n  get interfaces_ () {\n    return [TriangleVisitor]\n  }\n}\nTriangleCoordinatesVisitor.constructor_ = function () {\n  this._coordList = new CoordinateList()\n  this._triCoords = new ArrayList()\n}\nQuadEdgeSubdivision.TriangleCircumcentreVisitor = TriangleCircumcentreVisitor\nQuadEdgeSubdivision.TriangleEdgesListVisitor = TriangleEdgesListVisitor\nQuadEdgeSubdivision.TriangleVertexListVisitor = TriangleVertexListVisitor\nQuadEdgeSubdivision.TriangleCoordinatesVisitor = TriangleCoordinatesVisitor\nQuadEdgeSubdivision.constructor_ = function () {\n  this._visitedKey = 0\n  this._quadEdges = new ArrayList()\n  this._startingEdge = null\n  this._tolerance = null\n  this._edgeCoincidenceTolerance = null\n  this._frameVertex = new Array(3).fill(null)\n  this._frameEnv = null\n  this._locator = null\n  this._seg = new LineSegment()\n  this._triEdges = new Array(3).fill(null)\n  const env = arguments[0]; const tolerance = arguments[1]\n  this._tolerance = tolerance\n  this._edgeCoincidenceTolerance = tolerance / QuadEdgeSubdivision.EDGE_COINCIDENCE_TOL_FACTOR\n  this.createFrame(env)\n  this._startingEdge = this.initSubdiv()\n  this._locator = new LastFoundQuadEdgeLocator(this)\n}\nQuadEdgeSubdivision.EDGE_COINCIDENCE_TOL_FACTOR = 1000\n","import Coordinate from '../geom/Coordinate'\nimport LineSegment from '../geom/LineSegment'\nexport default class Segment {\n  constructor () {\n    Segment.constructor_.apply(this, arguments)\n  }\n\n  getLineSegment () {\n    return this._ls\n  }\n\n  getEndZ () {\n    const p = this._ls.getCoordinate(1)\n    return p.z\n  }\n\n  getStartZ () {\n    const p = this._ls.getCoordinate(0)\n    return p.z\n  }\n\n  intersection (s) {\n    return this._ls.intersection(s.getLineSegment())\n  }\n\n  getStart () {\n    return this._ls.getCoordinate(0)\n  }\n\n  getEnd () {\n    return this._ls.getCoordinate(1)\n  }\n\n  getEndY () {\n    const p = this._ls.getCoordinate(1)\n    return p.y\n  }\n\n  getStartX () {\n    const p = this._ls.getCoordinate(0)\n    return p.x\n  }\n\n  equalsTopo (s) {\n    return this._ls.equalsTopo(s.getLineSegment())\n  }\n\n  getStartY () {\n    const p = this._ls.getCoordinate(0)\n    return p.y\n  }\n\n  setData (data) {\n    this._data = data\n  }\n\n  getData () {\n    return this._data\n  }\n\n  getEndX () {\n    const p = this._ls.getCoordinate(1)\n    return p.x\n  }\n\n  toString () {\n    return this._ls.toString()\n  }\n\n  getClass () {\n    return Segment\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nSegment.constructor_ = function () {\n  this._ls = null\n  this._data = null\n  if (arguments.length === 2) {\n    const p0 = arguments[0]; const p1 = arguments[1]\n    this._ls = new LineSegment(p0, p1)\n  } else if (arguments.length === 3) {\n    const p0 = arguments[0]; const p1 = arguments[1]; const data = arguments[2]\n    this._ls = new LineSegment(p0, p1)\n    this._data = data\n  } else if (arguments.length === 6) {\n    const x1 = arguments[0]; const y1 = arguments[1]; const z1 = arguments[2]; const x2 = arguments[3]; const y2 = arguments[4]; const z2 = arguments[5]\n    Segment.constructor_.call(this, new Coordinate(x1, y1, z1), new Coordinate(x2, y2, z2))\n  } else if (arguments.length === 7) {\n    const x1 = arguments[0]; const y1 = arguments[1]; const z1 = arguments[2]; const x2 = arguments[3]; const y2 = arguments[4]; const z2 = arguments[5]; const data = arguments[6]\n    Segment.constructor_.call(this, new Coordinate(x1, y1, z1), new Coordinate(x2, y2, z2), data)\n  }\n}\n","import GeometryFactory from '../geom/GeometryFactory'\nimport NonEncroachingSplitPointFinder from './NonEncroachingSplitPointFinder'\nimport ConstraintVertex from './ConstraintVertex'\nimport Coordinate from '../geom/Coordinate'\nimport IncrementalDelaunayTriangulator from './IncrementalDelaunayTriangulator'\nimport QuadEdgeSubdivision from './quadedge/QuadEdgeSubdivision'\nimport Double from '../../../../java/lang/Double'\nimport LastFoundQuadEdgeLocator from './quadedge/LastFoundQuadEdgeLocator'\nimport Segment from './Segment'\nimport ConvexHull from '../algorithm/ConvexHull'\nimport KdTree from '../index/kdtree/KdTree'\nimport ArrayList from '../../../../java/util/ArrayList'\nimport Envelope from '../geom/Envelope'\nexport default class ConformingDelaunayTriangulator {\n  constructor () {\n    ConformingDelaunayTriangulator.constructor_.apply(this, arguments)\n  }\n\n  static computeVertexEnvelope (vertices) {\n    const env = new Envelope()\n    for (let i = vertices.iterator(); i.hasNext();) {\n      const v = i.next()\n      env.expandToInclude(v.getCoordinate())\n    }\n    return env\n  }\n\n  getInitialVertices () {\n    return this._initialVertices\n  }\n\n  getKDT () {\n    return this._kdt\n  }\n\n  enforceConstraints () {\n    this.addConstraintVertices()\n    let count = 0\n    let splits = 0\n    do {\n      splits = this.enforceGabriel(this._segments)\n      count++\n    } while (splits > 0 && count < ConformingDelaunayTriangulator.MAX_SPLIT_ITER)\n  }\n\n  insertSites (vertices) {\n    for (let i = vertices.iterator(); i.hasNext();) {\n      const v = i.next()\n      this.insertSite(v)\n    }\n  }\n\n  getVertexFactory () {\n    return this._vertexFactory\n  }\n\n  getPointArray () {\n    const pts = new Array(this._initialVertices.size() + this._segVertices.size()).fill(null)\n    let index = 0\n    for (let i = this._initialVertices.iterator(); i.hasNext();) {\n      const v = i.next()\n      pts[index++] = v.getCoordinate()\n    }\n    for (let i2 = this._segVertices.iterator(); i2.hasNext();) {\n      const v = i2.next()\n      pts[index++] = v.getCoordinate()\n    }\n    return pts\n  }\n\n  setConstraints (segments, segVertices) {\n    this._segments = segments\n    this._segVertices = segVertices\n  }\n\n  computeConvexHull () {\n    const fact = new GeometryFactory()\n    const coords = this.getPointArray()\n    const hull = new ConvexHull(coords, fact)\n    this._convexHull = hull.getConvexHull()\n  }\n\n  addConstraintVertices () {\n    this.computeConvexHull()\n    this.insertSites(this._segVertices)\n  }\n\n  findNonGabrielPoint (seg) {\n    const p = seg.getStart()\n    const q = seg.getEnd()\n    const midPt = new Coordinate((p.x + q.x) / 2.0, (p.y + q.y) / 2.0)\n    const segRadius = p.distance(midPt)\n    const env = new Envelope(midPt)\n    env.expandBy(segRadius)\n    const result = this._kdt.query(env)\n    let closestNonGabriel = null\n    let minDist = Double.MAX_VALUE\n    for (let i = result.iterator(); i.hasNext();) {\n      const nextNode = i.next()\n      const testPt = nextNode.getCoordinate()\n      if (testPt.equals2D(p) || testPt.equals2D(q)) continue\n      const testRadius = midPt.distance(testPt)\n      if (testRadius < segRadius) {\n        const testDist = testRadius\n        if (closestNonGabriel === null || testDist < minDist) {\n          closestNonGabriel = testPt\n          minDist = testDist\n        }\n      }\n    }\n    return closestNonGabriel\n  }\n\n  getConstraintSegments () {\n    return this._segments\n  }\n\n  setSplitPointFinder (splitFinder) {\n    this._splitFinder = splitFinder\n  }\n\n  getConvexHull () {\n    return this._convexHull\n  }\n\n  getTolerance () {\n    return this._tolerance\n  }\n\n  enforceGabriel (segsToInsert) {\n    const newSegments = new ArrayList()\n    let splits = 0\n    const segsToRemove = new ArrayList()\n    for (let i = segsToInsert.iterator(); i.hasNext();) {\n      const seg = i.next()\n      const encroachPt = this.findNonGabrielPoint(seg)\n      if (encroachPt === null) continue\n      this._splitPt = this._splitFinder.findSplitPoint(seg, encroachPt)\n      const splitVertex = this.createVertex(this._splitPt, seg)\n      const insertedVertex = this.insertSite(splitVertex)\n      if (!insertedVertex.getCoordinate().equals2D(this._splitPt)) {}\n      const s1 = new Segment(seg.getStartX(), seg.getStartY(), seg.getStartZ(), splitVertex.getX(), splitVertex.getY(), splitVertex.getZ(), seg.getData())\n      const s2 = new Segment(splitVertex.getX(), splitVertex.getY(), splitVertex.getZ(), seg.getEndX(), seg.getEndY(), seg.getEndZ(), seg.getData())\n      newSegments.add(s1)\n      newSegments.add(s2)\n      segsToRemove.add(seg)\n      splits = splits + 1\n    }\n    segsToInsert.removeAll(segsToRemove)\n    segsToInsert.addAll(newSegments)\n    return splits\n  }\n\n  createVertex () {\n    if (arguments.length === 1) {\n      const p = arguments[0]\n      let v = null\n      if (this._vertexFactory !== null) v = this._vertexFactory.createVertex(p, null); else v = new ConstraintVertex(p)\n      return v\n    } else if (arguments.length === 2) {\n      const p = arguments[0]; const seg = arguments[1]\n      let v = null\n      if (this._vertexFactory !== null) v = this._vertexFactory.createVertex(p, seg); else v = new ConstraintVertex(p)\n      v.setOnConstraint(true)\n      return v\n    }\n  }\n\n  getSubdivision () {\n    return this._subdiv\n  }\n\n  computeBoundingBox () {\n    const vertexEnv = ConformingDelaunayTriangulator.computeVertexEnvelope(this._initialVertices)\n    const segEnv = ConformingDelaunayTriangulator.computeVertexEnvelope(this._segVertices)\n    const allPointsEnv = new Envelope(vertexEnv)\n    allPointsEnv.expandToInclude(segEnv)\n    const deltaX = allPointsEnv.getWidth() * 0.2\n    const deltaY = allPointsEnv.getHeight() * 0.2\n    const delta = Math.max(deltaX, deltaY)\n    this._computeAreaEnv = new Envelope(allPointsEnv)\n    this._computeAreaEnv.expandBy(delta)\n  }\n\n  setVertexFactory (vertexFactory) {\n    this._vertexFactory = vertexFactory\n  }\n\n  formInitialDelaunay () {\n    this.computeBoundingBox()\n    this._subdiv = new QuadEdgeSubdivision(this._computeAreaEnv, this._tolerance)\n    this._subdiv.setLocator(new LastFoundQuadEdgeLocator(this._subdiv))\n    this._incDel = new IncrementalDelaunayTriangulator(this._subdiv)\n    this.insertSites(this._initialVertices)\n  }\n\n  insertSite () {\n    if (arguments[0] instanceof ConstraintVertex) {\n      const v = arguments[0]\n      const kdnode = this._kdt.insert(v.getCoordinate(), v)\n      if (!kdnode.isRepeated()) {\n        this._incDel.insertSite(v)\n      } else {\n        const snappedV = kdnode.getData()\n        snappedV.merge(v)\n        return snappedV\n      }\n      return v\n    } else if (arguments[0] instanceof Coordinate) {\n      const p = arguments[0]\n      this.insertSite(this.createVertex(p))\n    }\n  }\n\n  getClass () {\n    return ConformingDelaunayTriangulator\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nConformingDelaunayTriangulator.constructor_ = function () {\n  this._initialVertices = null\n  this._segVertices = null\n  this._segments = new ArrayList()\n  this._subdiv = null\n  this._incDel = null\n  this._convexHull = null\n  this._splitFinder = new NonEncroachingSplitPointFinder()\n  this._kdt = null\n  this._vertexFactory = null\n  this._computeAreaEnv = null\n  this._splitPt = null\n  this._tolerance = null\n  const initialVertices = arguments[0]; const tolerance = arguments[1]\n  this._initialVertices = new ArrayList(initialVertices)\n  this._tolerance = tolerance\n  this._kdt = new KdTree(tolerance)\n}\nConformingDelaunayTriangulator.MAX_SPLIT_ITER = 99\n","import CoordinateList from '../geom/CoordinateList'\nimport Geometry from '../geom/Geometry'\nimport Arrays from '../../../../java/util/Arrays'\nimport hasInterface from '../../../../hasInterface'\nimport Collection from '../../../../java/util/Collection'\nimport IncrementalDelaunayTriangulator from './IncrementalDelaunayTriangulator'\nimport QuadEdgeSubdivision from './quadedge/QuadEdgeSubdivision'\nimport Vertex from './quadedge/Vertex'\nimport CoordinateArrays from '../geom/CoordinateArrays'\nimport ArrayList from '../../../../java/util/ArrayList'\nimport Envelope from '../geom/Envelope'\nexport default class DelaunayTriangulationBuilder {\n  constructor () {\n    DelaunayTriangulationBuilder.constructor_.apply(this, arguments)\n  }\n\n  static extractUniqueCoordinates (geom) {\n    if (geom === null) return new CoordinateList()\n    const coords = geom.getCoordinates()\n    return DelaunayTriangulationBuilder.unique(coords)\n  }\n\n  static envelope (coords) {\n    const env = new Envelope()\n    for (let i = coords.iterator(); i.hasNext();) {\n      const coord = i.next()\n      env.expandToInclude(coord)\n    }\n    return env\n  }\n\n  static unique (coords) {\n    const coordsCopy = CoordinateArrays.copyDeep(coords)\n    Arrays.sort(coordsCopy)\n    const coordList = new CoordinateList(coordsCopy, false)\n    return coordList\n  }\n\n  static toVertices (coords) {\n    const verts = new ArrayList()\n    for (let i = coords.iterator(); i.hasNext();) {\n      const coord = i.next()\n      verts.add(new Vertex(coord))\n    }\n    return verts\n  }\n\n  create () {\n    if (this._subdiv !== null) return null\n    const siteEnv = DelaunayTriangulationBuilder.envelope(this._siteCoords)\n    const vertices = DelaunayTriangulationBuilder.toVertices(this._siteCoords)\n    this._subdiv = new QuadEdgeSubdivision(siteEnv, this._tolerance)\n    const triangulator = new IncrementalDelaunayTriangulator(this._subdiv)\n    triangulator.insertSites(vertices)\n  }\n\n  setTolerance (tolerance) {\n    this._tolerance = tolerance\n  }\n\n  setSites () {\n    if (arguments[0] instanceof Geometry) {\n      const geom = arguments[0]\n      this._siteCoords = DelaunayTriangulationBuilder.extractUniqueCoordinates(geom)\n    } else if (hasInterface(arguments[0], Collection)) {\n      const coords = arguments[0]\n      this._siteCoords = DelaunayTriangulationBuilder.unique(CoordinateArrays.toCoordinateArray(coords))\n    }\n  }\n\n  getEdges (geomFact) {\n    this.create()\n    return this._subdiv.getEdges(geomFact)\n  }\n\n  getSubdivision () {\n    this.create()\n    return this._subdiv\n  }\n\n  getTriangles (geomFact) {\n    this.create()\n    return this._subdiv.getTriangles(geomFact)\n  }\n\n  getClass () {\n    return DelaunayTriangulationBuilder\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nDelaunayTriangulationBuilder.constructor_ = function () {\n  this._siteCoords = null\n  this._tolerance = 0.0\n  this._subdiv = null\n}\n","import ConformingDelaunayTriangulator from './ConformingDelaunayTriangulator'\nimport ConstraintVertex from './ConstraintVertex'\nimport DelaunayTriangulationBuilder from './DelaunayTriangulationBuilder'\nimport Segment from './Segment'\nimport ArrayList from '../../../../java/util/ArrayList'\nimport LinearComponentExtracter from '../geom/util/LinearComponentExtracter'\nimport TreeMap from '../../../../java/util/TreeMap'\nexport default class ConformingDelaunayTriangulationBuilder {\n  constructor () {\n    ConformingDelaunayTriangulationBuilder.constructor_.apply(this, arguments)\n  }\n\n  static createConstraintSegments () {\n    if (arguments.length === 1) {\n      const geom = arguments[0]\n      const lines = LinearComponentExtracter.getLines(geom)\n      const constraintSegs = new ArrayList()\n      for (let i = lines.iterator(); i.hasNext();) {\n        const line = i.next()\n        ConformingDelaunayTriangulationBuilder.createConstraintSegments(line, constraintSegs)\n      }\n      return constraintSegs\n    } else if (arguments.length === 2) {\n      const line = arguments[0]; const constraintSegs = arguments[1]\n      const coords = line.getCoordinates()\n      for (let i = 1; i < coords.length; i++) {\n        constraintSegs.add(new Segment(coords[i - 1], coords[i]))\n      }\n    }\n  }\n\n  createSiteVertices (coords) {\n    const verts = new ArrayList()\n    for (let i = coords.iterator(); i.hasNext();) {\n      const coord = i.next()\n      if (this._constraintVertexMap.containsKey(coord)) continue\n      verts.add(new ConstraintVertex(coord))\n    }\n    return verts\n  }\n\n  create () {\n    if (this._subdiv !== null) return null\n    const siteEnv = DelaunayTriangulationBuilder.envelope(this._siteCoords)\n    let segments = new ArrayList()\n    if (this._constraintLines !== null) {\n      siteEnv.expandToInclude(this._constraintLines.getEnvelopeInternal())\n      this.createVertices(this._constraintLines)\n      segments = ConformingDelaunayTriangulationBuilder.createConstraintSegments(this._constraintLines)\n    }\n    const sites = this.createSiteVertices(this._siteCoords)\n    const cdt = new ConformingDelaunayTriangulator(sites, this._tolerance)\n    cdt.setConstraints(segments, new ArrayList(this._constraintVertexMap.values()))\n    cdt.formInitialDelaunay()\n    cdt.enforceConstraints()\n    this._subdiv = cdt.getSubdivision()\n  }\n\n  setTolerance (tolerance) {\n    this._tolerance = tolerance\n  }\n\n  setConstraints (constraintLines) {\n    this._constraintLines = constraintLines\n  }\n\n  setSites (geom) {\n    this._siteCoords = DelaunayTriangulationBuilder.extractUniqueCoordinates(geom)\n  }\n\n  getEdges (geomFact) {\n    this.create()\n    return this._subdiv.getEdges(geomFact)\n  }\n\n  getSubdivision () {\n    this.create()\n    return this._subdiv\n  }\n\n  getTriangles (geomFact) {\n    this.create()\n    return this._subdiv.getTriangles(geomFact)\n  }\n\n  createVertices (geom) {\n    const coords = geom.getCoordinates()\n    for (let i = 0; i < coords.length; i++) {\n      const v = new ConstraintVertex(coords[i])\n      this._constraintVertexMap.put(coords[i], v)\n    }\n  }\n\n  getClass () {\n    return ConformingDelaunayTriangulationBuilder\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nConformingDelaunayTriangulationBuilder.constructor_ = function () {\n  this._siteCoords = null\n  this._constraintLines = null\n  this._tolerance = 0.0\n  this._subdiv = null\n  this._constraintVertexMap = new TreeMap()\n}\n","import Geometry from '../geom/Geometry'\nimport hasInterface from '../../../../hasInterface'\nimport GeometryFactory from '../geom/GeometryFactory'\nimport Collection from '../../../../java/util/Collection'\nimport IncrementalDelaunayTriangulator from './IncrementalDelaunayTriangulator'\nimport QuadEdgeSubdivision from './quadedge/QuadEdgeSubdivision'\nimport DelaunayTriangulationBuilder from './DelaunayTriangulationBuilder'\nimport CoordinateArrays from '../geom/CoordinateArrays'\nimport ArrayList from '../../../../java/util/ArrayList'\nexport default class VoronoiDiagramBuilder {\n  constructor () {\n    VoronoiDiagramBuilder.constructor_.apply(this, arguments)\n  }\n\n  static clipGeometryCollection (geom, clipEnv) {\n    const clipPoly = geom.getFactory().toGeometry(clipEnv)\n    const clipped = new ArrayList()\n    for (let i = 0; i < geom.getNumGeometries(); i++) {\n      const g = geom.getGeometryN(i)\n      let result = null\n      if (clipEnv.contains(g.getEnvelopeInternal())) result = g; else if (clipEnv.intersects(g.getEnvelopeInternal())) {\n        result = clipPoly.intersection(g)\n        result.setUserData(g.getUserData())\n      }\n      if (result !== null && !result.isEmpty()) {\n        clipped.add(result)\n      }\n    }\n    return geom.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(clipped))\n  }\n\n  create () {\n    if (this._subdiv !== null) return null\n    const siteEnv = DelaunayTriangulationBuilder.envelope(this._siteCoords)\n    this._diagramEnv = siteEnv\n    const expandBy = Math.max(this._diagramEnv.getWidth(), this._diagramEnv.getHeight())\n    this._diagramEnv.expandBy(expandBy)\n    if (this._clipEnv !== null) this._diagramEnv.expandToInclude(this._clipEnv)\n    const vertices = DelaunayTriangulationBuilder.toVertices(this._siteCoords)\n    this._subdiv = new QuadEdgeSubdivision(siteEnv, this._tolerance)\n    const triangulator = new IncrementalDelaunayTriangulator(this._subdiv)\n    triangulator.insertSites(vertices)\n  }\n\n  getDiagram (geomFact) {\n    this.create()\n    const polys = this._subdiv.getVoronoiDiagram(geomFact)\n    return VoronoiDiagramBuilder.clipGeometryCollection(polys, this._diagramEnv)\n  }\n\n  setTolerance (tolerance) {\n    this._tolerance = tolerance\n  }\n\n  setSites () {\n    if (arguments[0] instanceof Geometry) {\n      const geom = arguments[0]\n      this._siteCoords = DelaunayTriangulationBuilder.extractUniqueCoordinates(geom)\n    } else if (hasInterface(arguments[0], Collection)) {\n      const coords = arguments[0]\n      this._siteCoords = DelaunayTriangulationBuilder.unique(CoordinateArrays.toCoordinateArray(coords))\n    }\n  }\n\n  setClipEnvelope (clipEnv) {\n    this._clipEnv = clipEnv\n  }\n\n  getSubdivision () {\n    this.create()\n    return this._subdiv\n  }\n\n  getClass () {\n    return VoronoiDiagramBuilder\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nVoronoiDiagramBuilder.constructor_ = function () {\n  this._siteCoords = null\n  this._tolerance = 0.0\n  this._subdiv = null\n  this._clipEnv = null\n  this._diagramEnv = null\n}\n","import Coordinate from '../geom/Coordinate'\nimport LineSegment from '../geom/LineSegment'\nimport Comparable from '../../../../java/lang/Comparable'\nexport default class LinearLocation {\n  constructor () {\n    LinearLocation.constructor_.apply(this, arguments)\n  }\n\n  static getEndLocation (linear) {\n    const loc = new LinearLocation()\n    loc.setToEnd(linear)\n    return loc\n  }\n\n  static pointAlongSegmentByFraction (p0, p1, frac) {\n    if (frac <= 0.0) return p0\n    if (frac >= 1.0) return p1\n    const x = (p1.x - p0.x) * frac + p0.x\n    const y = (p1.y - p0.y) * frac + p0.y\n    const z = (p1.z - p0.z) * frac + p0.z\n    return new Coordinate(x, y, z)\n  }\n\n  static compareLocationValues (componentIndex0, segmentIndex0, segmentFraction0, componentIndex1, segmentIndex1, segmentFraction1) {\n    if (componentIndex0 < componentIndex1) return -1\n    if (componentIndex0 > componentIndex1) return 1\n    if (segmentIndex0 < segmentIndex1) return -1\n    if (segmentIndex0 > segmentIndex1) return 1\n    if (segmentFraction0 < segmentFraction1) return -1\n    if (segmentFraction0 > segmentFraction1) return 1\n    return 0\n  }\n\n  getSegmentIndex () {\n    return this._segmentIndex\n  }\n\n  getComponentIndex () {\n    return this._componentIndex\n  }\n\n  isEndpoint (linearGeom) {\n    const lineComp = linearGeom.getGeometryN(this._componentIndex)\n    const nseg = lineComp.getNumPoints() - 1\n    return this._segmentIndex >= nseg || this._segmentIndex === nseg && this._segmentFraction >= 1.0\n  }\n\n  isValid (linearGeom) {\n    if (this._componentIndex < 0 || this._componentIndex >= linearGeom.getNumGeometries()) return false\n    const lineComp = linearGeom.getGeometryN(this._componentIndex)\n    if (this._segmentIndex < 0 || this._segmentIndex > lineComp.getNumPoints()) return false\n    if (this._segmentIndex === lineComp.getNumPoints() && this._segmentFraction !== 0.0) return false\n    if (this._segmentFraction < 0.0 || this._segmentFraction > 1.0) return false\n    return true\n  }\n\n  normalize () {\n    if (this._segmentFraction < 0.0) {\n      this._segmentFraction = 0.0\n    }\n    if (this._segmentFraction > 1.0) {\n      this._segmentFraction = 1.0\n    }\n    if (this._componentIndex < 0) {\n      this._componentIndex = 0\n      this._segmentIndex = 0\n      this._segmentFraction = 0.0\n    }\n    if (this._segmentIndex < 0) {\n      this._segmentIndex = 0\n      this._segmentFraction = 0.0\n    }\n    if (this._segmentFraction === 1.0) {\n      this._segmentFraction = 0.0\n      this._segmentIndex += 1\n    }\n  }\n\n  toLowest (linearGeom) {\n    const lineComp = linearGeom.getGeometryN(this._componentIndex)\n    const nseg = lineComp.getNumPoints() - 1\n    if (this._segmentIndex < nseg) return this\n    return new LinearLocation(this._componentIndex, nseg, 1.0, false)\n  }\n\n  getCoordinate (linearGeom) {\n    const lineComp = linearGeom.getGeometryN(this._componentIndex)\n    const p0 = lineComp.getCoordinateN(this._segmentIndex)\n    if (this._segmentIndex >= lineComp.getNumPoints() - 1) return p0\n    const p1 = lineComp.getCoordinateN(this._segmentIndex + 1)\n    return LinearLocation.pointAlongSegmentByFraction(p0, p1, this._segmentFraction)\n  }\n\n  getSegmentFraction () {\n    return this._segmentFraction\n  }\n\n  getSegment (linearGeom) {\n    const lineComp = linearGeom.getGeometryN(this._componentIndex)\n    const p0 = lineComp.getCoordinateN(this._segmentIndex)\n    if (this._segmentIndex >= lineComp.getNumPoints() - 1) {\n      const prev = lineComp.getCoordinateN(lineComp.getNumPoints() - 2)\n      return new LineSegment(prev, p0)\n    }\n    const p1 = lineComp.getCoordinateN(this._segmentIndex + 1)\n    return new LineSegment(p0, p1)\n  }\n\n  clamp (linear) {\n    if (this._componentIndex >= linear.getNumGeometries()) {\n      this.setToEnd(linear)\n      return null\n    }\n    if (this._segmentIndex >= linear.getNumPoints()) {\n      const line = linear.getGeometryN(this._componentIndex)\n      this._segmentIndex = line.getNumPoints() - 1\n      this._segmentFraction = 1.0\n    }\n  }\n\n  setToEnd (linear) {\n    this._componentIndex = linear.getNumGeometries() - 1\n    const lastLine = linear.getGeometryN(this._componentIndex)\n    this._segmentIndex = lastLine.getNumPoints() - 1\n    this._segmentFraction = 1.0\n  }\n\n  compareTo (o) {\n    const other = o\n    if (this._componentIndex < other._componentIndex) return -1\n    if (this._componentIndex > other._componentIndex) return 1\n    if (this._segmentIndex < other._segmentIndex) return -1\n    if (this._segmentIndex > other._segmentIndex) return 1\n    if (this._segmentFraction < other._segmentFraction) return -1\n    if (this._segmentFraction > other._segmentFraction) return 1\n    return 0\n  }\n\n  copy () {\n    return new LinearLocation(this._componentIndex, this._segmentIndex, this._segmentFraction)\n  }\n\n  toString () {\n    return 'LinearLoc[' + this._componentIndex + ', ' + this._segmentIndex + ', ' + this._segmentFraction + ']'\n  }\n\n  isOnSameSegment (loc) {\n    if (this._componentIndex !== loc._componentIndex) return false\n    if (this._segmentIndex === loc._segmentIndex) return true\n    if (loc._segmentIndex - this._segmentIndex === 1 && loc._segmentFraction === 0.0) return true\n    if (this._segmentIndex - loc._segmentIndex === 1 && this._segmentFraction === 0.0) return true\n    return false\n  }\n\n  snapToVertex (linearGeom, minDistance) {\n    if (this._segmentFraction <= 0.0 || this._segmentFraction >= 1.0) return null\n    const segLen = this.getSegmentLength(linearGeom)\n    const lenToStart = this._segmentFraction * segLen\n    const lenToEnd = segLen - lenToStart\n    if (lenToStart <= lenToEnd && lenToStart < minDistance) {\n      this._segmentFraction = 0.0\n    } else if (lenToEnd <= lenToStart && lenToEnd < minDistance) {\n      this._segmentFraction = 1.0\n    }\n  }\n\n  compareLocationValues (componentIndex1, segmentIndex1, segmentFraction1) {\n    if (this._componentIndex < componentIndex1) return -1\n    if (this._componentIndex > componentIndex1) return 1\n    if (this._segmentIndex < segmentIndex1) return -1\n    if (this._segmentIndex > segmentIndex1) return 1\n    if (this._segmentFraction < segmentFraction1) return -1\n    if (this._segmentFraction > segmentFraction1) return 1\n    return 0\n  }\n\n  getSegmentLength (linearGeom) {\n    const lineComp = linearGeom.getGeometryN(this._componentIndex)\n    let segIndex = this._segmentIndex\n    if (this._segmentIndex >= lineComp.getNumPoints() - 1) segIndex = lineComp.getNumPoints() - 2\n    const p0 = lineComp.getCoordinateN(segIndex)\n    const p1 = lineComp.getCoordinateN(segIndex + 1)\n    return p0.distance(p1)\n  }\n\n  isVertex () {\n    return this._segmentFraction <= 0.0 || this._segmentFraction >= 1.0\n  }\n\n  getClass () {\n    return LinearLocation\n  }\n\n  get interfaces_ () {\n    return [Comparable]\n  }\n}\nLinearLocation.constructor_ = function () {\n  this._componentIndex = 0\n  this._segmentIndex = 0\n  this._segmentFraction = 0.0\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    const loc = arguments[0]\n    this._componentIndex = loc._componentIndex\n    this._segmentIndex = loc._segmentIndex\n    this._segmentFraction = loc._segmentFraction\n  } else if (arguments.length === 2) {\n    const segmentIndex = arguments[0]; const segmentFraction = arguments[1]\n    LinearLocation.constructor_.call(this, 0, segmentIndex, segmentFraction)\n  } else if (arguments.length === 3) {\n    const componentIndex = arguments[0]; const segmentIndex = arguments[1]; const segmentFraction = arguments[2]\n    this._componentIndex = componentIndex\n    this._segmentIndex = segmentIndex\n    this._segmentFraction = segmentFraction\n    this.normalize()\n  } else if (arguments.length === 4) {\n    const componentIndex = arguments[0]; const segmentIndex = arguments[1]; const segmentFraction = arguments[2]; const doNormalize = arguments[3]\n    this._componentIndex = componentIndex\n    this._segmentIndex = segmentIndex\n    this._segmentFraction = segmentFraction\n    if (doNormalize) this.normalize()\n  }\n}\n","import hasInterface from '../../../../hasInterface'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException'\nimport Lineal from '../geom/Lineal'\nexport default class LinearIterator {\n  constructor () {\n    LinearIterator.constructor_.apply(this, arguments)\n  }\n\n  static segmentEndVertexIndex (loc) {\n    if (loc.getSegmentFraction() > 0.0) return loc.getSegmentIndex() + 1\n    return loc.getSegmentIndex()\n  }\n\n  getComponentIndex () {\n    return this._componentIndex\n  }\n\n  getLine () {\n    return this._currentLine\n  }\n\n  getVertexIndex () {\n    return this._vertexIndex\n  }\n\n  getSegmentEnd () {\n    if (this._vertexIndex < this.getLine().getNumPoints() - 1) return this._currentLine.getCoordinateN(this._vertexIndex + 1)\n    return null\n  }\n\n  next () {\n    if (!this.hasNext()) return null\n    this._vertexIndex++\n    if (this._vertexIndex >= this._currentLine.getNumPoints()) {\n      this._componentIndex++\n      this.loadCurrentLine()\n      this._vertexIndex = 0\n    }\n  }\n\n  loadCurrentLine () {\n    if (this._componentIndex >= this._numLines) {\n      this._currentLine = null\n      return null\n    }\n    this._currentLine = this._linearGeom.getGeometryN(this._componentIndex)\n  }\n\n  getSegmentStart () {\n    return this._currentLine.getCoordinateN(this._vertexIndex)\n  }\n\n  isEndOfLine () {\n    if (this._componentIndex >= this._numLines) return false\n    if (this._vertexIndex < this._currentLine.getNumPoints() - 1) return false\n    return true\n  }\n\n  hasNext () {\n    if (this._componentIndex >= this._numLines) return false\n    if (this._componentIndex === this._numLines - 1 && this._vertexIndex >= this._currentLine.getNumPoints()) return false\n    return true\n  }\n\n  getClass () {\n    return LinearIterator\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nLinearIterator.constructor_ = function () {\n  this._linearGeom = null\n  this._numLines = null\n  this._currentLine = null\n  this._componentIndex = 0\n  this._vertexIndex = 0\n  if (arguments.length === 1) {\n    const linear = arguments[0]\n    LinearIterator.constructor_.call(this, linear, 0, 0)\n  } else if (arguments.length === 2) {\n    const linear = arguments[0]; const start = arguments[1]\n    LinearIterator.constructor_.call(this, linear, start.getComponentIndex(), LinearIterator.segmentEndVertexIndex(start))\n  } else if (arguments.length === 3) {\n    const linearGeom = arguments[0]; const componentIndex = arguments[1]; const vertexIndex = arguments[2]\n    if (!hasInterface(linearGeom, Lineal)) throw new IllegalArgumentException('Lineal geometry is required')\n    this._linearGeom = linearGeom\n    this._numLines = linearGeom.getNumGeometries()\n    this._componentIndex = componentIndex\n    this._vertexIndex = vertexIndex\n    this.loadCurrentLine()\n  }\n}\n","import LinearIterator from './LinearIterator'\nimport LinearLocation from './LinearLocation'\nimport Double from '../../../../java/lang/Double'\nimport LineSegment from '../geom/LineSegment'\nimport Assert from '../util/Assert'\nexport default class LocationIndexOfPoint {\n  constructor () {\n    LocationIndexOfPoint.constructor_.apply(this, arguments)\n  }\n\n  static indexOf (linearGeom, inputPt) {\n    const locater = new LocationIndexOfPoint(linearGeom)\n    return locater.indexOf(inputPt)\n  }\n\n  static indexOfAfter (linearGeom, inputPt, minIndex) {\n    const locater = new LocationIndexOfPoint(linearGeom)\n    return locater.indexOfAfter(inputPt, minIndex)\n  }\n\n  indexOf (inputPt) {\n    return this.indexOfFromStart(inputPt, null)\n  }\n\n  indexOfFromStart (inputPt, minIndex) {\n    let minDistance = Double.MAX_VALUE\n    let minComponentIndex = 0\n    let minSegmentIndex = 0\n    let minFrac = -1.0\n    const seg = new LineSegment()\n    for (let it = new LinearIterator(this._linearGeom); it.hasNext(); it.next()) {\n      if (!it.isEndOfLine()) {\n        seg.p0 = it.getSegmentStart()\n        seg.p1 = it.getSegmentEnd()\n        const segDistance = seg.distance(inputPt)\n        const segFrac = seg.segmentFraction(inputPt)\n        const candidateComponentIndex = it.getComponentIndex()\n        const candidateSegmentIndex = it.getVertexIndex()\n        if (segDistance < minDistance) {\n          if (minIndex === null || minIndex.compareLocationValues(candidateComponentIndex, candidateSegmentIndex, segFrac) < 0) {\n            minComponentIndex = candidateComponentIndex\n            minSegmentIndex = candidateSegmentIndex\n            minFrac = segFrac\n            minDistance = segDistance\n          }\n        }\n      }\n    }\n    if (minDistance === Double.MAX_VALUE) {\n      return new LinearLocation(minIndex)\n    }\n    const loc = new LinearLocation(minComponentIndex, minSegmentIndex, minFrac)\n    return loc\n  }\n\n  indexOfAfter (inputPt, minIndex) {\n    if (minIndex === null) return this.indexOf(inputPt)\n    const endLoc = LinearLocation.getEndLocation(this._linearGeom)\n    if (endLoc.compareTo(minIndex) <= 0) return endLoc\n    const closestAfter = this.indexOfFromStart(inputPt, minIndex)\n    Assert.isTrue(closestAfter.compareTo(minIndex) >= 0, 'computed location is before specified minimum location')\n    return closestAfter\n  }\n\n  getClass () {\n    return LocationIndexOfPoint\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nLocationIndexOfPoint.constructor_ = function () {\n  this._linearGeom = null\n  const linearGeom = arguments[0]\n  this._linearGeom = linearGeom\n}\n","import LocationIndexOfPoint from './LocationIndexOfPoint'\nexport default class LocationIndexOfLine {\n  constructor () {\n    LocationIndexOfLine.constructor_.apply(this, arguments)\n  }\n\n  static indicesOf (linearGeom, subLine) {\n    const locater = new LocationIndexOfLine(linearGeom)\n    return locater.indicesOf(subLine)\n  }\n\n  indicesOf (subLine) {\n    const startPt = subLine.getGeometryN(0).getCoordinateN(0)\n    const lastLine = subLine.getGeometryN(subLine.getNumGeometries() - 1)\n    const endPt = lastLine.getCoordinateN(lastLine.getNumPoints() - 1)\n    const locPt = new LocationIndexOfPoint(this._linearGeom)\n    const subLineLoc = new Array(2).fill(null)\n    subLineLoc[0] = locPt.indexOf(startPt)\n    if (subLine.getLength() === 0.0) {\n      subLineLoc[1] = subLineLoc[0].copy()\n    } else {\n      subLineLoc[1] = locPt.indexOfAfter(endPt, subLineLoc[0])\n    }\n    return subLineLoc\n  }\n\n  getClass () {\n    return LocationIndexOfLine\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nLocationIndexOfLine.constructor_ = function () {\n  this._linearGeom = null\n  const linearGeom = arguments[0]\n  this._linearGeom = linearGeom\n}\n","import CoordinateList from '../geom/CoordinateList'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException'\nimport ArrayList from '../../../../java/util/ArrayList'\nexport default class LinearGeometryBuilder {\n  constructor () {\n    LinearGeometryBuilder.constructor_.apply(this, arguments)\n  }\n\n  getGeometry () {\n    this.endLine()\n    return this._geomFact.buildGeometry(this._lines)\n  }\n\n  getLastCoordinate () {\n    return this._lastPt\n  }\n\n  endLine () {\n    if (this._coordList === null) {\n      return null\n    }\n    if (this._ignoreInvalidLines && this._coordList.size() < 2) {\n      this._coordList = null\n      return null\n    }\n    const rawPts = this._coordList.toCoordinateArray()\n    let pts = rawPts\n    if (this._fixInvalidLines) pts = this.validCoordinateSequence(rawPts)\n    this._coordList = null\n    let line = null\n    try {\n      line = this._geomFact.createLineString(pts)\n    } catch (ex) {\n      if (ex instanceof IllegalArgumentException) {\n        if (!this._ignoreInvalidLines) throw ex\n      } else throw ex\n    } finally {}\n    if (line !== null) this._lines.add(line)\n  }\n\n  setFixInvalidLines (fixInvalidLines) {\n    this._fixInvalidLines = fixInvalidLines\n  }\n\n  add () {\n    if (arguments.length === 1) {\n      const pt = arguments[0]\n      this.add(pt, true)\n    } else if (arguments.length === 2) {\n      const pt = arguments[0]; const allowRepeatedPoints = arguments[1]\n      if (this._coordList === null) this._coordList = new CoordinateList()\n      this._coordList.add(pt, allowRepeatedPoints)\n      this._lastPt = pt\n    }\n  }\n\n  setIgnoreInvalidLines (ignoreInvalidLines) {\n    this._ignoreInvalidLines = ignoreInvalidLines\n  }\n\n  validCoordinateSequence (pts) {\n    if (pts.length >= 2) return pts\n    const validPts = [pts[0], pts[0]]\n    return validPts\n  }\n\n  getClass () {\n    return LinearGeometryBuilder\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nLinearGeometryBuilder.constructor_ = function () {\n  this._geomFact = null\n  this._lines = new ArrayList()\n  this._coordList = null\n  this._ignoreInvalidLines = false\n  this._fixInvalidLines = false\n  this._lastPt = null\n  const geomFact = arguments[0]\n  this._geomFact = geomFact\n}\n","import LineString from '../geom/LineString'\nimport CoordinateList from '../geom/CoordinateList'\nimport LinearIterator from './LinearIterator'\nimport Assert from '../util/Assert'\nimport LinearGeometryBuilder from './LinearGeometryBuilder'\nimport MultiLineString from '../geom/MultiLineString'\nexport default class ExtractLineByLocation {\n  constructor () {\n    ExtractLineByLocation.constructor_.apply(this, arguments)\n  }\n\n  static extract (line, start, end) {\n    const ls = new ExtractLineByLocation(line)\n    return ls.extract(start, end)\n  }\n\n  computeLinear (start, end) {\n    const builder = new LinearGeometryBuilder(this._line.getFactory())\n    builder.setFixInvalidLines(true)\n    if (!start.isVertex()) builder.add(start.getCoordinate(this._line))\n    for (let it = new LinearIterator(this._line, start); it.hasNext(); it.next()) {\n      if (end.compareLocationValues(it.getComponentIndex(), it.getVertexIndex(), 0.0) < 0) break\n      const pt = it.getSegmentStart()\n      builder.add(pt)\n      if (it.isEndOfLine()) builder.endLine()\n    }\n    if (!end.isVertex()) builder.add(end.getCoordinate(this._line))\n    return builder.getGeometry()\n  }\n\n  computeLine (start, end) {\n    const coordinates = this._line.getCoordinates()\n    const newCoordinates = new CoordinateList()\n    let startSegmentIndex = start.getSegmentIndex()\n    if (start.getSegmentFraction() > 0.0) startSegmentIndex += 1\n    let lastSegmentIndex = end.getSegmentIndex()\n    if (end.getSegmentFraction() === 1.0) lastSegmentIndex += 1\n    if (lastSegmentIndex >= coordinates.length) lastSegmentIndex = coordinates.length - 1\n    if (!start.isVertex()) newCoordinates.add(start.getCoordinate(this._line))\n    for (let i = startSegmentIndex; i <= lastSegmentIndex; i++) {\n      newCoordinates.add(coordinates[i])\n    }\n    if (!end.isVertex()) newCoordinates.add(end.getCoordinate(this._line))\n    if (newCoordinates.size() <= 0) newCoordinates.add(start.getCoordinate(this._line))\n    let newCoordinateArray = newCoordinates.toCoordinateArray()\n    if (newCoordinateArray.length <= 1) {\n      newCoordinateArray = [newCoordinateArray[0], newCoordinateArray[0]]\n    }\n    return this._line.getFactory().createLineString(newCoordinateArray)\n  }\n\n  extract (start, end) {\n    if (end.compareTo(start) < 0) {\n      return this.reverse(this.computeLinear(end, start))\n    }\n    return this.computeLinear(start, end)\n  }\n\n  reverse (linear) {\n    if (linear instanceof LineString) return linear.reverse()\n    if (linear instanceof MultiLineString) return linear.reverse()\n    Assert.shouldNeverReachHere('non-linear geometry encountered')\n    return null\n  }\n\n  getClass () {\n    return ExtractLineByLocation\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nExtractLineByLocation.constructor_ = function () {\n  this._line = null\n  const line = arguments[0]\n  this._line = line\n}\n","import LineString from '../geom/LineString'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException'\nimport LinearLocation from './LinearLocation'\nimport LocationIndexOfPoint from './LocationIndexOfPoint'\nimport LocationIndexOfLine from './LocationIndexOfLine'\nimport ExtractLineByLocation from './ExtractLineByLocation'\nimport MultiLineString from '../geom/MultiLineString'\nexport default class LocationIndexedLine {\n  constructor () {\n    LocationIndexedLine.constructor_.apply(this, arguments)\n  }\n\n  clampIndex (index) {\n    const loc = index.copy()\n    loc.clamp(this._linearGeom)\n    return loc\n  }\n\n  project (pt) {\n    return LocationIndexOfPoint.indexOf(this._linearGeom, pt)\n  }\n\n  checkGeometryType () {\n    if (!(this._linearGeom instanceof LineString || this._linearGeom instanceof MultiLineString)) throw new IllegalArgumentException('Input geometry must be linear')\n  }\n\n  extractPoint () {\n    if (arguments.length === 1) {\n      const index = arguments[0]\n      return index.getCoordinate(this._linearGeom)\n    } else if (arguments.length === 2) {\n      const index = arguments[0]; const offsetDistance = arguments[1]\n      const indexLow = index.toLowest(this._linearGeom)\n      return indexLow.getSegment(this._linearGeom).pointAlongOffset(indexLow.getSegmentFraction(), offsetDistance)\n    }\n  }\n\n  isValidIndex (index) {\n    return index.isValid(this._linearGeom)\n  }\n\n  getEndIndex () {\n    return LinearLocation.getEndLocation(this._linearGeom)\n  }\n\n  getStartIndex () {\n    return new LinearLocation()\n  }\n\n  indexOfAfter (pt, minIndex) {\n    return LocationIndexOfPoint.indexOfAfter(this._linearGeom, pt, minIndex)\n  }\n\n  extractLine (startIndex, endIndex) {\n    return ExtractLineByLocation.extract(this._linearGeom, startIndex, endIndex)\n  }\n\n  indexOf (pt) {\n    return LocationIndexOfPoint.indexOf(this._linearGeom, pt)\n  }\n\n  indicesOf (subLine) {\n    return LocationIndexOfLine.indicesOf(this._linearGeom, subLine)\n  }\n\n  getClass () {\n    return LocationIndexedLine\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nLocationIndexedLine.constructor_ = function () {\n  this._linearGeom = null\n  const linearGeom = arguments[0]\n  this._linearGeom = linearGeom\n  this.checkGeometryType()\n}\n","import LinearIterator from './LinearIterator'\nimport Double from '../../../../java/lang/Double'\nimport LineSegment from '../geom/LineSegment'\nimport Assert from '../util/Assert'\nexport default class LengthIndexOfPoint {\n  constructor () {\n    LengthIndexOfPoint.constructor_.apply(this, arguments)\n  }\n\n  static indexOf (linearGeom, inputPt) {\n    const locater = new LengthIndexOfPoint(linearGeom)\n    return locater.indexOf(inputPt)\n  }\n\n  static indexOfAfter (linearGeom, inputPt, minIndex) {\n    const locater = new LengthIndexOfPoint(linearGeom)\n    return locater.indexOfAfter(inputPt, minIndex)\n  }\n\n  indexOf (inputPt) {\n    return this.indexOfFromStart(inputPt, -1.0)\n  }\n\n  indexOfFromStart (inputPt, minIndex) {\n    let minDistance = Double.MAX_VALUE\n    let ptMeasure = minIndex\n    let segmentStartMeasure = 0.0\n    const seg = new LineSegment()\n    const it = new LinearIterator(this._linearGeom)\n    while (it.hasNext()) {\n      if (!it.isEndOfLine()) {\n        seg.p0 = it.getSegmentStart()\n        seg.p1 = it.getSegmentEnd()\n        const segDistance = seg.distance(inputPt)\n        const segMeasureToPt = this.segmentNearestMeasure(seg, inputPt, segmentStartMeasure)\n        if (segDistance < minDistance && segMeasureToPt > minIndex) {\n          ptMeasure = segMeasureToPt\n          minDistance = segDistance\n        }\n        segmentStartMeasure += seg.getLength()\n      }\n      it.next()\n    }\n    return ptMeasure\n  }\n\n  indexOfAfter (inputPt, minIndex) {\n    if (minIndex < 0.0) return this.indexOf(inputPt)\n    const endIndex = this._linearGeom.getLength()\n    if (endIndex < minIndex) return endIndex\n    const closestAfter = this.indexOfFromStart(inputPt, minIndex)\n    Assert.isTrue(closestAfter >= minIndex, 'computed index is before specified minimum index')\n    return closestAfter\n  }\n\n  segmentNearestMeasure (seg, inputPt, segmentStartMeasure) {\n    const projFactor = seg.projectionFactor(inputPt)\n    if (projFactor <= 0.0) return segmentStartMeasure\n    if (projFactor <= 1.0) return segmentStartMeasure + projFactor * seg.getLength()\n    return segmentStartMeasure + seg.getLength()\n  }\n\n  getClass () {\n    return LengthIndexOfPoint\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nLengthIndexOfPoint.constructor_ = function () {\n  this._linearGeom = null\n  const linearGeom = arguments[0]\n  this._linearGeom = linearGeom\n}\n","import LinearIterator from './LinearIterator'\nimport LinearLocation from './LinearLocation'\nexport default class LengthLocationMap {\n  constructor () {\n    LengthLocationMap.constructor_.apply(this, arguments)\n  }\n\n  static getLength (linearGeom, loc) {\n    const locater = new LengthLocationMap(linearGeom)\n    return locater.getLength(loc)\n  }\n\n  static getLocation () {\n    if (arguments.length === 2) {\n      const linearGeom = arguments[0]; const length = arguments[1]\n      const locater = new LengthLocationMap(linearGeom)\n      return locater.getLocation(length)\n    } else if (arguments.length === 3) {\n      const linearGeom = arguments[0]; const length = arguments[1]; const resolveLower = arguments[2]\n      const locater = new LengthLocationMap(linearGeom)\n      return locater.getLocation(length, resolveLower)\n    }\n  }\n\n  getLength (loc) {\n    let totalLength = 0.0\n    const it = new LinearIterator(this._linearGeom)\n    while (it.hasNext()) {\n      if (!it.isEndOfLine()) {\n        const p0 = it.getSegmentStart()\n        const p1 = it.getSegmentEnd()\n        const segLen = p1.distance(p0)\n        if (loc.getComponentIndex() === it.getComponentIndex() && loc.getSegmentIndex() === it.getVertexIndex()) {\n          return totalLength + segLen * loc.getSegmentFraction()\n        }\n        totalLength += segLen\n      }\n      it.next()\n    }\n    return totalLength\n  }\n\n  resolveHigher (loc) {\n    if (!loc.isEndpoint(this._linearGeom)) return loc\n    let compIndex = loc.getComponentIndex()\n    if (compIndex >= this._linearGeom.getNumGeometries() - 1) return loc\n    do {\n      compIndex++\n    } while (compIndex < this._linearGeom.getNumGeometries() - 1 && this._linearGeom.getGeometryN(compIndex).getLength() === 0)\n    return new LinearLocation(compIndex, 0, 0.0)\n  }\n\n  getLocation () {\n    if (arguments.length === 1) {\n      const length = arguments[0]\n      return this.getLocation(length, true)\n    } else if (arguments.length === 2) {\n      const length = arguments[0]; const resolveLower = arguments[1]\n      let forwardLength = length\n      if (length < 0.0) {\n        const lineLen = this._linearGeom.getLength()\n        forwardLength = lineLen + length\n      }\n      const loc = this.getLocationForward(forwardLength)\n      if (resolveLower) {\n        return loc\n      }\n      return this.resolveHigher(loc)\n    }\n  }\n\n  getLocationForward (length) {\n    if (length <= 0.0) return new LinearLocation()\n    let totalLength = 0.0\n    const it = new LinearIterator(this._linearGeom)\n    while (it.hasNext()) {\n      if (it.isEndOfLine()) {\n        if (totalLength === length) {\n          const compIndex = it.getComponentIndex()\n          const segIndex = it.getVertexIndex()\n          return new LinearLocation(compIndex, segIndex, 0.0)\n        }\n      } else {\n        const p0 = it.getSegmentStart()\n        const p1 = it.getSegmentEnd()\n        const segLen = p1.distance(p0)\n        if (totalLength + segLen > length) {\n          const frac = (length - totalLength) / segLen\n          const compIndex = it.getComponentIndex()\n          const segIndex = it.getVertexIndex()\n          return new LinearLocation(compIndex, segIndex, frac)\n        }\n        totalLength += segLen\n      }\n      it.next()\n    }\n    return LinearLocation.getEndLocation(this._linearGeom)\n  }\n\n  getClass () {\n    return LengthLocationMap\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nLengthLocationMap.constructor_ = function () {\n  this._linearGeom = null\n  const linearGeom = arguments[0]\n  this._linearGeom = linearGeom\n}\n","import LocationIndexedLine from './LocationIndexedLine'\nimport LengthIndexOfPoint from './LengthIndexOfPoint'\nimport LocationIndexOfLine from './LocationIndexOfLine'\nimport LengthLocationMap from './LengthLocationMap'\nimport ExtractLineByLocation from './ExtractLineByLocation'\nexport default class LengthIndexedLine {\n  constructor () {\n    LengthIndexedLine.constructor_.apply(this, arguments)\n  }\n\n  clampIndex (index) {\n    const posIndex = this.positiveIndex(index)\n    const startIndex = this.getStartIndex()\n    if (posIndex < startIndex) return startIndex\n    const endIndex = this.getEndIndex()\n    if (posIndex > endIndex) return endIndex\n    return posIndex\n  }\n\n  locationOf () {\n    if (arguments.length === 1) {\n      const index = arguments[0]\n      return LengthLocationMap.getLocation(this._linearGeom, index)\n    } else if (arguments.length === 2) {\n      const index = arguments[0]; const resolveLower = arguments[1]\n      return LengthLocationMap.getLocation(this._linearGeom, index, resolveLower)\n    }\n  }\n\n  project (pt) {\n    return LengthIndexOfPoint.indexOf(this._linearGeom, pt)\n  }\n\n  positiveIndex (index) {\n    if (index >= 0.0) return index\n    return this._linearGeom.getLength() + index\n  }\n\n  extractPoint () {\n    if (arguments.length === 1) {\n      const index = arguments[0]\n      const loc = LengthLocationMap.getLocation(this._linearGeom, index)\n      return loc.getCoordinate(this._linearGeom)\n    } else if (arguments.length === 2) {\n      const index = arguments[0]; const offsetDistance = arguments[1]\n      const loc = LengthLocationMap.getLocation(this._linearGeom, index)\n      const locLow = loc.toLowest(this._linearGeom)\n      return locLow.getSegment(this._linearGeom).pointAlongOffset(locLow.getSegmentFraction(), offsetDistance)\n    }\n  }\n\n  isValidIndex (index) {\n    return index >= this.getStartIndex() && index <= this.getEndIndex()\n  }\n\n  getEndIndex () {\n    return this._linearGeom.getLength()\n  }\n\n  getStartIndex () {\n    return 0.0\n  }\n\n  indexOfAfter (pt, minIndex) {\n    return LengthIndexOfPoint.indexOfAfter(this._linearGeom, pt, minIndex)\n  }\n\n  extractLine (startIndex, endIndex) {\n    const lil = new LocationIndexedLine(this._linearGeom)\n    const startIndex2 = this.clampIndex(startIndex)\n    const endIndex2 = this.clampIndex(endIndex)\n    const resolveStartLower = startIndex2 === endIndex2\n    const startLoc = this.locationOf(startIndex2, resolveStartLower)\n    const endLoc = this.locationOf(endIndex2)\n    return ExtractLineByLocation.extract(this._linearGeom, startLoc, endLoc)\n  }\n\n  indexOf (pt) {\n    return LengthIndexOfPoint.indexOf(this._linearGeom, pt)\n  }\n\n  indicesOf (subLine) {\n    const locIndex = LocationIndexOfLine.indicesOf(this._linearGeom, subLine)\n    const index = [LengthLocationMap.getLength(this._linearGeom, locIndex[0]), LengthLocationMap.getLength(this._linearGeom, locIndex[1])]\n    return index\n  }\n\n  getClass () {\n    return LengthIndexedLine\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nLengthIndexedLine.constructor_ = function () {\n  this._linearGeom = null\n  const linearGeom = arguments[0]\n  this._linearGeom = linearGeom\n}\n","import ArrayList from '../../../../java/util/ArrayList'\nexport default class CollectionUtil {\n  constructor () {\n    CollectionUtil.constructor_.apply(this, arguments)\n  }\n\n  static transform (coll, func) {\n    const result = new ArrayList()\n    for (let i = coll.iterator(); i.hasNext();) {\n      result.add(func.execute(i.next()))\n    }\n    return result\n  }\n\n  static select (collection, func) {\n    const result = new ArrayList()\n    for (let i = collection.iterator(); i.hasNext();) {\n      const item = i.next()\n      if (Boolean.TRUE.equals(func.execute(item))) {\n        result.add(item)\n      }\n    }\n    return result\n  }\n\n  static apply (coll, func) {\n    for (let i = coll.iterator(); i.hasNext();) {\n      func.execute(i.next())\n    }\n  }\n\n  getClass () {\n    return CollectionUtil\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nfunction Function () {}\nCollectionUtil.Function = Function\nCollectionUtil.constructor_ = function () {}\n","import CoordinateFilter from '../geom/CoordinateFilter'\nexport default class CoordinateArrayFilter {\n  constructor () {\n    CoordinateArrayFilter.constructor_.apply(this, arguments)\n  }\n\n  filter (coord) {\n    this.pts[this.n++] = coord\n  }\n\n  getCoordinates () {\n    return this.pts\n  }\n\n  getClass () {\n    return CoordinateArrayFilter\n  }\n\n  get interfaces_ () {\n    return [CoordinateFilter]\n  }\n}\nCoordinateArrayFilter.constructor_ = function () {\n  this.pts = null\n  this.n = 0\n  const size = arguments[0]\n  this.pts = new Array(size).fill(null)\n}\n","import CoordinateFilter from '../geom/CoordinateFilter'\nexport default class CoordinateCountFilter {\n  constructor () {\n    CoordinateCountFilter.constructor_.apply(this, arguments)\n  }\n\n  filter (coord) {\n    this._n++\n  }\n\n  getCount () {\n    return this._n\n  }\n\n  getClass () {\n    return CoordinateCountFilter\n  }\n\n  get interfaces_ () {\n    return [CoordinateFilter]\n  }\n}\nCoordinateCountFilter.constructor_ = function () {\n  this._n = 0\n}\n","import HashMap from '../../../../java/util/HashMap'\nexport default class ObjectCounter {\n  constructor () {\n    ObjectCounter.constructor_.apply(this, arguments)\n  }\n\n  count (o) {\n    const counter = this._counts.get(o)\n    if (counter === null) return 0; else return counter.count()\n  }\n\n  add (o) {\n    const counter = this._counts.get(o)\n    if (counter === null) this._counts.put(o, new Counter(1)); else counter.increment()\n  }\n\n  getClass () {\n    return ObjectCounter\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nclass Counter {\n  constructor () {\n    Counter.constructor_.apply(this, arguments)\n  }\n\n  count () {\n    return this.count\n  }\n\n  increment () {\n    this.count++\n  }\n\n  getClass () {\n    return Counter\n  }\n\n  get interfaces_ () {\n    return []\n  }\n}\nCounter.constructor_ = function () {\n  this.count = 0\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    const count = arguments[0]\n    this.count = count\n  }\n}\nObjectCounter.Counter = Counter\nObjectCounter.constructor_ = function () {\n  this._counts = new HashMap()\n}\n","import SnapIfNeededOverlayOp from '../overlay/snap/SnapIfNeededOverlayOp'\nimport OverlayOp from '../overlay/OverlayOp'\nexport default class UnionOp {\n  get interfaces_ () {\n    return []\n  }\n\n  getClass () {\n    return UnionOp\n  }\n\n  static union (g, other) {\n    if (g.isEmpty() || other.isEmpty()) {\n      if (g.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.UNION, g, other, g.getFactory())\n      if (g.isEmpty()) return other.copy()\n      if (other.isEmpty()) return g.copy()\n    }\n    g.checkNotGeometryCollection(g)\n    g.checkNotGeometryCollection(other)\n    return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.UNION)\n  }\n}\n","import WKTWriter from './io/WKTWriter'\nimport IsValidOp from './operation/valid/IsValidOp'\nimport InteriorPointArea from './algorithm/InteriorPointArea'\nimport UnaryUnionOp from './operation/union/UnaryUnionOp'\nimport UnionOp from './operation/union/UnionOp'\nimport InteriorPointLine from './algorithm/InteriorPointLine'\nimport IsSimpleOp from './operation/IsSimpleOp'\nimport BufferOp from './operation/buffer/BufferOp'\nimport ConvexHull from './algorithm/ConvexHull'\nimport Centroid from './algorithm/Centroid'\nimport RelateOp from './operation/relate/RelateOp'\nimport InteriorPointPoint from './algorithm/InteriorPointPoint'\nimport DistanceOp from './operation/distance/DistanceOp'\nimport OverlayOp from './operation/overlay/OverlayOp'\nimport Geometry from './geom/Geometry'\n\nGeometry.prototype.equalsTopo = function (g) {\n  if (!this.getEnvelopeInternal().equals(g.getEnvelopeInternal())) return false\n  return RelateOp.relate(this, g).isEquals(this.getDimension(), g.getDimension())\n}\nGeometry.prototype.union = function () {\n  if (arguments.length === 0) {\n    return UnaryUnionOp.union(this)\n  } else if (arguments.length === 1) {\n    const other = arguments[0]\n    return UnionOp.union(this, other)\n  }\n}\nGeometry.prototype.isValid = function () {\n  return IsValidOp.isValid(this)\n}\nGeometry.prototype.intersection = function (other) {\n  return OverlayOp.intersection(this, other)\n}\nGeometry.prototype.covers = function (g) {\n  return RelateOp.covers(this, g)\n}\nGeometry.prototype.coveredBy = function (g) {\n  return RelateOp.covers(g, this)\n}\nGeometry.prototype.touches = function (g) {\n  return RelateOp.touches(this, g)\n}\nGeometry.prototype.intersects = function (g) {\n  return RelateOp.intersects(this, g)\n}\nGeometry.prototype.within = function (g) {\n  return RelateOp.contains(g, this)\n}\nGeometry.prototype.overlaps = function (g) {\n  return RelateOp.overlaps(this, g)\n}\nGeometry.prototype.disjoint = function (g) {\n  return RelateOp.disjoint(this, g)\n}\nGeometry.prototype.crosses = function (g) {\n  return RelateOp.crosses(this, g)\n}\nGeometry.prototype.buffer = function () {\n  if (arguments.length === 1) {\n    const distance = arguments[0]\n    return BufferOp.bufferOp(this, distance)\n  } else if (arguments.length === 2) {\n    const distance = arguments[0]; const quadrantSegments = arguments[1]\n    return BufferOp.bufferOp(this, distance, quadrantSegments)\n  } else if (arguments.length === 3) {\n    const distance = arguments[0]; const quadrantSegments = arguments[1]; const endCapStyle = arguments[2]\n    return BufferOp.bufferOp(this, distance, quadrantSegments, endCapStyle)\n  }\n}\nGeometry.prototype.convexHull = function () {\n  return new ConvexHull(this).getConvexHull()\n}\nGeometry.prototype.relate = function (...args) {\n  if (arguments.length === 1) {\n    const geometry = arguments[0]\n    return RelateOp.relate(this, geometry)\n  } else if (arguments.length === 2) {\n    const geometry = arguments[0]; const intersectionPattern = arguments[1]\n    return RelateOp.relate(this, geometry).matches(intersectionPattern)\n  }\n}\nGeometry.prototype.getCentroid = function () {\n  if (this.isEmpty()) return this._factory.createPoint()\n  const centPt = Centroid.getCentroid(this)\n  return this.createPointFromInternalCoord(centPt, this)\n}\nGeometry.prototype.getInteriorPoint = function () {\n  if (this.isEmpty()) return this._factory.createPoint()\n  let intPt = null\n  const dim = this.getDimension()\n  if (dim === 0) {\n    intPt = new InteriorPointPoint(this)\n  } else if (dim === 1) {\n    intPt = new InteriorPointLine(this)\n  } else {\n    intPt = new InteriorPointArea(this)\n  }\n  const interiorPt = intPt.getInteriorPoint()\n  return this.createPointFromInternalCoord(interiorPt, this)\n}\nGeometry.prototype.symDifference = function (other) {\n  return OverlayOp.symDifference(this, other)\n}\nGeometry.prototype.createPointFromInternalCoord = function (coord, exemplar) {\n  exemplar.getPrecisionModel().makePrecise(coord)\n  return exemplar.getFactory().createPoint(coord)\n}\nGeometry.prototype.toText = function () {\n  const writer = new WKTWriter()\n  return writer.write(this)\n}\nGeometry.prototype.toString = function () {\n  this.toText()\n}\nGeometry.prototype.contains = function (g) {\n  return RelateOp.contains(this, g)\n}\nGeometry.prototype.difference = function (other) {\n  return OverlayOp.difference(this, other)\n}\nGeometry.prototype.isSimple = function () {\n  const op = new IsSimpleOp(this)\n  return op.isSimple()\n}\nGeometry.prototype.isWithinDistance = function (geom, distance) {\n  const envDist = this.getEnvelopeInternal().distance(geom.getEnvelopeInternal())\n  if (envDist > distance) return false\n  return DistanceOp.isWithinDistance(this, geom, distance)\n}\nGeometry.prototype.distance = function (g) {\n  return DistanceOp.distance(this, g)\n}\nGeometry.prototype.isEquivalentClass = function (other) {\n  return this.getClass() === other.getClass()\n}\n","import Feature from 'ol/src/Feature';\nimport {SelectAction} from './vl-mapactions-select-action';\nimport {MapAction} from './vl-mapactions-mapaction';\nimport {DrawAction} from './vl-mapactions-draw-action';\nimport * as jsts from 'jsts';\nimport {\n  Point,\n  LineString,\n  LinearRing,\n  Polygon,\n  MultiPoint,\n  MultiLineString,\n  MultiPolygon,\n} from 'ol/src/geom';\n\nexport class SplitAction extends MapAction {\n  constructor(layer, onSplit, options) {\n    const reader = new jsts.io.OL3Parser();\n    reader.inject(Point, LineString, LinearRing, Polygon, MultiPoint, MultiLineString, MultiPolygon);\n    const interactions = [];\n\n    const selectAction = new SelectAction(layer, (feature) => {\n      if (feature) {\n        this.selectAction.deactivate();\n        this.drawAction.activate();\n      }\n    }, options);\n\n    const drawAction = new DrawAction(layer, 'LineString', (drawnFeature) => {\n      const selectedFeature = this.selectAction.selectedFeature;\n      const selectedGeometry = reader.read(selectedFeature.getGeometry().getPolygons()[0]);\n      const drawnGeometry = reader.read(drawnFeature.getGeometry());\n      const union = selectedGeometry.getExteriorRing().union(drawnGeometry);\n      const polygonizer = new jsts.operation.polygonize.Polygonizer();\n      polygonizer.add(union);\n      const result = [];\n      const polygons = polygonizer.getPolygons();\n      for (let i = polygons.iterator(); i.hasNext();) {\n        const multiPolygon = new MultiPolygon([]);\n        multiPolygon.appendPolygon(reader.write(i.next()));\n        result.push(new Feature({\n          geometry: multiPolygon,\n        }));\n      }\n\n      if (onSplit) {\n        onSplit(selectedFeature, result);\n      }\n\n      this.selectAction.clearFeatures();\n\n      setTimeout(() => {\n        this.drawAction.deactivate();\n        this.selectAction.activate();\n      });\n    }, options);\n\n    super(interactions);\n\n    this.interactions = interactions;\n    this.selectAction = selectAction;\n    this.drawAction = drawAction;\n  }\n\n  activate() {\n    this.map.addAction(this.selectAction);\n    this.map.addAction(this.drawAction);\n    this.selectAction.activate();\n  }\n\n  deactivate() {\n    this.selectAction.deactivate();\n    this.drawAction.deactivate();\n  };\n}\n","import {MapAction} from './vl-mapactions-mapaction';\nimport Select from 'ol/src/interaction/Select';\nimport Translate from 'ol/src/interaction/Translate';\n\nexport class TranslateAction extends MapAction {\n  constructor(layer, onTranslate) {\n    const selectInteraction = new Select({\n      layers: [layer],\n      style: layer.selectionStyle,\n    });\n    const translateOptions = {\n      features: selectInteraction.getFeatures(),\n      layers: [layer],\n    };\n    const translateInteraction = new Translate(translateOptions);\n\n    super([selectInteraction, translateInteraction]);\n    this.selectInteraction = selectInteraction;\n    this.translateInteraction = translateInteraction;\n\n    this.translateInteraction.on('translateend', (event) => {\n      event.features.forEach((feature) => {\n        onTranslate(feature, (feature) => {\n          feature.getGeometry().setCoordinates(feature.get('entity').geometry.coordinates);\n        });\n        this.selectInteraction.getFeatures().clear();\n      });\n    });\n    this.translateOptions = translateOptions;\n  }\n\n  deactivate() {\n    this.selectInteraction.getFeatures().clear();\n    super.deactivate();\n  }\n}\n","import {CustomMap} from './vl-mapactions-custom-map.js';\nimport {MapWithActions} from './vl-mapactions-map-with-actions.js';\nimport {BoxSelectAction} from './vl-mapactions-box-select-action.js';\nimport {DeleteAction} from './vl-mapactions-delete-action.js';\nimport {DrawAction} from './vl-mapactions-draw-action.js';\nimport {DrawLijnstukAction} from './vl-mapactions-draw-lijnstuk-action.js';\nimport {DrawRectangleAction} from './vl-mapactions-draw-rectangle-action.js';\nimport {HighlightAction} from './vl-mapactions-highlight-action.js';\nimport {MapAction} from './vl-mapactions-mapaction.js';\nimport {MeasureAction} from './vl-mapactions-measure-action.js';\nimport {ModifyAction} from './vl-mapactions-modify-action.js';\nimport {ModifyAndTranslateAction} from './vl-mapactions-modify-and-translate-action.js';\nimport {SelectAction} from './vl-mapactions-select-action.js';\nimport {SelectActions} from './vl-mapactions-select-actions.js';\nimport {ShowInfoAction} from './vl-mapactions-show-info-action.js';\nimport {ShowInfoSelectAction} from './vl-mapactions-show-info-select-action.js';\nimport {SplitAction} from './vl-mapactions-split-action.js';\nimport {Tooltips} from './vl-mapactions-tooltips.js';\nimport {TranslateAction} from './vl-mapactions-translate-action.js';\nimport {SnapInteraction} from './vl-mapactions-snap-interaction.js';\n\nexport {\n  CustomMap,\n  MapWithActions,\n  SnapInteraction,\n  BoxSelectAction,\n  DeleteAction,\n  DrawAction,\n  DrawLijnstukAction,\n  DrawRectangleAction,\n  HighlightAction,\n  MapAction,\n  MeasureAction,\n  ModifyAction,\n  ModifyAndTranslateAction,\n  SelectAction,\n  SelectActions,\n  ShowInfoAction,\n  ShowInfoSelectAction,\n  SplitAction,\n  Tooltips,\n  TranslateAction,\n};\n"]}