import GeoJSON from"../node_modules/ol/src/ol/format/GeoJSON";import View from"../node_modules/ol/src/ol/View";import Overlay from"../node_modules/ol/src/ol/Overlay";import{Zoom,Rotate,ZoomSlider,ScaleLine,OverviewMap}from"../node_modules/ol/src/ol/control";import{MapWithActions}from"./vl-mapactions-map-with-actions";export class CustomMap extends MapWithActions{constructor(e){e.layers=[e.customLayers.baseLayerGroup,e.customLayers.overlayGroup],e.controls=e.controls||[new Zoom,new Rotate,new ZoomSlider,new ScaleLine({minWidth:128})],super(e),this.projection=e.projection,this.geoJSONFormat=new GeoJSON({dataProjection:e.projection}),this.custom=e.custom||{},e.customLayers.overviewMapLayers&&e.customLayers.overviewMapLayers.length>0&&this.createOverviewMapControl(e),this.baseLayers=e.customLayers.baseLayerGroup.getLayers().getArray(),this.maxZoomViewToExtent=e.maxZoomViewToExtent||16}createOverviewMapControl(e){const t=this;function o(e){function o(e){let o=0;return t.baseLayers.forEach((function(e,t){e.getVisible()&&(o=t)})),e[o+1>=e.length?0:o+1]}e||(e=o(t.baseLayers)),t.baseLayers.forEach((function(t){t.setVisible(t==e)}));const r=t.overviewMapControl.getOverviewMap().getLayers().getArray(),s=o(r);r.forEach((function(e){e.setVisible(e==s)})),t.render(),t.overviewMapControl.getOverviewMap().render()}this.overviewMapLayers=e.customLayers.overviewMapLayers,this.overviewMapControl=new OverviewMap({layers:this.overviewMapLayers,collapsed:!1,view:new View({projection:this.projection})}),this.overviewMapControl.element.addEventListener("click",(function(){o()}),!1),e.view&&e.controls.push(this.overviewMapControl),this.custom.toggleBaseLayer=o}addBaseLayerAndOverlayMapLayer(e,t){e.setVisible(0===this.baseLayers.length),this.baseLayers.push(e),this.overviewMapControl?this.overviewMapControl.getOverviewMap().getLayers().getArray().push(t):this.createOverviewMapControl({customLayers:{overviewMapLayers:[t]}}),t.setVisible(2===this.overviewMapControl.getOverviewMap().getLayers().getArray().length)}getBaseLayers(){return this.getLayerGroup().getLayers().getArray()[0].getLayers().getArray()}getOverlayLayers(){return this.getLayerGroup().getLayers().getArray()[1].getLayers().getArray()}initializeView(e,t){if(!this.getView().getZoom()){const o=new View({extent:this.projection.getExtent(),projection:this.projection,maxZoom:16,minZoom:2,center:[140860.69299028325,190532.7165957574],zoom:2});this.zoomViewToExtent(o,e,t),this.setView(o),this.overviewMapControl&&this.addControl(this.overviewMapControl)}}zoomToExtent(e,t){this.zoomViewToExtent(this.getView(),e,t)}zoomViewToExtent(e,t,o){t&&e.fit(t,{size:this.getSize()}),(o||this.maxZoomViewToExtent)&&e.getZoom()>(o||this.maxZoomViewToExtent)&&e.setZoom(o||this.maxZoomViewToExtent)}zoomToGeometry(e,t){const o={type:"FeatureCollection",features:[{type:"Feature",geometry:e}]};this.zoomToExtent(this.geoJSONFormat.readFeatures(o)[0].getGeometry().getExtent(),t)}showInfo(e,t){const o=document.createElement("div");o.setAttribute("class","close"),o.onclick=function(){event.currentTarget.parentNode.remove()};const r=document.createElement("div");r.innerHTML="<span class='content'>"+e+"</span><div class='arrow'></div>",r.setAttribute("class","info-tooltip"),r.appendChild(o);const s=new Overlay({offset:[0,-5],positioning:"bottom-center",element:r});this.addOverlay(s),s.setPosition(t),r.parentNode.style.position="fixed"}}
