import{Select}from"ol/src/ol/interaction";import{pointerMove}from"ol/src/ol/events/condition";import{MapAction}from"./vl-mapactions-mapaction";export class SelectAction extends MapAction{constructor(e,t,r){const s=r&&r.cluster,i=r&&r.filter?r.filter:()=>!0,a=r?r.style:null,n=r&&r.hoverStyle||a,c=(e,t)=>(this.selectInteraction.getFeatures().clear(),this.filter(e,t)),l=(e,t)=>{const r=-1!==this.selectInteraction.getFeatures().getArray().indexOf(e);return this.filter(e,t)&&!r},o=new Select({filter:l,condition:pointerMove,style:n}),h=new Select({style:a}),u=new Select({filter:c});super([h,u,o]),this.cluster=s,this.filter=i,this.layer=e,this.style=a,this.hoverStyle=n,this.hoverInteraction=o,this.markInteraction=h,this.selectInteraction=u,this.hoverInteraction.on("select",()=>{const e=this.map.getTargetElement();this.hoverInteraction.getFeatures().getLength()>0?e.style.cursor="pointer":e.style.cursor=""}),this.selectedFeature=null,this.getLayer=function(){return e};const g=e=>{let t=e.getArray().indexOf(this.selectedFeature)+1;return t>e.getLength()-1&&(t=0),e.getArray()[t]};this.selectInteraction.on("select",e=>{if(this.markInteraction.getFeatures().clear(),this.selectInteraction.getFeatures().getLength()>0){let r=null;1===this.selectInteraction.getFeatures().getLength()?this.selectedFeature=this.selectInteraction.getFeatures().getArray()[0]:this.selectedFeature=g(this.selectInteraction.getFeatures()),t&&t(this.selectedFeature,e,this.getLayer(r))}else this.selectedFeature=null,t&&t()}),this.selectInteractionFilter=c,this.hoverInteractionFilter=l}_fixClusterBehavior(){if(this.selectedFeature){const e=this.selectedFeature.get("features")||[this.selectedFeature];this.selectInteraction.getFeatures().clear(),this.markInteraction.getFeatures().clear(),e&&e.forEach(e=>{e.getId()&&this.markFeatureWithId(e.getId())})}}getClusterWithFeatureId(e,t){for(let r=0;r<e.length;r++){const s=e[r].get("features");if(s&&this.getFeatureById(s,t))return e[r]}}getFeatureById(e,t){for(let r=0;r<e.length;r++)if(e[r].getId()===t)return e[r]}clearFeatures(){this.selectInteraction.getFeatures().clear(),this.markInteraction.getFeatures().clear(),this.hoverInteraction.getFeatures().clear()}activate(){this.cluster&&this.map&&(this.map.on("moveend",this._fixClusterBehavior),this.selectInteraction.on("select",this._fixClusterBehavior)),super.activate()}deactivate(){this.cluster&&this.map&&(this.map.un("moveend",this._fixClusterBehavior),this.selectInteraction.un("select",this._fixClusterBehavior)),this.clearFeatures(),super.deactivate()}selectFeature(e){this.selectInteraction.getFeatures().push(e),this.selectInteraction.dispatchEvent({type:"select",feature:e})}getSelectedFeatures(){return this.selectInteraction.getFeatures()}vergeetLaatstGeselecteerdeFeature(){this.selectedFeature=null}markFeatureWithId(e,t){const r=(t=t||this.layer).getSource().getFeatureById(e)||this.getClusterWithFeatureId(t.getSource().getFeatures(),e);r&&-1===this.markInteraction.getFeatures().getArray().indexOf(r)&&this.markInteraction.getFeatures().push(r)}isMarked(e){let t=!1;return this.markInteraction.getFeatures().forEach((function(r){r===e&&(t=!0)})),t}demarkAllFeatures(){this.markInteraction.getFeatures().clear()}}
